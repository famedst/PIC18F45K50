

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jul 15 21:28:49 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 14/06/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K50 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000000                     _ANSELBbits	set	3932
    51   000000                     _ANSELD	set	3934
    52   000000                     _LATD	set	3980
    53   000000                     _TRISD	set	3989
    54   000000                     _INTCON2bits	set	4081
    55   000000                     _INTCONbits	set	4082
    56   000000                     _TRISBbits	set	3987
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61   000042                     __pcinit:
    62                           	callstack 0
    63   000042                     start_initialization:
    64                           	callstack 0
    65   000042                     __initialization:
    66                           	callstack 0
    67                           
    68                           ; Clear objects allocated to COMRAM (2 bytes)
    69   000042  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    70   000044  6A01               	clrf	__pbssCOMRAM& (0+255),c
    71   000046                     end_of_initialization:
    72                           	callstack 0
    73   000046                     __end_of__initialization:
    74                           	callstack 0
    75   000046  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    76   000048  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    77   00004A  0100               	movlb	0
    78   00004C  EF0C  F000         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	bssCOMRAM
    81   000001                     __pbssCOMRAM:
    82                           	callstack 0
    83   000001                     _count:
    84                           	callstack 0
    85   000001                     	ds	2
    86                           
    87                           	psect	cstackCOMRAM
    88   000000                     __pcstackCOMRAM:
    89                           	callstack 0
    90   000000                     
    91                           ; 1 bytes @ 0x0
    92 ;;
    93 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    94 ;;
    95 ;; *************** function _main *****************
    96 ;; Defined at:
    97 ;;		line 86 in file "interrup_18k50.c"
    98 ;; Parameters:    Size  Location     Type
    99 ;;		None
   100 ;; Auto vars:     Size  Location     Type
   101 ;;		None
   102 ;; Return value:  Size  Location     Type
   103 ;;                  1    wreg      void 
   104 ;; Registers used:
   105 ;;		wreg, status,2, cstack
   106 ;; Tracked objects:
   107 ;;		On entry : 0/0
   108 ;;		On exit  : 0/0
   109 ;;		Unchanged: 0/0
   110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   111 ;;      Params:         0       0       0       0       0       0       0       0       0
   112 ;;      Locals:         0       0       0       0       0       0       0       0       0
   113 ;;      Temps:          0       0       0       0       0       0       0       0       0
   114 ;;      Totals:         0       0       0       0       0       0       0       0       0
   115 ;;Total ram usage:        0 bytes
   116 ;; Hardware stack levels required when called: 2
   117 ;; This function calls:
   118 ;;		_Int_Ext
   119 ;; This function is called by:
   120 ;;		Startup code after reset
   121 ;; This function uses a non-reentrant model
   122 ;;
   123                           
   124                           	psect	text0
   125   000018                     __ptext0:
   126                           	callstack 0
   127   000018                     _main:
   128                           	callstack 29
   129   000018                     
   130                           ;interrup_18k50.c: 87:     Int_Ext();
   131   000018  EC19  F000         	call	_Int_Ext	;wreg free
   132   00001C                     
   133                           ;interrup_18k50.c: 88:     ANSELD = 0x00;
   134   00001C  0E00               	movlw	0
   135   00001E  010F               	movlb	15	; () banked
   136   000020  6F5E               	movwf	94,b	;volatile
   137   000022                     
   138                           ; BSR set to: 15
   139                           ;interrup_18k50.c: 89:     TRISD = 0x00;
   140   000022  0E00               	movlw	0
   141   000024  6E95               	movwf	149,c	;volatile
   142   000026                     l718:
   143                           
   144                           ;interrup_18k50.c: 91:         LATD = count;
   145   000026  C001  FF8C         	movff	_count,3980	;volatile
   146   00002A  EF13  F000         	goto	l718
   147   00002E  EF0A  F000         	goto	start
   148   000032                     __end_of_main:
   149                           	callstack 0
   150                           
   151 ;; *************** function _Int_Ext *****************
   152 ;; Defined at:
   153 ;;		line 97 in file "interrup_18k50.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;		None
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		None
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   167 ;;      Params:         0       0       0       0       0       0       0       0       0
   168 ;;      Locals:         0       0       0       0       0       0       0       0       0
   169 ;;      Temps:          0       0       0       0       0       0       0       0       0
   170 ;;      Totals:         0       0       0       0       0       0       0       0       0
   171 ;;Total ram usage:        0 bytes
   172 ;; Hardware stack levels used: 1
   173 ;; Hardware stack levels required when called: 1
   174 ;; This function calls:
   175 ;;		Nothing
   176 ;; This function is called by:
   177 ;;		_main
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text1
   182   000032                     __ptext1:
   183                           	callstack 0
   184   000032                     _Int_Ext:
   185                           	callstack 29
   186   000032                     
   187                           ;interrup_18k50.c: 98:     ANSELBbits.ANSB0 = 0;
   188   000032  010F               	movlb	15	; () banked
   189   000034  915C               	bcf	92,0,b	;volatile
   190                           
   191                           ;interrup_18k50.c: 99:     TRISBbits.RB0 = 1;
   192   000036  8093               	bsf	147,0,c	;volatile
   193                           
   194                           ;interrup_18k50.c: 100:     INTCONbits.INT0IE = 1;
   195   000038  88F2               	bsf	242,4,c	;volatile
   196                           
   197                           ;interrup_18k50.c: 101:     INTCONbits.INT0IF = 0;
   198   00003A  92F2               	bcf	242,1,c	;volatile
   199                           
   200                           ;interrup_18k50.c: 102:     INTCON2bits.INTEDG0 = 0;
   201   00003C  9CF1               	bcf	241,6,c	;volatile
   202                           
   203                           ;interrup_18k50.c: 103:     INTCONbits.GIE = 1;
   204   00003E  8EF2               	bsf	242,7,c	;volatile
   205   000040                     
   206                           ; BSR set to: 15
   207   000040  0012               	return		;funcret
   208   000042                     __end_of_Int_Ext:
   209                           	callstack 0
   210                           
   211 ;; *************** function _INT_isr *****************
   212 ;; Defined at:
   213 ;;		line 106 in file "interrup_18k50.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;		None
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		status,2, status,0
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   227 ;;      Params:         0       0       0       0       0       0       0       0       0
   228 ;;      Locals:         0       0       0       0       0       0       0       0       0
   229 ;;      Temps:          0       0       0       0       0       0       0       0       0
   230 ;;      Totals:         0       0       0       0       0       0       0       0       0
   231 ;;Total ram usage:        0 bytes
   232 ;; Hardware stack levels used: 1
   233 ;; This function calls:
   234 ;;		Nothing
   235 ;; This function is called by:
   236 ;;		Interrupt level 2
   237 ;; This function uses a non-reentrant model
   238 ;;
   239                           
   240                           	psect	intcode
   241   000008                     __pintcode:
   242                           	callstack 0
   243   000008                     _INT_isr:
   244                           	callstack 29
   245                           
   246                           ; BSR set to: 15
   247                           ;incstack = 0
   248   000008  8203               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   249   00000A                     
   250                           ;interrup_18k50.c: 107:     count++;
   251   00000A  4A01               	infsnz	_count^0,f,c
   252   00000C  2A02               	incf	(_count+1)^0,f,c
   253   00000E                     
   254                           ;interrup_18k50.c: 108:     INTCONbits.INT0IF = 0;
   255   00000E  92F2               	bcf	242,1,c	;volatile
   256   000010  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   257   000012  0011               	retfie		f
   258   000014                     __end_of_INT_isr:
   259                           	callstack 0
   260   000000                     
   261                           	psect	rparam
   262   000000                     
   263                           	psect	temp
   264   000003                     btemp:
   265                           	callstack 0
   266   000003                     	ds	1
   267   000000                     int$flags	set	btemp
   268   000000                     wtemp8	set	btemp+1
   269   000000                     ttemp5	set	btemp+1
   270   000000                     ttemp6	set	btemp+4
   271   000000                     ttemp7	set	btemp+8
   272                           
   273                           	psect	config
   274                           
   275                           ;Config register CONFIG1L @ 0x300000
   276                           ;	PLL Selection
   277                           ;	PLLSEL = PLL4X, 4x clock multiplier
   278                           ;	PLL Enable Configuration bit
   279                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   280                           ;	CPU System Clock Postscaler
   281                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   282                           ;	Low Speed USB mode with 48 MHz system clock
   283                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   284   300000                     	org	3145728
   285   300000  00                 	db	0
   286                           
   287                           ;Config register CONFIG1H @ 0x300001
   288                           ;	Oscillator Selection
   289                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
   290                           ;	Primary Oscillator Shutdown
   291                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
   292                           ;	Fail-Safe Clock Monitor
   293                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   294                           ;	Internal/External Oscillator Switchover
   295                           ;	IESO = OFF, Oscillator Switchover mode disabled
   296   300001                     	org	3145729
   297   300001  03                 	db	3
   298                           
   299                           ;Config register CONFIG2L @ 0x300002
   300                           ;	Power-up Timer Enable
   301                           ;	nPWRTEN = ON, Power up timer enabled
   302                           ;	Brown-out Reset Enable
   303                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
   304                           ;	Brown-out Reset Voltage
   305                           ;	BORV = 190, BOR set to 1.9V nominal
   306                           ;	Low-Power Brown-out Reset
   307                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   308   300002                     	org	3145730
   309   300002  58                 	db	88
   310                           
   311                           ;Config register CONFIG2H @ 0x300003
   312                           ;	Watchdog Timer Enable bits
   313                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   314                           ;	Watchdog Timer Postscaler
   315                           ;	WDTPS = 32768, 1:32768
   316   300003                     	org	3145731
   317   300003  3C                 	db	60
   318                           
   319                           ; Padding undefined space
   320   300004                     	org	3145732
   321   300004  FF                 	db	255
   322                           
   323                           ;Config register CONFIG3H @ 0x300005
   324                           ;	CCP2 MUX bit
   325                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   326                           ;	PORTB A/D Enable bit
   327                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   328                           ;	Timer3 Clock Input MUX bit
   329                           ;	T3CMX = RC0, T3CKI function is on RC0
   330                           ;	SDO Output MUX bit
   331                           ;	SDOMX = RB3, SDO function is on RB3
   332                           ;	Master Clear Reset Pin Enable
   333                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   334   300005                     	org	3145733
   335   300005  D1                 	db	209
   336                           
   337                           ;Config register CONFIG4L @ 0x300006
   338                           ;	Stack Full/Underflow Reset
   339                           ;	STVREN = ON, Stack full/underflow will cause Reset
   340                           ;	Single-Supply ICSP Enable bit
   341                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   342                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   343                           ;	ICPRT = OFF, ICPORT disabled
   344                           ;	Extended Instruction Set Enable bit
   345                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   346                           ;	Background Debugger Enable bit
   347                           ;	DEBUG = 0x1, unprogrammed default
   348   300006                     	org	3145734
   349   300006  85                 	db	133
   350                           
   351                           ; Padding undefined space
   352   300007                     	org	3145735
   353   300007  FF                 	db	255
   354                           
   355                           ;Config register CONFIG5L @ 0x300008
   356                           ;	Block 0 Code Protect
   357                           ;	CP0 = OFF, Block 0 is not code-protected
   358                           ;	Block 1 Code Protect
   359                           ;	CP1 = OFF, Block 1 is not code-protected
   360                           ;	Block 2 Code Protect
   361                           ;	CP2 = OFF, Block 2 is not code-protected
   362                           ;	Block 3 Code Protect
   363                           ;	CP3 = OFF, Block 3 is not code-protected
   364   300008                     	org	3145736
   365   300008  0F                 	db	15
   366                           
   367                           ;Config register CONFIG5H @ 0x300009
   368                           ;	Boot Block Code Protect
   369                           ;	CPB = OFF, Boot block is not code-protected
   370                           ;	Data EEPROM Code Protect
   371                           ;	CPD = OFF, Data EEPROM is not code-protected
   372   300009                     	org	3145737
   373   300009  C0                 	db	192
   374                           
   375                           ;Config register CONFIG6L @ 0x30000A
   376                           ;	Block 0 Write Protect
   377                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   378                           ;	Block 1 Write Protect
   379                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   380                           ;	Block 2 Write Protect
   381                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   382                           ;	Block 3 Write Protect
   383                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   384   30000A                     	org	3145738
   385   30000A  0F                 	db	15
   386                           
   387                           ;Config register CONFIG6H @ 0x30000B
   388                           ;	Configuration Registers Write Protect
   389                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   390                           ;	Boot Block Write Protect
   391                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   392                           ;	Data EEPROM Write Protect
   393                           ;	WRTD = OFF, Data EEPROM is not write-protected
   394   30000B                     	org	3145739
   395   30000B  E0                 	db	224
   396                           
   397                           ;Config register CONFIG7L @ 0x30000C
   398                           ;	Block 0 Table Read Protect
   399                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   400                           ;	Block 1 Table Read Protect
   401                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   402                           ;	Block 2 Table Read Protect
   403                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   404                           ;	Block 3 Table Read Protect
   405                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   406   30000C                     	org	3145740
   407   30000C  0F                 	db	15
   408                           
   409                           ;Config register CONFIG7H @ 0x30000D
   410                           ;	Boot Block Table Read Protect
   411                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   412   30000D                     	org	3145741
   413   30000D  40                 	db	64
   414                           tosu	equ	0xFFF
   415                           tosh	equ	0xFFE
   416                           tosl	equ	0xFFD
   417                           stkptr	equ	0xFFC
   418                           pclatu	equ	0xFFB
   419                           pclath	equ	0xFFA
   420                           pcl	equ	0xFF9
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           prodh	equ	0xFF4
   426                           prodl	equ	0xFF3
   427                           indf0	equ	0xFEF
   428                           postinc0	equ	0xFEE
   429                           postdec0	equ	0xFED
   430                           preinc0	equ	0xFEC
   431                           plusw0	equ	0xFEB
   432                           fsr0h	equ	0xFEA
   433                           fsr0l	equ	0xFE9
   434                           wreg	equ	0xFE8
   435                           indf1	equ	0xFE7
   436                           postinc1	equ	0xFE6
   437                           postdec1	equ	0xFE5
   438                           preinc1	equ	0xFE4
   439                           plusw1	equ	0xFE3
   440                           fsr1h	equ	0xFE2
   441                           fsr1l	equ	0xFE1
   442                           bsr	equ	0xFE0
   443                           indf2	equ	0xFDF
   444                           postinc2	equ	0xFDE
   445                           postdec2	equ	0xFDD
   446                           preinc2	equ	0xFDC
   447                           plusw2	equ	0xFDB
   448                           fsr2h	equ	0xFDA
   449                           fsr2l	equ	0xFD9
   450                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                            _Int_Ext
 ---------------------------------------------------------------------------------
 (1) _Int_Ext                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Int_Ext

 _INT_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       2       1        2.1%
BITBIGSFRhhl        5B      0       0      21        0.0%
BITBIGSFRhll        2D      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRll          9      0       0      26        0.0%
BITBIGSFRhlhl        6      0       0      23        0.0%
BITBIGSFRhlhh        1      0       0      22        0.0%
BITBIGSFRlh          1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      27        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jul 15 21:28:49 2023

                     l29 0040                      l710 0032                      l712 0018  
                    l714 001C                      l716 0022                      l718 0026  
                   _LATD 0F8C                     i2l34 0010          __end_of_INT_isr 0014  
                   _main 0018                     btemp 0003                     start 0014  
           ___param_bank 0000          __end_of_Int_Ext 0042                    ?_main 0000  
                  i2l720 000A                    i2l722 000E                    _TRISD 0F95  
                  _count 0001                    ttemp5 0004                    ttemp6 0007  
                  ttemp7 000B                    wtemp8 0004          __initialization 0042  
           __end_of_main 0032                   ??_main 0000            __activetblptr 0000  
              ??_INT_isr 0000                   _ANSELD 0F5E                ??_Int_Ext 0000  
                 isa$std 0001               __accesstop 0060  __end_of__initialization 0046  
          ___rparam_used 0001           __pcstackCOMRAM 0000                  _INT_isr 0008  
                _Int_Ext 0032                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0042                  __ramtop 0800                  __ptext0 0018  
                __ptext1 0032     end_of_initialization 0046                _TRISBbits 0F93  
    start_initialization 0042              __pbssCOMRAM 0001                 ?_INT_isr 0000  
               ?_Int_Ext 0000                __pintcode 0008              _INTCON2bits 0FF1  
               __Hrparam 0000                 __Lrparam 0000               _ANSELBbits 0F5C  
               isa$xinst 0000                 int$flags 0003               _INTCONbits 0FF2  
               intlevel2 0000  
