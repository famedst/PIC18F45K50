

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jul 06 22:42:32 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 22/03/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F45K50 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     _ADRESL	set	4035
    84   000000                     _ADRESH	set	4036
    85   000000                     _ADCON0bits	set	4034
    86   000000                     _ANSELAbits	set	3931
    87   000000                     _LATDbits	set	3980
    88   000000                     _TRISAbits	set	3986
    89   000000                     _TRISDbits	set	3989
    90   000000                     _ADCON2	set	4032
    91   000000                     _ADCON1	set	4033
    92   000000                     _ADCON0	set	4034
    93                           
    94                           	psect	smallconst
    95   000800                     __psmallconst:
    96                           	callstack 0
    97   000800  00                 	db	0
    98   000801                     STR_2:
    99   000801  56                 	db	86	;'V'
   100   000802  6F                 	db	111	;'o'
   101   000803  6C                 	db	108	;'l'
   102   000804  74                 	db	116	;'t'
   103   000805  61                 	db	97	;'a'
   104   000806  6A                 	db	106	;'j'
   105   000807  65                 	db	101	;'e'
   106   000808  20                 	db	32
   107   000809  25                 	db	37
   108   00080A  66                 	db	102	;'f'
   109   00080B  30                 	db	48	;'0'
   110   00080C  2E                 	db	46
   111   00080D  32                 	db	50	;'2'
   112   00080E  66                 	db	102	;'f'
   113   00080F  00                 	db	0
   114   000810                     STR_1:
   115   000810  41                 	db	65	;'A'
   116   000811  44                 	db	68	;'D'
   117   000812  43                 	db	67	;'C'
   118   000813  3A                 	db	58	;':'
   119   000814  20                 	db	32
   120   000815  25                 	db	37
   121   000816  75                 	db	117	;'u'
   122   000817  00                 	db	0
   123   000818                     STR_3:
   124   000818  69                 	db	105	;'i'
   125   000819  6E                 	db	110	;'n'
   126   00081A  66                 	db	102	;'f'
   127   00081B  00                 	db	0
   128   00081C                     STR_6:
   129   00081C  6E                 	db	110	;'n'
   130   00081D  61                 	db	97	;'a'
   131   00081E  6E                 	db	110	;'n'
   132   00081F  00                 	db	0
   133   000820  00                 	db	0	; dummy byte at the end
   134   000000                     
   135                           ; #config settings
   136                           
   137                           	psect	cinit
   138   0031A0                     __pcinit:
   139                           	callstack 0
   140   0031A0                     start_initialization:
   141                           	callstack 0
   142   0031A0                     __initialization:
   143                           	callstack 0
   144                           
   145                           ; Clear objects allocated to BANK1 (80 bytes)
   146   0031A0  EE01  F000         	lfsr	0,__pbssBANK1
   147   0031A4  0E50               	movlw	80
   148   0031A6                     clear_0:
   149   0031A6  6AEE               	clrf	postinc0,c
   150   0031A8  06E8               	decf	wreg,f,c
   151   0031AA  E1FD               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK0 (39 bytes)
   154   0031AC  EE00  F0B9         	lfsr	0,__pbssBANK0
   155   0031B0  0E27               	movlw	39
   156   0031B2                     clear_1:
   157   0031B2  6AEE               	clrf	postinc0,c
   158   0031B4  06E8               	decf	wreg,f,c
   159   0031B6  E1FD               	bnz	clear_1
   160   0031B8                     end_of_initialization:
   161                           	callstack 0
   162   0031B8                     __end_of__initialization:
   163                           	callstack 0
   164   0031B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165   0031BA  6EF8               	movwf	tblptru,c
   166   0031BC  0100               	movlb	0
   167   0031BE  EF9A  F012         	goto	_main	;jump to C main() function
   168                           
   169                           	psect	bssBANK0
   170   0000B9                     __pbssBANK0:
   171                           	callstack 0
   172   0000B9                     floorf@F526:
   173                           	callstack 0
   174   0000B9                     	ds	4
   175   0000BD                     ___fpclassifyf@F465:
   176                           	callstack 0
   177   0000BD                     	ds	4
   178   0000C1                     _volt:
   179                           	callstack 0
   180   0000C1                     	ds	4
   181   0000C5                     _width:
   182                           	callstack 0
   183   0000C5                     	ds	2
   184   0000C7                     _prec:
   185                           	callstack 0
   186   0000C7                     	ds	2
   187   0000C9                     _v_adc:
   188                           	callstack 0
   189   0000C9                     	ds	2
   190   0000CB                     _flags:
   191                           	callstack 0
   192   0000CB                     	ds	1
   193   0000CC                     _buffer:
   194                           	callstack 0
   195   0000CC                     	ds	20
   196                           
   197                           	psect	bssBANK1
   198   000100                     __pbssBANK1:
   199                           	callstack 0
   200   000100                     _dbuf:
   201                           	callstack 0
   202   000100                     	ds	80
   203                           
   204                           	psect	cstackBANK0
   205   000060                     __pcstackBANK0:
   206                           	callstack 0
   207   000060                     efgtoa@ne:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x0
   211   000060                     	ds	2
   212   000062                     efgtoa@p:
   213                           	callstack 0
   214                           
   215                           ; 2 bytes @ 0x2
   216   000062                     	ds	2
   217   000064                     efgtoa@t:
   218                           	callstack 0
   219                           
   220                           ; 2 bytes @ 0x4
   221   000064                     	ds	2
   222   000066                     _efgtoa$898:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x6
   226   000066                     	ds	2
   227   000068                     efgtoa@pp:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x8
   231   000068                     	ds	1
   232   000069                     efgtoa@mode:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x9
   236   000069                     	ds	1
   237   00006A                     efgtoa@nmode:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0xA
   241   00006A                     	ds	1
   242   00006B                     efgtoa@d:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0xB
   246   00006B                     	ds	2
   247   00006D                     efgtoa@m:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0xD
   251   00006D                     	ds	2
   252   00006F                     efgtoa@e:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0xF
   256   00006F                     	ds	2
   257   000071                     efgtoa@w:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x11
   261   000071                     	ds	2
   262   000073                     efgtoa@ou:
   263                           	callstack 0
   264                           
   265                           ; 4 bytes @ 0x13
   266   000073                     	ds	4
   267   000077                     efgtoa@i:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x17
   271   000077                     	ds	2
   272   000079                     efgtoa@h:
   273                           	callstack 0
   274                           
   275                           ; 4 bytes @ 0x19
   276   000079                     	ds	4
   277   00007D                     efgtoa@l:
   278                           	callstack 0
   279                           
   280                           ; 4 bytes @ 0x1D
   281   00007D                     	ds	4
   282   000081                     efgtoa@sign:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x21
   286   000081                     	ds	1
   287   000082                     efgtoa@n:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x22
   291   000082                     	ds	2
   292   000084                     efgtoa@g:
   293                           	callstack 0
   294                           
   295                           ; 4 bytes @ 0x24
   296   000084                     	ds	4
   297   000088                     efgtoa@u:
   298                           	callstack 0
   299                           
   300                           ; 4 bytes @ 0x28
   301   000088                     	ds	4
   302   00008C                     vfpfcnvrt@fp:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x2C
   306   00008C                     	ds	2
   307   00008E                     vfpfcnvrt@fmt:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x2E
   311   00008E                     	ds	2
   312   000090                     vfpfcnvrt@ap:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x30
   316   000090                     	ds	2
   317   000092                     vfpfcnvrt@convarg:
   318                           	callstack 0
   319                           
   320                           ; 4 bytes @ 0x32
   321   000092                     	ds	4
   322   000096                     vfpfcnvrt@c:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x36
   326   000096                     	ds	1
   327   000097                     vfpfcnvrt@cp:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x37
   331   000097                     	ds	2
   332   000099                     ?_vfprintf:
   333                           	callstack 0
   334   000099                     vfprintf@fp:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x39
   338   000099                     	ds	2
   339   00009B                     vfprintf@fmt:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x3B
   343   00009B                     	ds	2
   344   00009D                     vfprintf@ap:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x3D
   348   00009D                     	ds	2
   349   00009F                     vfprintf@cfmt:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x3F
   353   00009F                     	ds	2
   354   0000A1                     ?_sprintf:
   355                           	callstack 0
   356   0000A1                     sprintf@s:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x41
   360   0000A1                     	ds	2
   361   0000A3                     sprintf@fmt:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0x43
   365   0000A3                     	ds	6
   366   0000A9                     sprintf@ap:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x49
   370   0000A9                     	ds	2
   371   0000AB                     sprintf@f:
   372                           	callstack 0
   373                           
   374                           ; 12 bytes @ 0x4B
   375   0000AB                     	ds	12
   376   0000B7                     ??_main:
   377                           
   378                           ; 1 bytes @ 0x57
   379   0000B7                     	ds	2
   380                           
   381                           	psect	cstackCOMRAM
   382   000001                     __pcstackCOMRAM:
   383                           	callstack 0
   384   000001                     ?___fpclassifyf:
   385                           	callstack 0
   386   000001                     ?___lwdiv:
   387                           	callstack 0
   388   000001                     ?___lwmod:
   389                           	callstack 0
   390   000001                     ?___fladd:
   391                           	callstack 0
   392   000001                     ?_labs:
   393                           	callstack 0
   394   000001                     ?___flneg:
   395                           	callstack 0
   396   000001                     ?___fltol:
   397                           	callstack 0
   398   000001                     ?___xxtofl:
   399                           	callstack 0
   400   000001                     Lcd_Port@a:
   401                           	callstack 0
   402   000001                     ___lwdiv@dividend:
   403                           	callstack 0
   404   000001                     ___lwmod@dividend:
   405                           	callstack 0
   406   000001                     memcpy@d1:
   407                           	callstack 0
   408   000001                     fputc@c:
   409                           	callstack 0
   410   000001                     strcpy@dest:
   411                           	callstack 0
   412   000001                     ___fleq@ff1:
   413                           	callstack 0
   414   000001                     ___flneg@f1:
   415                           	callstack 0
   416   000001                     ___fltol@f1:
   417                           	callstack 0
   418   000001                     ___fladd@b:
   419                           	callstack 0
   420   000001                     ___xxtofl@val:
   421                           	callstack 0
   422   000001                     ___fpclassifyf@x:
   423                           	callstack 0
   424   000001                     labs@a:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x0
   428   000001                     	ds	1
   429   000002                     ??_Lcd_Cmd:
   430   000002                     Lcd_Write_Char@temp:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x1
   434   000002                     	ds	1
   435   000003                     Lcd_Cmd@a:
   436                           	callstack 0
   437   000003                     Lcd_Write_Char@y:
   438                           	callstack 0
   439   000003                     ___lwdiv@divisor:
   440                           	callstack 0
   441   000003                     ___lwmod@divisor:
   442                           	callstack 0
   443   000003                     memcpy@s1:
   444                           	callstack 0
   445   000003                     fputc@fp:
   446                           	callstack 0
   447   000003                     strcpy@src:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x2
   451   000003                     	ds	1
   452   000004                     ??_Lcd_Init:
   453   000004                     Lcd_Set_Cursor@b:
   454                           	callstack 0
   455   000004                     Lcd_Write_Char@a:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x3
   459   000004                     	ds	1
   460   000005                     ??_fputc:
   461   000005                     ??___fpclassifyf:
   462   000005                     ??_labs:
   463   000005                     ??___fltol:
   464   000005                     ??___xxtofl:
   465   000005                     Lcd_Set_Cursor@a:
   466                           	callstack 0
   467   000005                     ___lwmod@counter:
   468                           	callstack 0
   469   000005                     Lcd_Write_String@a:
   470                           	callstack 0
   471   000005                     ___lwdiv@quotient:
   472                           	callstack 0
   473   000005                     memcpy@n:
   474                           	callstack 0
   475   000005                     strcpy@s:
   476                           	callstack 0
   477   000005                     ___fleq@ff2:
   478                           	callstack 0
   479   000005                     ___fladd@a:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x4
   483   000005                     	ds	1
   484   000006                     Lcd_Set_Cursor@z:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x5
   488   000006                     	ds	1
   489   000007                     Lcd_Set_Cursor@y:
   490                           	callstack 0
   491   000007                     ___lwdiv@counter:
   492                           	callstack 0
   493   000007                     Lcd_Write_String@i:
   494                           	callstack 0
   495   000007                     memcpy@d:
   496                           	callstack 0
   497   000007                     strcpy@d:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x6
   501   000007                     	ds	1
   502   000008                     Lcd_Set_Cursor@temp:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x7
   506   000008                     	ds	1
   507   000009                     ??___fladd:
   508   000009                     ??___fleq:
   509   000009                     ___fltol@sign1:
   510                           	callstack 0
   511   000009                     ___xxtofl@sign:
   512                           	callstack 0
   513   000009                     ___fpclassifyf@e:
   514                           	callstack 0
   515   000009                     memcpy@s:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x8
   519   000009                     	ds	1
   520   00000A                     ___fltol@exp1:
   521                           	callstack 0
   522   00000A                     ___xxtofl@exp:
   523                           	callstack 0
   524   00000A                     fputs@s:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x9
   528   00000A                     	ds	1
   529   00000B                     memcpy@tmp:
   530                           	callstack 0
   531   00000B                     ___xxtofl@arg:
   532                           	callstack 0
   533   00000B                     ___fpclassifyf@u:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0xA
   537   00000B                     	ds	1
   538   00000C                     fputs@fp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xB
   542   00000C                     	ds	1
   543   00000D                     ___fladd@signs:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0xC
   547   00000D                     	ds	1
   548   00000E                     ___fladd@aexp:
   549                           	callstack 0
   550   00000E                     fputs@c:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0xD
   554   00000E                     	ds	1
   555   00000F                     ?___flmul:
   556                           	callstack 0
   557   00000F                     ___fladd@bexp:
   558                           	callstack 0
   559   00000F                     fputs@i:
   560                           	callstack 0
   561   00000F                     ___flmul@b:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0xE
   565   00000F                     	ds	1
   566   000010                     ___fladd@grs:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0xF
   570   000010                     	ds	1
   571   000011                     pad@fp:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x10
   575   000011                     	ds	2
   576   000013                     pad@buf:
   577                           	callstack 0
   578   000013                     ___flmul@a:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x12
   582   000013                     	ds	2
   583   000015                     pad@p:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x14
   587   000015                     	ds	2
   588   000017                     ??___flmul:
   589   000017                     ??_pad:
   590                           
   591                           ; 1 bytes @ 0x16
   592   000017                     	ds	1
   593   000018                     pad@i:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x17
   597   000018                     	ds	2
   598   00001A                     pad@w:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x19
   602   00001A                     	ds	1
   603   00001B                     ___flmul@sign:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x1A
   607   00001B                     	ds	1
   608   00001C                     utoa@fp:
   609                           	callstack 0
   610   00001C                     ___flmul@grs:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x1B
   614   00001C                     	ds	2
   615   00001E                     utoa@d:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x1D
   619   00001E                     	ds	2
   620   000020                     ___flmul@aexp:
   621                           	callstack 0
   622   000020                     utoa@w:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x1F
   626   000020                     	ds	1
   627   000021                     ___flmul@bexp:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x20
   631   000021                     	ds	1
   632   000022                     utoa@p:
   633                           	callstack 0
   634   000022                     ___flmul@prod:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x21
   638   000022                     	ds	2
   639   000024                     utoa@i:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x23
   643   000024                     	ds	2
   644   000026                     ___flmul@temp:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x25
   648   000026                     	ds	2
   649   000028                     ?___fldiv:
   650                           	callstack 0
   651   000028                     ?___flsub:
   652                           	callstack 0
   653   000028                     ___flge@ff1:
   654                           	callstack 0
   655   000028                     ___flsub@b:
   656                           	callstack 0
   657   000028                     ___fldiv@b:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0x27
   661   000028                     	ds	4
   662   00002C                     ___flge@ff2:
   663                           	callstack 0
   664   00002C                     ___flsub@a:
   665                           	callstack 0
   666   00002C                     ___fldiv@a:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x2B
   670   00002C                     	ds	4
   671   000030                     ??___fldiv:
   672   000030                     ??___flge:
   673                           
   674                           ; 1 bytes @ 0x2F
   675   000030                     	ds	4
   676   000034                     ___fldiv@rem:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x33
   680   000034                     	ds	4
   681   000038                     ___fldiv@sign:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x37
   685   000038                     	ds	1
   686   000039                     ___fldiv@new_exp:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x38
   690   000039                     	ds	2
   691   00003B                     ___fldiv@grs:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x3A
   695   00003B                     	ds	4
   696   00003F                     ___fldiv@bexp:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x3E
   700   00003F                     	ds	1
   701   000040                     ___fldiv@aexp:
   702                           	callstack 0
   703                           
   704                           ; 1 bytes @ 0x3F
   705   000040                     	ds	1
   706   000041                     ?_floorf:
   707                           	callstack 0
   708   000041                     floorf@x:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x40
   712   000041                     	ds	4
   713   000045                     ??_floorf:
   714                           
   715                           ; 1 bytes @ 0x44
   716   000045                     	ds	6
   717   00004B                     floorf@m:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x4A
   721   00004B                     	ds	4
   722   00004F                     floorf@e:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x4E
   726   00004F                     	ds	2
   727   000051                     floorf@u:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x50
   731   000051                     	ds	4
   732   000055                     efgtoa@fp:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x54
   736   000055                     	ds	2
   737   000057                     efgtoa@f:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x56
   741   000057                     	ds	4
   742   00005B                     efgtoa@c:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x5A
   746   00005B                     	ds	1
   747   00005C                     ??_efgtoa:
   748                           
   749                           ; 1 bytes @ 0x5B
   750   00005C                     	ds	2
   751   00005E                     ??_vfpfcnvrt:
   752                           
   753                           ; 1 bytes @ 0x5D
   754   00005E                     	ds	2
   755   000060                     
   756                           ; 1 bytes @ 0x5F
   757 ;;
   758 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   759 ;;
   760 ;; *************** function _main *****************
   761 ;; Defined at:
   762 ;;		line 108 in file "adc_lcd.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   776 ;;      Params:         0       0       0       0       0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0       0       0
   778 ;;      Temps:          0       2       0       0       0       0       0       0       0
   779 ;;      Totals:         0       2       0       0       0       0       0       0       0
   780 ;;Total ram usage:        2 bytes
   781 ;; Hardware stack levels required when called: 8
   782 ;; This function calls:
   783 ;;		_Lcd_Init
   784 ;;		_Lcd_Set_Cursor
   785 ;;		_Lcd_Write_String
   786 ;;		___fldiv
   787 ;;		___flmul
   788 ;;		___xxtofl
   789 ;;		_set_adc
   790 ;;		_sprintf
   791 ;; This function is called by:
   792 ;;		Startup code after reset
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text0
   797   002534                     __ptext0:
   798                           	callstack 0
   799   002534                     _main:
   800                           	callstack 23
   801   002534                     l140:
   802   002534                     
   803                           ;adc_lcd.c: 110:     Lcd_Init();
   804   002534  EC51  F016         	call	_Lcd_Init	;wreg free
   805                           
   806                           ;adc_lcd.c: 111:     set_adc();
   807   002538  ECF1  F018         	call	_set_adc	;wreg free
   808   00253C                     
   809                           ;adc_lcd.c: 112:     ADCON0bits.GO_DONE = 1;
   810   00253C  82C2               	bsf	194,1,c	;volatile
   811   00253E                     l141:
   812   00253E  B2C2               	btfsc	194,1,c	;volatile
   813   002540  EFA4  F012         	goto	u3961
   814   002544  EFA6  F012         	goto	u3960
   815   002548                     u3961:
   816   002548  EF9F  F012         	goto	l141
   817   00254C                     u3960:
   818   00254C                     
   819                           ;adc_lcd.c: 114:     v_adc = (int)((ADRESH << 8) + ADRESL);
   820   00254C  50C4               	movf	196,w,c	;volatile
   821   00254E  0100               	movlb	0	; () banked
   822   002550  6FB8               	movwf	(??_main+1)& (0+255),b
   823   002552  6BB7               	clrf	??_main& (0+255),b
   824   002554  50C3               	movf	195,w,c	;volatile
   825   002556  25B7               	addwf	??_main& (0+255),w,b
   826   002558  6FC9               	movwf	_v_adc& (0+255),b
   827   00255A  0E00               	movlw	0
   828   00255C  21B8               	addwfc	(??_main+1)& (0+255),w,b
   829   00255E  6FCA               	movwf	(_v_adc+1)& (0+255),b
   830   002560                     
   831                           ; BSR set to: 0
   832                           ;adc_lcd.c: 115:     volt = (float)((v_adc*5.0)/1023.0);
   833   002560  0E00               	movlw	0
   834   002562  6E13               	movwf	___flmul@a^0,c
   835   002564  0E00               	movlw	0
   836   002566  6E14               	movwf	(___flmul@a+1)^0,c
   837   002568  0EA0               	movlw	160
   838   00256A  6E15               	movwf	(___flmul@a+2)^0,c
   839   00256C  0E40               	movlw	64
   840   00256E  6E16               	movwf	(___flmul@a+3)^0,c
   841   002570  C0C9  F001         	movff	_v_adc,___xxtofl@val
   842   002574  C0CA  F002         	movff	_v_adc+1,___xxtofl@val+1
   843   002578  0E00               	movlw	0
   844   00257A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   845   00257C  0EFF               	movlw	-1
   846   00257E  6E03               	movwf	(___xxtofl@val+2)^0,c
   847   002580  6E04               	movwf	(___xxtofl@val+3)^0,c
   848   002582  0E01               	movlw	1
   849   002584  ECC0  F011         	call	___xxtofl
   850   002588  C001  F00F         	movff	?___xxtofl,___flmul@b
   851   00258C  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   852   002590  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   853   002594  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   854   002598  EC6D  F00B         	call	___flmul	;wreg free
   855   00259C  C00F  F028         	movff	?___flmul,___fldiv@b
   856   0025A0  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   857   0025A4  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   858   0025A8  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   859   0025AC  0E00               	movlw	0
   860   0025AE  6E2C               	movwf	___fldiv@a^0,c
   861   0025B0  0EC0               	movlw	192
   862   0025B2  6E2D               	movwf	(___fldiv@a+1)^0,c
   863   0025B4  0E7F               	movlw	127
   864   0025B6  6E2E               	movwf	(___fldiv@a+2)^0,c
   865   0025B8  0E44               	movlw	68
   866   0025BA  6E2F               	movwf	(___fldiv@a+3)^0,c
   867   0025BC  EC82  F00D         	call	___fldiv	;wreg free
   868   0025C0  C028  F0C1         	movff	?___fldiv,_volt
   869   0025C4  C029  F0C2         	movff	?___fldiv+1,_volt+1
   870   0025C8  C02A  F0C3         	movff	?___fldiv+2,_volt+2
   871   0025CC  C02B  F0C4         	movff	?___fldiv+3,_volt+3
   872   0025D0                     
   873                           ;adc_lcd.c: 116:     Lcd_Set_Cursor(1,1);
   874   0025D0  0E01               	movlw	1
   875   0025D2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   876   0025D4  0E01               	movlw	1
   877   0025D6  EC2E  F015         	call	_Lcd_Set_Cursor
   878   0025DA                     
   879                           ;adc_lcd.c: 117:     sprintf(buffer,"ADC: %u", v_adc);
   880   0025DA  0ECC               	movlw	low _buffer
   881   0025DC  0100               	movlb	0	; () banked
   882   0025DE  6FA1               	movwf	sprintf@s& (0+255),b
   883   0025E0  0E00               	movlw	high _buffer
   884   0025E2  6FA2               	movwf	(sprintf@s+1)& (0+255),b
   885   0025E4  0E10               	movlw	low STR_1
   886   0025E6  6FA3               	movwf	sprintf@fmt& (0+255),b
   887   0025E8  0E08               	movlw	high STR_1
   888   0025EA  6FA4               	movwf	(sprintf@fmt+1)& (0+255),b
   889   0025EC  C0C9  F0A5         	movff	_v_adc,?_sprintf+4
   890   0025F0  C0CA  F0A6         	movff	_v_adc+1,?_sprintf+5
   891   0025F4  ECC5  F017         	call	_sprintf	;wreg free
   892   0025F8                     
   893                           ;adc_lcd.c: 118:     Lcd_Write_String(buffer);
   894   0025F8  0ECC               	movlw	low _buffer
   895   0025FA  6E05               	movwf	Lcd_Write_String@a^0,c
   896   0025FC  0E00               	movlw	high _buffer
   897   0025FE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   898   002600  EC7A  F018         	call	_Lcd_Write_String	;wreg free
   899   002604                     
   900                           ;adc_lcd.c: 119:     Lcd_Set_Cursor(1,2);
   901   002604  0E02               	movlw	2
   902   002606  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   903   002608  0E01               	movlw	1
   904   00260A  EC2E  F015         	call	_Lcd_Set_Cursor
   905   00260E                     
   906                           ;adc_lcd.c: 120:     sprintf(buffer,"Voltaje %f0.2f", volt);
   907   00260E  0ECC               	movlw	low _buffer
   908   002610  0100               	movlb	0	; () banked
   909   002612  6FA1               	movwf	sprintf@s& (0+255),b
   910   002614  0E00               	movlw	high _buffer
   911   002616  6FA2               	movwf	(sprintf@s+1)& (0+255),b
   912   002618  0E01               	movlw	low STR_2
   913   00261A  6FA3               	movwf	sprintf@fmt& (0+255),b
   914   00261C  0E08               	movlw	high STR_2
   915   00261E  6FA4               	movwf	(sprintf@fmt+1)& (0+255),b
   916   002620  C0C1  F0A5         	movff	_volt,?_sprintf+4
   917   002624  C0C2  F0A6         	movff	_volt+1,?_sprintf+5
   918   002628  C0C3  F0A7         	movff	_volt+2,?_sprintf+6
   919   00262C  C0C4  F0A8         	movff	_volt+3,?_sprintf+7
   920   002630  ECC5  F017         	call	_sprintf	;wreg free
   921   002634                     
   922                           ;adc_lcd.c: 121:     Lcd_Write_String(buffer);
   923   002634  0ECC               	movlw	low _buffer
   924   002636  6E05               	movwf	Lcd_Write_String@a^0,c
   925   002638  0E00               	movlw	high _buffer
   926   00263A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   927   00263C  EC7A  F018         	call	_Lcd_Write_String	;wreg free
   928   002640                     
   929                           ;adc_lcd.c: 122:     _delay((unsigned long)((200)*(12000000/4000.0)));
   930   002640  0E04               	movlw	4
   931   002642  0100               	movlb	0	; () banked
   932   002644  6FB8               	movwf	(??_main+1)& (0+255),b
   933   002646  0E0C               	movlw	12
   934   002648  6FB7               	movwf	??_main& (0+255),b
   935   00264A  0E33               	movlw	51
   936   00264C                     u3977:
   937   00264C  2EE8               	decfsz	wreg,f,c
   938   00264E  D7FE               	bra	u3977
   939   002650  2FB7               	decfsz	??_main& (0+255),f,b
   940   002652  D7FC               	bra	u3977
   941   002654  2FB8               	decfsz	(??_main+1)& (0+255),f,b
   942   002656  D7FA               	bra	u3977
   943   002658  D000               	nop2	
   944   00265A  EF9A  F012         	goto	l140
   945   00265E  EF00  F000         	goto	start
   946   002662                     __end_of_main:
   947                           	callstack 0
   948                           
   949 ;; *************** function _sprintf *****************
   950 ;; Defined at:
   951 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  s               2   65[BANK0 ] PTR unsigned char 
   954 ;;		 -> buffer(20), 
   955 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
   956 ;;		 -> STR_2(15), STR_1(8), 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  f              12   75[BANK0 ] struct _IO_FILE
   959 ;;  ap              2   73[BANK0 ] PTR void [1]
   960 ;;		 -> ?_sprintf(2), 
   961 ;;  ret             2    0        int 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  2   65[BANK0 ] int 
   964 ;; Registers used:
   965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   971 ;;      Params:         0       8       0       0       0       0       0       0       0
   972 ;;      Locals:         0      14       0       0       0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0       0       0
   974 ;;      Totals:         0      22       0       0       0       0       0       0       0
   975 ;;Total ram usage:       22 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 7
   978 ;; This function calls:
   979 ;;		_vfprintf
   980 ;; This function is called by:
   981 ;;		_main
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text1
   986   002F8A                     __ptext1:
   987                           	callstack 0
   988   002F8A                     _sprintf:
   989                           	callstack 23
   990   002F8A  0EA5               	movlw	low (?_sprintf+4)
   991   002F8C  0100               	movlb	0	; () banked
   992   002F8E  6FA9               	movwf	sprintf@ap& (0+255),b
   993   002F90  0E00               	movlw	high (?_sprintf+4)
   994   002F92  6FAA               	movwf	(sprintf@ap+1)& (0+255),b
   995   002F94  C0A1  F0AB         	movff	sprintf@s,sprintf@f
   996   002F98  C0A2  F0AC         	movff	sprintf@s+1,sprintf@f+1
   997   002F9C                     
   998                           ; BSR set to: 0
   999   002F9C  0E00               	movlw	0
  1000   002F9E  6FAF               	movwf	(sprintf@f+4)& (0+255),b
  1001   002FA0  0E00               	movlw	0
  1002   002FA2  6FAE               	movwf	(sprintf@f+3)& (0+255),b
  1003   002FA4                     
  1004                           ; BSR set to: 0
  1005   002FA4  0E00               	movlw	0
  1006   002FA6  6FB6               	movwf	(sprintf@f+11)& (0+255),b
  1007   002FA8  0E00               	movlw	0
  1008   002FAA  6FB5               	movwf	(sprintf@f+10)& (0+255),b
  1009   002FAC                     
  1010                           ; BSR set to: 0
  1011   002FAC  0EAB               	movlw	low sprintf@f
  1012   002FAE  6F99               	movwf	vfprintf@fp& (0+255),b
  1013   002FB0  0E00               	movlw	high sprintf@f
  1014   002FB2  6F9A               	movwf	(vfprintf@fp+1)& (0+255),b
  1015   002FB4  C0A3  F09B         	movff	sprintf@fmt,vfprintf@fmt
  1016   002FB8  C0A4  F09C         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1017   002FBC  0EA9               	movlw	low sprintf@ap
  1018   002FBE  6F9D               	movwf	vfprintf@ap& (0+255),b
  1019   002FC0  0E00               	movlw	high sprintf@ap
  1020   002FC2  6F9E               	movwf	(vfprintf@ap+1)& (0+255),b
  1021   002FC4  EC9C  F017         	call	_vfprintf	;wreg free
  1022   002FC8  0100               	movlb	0	; () banked
  1023   002FCA  51AE               	movf	(sprintf@f+3)& (0+255),w,b
  1024   002FCC  25A1               	addwf	sprintf@s& (0+255),w,b
  1025   002FCE  6ED9               	movwf	fsr2l,c
  1026   002FD0  51AF               	movf	(sprintf@f+4)& (0+255),w,b
  1027   002FD2  21A2               	addwfc	(sprintf@s+1)& (0+255),w,b
  1028   002FD4  6EDA               	movwf	fsr2h,c
  1029   002FD6  6ADF               	clrf	indf2,c
  1030   002FD8                     
  1031                           ; BSR set to: 0
  1032   002FD8  0012               	return		;funcret
  1033   002FDA                     __end_of_sprintf:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _vfprintf *****************
  1037 ;; Defined at:
  1038 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  fp              2   57[BANK0 ] PTR struct _IO_FILE
  1041 ;;		 -> sprintf@f(12), 
  1042 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  1043 ;;		 -> STR_2(15), STR_1(8), 
  1044 ;;  ap              2   61[BANK0 ] PTR PTR void 
  1045 ;;		 -> sprintf@ap(2), 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  cfmt            2   63[BANK0 ] PTR unsigned char 
  1048 ;;		 -> STR_2(15), STR_1(8), 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  2   57[BANK0 ] int 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1058 ;;      Params:         0       6       0       0       0       0       0       0       0
  1059 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1061 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1062 ;;Total ram usage:        8 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 6
  1065 ;; This function calls:
  1066 ;;		_vfpfcnvrt
  1067 ;; This function is called by:
  1068 ;;		_sprintf
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text2
  1073   002F38                     __ptext2:
  1074                           	callstack 0
  1075   002F38                     _vfprintf:
  1076                           	callstack 23
  1077   002F38                     
  1078                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1079   002F38  C09B  F09F         	movff	vfprintf@fmt,vfprintf@cfmt
  1080   002F3C  C09C  F0A0         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1081                           
  1082                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1083   002F40  EFB1  F017         	goto	l3583
  1084   002F44                     l3581:
  1085                           
  1086                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1087   002F44  C099  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1088   002F48  C09A  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1089   002F4C  0E9F               	movlw	low vfprintf@cfmt
  1090   002F4E  0100               	movlb	0	; () banked
  1091   002F50  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1092   002F52  0E00               	movlw	high vfprintf@cfmt
  1093   002F54  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1094   002F56  C09D  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1095   002F5A  C09E  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1096   002F5E  EC4F  F00F         	call	_vfpfcnvrt	;wreg free
  1097   002F62                     l3583:
  1098                           
  1099                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1100   002F62  C09F  FFF6         	movff	vfprintf@cfmt,tblptrl
  1101   002F66  C0A0  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1102   002F6A                     	if	0	;tblptru may be non-zero
  1103   002F6A                     	endif
  1104   002F6A                     	if	0	;tblptru may be non-zero
  1105   002F6A                     	endif
  1106   002F6A  0008               	tblrd		*
  1107   002F6C  50F5               	movf	tablat,w,c
  1108   002F6E  0900               	iorlw	0
  1109   002F70  A4D8               	btfss	status,2,c
  1110   002F72  EFBD  F017         	goto	u3721
  1111   002F76  EFBF  F017         	goto	u3720
  1112   002F7A                     u3721:
  1113   002F7A  EFA2  F017         	goto	l3581
  1114   002F7E                     u3720:
  1115   002F7E                     
  1116                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1117   002F7E  0E00               	movlw	0
  1118   002F80  0100               	movlb	0	; () banked
  1119   002F82  6F9A               	movwf	(?_vfprintf+1)& (0+255),b
  1120   002F84  0E00               	movlw	0
  1121   002F86  6F99               	movwf	?_vfprintf& (0+255),b
  1122   002F88                     
  1123                           ; BSR set to: 0
  1124   002F88  0012               	return		;funcret
  1125   002F8A                     __end_of_vfprintf:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _vfpfcnvrt *****************
  1129 ;; Defined at:
  1130 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1133 ;;		 -> sprintf@f(12), 
  1134 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1135 ;;		 -> vfprintf@cfmt(2), 
  1136 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1137 ;;		 -> sprintf@ap(2), 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  convarg         4   50[BANK0 ] struct .
  1140 ;;  cp              2   55[BANK0 ] PTR unsigned char 
  1141 ;;		 -> STR_2(15), STR_1(8), 
  1142 ;;  i               2    0        int 
  1143 ;;  done            2    0        int 
  1144 ;;  c               1   54[BANK0 ] unsigned char 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1154 ;;      Params:         0       6       0       0       0       0       0       0       0
  1155 ;;      Locals:         0       7       0       0       0       0       0       0       0
  1156 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1157 ;;      Totals:         2      13       0       0       0       0       0       0       0
  1158 ;;Total ram usage:       15 bytes
  1159 ;; Hardware stack levels used: 1
  1160 ;; Hardware stack levels required when called: 5
  1161 ;; This function calls:
  1162 ;;		_efgtoa
  1163 ;;		_fputc
  1164 ;;		_utoa
  1165 ;; This function is called by:
  1166 ;;		_vfprintf
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text3
  1171   001E9E                     __ptext3:
  1172                           	callstack 0
  1173   001E9E                     _vfpfcnvrt:
  1174                           	callstack 23
  1175   001E9E                     
  1176                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1177   001E9E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1178   001EA2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1179   001EA6  CFDE FFF6          	movff	postinc2,tblptrl
  1180   001EAA  CFDD FFF7          	movff	postdec2,tblptrh
  1181   001EAE                     	if	0	;tblptru may be non-zero
  1182   001EAE                     	endif
  1183   001EAE                     	if	0	;tblptru may be non-zero
  1184   001EAE                     	endif
  1185   001EAE  0008               	tblrd		*
  1186   001EB0  50F5               	movf	tablat,w,c
  1187   001EB2  0A25               	xorlw	37
  1188   001EB4  A4D8               	btfss	status,2,c
  1189   001EB6  EF5F  F00F         	goto	u3691
  1190   001EBA  EF61  F00F         	goto	u3690
  1191   001EBE                     u3691:
  1192   001EBE  EFA2  F010         	goto	l3527
  1193   001EC2                     u3690:
  1194   001EC2                     
  1195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1196   001EC2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1197   001EC6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1198   001ECA  2ADE               	incf	postinc2,f,c
  1199   001ECC  0E00               	movlw	0
  1200   001ECE  22DD               	addwfc	postdec2,f,c
  1201   001ED0                     
  1202                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1203   001ED0  0E00               	movlw	0
  1204   001ED2  0100               	movlb	0	; () banked
  1205   001ED4  6FC6               	movwf	(_width+1)& (0+255),b
  1206   001ED6  0E00               	movlw	0
  1207   001ED8  6FC5               	movwf	_width& (0+255),b
  1208   001EDA  C0C5  F0CB         	movff	_width,_flags
  1209   001EDE                     
  1210                           ; BSR set to: 0
  1211                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1212   001EDE  69C7               	setf	_prec& (0+255),b
  1213   001EE0  69C8               	setf	(_prec+1)& (0+255),b
  1214   001EE2                     
  1215                           ; BSR set to: 0
  1216                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1265:   if (0
  1217   001EE2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1218   001EE6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1219   001EEA  CFDE F097          	movff	postinc2,vfpfcnvrt@cp
  1220   001EEE  CFDD F098          	movff	postdec2,vfpfcnvrt@cp+1
  1221   001EF2                     
  1222                           ; BSR set to: 0
  1223   001EF2  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1224   001EF6  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1225   001EFA                     	if	0	;tblptru may be non-zero
  1226   001EFA                     	endif
  1227   001EFA                     	if	0	;tblptru may be non-zero
  1228   001EFA                     	endif
  1229   001EFA  0008               	tblrd		*
  1230   001EFC  50F5               	movf	tablat,w,c
  1231   001EFE  0A75               	xorlw	117
  1232   001F00  A4D8               	btfss	status,2,c
  1233   001F02  EF85  F00F         	goto	u3701
  1234   001F06  EF87  F00F         	goto	u3700
  1235   001F0A                     u3701:
  1236   001F0A  EFCD  F00F         	goto	l3489
  1237   001F0E                     u3700:
  1238   001F0E                     
  1239                           ; BSR set to: 0
  1240                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1278:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1321:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1241   001F0E  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1242   001F12  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1243   001F16  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  1244   001F1A  0E02               	movlw	2
  1245   001F1C  26DE               	addwf	postinc2,f,c
  1246   001F1E  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  1247   001F22  0E00               	movlw	0
  1248   001F24  22DD               	addwfc	postdec2,f,c
  1249   001F26  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1250   001F2A  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1251   001F2E  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  1252   001F32  CFDD F093          	movff	postdec2,vfpfcnvrt@convarg+1
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  1255   001F36  0E01               	movlw	1
  1256   001F38  2597               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1257   001F3A  6E5E               	movwf	??_vfpfcnvrt^0,c
  1258   001F3C  0E00               	movlw	0
  1259   001F3E  2198               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1260   001F40  6E5F               	movwf	(??_vfpfcnvrt+1)^0,c
  1261   001F42  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1262   001F46  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1263   001F4A  C05E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1264   001F4E  C05F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  1267   001F52  EFB7  F00F         	goto	l3487
  1268   001F56                     l3481:
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1331:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  1272   001F56  C08C  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1273   001F5A  C08D  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1274   001F5E  C092  F01E         	movff	vfpfcnvrt@convarg,utoa@d
  1275   001F62  C093  F01F         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1276   001F66  ECB5  F014         	call	_utoa	;wreg free
  1277   001F6A  EFB6  F010         	goto	l934
  1278   001F6E                     l3487:
  1279                           
  1280                           ; BSR set to: 0
  1281   001F6E  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1282   001F72  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1283   001F76                     	if	0	;tblptru may be non-zero
  1284   001F76                     	endif
  1285   001F76                     	if	0	;tblptru may be non-zero
  1286   001F76                     	endif
  1287   001F76  0008               	tblrd		*
  1288   001F78  50F5               	movf	tablat,w,c
  1289   001F7A  6E5E               	movwf	??_vfpfcnvrt^0,c
  1290   001F7C  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1291                           
  1292                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1293                           ; Switch size 1, requested type "simple"
  1294                           ; Number of cases is 1, Range of values is 0 to 0
  1295                           ; switch strategies available:
  1296                           ; Name         Instructions Cycles
  1297                           ; simple_byte            4     3 (average)
  1298                           ;	Chosen strategy is simple_byte
  1299   001F7E  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1300   001F80  0A00               	xorlw	0	; case 0
  1301   001F82  B4D8               	btfsc	status,2,c
  1302   001F84  EFC6  F00F         	goto	l3985
  1303   001F88  EFCD  F00F         	goto	l3489
  1304   001F8C                     l3985:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ; Switch size 1, requested type "simple"
  1308                           ; Number of cases is 1, Range of values is 117 to 117
  1309                           ; switch strategies available:
  1310                           ; Name         Instructions Cycles
  1311                           ; simple_byte            4     3 (average)
  1312                           ;	Chosen strategy is simple_byte
  1313   001F8C  505E               	movf	??_vfpfcnvrt^0,w,c
  1314   001F8E  0A75               	xorlw	117	; case 117
  1315   001F90  B4D8               	btfsc	status,2,c
  1316   001F92  EFAB  F00F         	goto	l3481
  1317   001F96  EFCD  F00F         	goto	l3489
  1318   001F9A                     l3489:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  1322   001F9A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1323   001F9E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1324   001FA2  CFDE F097          	movff	postinc2,vfpfcnvrt@cp
  1325   001FA6  CFDD F098          	movff	postdec2,vfpfcnvrt@cp+1
  1326   001FAA                     
  1327                           ; BSR set to: 0
  1328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  1329   001FAA  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1330   001FAE  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1331   001FB2                     	if	0	;tblptru may be non-zero
  1332   001FB2                     	endif
  1333   001FB2                     	if	0	;tblptru may be non-zero
  1334   001FB2                     	endif
  1335   001FB2  0008               	tblrd		*
  1336   001FB4  CFF5 F096          	movff	tablat,vfpfcnvrt@c
  1337                           
  1338                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  1339   001FB8  EFEA  F00F         	goto	l3501
  1340   001FBC                     l3493:
  1341                           
  1342                           ; BSR set to: 0
  1343                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  1344   001FBC  4B97               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1345   001FBE  2B98               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1346                           
  1347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  1348   001FC0  EF03  F010         	goto	l3503
  1349   001FC4                     l3495:
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  1353   001FC4  0E6C               	movlw	108
  1354   001FC6  6F96               	movwf	vfpfcnvrt@c& (0+255),b
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  1357   001FC8  EF03  F010         	goto	l3503
  1358   001FCC                     l3497:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  1362   001FCC  0E00               	movlw	0
  1363   001FCE  6F96               	movwf	vfpfcnvrt@c& (0+255),b
  1364                           
  1365                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  1366   001FD0  EF03  F010         	goto	l3503
  1367   001FD4                     l3501:
  1368                           
  1369                           ; BSR set to: 0
  1370   001FD4  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  1371   001FD6  6E5E               	movwf	??_vfpfcnvrt^0,c
  1372   001FD8  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1373                           
  1374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1375                           ; Switch size 1, requested type "simple"
  1376                           ; Number of cases is 1, Range of values is 0 to 0
  1377                           ; switch strategies available:
  1378                           ; Name         Instructions Cycles
  1379                           ; simple_byte            4     3 (average)
  1380                           ;	Chosen strategy is simple_byte
  1381   001FDA  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1382   001FDC  0A00               	xorlw	0	; case 0
  1383   001FDE  B4D8               	btfsc	status,2,c
  1384   001FE0  EFF4  F00F         	goto	l3987
  1385   001FE4  EFE6  F00F         	goto	l3497
  1386   001FE8                     l3987:
  1387                           
  1388                           ; BSR set to: 0
  1389                           ; Switch size 1, requested type "simple"
  1390                           ; Number of cases is 3, Range of values is 76 to 108
  1391                           ; switch strategies available:
  1392                           ; Name         Instructions Cycles
  1393                           ; simple_byte           10     6 (average)
  1394                           ;	Chosen strategy is simple_byte
  1395   001FE8  505E               	movf	??_vfpfcnvrt^0,w,c
  1396   001FEA  0A4C               	xorlw	76	; case 76
  1397   001FEC  B4D8               	btfsc	status,2,c
  1398   001FEE  EFDE  F00F         	goto	l3493
  1399   001FF2  0A2A               	xorlw	42	; case 102
  1400   001FF4  B4D8               	btfsc	status,2,c
  1401   001FF6  EFE2  F00F         	goto	l3495
  1402   001FFA  0A0A               	xorlw	10	; case 108
  1403   001FFC  B4D8               	btfsc	status,2,c
  1404   001FFE  EFDE  F00F         	goto	l3493
  1405   002002  EFE6  F00F         	goto	l3497
  1406   002006                     l3503:
  1407                           
  1408                           ; BSR set to: 0
  1409   002006  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1410   00200A  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1411   00200E                     	if	0	;tblptru may be non-zero
  1412   00200E                     	endif
  1413   00200E                     	if	0	;tblptru may be non-zero
  1414   00200E                     	endif
  1415   00200E  0008               	tblrd		*
  1416   002010  50F5               	movf	tablat,w,c
  1417   002012  0A66               	xorlw	102
  1418   002014  A4D8               	btfss	status,2,c
  1419   002016  EF0F  F010         	goto	u3711
  1420   00201A  EF11  F010         	goto	u3710
  1421   00201E                     u3711:
  1422   00201E  EF99  F010         	goto	l3523
  1423   002022                     u3710:
  1424   002022  EF47  F010         	goto	l3511
  1425   002026                     l3505:
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1429   002026  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1430   00202A  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1431   00202E  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  1432   002032  0E04               	movlw	4
  1433   002034  26DE               	addwf	postinc2,f,c
  1434   002036  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  1435   00203A  0E00               	movlw	0
  1436   00203C  22DD               	addwfc	postdec2,f,c
  1437   00203E  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1438   002042  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1439   002046  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  1440   00204A  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  1441   00204E  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  1442   002052  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  1445   002056  EF5C  F010         	goto	l3513
  1446   00205A                     l3507:
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1450   00205A  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1451   00205E  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1452   002062  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  1453   002066  0E04               	movlw	4
  1454   002068  26DE               	addwf	postinc2,f,c
  1455   00206A  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  1456   00206E  0E00               	movlw	0
  1457   002070  22DD               	addwfc	postdec2,f,c
  1458   002072  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1459   002076  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1460   00207A  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  1461   00207E  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  1462   002082  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  1463   002086  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  1466   00208A  EF5C  F010         	goto	l3513
  1467   00208E                     l3511:
  1468                           
  1469                           ; BSR set to: 0
  1470   00208E  5196               	movf	vfpfcnvrt@c& (0+255),w,b
  1471   002090  6E5E               	movwf	??_vfpfcnvrt^0,c
  1472   002092  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1473                           
  1474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1475                           ; Switch size 1, requested type "simple"
  1476                           ; Number of cases is 1, Range of values is 0 to 0
  1477                           ; switch strategies available:
  1478                           ; Name         Instructions Cycles
  1479                           ; simple_byte            4     3 (average)
  1480                           ;	Chosen strategy is simple_byte
  1481   002094  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1482   002096  0A00               	xorlw	0	; case 0
  1483   002098  B4D8               	btfsc	status,2,c
  1484   00209A  EF51  F010         	goto	l3989
  1485   00209E  EF5C  F010         	goto	l3513
  1486   0020A2                     l3989:
  1487                           
  1488                           ; BSR set to: 0
  1489                           ; Switch size 1, requested type "simple"
  1490                           ; Number of cases is 2, Range of values is 76 to 108
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte            7     4 (average)
  1494                           ;	Chosen strategy is simple_byte
  1495   0020A2  505E               	movf	??_vfpfcnvrt^0,w,c
  1496   0020A4  0A4C               	xorlw	76	; case 76
  1497   0020A6  B4D8               	btfsc	status,2,c
  1498   0020A8  EF2D  F010         	goto	l3507
  1499   0020AC  0A20               	xorlw	32	; case 108
  1500   0020AE  B4D8               	btfsc	status,2,c
  1501   0020B0  EF13  F010         	goto	l3505
  1502   0020B4  EF5C  F010         	goto	l3513
  1503   0020B8                     l3513:
  1504                           
  1505                           ; BSR set to: 0
  1506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  1507   0020B8  0E01               	movlw	1
  1508   0020BA  2597               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1509   0020BC  6E5E               	movwf	??_vfpfcnvrt^0,c
  1510   0020BE  0E00               	movlw	0
  1511   0020C0  2198               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1512   0020C2  6E5F               	movwf	(??_vfpfcnvrt+1)^0,c
  1513   0020C4  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1514   0020C8  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1515   0020CC  C05E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1516   0020D0  C05F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1517                           
  1518                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  1519   0020D4  EF83  F010         	goto	l3521
  1520   0020D8                     l3515:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1524   0020D8  C08C  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1525   0020DC  C08D  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1526   0020E0  C092  F057         	movff	vfpfcnvrt@convarg,efgtoa@f
  1527   0020E4  C093  F058         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1528   0020E8  C094  F059         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1529   0020EC  C095  F05A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1530   0020F0  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1531   0020F4  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1532   0020F8                     	if	0	;tblptru may be non-zero
  1533   0020F8                     	endif
  1534   0020F8                     	if	0	;tblptru may be non-zero
  1535   0020F8                     	endif
  1536   0020F8  0008               	tblrd		*
  1537   0020FA  CFF5 F05B          	movff	tablat,efgtoa@c
  1538   0020FE  EC11  F004         	call	_efgtoa	;wreg free
  1539   002102  EFB6  F010         	goto	l934
  1540   002106                     l3521:
  1541                           
  1542                           ; BSR set to: 0
  1543   002106  C097  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1544   00210A  C098  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1545   00210E                     	if	0	;tblptru may be non-zero
  1546   00210E                     	endif
  1547   00210E                     	if	0	;tblptru may be non-zero
  1548   00210E                     	endif
  1549   00210E  0008               	tblrd		*
  1550   002110  50F5               	movf	tablat,w,c
  1551   002112  6E5E               	movwf	??_vfpfcnvrt^0,c
  1552   002114  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1553                           
  1554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1555                           ; Switch size 1, requested type "simple"
  1556                           ; Number of cases is 1, Range of values is 0 to 0
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; simple_byte            4     3 (average)
  1560                           ;	Chosen strategy is simple_byte
  1561   002116  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1562   002118  0A00               	xorlw	0	; case 0
  1563   00211A  B4D8               	btfsc	status,2,c
  1564   00211C  EF92  F010         	goto	l3991
  1565   002120  EF99  F010         	goto	l3523
  1566   002124                     l3991:
  1567                           
  1568                           ; BSR set to: 0
  1569                           ; Switch size 1, requested type "simple"
  1570                           ; Number of cases is 1, Range of values is 102 to 102
  1571                           ; switch strategies available:
  1572                           ; Name         Instructions Cycles
  1573                           ; simple_byte            4     3 (average)
  1574                           ;	Chosen strategy is simple_byte
  1575   002124  505E               	movf	??_vfpfcnvrt^0,w,c
  1576   002126  0A66               	xorlw	102	; case 102
  1577   002128  B4D8               	btfsc	status,2,c
  1578   00212A  EF6C  F010         	goto	l3515
  1579   00212E  EF99  F010         	goto	l3523
  1580   002132                     l3523:
  1581                           
  1582                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1583   002132  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1584   002136  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1585   00213A  2ADE               	incf	postinc2,f,c
  1586   00213C  0E00               	movlw	0
  1587   00213E  22DD               	addwfc	postdec2,f,c
  1588   002140  EFB6  F010         	goto	l934
  1589   002144                     l3527:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1592   002144  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1593   002148  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1594   00214C  CFDE FFF6          	movff	postinc2,tblptrl
  1595   002150  CFDD FFF7          	movff	postdec2,tblptrh
  1596   002154                     	if	0	;tblptru may be non-zero
  1597   002154                     	endif
  1598   002154                     	if	0	;tblptru may be non-zero
  1599   002154                     	endif
  1600   002154  0008               	tblrd		*
  1601   002156  50F5               	movf	tablat,w,c
  1602   002158  6E01               	movwf	fputc@c^0,c
  1603   00215A  6A02               	clrf	(fputc@c+1)^0,c
  1604   00215C  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1605   002160  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1606   002164  EC97  F015         	call	_fputc	;wreg free
  1607   002168  EF99  F010         	goto	l3523
  1608   00216C                     l934:
  1609   00216C  0012               	return		;funcret
  1610   00216E                     __end_of_vfpfcnvrt:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _utoa *****************
  1614 ;; Defined at:
  1615 ;;		line 917 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1618 ;;		 -> sprintf@f(12), 
  1619 ;;  d               2   29[COMRAM] unsigned int 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  i               2   35[COMRAM] int 
  1622 ;;  p               2   33[COMRAM] int 
  1623 ;;  w               2   31[COMRAM] int 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1633 ;;      Params:         4       0       0       0       0       0       0       0       0
  1634 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1636 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1637 ;;Total ram usage:       10 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 4
  1640 ;; This function calls:
  1641 ;;		___lwdiv
  1642 ;;		___lwmod
  1643 ;;		_pad
  1644 ;; This function is called by:
  1645 ;;		_vfpfcnvrt
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           	psect	text4
  1650   00296A                     __ptext4:
  1651                           	callstack 0
  1652   00296A                     _utoa:
  1653                           	callstack 23
  1654   00296A                     
  1655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 917: static void 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 918: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           919:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprn
      +                          t.c: 927:     p = (0 <= prec) ? prec : 1;
  1656   00296A  0100               	movlb	0	; () banked
  1657   00296C  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  1658   00296E  EFBD  F014         	goto	u3650
  1659   002972  EFBB  F014         	goto	u3651
  1660   002976                     u3651:
  1661   002976  EFC3  F014         	goto	l917
  1662   00297A                     u3650:
  1663   00297A                     
  1664                           ; BSR set to: 0
  1665   00297A  0E00               	movlw	0
  1666   00297C  6E23               	movwf	(utoa@p+1)^0,c
  1667   00297E  0E01               	movlw	1
  1668   002980  6E22               	movwf	utoa@p^0,c
  1669   002982  EFC7  F014         	goto	l919
  1670   002986                     l917:
  1671                           
  1672                           ; BSR set to: 0
  1673   002986  C0C7  F022         	movff	_prec,utoa@p
  1674   00298A  C0C8  F023         	movff	_prec+1,utoa@p+1
  1675   00298E                     l919:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 928:     w = widt
      +                          h;
  1679   00298E  C0C5  F020         	movff	_width,utoa@w
  1680   002992  C0C6  F021         	movff	_width+1,utoa@w+1
  1681   002996                     
  1682                           ; BSR set to: 0
  1683                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 931:     i = size
      +                          of(dbuf) - 1;
  1684   002996  0E00               	movlw	0
  1685   002998  6E25               	movwf	(utoa@i+1)^0,c
  1686   00299A  0E4F               	movlw	79
  1687   00299C  6E24               	movwf	utoa@i^0,c
  1688   00299E                     
  1689                           ; BSR set to: 0
  1690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 932:     dbuf[i] 
      +                          = '\0';
  1691   00299E  0E00               	movlw	0
  1692   0029A0  0101               	movlb	1	; () banked
  1693   0029A2  6F4F               	movwf	(_dbuf+79)& (0+255),b
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  1696   0029A4  EFFE  F014         	goto	l3447
  1697   0029A8                     l3437:
  1698                           
  1699                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 937:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 938:         --i;
  1700   0029A8  0624               	decf	utoa@i^0,f,c
  1701   0029AA  A0D8               	btfss	status,0,c
  1702   0029AC  0625               	decf	(utoa@i+1)^0,f,c
  1703   0029AE                     
  1704                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 939:         dbuf
      +                          [i] = '0' + (d % 10);
  1705   0029AE  0E00               	movlw	low _dbuf
  1706   0029B0  2424               	addwf	utoa@i^0,w,c
  1707   0029B2  6ED9               	movwf	fsr2l,c
  1708   0029B4  0E01               	movlw	high _dbuf
  1709   0029B6  2025               	addwfc	(utoa@i+1)^0,w,c
  1710   0029B8  6EDA               	movwf	fsr2h,c
  1711   0029BA  C01E  F001         	movff	utoa@d,___lwmod@dividend
  1712   0029BE  C01F  F002         	movff	utoa@d+1,___lwmod@dividend+1
  1713   0029C2  0E00               	movlw	0
  1714   0029C4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1715   0029C6  0E0A               	movlw	10
  1716   0029C8  6E03               	movwf	___lwmod@divisor^0,c
  1717   0029CA  EC3C  F017         	call	___lwmod	;wreg free
  1718   0029CE  5001               	movf	?___lwmod^0,w,c
  1719   0029D0  0F30               	addlw	48
  1720   0029D2  6EDF               	movwf	indf2,c
  1721   0029D4                     
  1722                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 940:         --p;
  1723   0029D4  0622               	decf	utoa@p^0,f,c
  1724   0029D6  A0D8               	btfss	status,0,c
  1725   0029D8  0623               	decf	(utoa@p+1)^0,f,c
  1726   0029DA                     
  1727                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 941:         --w;
  1728   0029DA  0620               	decf	utoa@w^0,f,c
  1729   0029DC  A0D8               	btfss	status,0,c
  1730   0029DE  0621               	decf	(utoa@w+1)^0,f,c
  1731   0029E0                     
  1732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 942:         d = 
      +                          d / 10;
  1733   0029E0  C01E  F001         	movff	utoa@d,___lwdiv@dividend
  1734   0029E4  C01F  F002         	movff	utoa@d+1,___lwdiv@dividend+1
  1735   0029E8  0E00               	movlw	0
  1736   0029EA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1737   0029EC  0E0A               	movlw	10
  1738   0029EE  6E03               	movwf	___lwdiv@divisor^0,c
  1739   0029F0  ECCF  F016         	call	___lwdiv	;wreg free
  1740   0029F4  C001  F01E         	movff	?___lwdiv,utoa@d
  1741   0029F8  C002  F01F         	movff	?___lwdiv+1,utoa@d+1
  1742   0029FC                     l3447:
  1743                           
  1744                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  1745   0029FC  5024               	movf	utoa@i^0,w,c
  1746   0029FE  1025               	iorwf	(utoa@i+1)^0,w,c
  1747   002A00  B4D8               	btfsc	status,2,c
  1748   002A02  EF05  F015         	goto	u3661
  1749   002A06  EF07  F015         	goto	u3660
  1750   002A0A                     u3661:
  1751   002A0A  EF1D  F015         	goto	l3453
  1752   002A0E                     u3660:
  1753   002A0E  501E               	movf	utoa@d^0,w,c
  1754   002A10  101F               	iorwf	(utoa@d+1)^0,w,c
  1755   002A12  A4D8               	btfss	status,2,c
  1756   002A14  EF0E  F015         	goto	u3671
  1757   002A18  EF10  F015         	goto	u3670
  1758   002A1C                     u3671:
  1759   002A1C  EFD4  F014         	goto	l3437
  1760   002A20                     u3670:
  1761   002A20  BE23               	btfsc	(utoa@p+1)^0,7,c
  1762   002A22  EF1D  F015         	goto	u3680
  1763   002A26  5023               	movf	(utoa@p+1)^0,w,c
  1764   002A28  E106               	bnz	u3681
  1765   002A2A  0422               	decf	utoa@p^0,w,c
  1766   002A2C  B0D8               	btfsc	status,0,c
  1767   002A2E  EF1B  F015         	goto	u3681
  1768   002A32  EF1D  F015         	goto	u3680
  1769   002A36                     u3681:
  1770   002A36  EFD4  F014         	goto	l3437
  1771   002A3A                     u3680:
  1772   002A3A                     l3453:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 946:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1775   002A3A  C01C  F011         	movff	utoa@fp,pad@fp
  1776   002A3E  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  1777   002A42  0E00               	movlw	low _dbuf
  1778   002A44  2424               	addwf	utoa@i^0,w,c
  1779   002A46  6E13               	movwf	pad@buf^0,c
  1780   002A48  0E01               	movlw	high _dbuf
  1781   002A4A  2025               	addwfc	(utoa@i+1)^0,w,c
  1782   002A4C  6E14               	movwf	(pad@buf+1)^0,c
  1783   002A4E  C020  F015         	movff	utoa@w,pad@p
  1784   002A52  C021  F016         	movff	utoa@w+1,pad@p+1
  1785   002A56  EC92  F016         	call	_pad	;wreg free
  1786   002A5A  0012               	return		;funcret
  1787   002A5C                     __end_of_utoa:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function ___lwmod *****************
  1791 ;; Defined at:
  1792 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  dividend        2    0[COMRAM] unsigned int 
  1795 ;;  divisor         2    2[COMRAM] unsigned int 
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;  counter         1    4[COMRAM] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  2    0[COMRAM] unsigned int 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1807 ;;      Params:         4       0       0       0       0       0       0       0       0
  1808 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1810 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1811 ;;Total ram usage:        5 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_utoa
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text5
  1821   002E78                     __ptext5:
  1822                           	callstack 0
  1823   002E78                     ___lwmod:
  1824                           	callstack 26
  1825   002E78  5003               	movf	___lwmod@divisor^0,w,c
  1826   002E7A  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1827   002E7C  B4D8               	btfsc	status,2,c
  1828   002E7E  EF43  F017         	goto	u3041
  1829   002E82  EF45  F017         	goto	u3040
  1830   002E86                     u3041:
  1831   002E86  EF69  F017         	goto	l650
  1832   002E8A                     u3040:
  1833   002E8A  0E01               	movlw	1
  1834   002E8C  6E05               	movwf	___lwmod@counter^0,c
  1835   002E8E  EF4D  F017         	goto	l3097
  1836   002E92                     l3095:
  1837   002E92  90D8               	bcf	status,0,c
  1838   002E94  3603               	rlcf	___lwmod@divisor^0,f,c
  1839   002E96  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1840   002E98  2A05               	incf	___lwmod@counter^0,f,c
  1841   002E9A                     l3097:
  1842   002E9A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1843   002E9C  EF52  F017         	goto	u3051
  1844   002EA0  EF54  F017         	goto	u3050
  1845   002EA4                     u3051:
  1846   002EA4  EF49  F017         	goto	l3095
  1847   002EA8                     u3050:
  1848   002EA8                     l3099:
  1849   002EA8  5003               	movf	___lwmod@divisor^0,w,c
  1850   002EAA  5C01               	subwf	___lwmod@dividend^0,w,c
  1851   002EAC  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1852   002EAE  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1853   002EB0  A0D8               	btfss	status,0,c
  1854   002EB2  EF5D  F017         	goto	u3061
  1855   002EB6  EF5F  F017         	goto	u3060
  1856   002EBA                     u3061:
  1857   002EBA  EF63  F017         	goto	l3103
  1858   002EBE                     u3060:
  1859   002EBE  5003               	movf	___lwmod@divisor^0,w,c
  1860   002EC0  5E01               	subwf	___lwmod@dividend^0,f,c
  1861   002EC2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1862   002EC4  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1863   002EC6                     l3103:
  1864   002EC6  90D8               	bcf	status,0,c
  1865   002EC8  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1866   002ECA  3203               	rrcf	___lwmod@divisor^0,f,c
  1867   002ECC  2E05               	decfsz	___lwmod@counter^0,f,c
  1868   002ECE  EF54  F017         	goto	l3099
  1869   002ED2                     l650:
  1870   002ED2  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1871   002ED6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1872   002EDA  0012               	return		;funcret
  1873   002EDC                     __end_of___lwmod:
  1874                           	callstack 0
  1875                           
  1876 ;; *************** function ___lwdiv *****************
  1877 ;; Defined at:
  1878 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  dividend        2    0[COMRAM] unsigned int 
  1881 ;;  divisor         2    2[COMRAM] unsigned int 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  quotient        2    4[COMRAM] unsigned int 
  1884 ;;  counter         1    6[COMRAM] unsigned char 
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  2    0[COMRAM] unsigned int 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1894 ;;      Params:         4       0       0       0       0       0       0       0       0
  1895 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1897 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        7 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_utoa
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text6
  1908   002D9E                     __ptext6:
  1909                           	callstack 0
  1910   002D9E                     ___lwdiv:
  1911                           	callstack 26
  1912   002D9E  0E00               	movlw	0
  1913   002DA0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1914   002DA2  0E00               	movlw	0
  1915   002DA4  6E05               	movwf	___lwdiv@quotient^0,c
  1916   002DA6  5003               	movf	___lwdiv@divisor^0,w,c
  1917   002DA8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1918   002DAA  B4D8               	btfsc	status,2,c
  1919   002DAC  EFDA  F016         	goto	u3011
  1920   002DB0  EFDC  F016         	goto	u3010
  1921   002DB4                     u3011:
  1922   002DB4  EF04  F017         	goto	l640
  1923   002DB8                     u3010:
  1924   002DB8  0E01               	movlw	1
  1925   002DBA  6E07               	movwf	___lwdiv@counter^0,c
  1926   002DBC  EFE4  F016         	goto	l3077
  1927   002DC0                     l3075:
  1928   002DC0  90D8               	bcf	status,0,c
  1929   002DC2  3603               	rlcf	___lwdiv@divisor^0,f,c
  1930   002DC4  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1931   002DC6  2A07               	incf	___lwdiv@counter^0,f,c
  1932   002DC8                     l3077:
  1933   002DC8  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1934   002DCA  EFE9  F016         	goto	u3021
  1935   002DCE  EFEB  F016         	goto	u3020
  1936   002DD2                     u3021:
  1937   002DD2  EFE0  F016         	goto	l3075
  1938   002DD6                     u3020:
  1939   002DD6                     l3079:
  1940   002DD6  90D8               	bcf	status,0,c
  1941   002DD8  3605               	rlcf	___lwdiv@quotient^0,f,c
  1942   002DDA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1943   002DDC  5003               	movf	___lwdiv@divisor^0,w,c
  1944   002DDE  5C01               	subwf	___lwdiv@dividend^0,w,c
  1945   002DE0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1946   002DE2  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1947   002DE4  A0D8               	btfss	status,0,c
  1948   002DE6  EFF7  F016         	goto	u3031
  1949   002DEA  EFF9  F016         	goto	u3030
  1950   002DEE                     u3031:
  1951   002DEE  EFFE  F016         	goto	l3087
  1952   002DF2                     u3030:
  1953   002DF2  5003               	movf	___lwdiv@divisor^0,w,c
  1954   002DF4  5E01               	subwf	___lwdiv@dividend^0,f,c
  1955   002DF6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1956   002DF8  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1957   002DFA  8005               	bsf	___lwdiv@quotient^0,0,c
  1958   002DFC                     l3087:
  1959   002DFC  90D8               	bcf	status,0,c
  1960   002DFE  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1961   002E00  3203               	rrcf	___lwdiv@divisor^0,f,c
  1962   002E02  2E07               	decfsz	___lwdiv@counter^0,f,c
  1963   002E04  EFEB  F016         	goto	l3079
  1964   002E08                     l640:
  1965   002E08  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1966   002E0C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1967   002E10  0012               	return		;funcret
  1968   002E12                     __end_of___lwdiv:
  1969                           	callstack 0
  1970                           
  1971 ;; *************** function _efgtoa *****************
  1972 ;; Defined at:
  1973 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  1976 ;;		 -> sprintf@f(12), 
  1977 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  1978 ;;  c               1   90[COMRAM] unsigned char 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  u               4   40[BANK0 ] struct flui
  1981 ;;  g               4   36[BANK0 ] struct flui
  1982 ;;  l               4   29[BANK0 ] struct flui
  1983 ;;  h               4   25[BANK0 ] struct flui
  1984 ;;  ou              4   19[BANK0 ] struct flui
  1985 ;;  n               2   34[BANK0 ] int 
  1986 ;;  i               2   23[BANK0 ] int 
  1987 ;;  w               2   17[BANK0 ] int 
  1988 ;;  e               2   15[BANK0 ] int 
  1989 ;;  m               2   13[BANK0 ] int 
  1990 ;;  d               2   11[BANK0 ] int 
  1991 ;;  t               2    4[BANK0 ] int 
  1992 ;;  p               2    2[BANK0 ] int 
  1993 ;;  ne              2    0[BANK0 ] int 
  1994 ;;  sign            1   33[BANK0 ] unsigned char 
  1995 ;;  nmode           1   10[BANK0 ] unsigned char 
  1996 ;;  mode            1    9[BANK0 ] unsigned char 
  1997 ;;  pp              1    8[BANK0 ] unsigned char 
  1998 ;;  esign           1    0        unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2008 ;;      Params:         7       0       0       0       0       0       0       0       0
  2009 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2010 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2011 ;;      Totals:         9      44       0       0       0       0       0       0       0
  2012 ;;Total ram usage:       53 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 4
  2015 ;; This function calls:
  2016 ;;		___fladd
  2017 ;;		___fldiv
  2018 ;;		___fleq
  2019 ;;		___flge
  2020 ;;		___flmul
  2021 ;;		___flneg
  2022 ;;		___flsub
  2023 ;;		___fltol
  2024 ;;		___fpclassifyf
  2025 ;;		_floorf
  2026 ;;		_labs
  2027 ;;		_memcpy
  2028 ;;		_pad
  2029 ;;		_strcpy
  2030 ;; This function is called by:
  2031 ;;		_vfpfcnvrt
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text7
  2036   000822                     __ptext7:
  2037                           	callstack 0
  2038   000822                     _efgtoa:
  2039                           	callstack 23
  2040   000822                     
  2041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  2042   000822  0E00               	movlw	0
  2043   000824  0100               	movlb	0	; () banked
  2044   000826  6F81               	movwf	efgtoa@sign& (0+255),b
  2045   000828                     
  2046                           ; BSR set to: 0
  2047                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  2048   000828  C057  F084         	movff	efgtoa@f,efgtoa@g
  2049   00082C  C058  F085         	movff	efgtoa@f+1,efgtoa@g+1
  2050   000830  C059  F086         	movff	efgtoa@f+2,efgtoa@g+2
  2051   000834  C05A  F087         	movff	efgtoa@f+3,efgtoa@g+3
  2052   000838                     
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  2055   000838  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2056   00083A  EF23  F004         	goto	u3330
  2057   00083E  EF21  F004         	goto	u3331
  2058   000842                     u3331:
  2059   000842  EF37  F004         	goto	l3217
  2060   000846                     u3330:
  2061   000846                     
  2062                           ; BSR set to: 0
  2063                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  2064   000846  0E01               	movlw	1
  2065   000848  6F81               	movwf	efgtoa@sign& (0+255),b
  2066   00084A                     
  2067                           ; BSR set to: 0
  2068                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  2069   00084A  C084  F001         	movff	efgtoa@g,___flneg@f1
  2070   00084E  C085  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2071   000852  C086  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2072   000856  C087  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2073   00085A  EC9A  F018         	call	___flneg	;wreg free
  2074   00085E  C001  F084         	movff	?___flneg,efgtoa@g
  2075   000862  C002  F085         	movff	?___flneg+1,efgtoa@g+1
  2076   000866  C003  F086         	movff	?___flneg+2,efgtoa@g+2
  2077   00086A  C004  F087         	movff	?___flneg+3,efgtoa@g+3
  2078   00086E                     l3217:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  2081   00086E  0E00               	movlw	0
  2082   000870  0100               	movlb	0	; () banked
  2083   000872  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2084   000874  0E00               	movlw	0
  2085   000876  6F82               	movwf	efgtoa@n& (0+255),b
  2086   000878                     
  2087                           ; BSR set to: 0
  2088                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  2089   000878  C0C5  F071         	movff	_width,efgtoa@w
  2090   00087C  C0C6  F072         	movff	_width+1,efgtoa@w+1
  2091   000880                     
  2092                           ; BSR set to: 0
  2093                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  2094   000880  5181               	movf	efgtoa@sign& (0+255),w,b
  2095   000882  B4D8               	btfsc	status,2,c
  2096   000884  EF46  F004         	goto	u3341
  2097   000888  EF48  F004         	goto	u3340
  2098   00088C                     u3341:
  2099   00088C  EF5C  F004         	goto	l3231
  2100   000890                     u3340:
  2101   000890                     
  2102                           ; BSR set to: 0
  2103                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  2104   000890  5181               	movf	efgtoa@sign& (0+255),w,b
  2105   000892  A4D8               	btfss	status,2,c
  2106   000894  EF4E  F004         	goto	u3351
  2107   000898  EF50  F004         	goto	u3350
  2108   00089C                     u3351:
  2109   00089C  EF56  F004         	goto	l3227
  2110   0008A0                     u3350:
  2111   0008A0                     
  2112                           ; BSR set to: 0
  2113   0008A0  0E00               	movlw	0
  2114   0008A2  6F67               	movwf	(_efgtoa$898+1)& (0+255),b
  2115   0008A4  0E2B               	movlw	43
  2116   0008A6  6F66               	movwf	_efgtoa$898& (0+255),b
  2117   0008A8  EF5A  F004         	goto	l3229
  2118   0008AC                     l3227:
  2119                           
  2120                           ; BSR set to: 0
  2121   0008AC  0E00               	movlw	0
  2122   0008AE  6F67               	movwf	(_efgtoa$898+1)& (0+255),b
  2123   0008B0  0E2D               	movlw	45
  2124   0008B2  6F66               	movwf	_efgtoa$898& (0+255),b
  2125   0008B4                     l3229:
  2126                           
  2127                           ; BSR set to: 0
  2128   0008B4  C066  F081         	movff	_efgtoa$898,efgtoa@sign
  2129   0008B8                     l3231:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2133   0008B8  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2134   0008BC  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2135   0008C0  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2136   0008C4  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2137   0008C8  EC36  F014         	call	___fpclassifyf	;wreg free
  2138   0008CC  0401               	decf	?___fpclassifyf^0,w,c
  2139   0008CE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2140   0008D0  A4D8               	btfss	status,2,c
  2141   0008D2  EF6D  F004         	goto	u3361
  2142   0008D6  EF6F  F004         	goto	u3360
  2143   0008DA                     u3361:
  2144   0008DA  EFA2  F004         	goto	l3249
  2145   0008DE                     u3360:
  2146   0008DE                     
  2147                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  2148   0008DE  0100               	movlb	0	; () banked
  2149   0008E0  5181               	movf	efgtoa@sign& (0+255),w,b
  2150   0008E2  B4D8               	btfsc	status,2,c
  2151   0008E4  EF76  F004         	goto	u3371
  2152   0008E8  EF78  F004         	goto	u3370
  2153   0008EC                     u3371:
  2154   0008EC  EF81  F004         	goto	l3241
  2155   0008F0                     u3370:
  2156   0008F0                     
  2157                           ; BSR set to: 0
  2158                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  2159   0008F0  C081  F100         	movff	efgtoa@sign,_dbuf
  2160   0008F4                     
  2161                           ; BSR set to: 0
  2162                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  2163   0008F4  0771               	decf	efgtoa@w& (0+255),f,b
  2164   0008F6  A0D8               	btfss	status,0,c
  2165   0008F8  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2166   0008FA                     
  2167                           ; BSR set to: 0
  2168                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  2169   0008FA  0E00               	movlw	0
  2170   0008FC  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2171   0008FE  0E01               	movlw	1
  2172   000900  6F82               	movwf	efgtoa@n& (0+255),b
  2173   000902                     l3241:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  2177   000902  0E00               	movlw	low _dbuf
  2178   000904  2582               	addwf	efgtoa@n& (0+255),w,b
  2179   000906  6E01               	movwf	strcpy@dest^0,c
  2180   000908  0E01               	movlw	high _dbuf
  2181   00090A  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2182   00090C  6E02               	movwf	(strcpy@dest+1)^0,c
  2183   00090E  0E18               	movlw	low STR_3
  2184   000910  6E03               	movwf	strcpy@src^0,c
  2185   000912  0E08               	movlw	high STR_3
  2186   000914  6E04               	movwf	(strcpy@src+1)^0,c
  2187   000916  EC5A  F018         	call	_strcpy	;wreg free
  2188   00091A                     l3243:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2191   00091A  0100               	movlb	0	; () banked
  2192   00091C  0EFD               	movlw	253
  2193   00091E  2771               	addwf	efgtoa@w& (0+255),f,b
  2194   000920  0EFF               	movlw	255
  2195   000922  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2196   000924                     
  2197                           ; BSR set to: 0
  2198                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2199   000924  C055  F011         	movff	efgtoa@fp,pad@fp
  2200   000928  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2201   00092C  0E00               	movlw	low _dbuf
  2202   00092E  6E13               	movwf	pad@buf^0,c
  2203   000930  0E01               	movlw	high _dbuf
  2204   000932  6E14               	movwf	(pad@buf+1)^0,c
  2205   000934  C071  F015         	movff	efgtoa@w,pad@p
  2206   000938  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2207   00093C  EC92  F016         	call	_pad	;wreg free
  2208   000940  EF0C  F009         	goto	l872
  2209   000944                     l3249:
  2210                           
  2211                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2212   000944  C084  F001         	movff	efgtoa@g,___fpclassifyf@x
  2213   000948  C085  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2214   00094C  C086  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2215   000950  C087  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2216   000954  EC36  F014         	call	___fpclassifyf	;wreg free
  2217   000958  5001               	movf	?___fpclassifyf^0,w,c
  2218   00095A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2219   00095C  A4D8               	btfss	status,2,c
  2220   00095E  EFB3  F004         	goto	u3381
  2221   000962  EFB5  F004         	goto	u3380
  2222   000966                     u3381:
  2223   000966  EFD5  F004         	goto	l3267
  2224   00096A                     u3380:
  2225   00096A                     
  2226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  2227   00096A  0100               	movlb	0	; () banked
  2228   00096C  5181               	movf	efgtoa@sign& (0+255),w,b
  2229   00096E  B4D8               	btfsc	status,2,c
  2230   000970  EFBC  F004         	goto	u3391
  2231   000974  EFBE  F004         	goto	u3390
  2232   000978                     u3391:
  2233   000978  EFC7  F004         	goto	l3259
  2234   00097C                     u3390:
  2235   00097C                     
  2236                           ; BSR set to: 0
  2237                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  2238   00097C  C081  F100         	movff	efgtoa@sign,_dbuf
  2239   000980                     
  2240                           ; BSR set to: 0
  2241                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  2242   000980  0771               	decf	efgtoa@w& (0+255),f,b
  2243   000982  A0D8               	btfss	status,0,c
  2244   000984  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2245   000986                     
  2246                           ; BSR set to: 0
  2247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  2248   000986  0E00               	movlw	0
  2249   000988  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2250   00098A  0E01               	movlw	1
  2251   00098C  6F82               	movwf	efgtoa@n& (0+255),b
  2252   00098E                     l3259:
  2253                           
  2254                           ; BSR set to: 0
  2255                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  2256   00098E  0E00               	movlw	low _dbuf
  2257   000990  2582               	addwf	efgtoa@n& (0+255),w,b
  2258   000992  6E01               	movwf	strcpy@dest^0,c
  2259   000994  0E01               	movlw	high _dbuf
  2260   000996  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2261   000998  6E02               	movwf	(strcpy@dest+1)^0,c
  2262   00099A  0E1C               	movlw	low STR_6
  2263   00099C  6E03               	movwf	strcpy@src^0,c
  2264   00099E  0E08               	movlw	high STR_6
  2265   0009A0  6E04               	movwf	(strcpy@src+1)^0,c
  2266   0009A2  EC5A  F018         	call	_strcpy	;wreg free
  2267   0009A6  EF8D  F004         	goto	l3243
  2268   0009AA                     l3267:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  2271   0009AA  0E00               	movlw	0
  2272   0009AC  0100               	movlb	0	; () banked
  2273   0009AE  6F88               	movwf	efgtoa@u& (0+255),b
  2274   0009B0  0E00               	movlw	0
  2275   0009B2  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2276   0009B4  0E80               	movlw	128
  2277   0009B6  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2278   0009B8  0E3F               	movlw	63
  2279   0009BA  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2280                           
  2281                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  2282   0009BC  0E00               	movlw	0
  2283   0009BE  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2284   0009C0  0E00               	movlw	0
  2285   0009C2  6F6F               	movwf	efgtoa@e& (0+255),b
  2286   0009C4                     
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  2289   0009C4  C084  F001         	movff	efgtoa@g,___fleq@ff1
  2290   0009C8  C085  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2291   0009CC  C086  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2292   0009D0  C087  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2293   0009D4  0E00               	movlw	0
  2294   0009D6  6E05               	movwf	___fleq@ff2^0,c
  2295   0009D8  0E00               	movlw	0
  2296   0009DA  6E06               	movwf	(___fleq@ff2+1)^0,c
  2297   0009DC  0E00               	movlw	0
  2298   0009DE  6E07               	movwf	(___fleq@ff2+2)^0,c
  2299   0009E0  0E00               	movlw	0
  2300   0009E2  6E08               	movwf	(___fleq@ff2+3)^0,c
  2301   0009E4  ECFC  F015         	call	___fleq	;wreg free
  2302   0009E8  B0D8               	btfsc	status,0,c
  2303   0009EA  EFF9  F004         	goto	u3401
  2304   0009EE  EFFB  F004         	goto	u3400
  2305   0009F2                     u3401:
  2306   0009F2  EFDA  F005         	goto	l875
  2307   0009F6                     u3400:
  2308   0009F6  EF08  F005         	goto	l3275
  2309   0009FA                     l877:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  2312   0009FA  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2313   0009FE  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2314   000A02  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2315   000A06  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2316   000A0A                     
  2317                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  2318   000A0A  0100               	movlb	0	; () banked
  2319   000A0C  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2320   000A0E  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2321   000A10                     l3275:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2324   000A10  C088  F00F         	movff	efgtoa@u,___flmul@b
  2325   000A14  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2326   000A18  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2327   000A1C  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2328   000A20  0E00               	movlw	0
  2329   000A22  6E13               	movwf	___flmul@a^0,c
  2330   000A24  0E00               	movlw	0
  2331   000A26  6E14               	movwf	(___flmul@a+1)^0,c
  2332   000A28  0E20               	movlw	32
  2333   000A2A  6E15               	movwf	(___flmul@a+2)^0,c
  2334   000A2C  0E41               	movlw	65
  2335   000A2E  6E16               	movwf	(___flmul@a+3)^0,c
  2336   000A30  EC6D  F00B         	call	___flmul	;wreg free
  2337   000A34  C00F  F073         	movff	?___flmul,efgtoa@ou
  2338   000A38  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2339   000A3C  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2340   000A40  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2341   000A44  0100               	movlb	0	; () banked
  2342   000A46  5173               	movf	efgtoa@ou& (0+255),w,b
  2343   000A48  5D84               	subwf	efgtoa@g& (0+255),w,b
  2344   000A4A  6E01               	movwf	labs@a^0,c
  2345   000A4C  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2346   000A4E  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2347   000A50  6E02               	movwf	(labs@a+1)^0,c
  2348   000A52  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2349   000A54  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2350   000A56  6E03               	movwf	(labs@a+2)^0,c
  2351   000A58  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2352   000A5A  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2353   000A5C  6E04               	movwf	(labs@a+3)^0,c
  2354   000A5E  EC09  F017         	call	_labs	;wreg free
  2355   000A62  BE04               	btfsc	(?_labs+3)^0,7,c
  2356   000A64  EF3F  F005         	goto	u3411
  2357   000A68  5004               	movf	(?_labs+3)^0,w,c
  2358   000A6A  1003               	iorwf	(?_labs+2)^0,w,c
  2359   000A6C  1002               	iorwf	(?_labs+1)^0,w,c
  2360   000A6E  E109               	bnz	u3410
  2361   000A70  0E02               	movlw	2
  2362   000A72  5C01               	subwf	?_labs^0,w,c
  2363   000A74  A0D8               	btfss	status,0,c
  2364   000A76  EF3F  F005         	goto	u3411
  2365   000A7A  EF41  F005         	goto	u3410
  2366   000A7E                     u3411:
  2367   000A7E  EFFD  F004         	goto	l877
  2368   000A82                     u3410:
  2369   000A82  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2370   000A86  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2371   000A8A  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2372   000A8E  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2373   000A92  C084  F02C         	movff	efgtoa@g,___flge@ff2
  2374   000A96  C085  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2375   000A9A  C086  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2376   000A9E  C087  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2377   000AA2  ECB4  F013         	call	___flge	;wreg free
  2378   000AA6  A0D8               	btfss	status,0,c
  2379   000AA8  EF58  F005         	goto	u3421
  2380   000AAC  EF5A  F005         	goto	u3420
  2381   000AB0                     u3421:
  2382   000AB0  EFFD  F004         	goto	l877
  2383   000AB4                     u3420:
  2384   000AB4                     
  2385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2386   000AB4  0100               	movlb	0	; () banked
  2387   000AB6  5188               	movf	efgtoa@u& (0+255),w,b
  2388   000AB8  5D84               	subwf	efgtoa@g& (0+255),w,b
  2389   000ABA  6E01               	movwf	labs@a^0,c
  2390   000ABC  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2391   000ABE  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2392   000AC0  6E02               	movwf	(labs@a+1)^0,c
  2393   000AC2  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2394   000AC4  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2395   000AC6  6E03               	movwf	(labs@a+2)^0,c
  2396   000AC8  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2397   000ACA  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2398   000ACC  6E04               	movwf	(labs@a+3)^0,c
  2399   000ACE  EC09  F017         	call	_labs	;wreg free
  2400   000AD2  BE04               	btfsc	(?_labs+3)^0,7,c
  2401   000AD4  EF79  F005         	goto	u3430
  2402   000AD8  5004               	movf	(?_labs+3)^0,w,c
  2403   000ADA  1003               	iorwf	(?_labs+2)^0,w,c
  2404   000ADC  1002               	iorwf	(?_labs+1)^0,w,c
  2405   000ADE  E107               	bnz	u3431
  2406   000AE0  0E02               	movlw	2
  2407   000AE2  5C01               	subwf	?_labs^0,w,c
  2408   000AE4  B0D8               	btfsc	status,0,c
  2409   000AE6  EF77  F005         	goto	u3431
  2410   000AEA  EF79  F005         	goto	u3430
  2411   000AEE                     u3431:
  2412   000AEE  EFC1  F005         	goto	l3293
  2413   000AF2                     u3430:
  2414   000AF2                     l3283:
  2415                           
  2416                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  2417   000AF2  C088  F084         	movff	efgtoa@u,efgtoa@g
  2418   000AF6  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2419   000AFA  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2420   000AFE  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  2423   000B02  EFDA  F005         	goto	l875
  2424   000B06                     l3285:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  2427   000B06  C088  F028         	movff	efgtoa@u,___fldiv@b
  2428   000B0A  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2429   000B0E  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2430   000B12  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2431   000B16  0E00               	movlw	0
  2432   000B18  6E2C               	movwf	___fldiv@a^0,c
  2433   000B1A  0E00               	movlw	0
  2434   000B1C  6E2D               	movwf	(___fldiv@a+1)^0,c
  2435   000B1E  0E20               	movlw	32
  2436   000B20  6E2E               	movwf	(___fldiv@a+2)^0,c
  2437   000B22  0E41               	movlw	65
  2438   000B24  6E2F               	movwf	(___fldiv@a+3)^0,c
  2439   000B26  EC82  F00D         	call	___fldiv	;wreg free
  2440   000B2A  C028  F088         	movff	?___fldiv,efgtoa@u
  2441   000B2E  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2442   000B32  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2443   000B36  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2444   000B3A                     
  2445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  2446   000B3A  0100               	movlb	0	; () banked
  2447   000B3C  076F               	decf	efgtoa@e& (0+255),f,b
  2448   000B3E  A0D8               	btfss	status,0,c
  2449   000B40  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2450   000B42                     
  2451                           ; BSR set to: 0
  2452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2453   000B42  5188               	movf	efgtoa@u& (0+255),w,b
  2454   000B44  5D84               	subwf	efgtoa@g& (0+255),w,b
  2455   000B46  6E01               	movwf	labs@a^0,c
  2456   000B48  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2457   000B4A  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2458   000B4C  6E02               	movwf	(labs@a+1)^0,c
  2459   000B4E  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2460   000B50  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2461   000B52  6E03               	movwf	(labs@a+2)^0,c
  2462   000B54  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2463   000B56  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2464   000B58  6E04               	movwf	(labs@a+3)^0,c
  2465   000B5A  EC09  F017         	call	_labs	;wreg free
  2466   000B5E  BE04               	btfsc	(?_labs+3)^0,7,c
  2467   000B60  EFBF  F005         	goto	u3440
  2468   000B64  5004               	movf	(?_labs+3)^0,w,c
  2469   000B66  1003               	iorwf	(?_labs+2)^0,w,c
  2470   000B68  1002               	iorwf	(?_labs+1)^0,w,c
  2471   000B6A  E107               	bnz	u3441
  2472   000B6C  0E02               	movlw	2
  2473   000B6E  5C01               	subwf	?_labs^0,w,c
  2474   000B70  B0D8               	btfsc	status,0,c
  2475   000B72  EFBD  F005         	goto	u3441
  2476   000B76  EFBF  F005         	goto	u3440
  2477   000B7A                     u3441:
  2478   000B7A  EFC1  F005         	goto	l3293
  2479   000B7E                     u3440:
  2480   000B7E  EF79  F005         	goto	l3283
  2481   000B82                     l3293:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  2484   000B82  C084  F028         	movff	efgtoa@g,___flge@ff1
  2485   000B86  C085  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2486   000B8A  C086  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2487   000B8E  C087  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2488   000B92  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2489   000B96  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2490   000B9A  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2491   000B9E  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2492   000BA2  ECB4  F013         	call	___flge	;wreg free
  2493   000BA6  A0D8               	btfss	status,0,c
  2494   000BA8  EFD8  F005         	goto	u3451
  2495   000BAC  EFDA  F005         	goto	u3450
  2496   000BB0                     u3451:
  2497   000BB0  EF83  F005         	goto	l3285
  2498   000BB4                     u3450:
  2499   000BB4                     l875:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  2502   000BB4  C05B  F069         	movff	efgtoa@c,efgtoa@mode
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  2505   000BB8  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2506   000BBC                     
  2507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  2508   000BBC  0100               	movlb	0	; () banked
  2509   000BBE  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  2510   000BC0  EFE4  F005         	goto	u3461
  2511   000BC4  EFE6  F005         	goto	u3460
  2512   000BC8                     u3461:
  2513   000BC8  EFEC  F005         	goto	l3299
  2514   000BCC                     u3460:
  2515   000BCC                     
  2516                           ; BSR set to: 0
  2517   000BCC  C0C7  F062         	movff	_prec,efgtoa@p
  2518   000BD0  C0C8  F063         	movff	_prec+1,efgtoa@p+1
  2519   000BD4  EFF0  F005         	goto	l3301
  2520   000BD8                     l3299:
  2521                           
  2522                           ; BSR set to: 0
  2523   000BD8  0E00               	movlw	0
  2524   000BDA  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2525   000BDC  0E06               	movlw	6
  2526   000BDE  6F62               	movwf	efgtoa@p& (0+255),b
  2527   000BE0                     l3301:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  2531   000BE0  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2532   000BE4  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2533   000BE8                     
  2534                           ; BSR set to: 0
  2535                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  2536   000BE8  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2537   000BEA  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2538   000BEC                     
  2539                           ; BSR set to: 0
  2540                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  2541   000BEC  0E66               	movlw	102
  2542   000BEE  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2543   000BF0  A4D8               	btfss	status,2,c
  2544   000BF2  EFFD  F005         	goto	u3471
  2545   000BF6  EFFF  F005         	goto	u3470
  2546   000BFA                     u3471:
  2547   000BFA  EF1F  F006         	goto	l3315
  2548   000BFE                     u3470:
  2549   000BFE                     
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  2552   000BFE  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2553   000C00  EF06  F006         	goto	u3480
  2554   000C04  EF04  F006         	goto	u3481
  2555   000C08                     u3481:
  2556   000C08  EF12  F006         	goto	l3311
  2557   000C0C                     u3480:
  2558   000C0C                     
  2559                           ; BSR set to: 0
  2560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  2561   000C0C  0E00               	movlw	0
  2562   000C0E  6F88               	movwf	efgtoa@u& (0+255),b
  2563   000C10  0E00               	movlw	0
  2564   000C12  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2565   000C14  0E80               	movlw	128
  2566   000C16  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2567   000C18  0E3F               	movlw	63
  2568   000C1A  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  2571   000C1C  0E00               	movlw	0
  2572   000C1E  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2573   000C20  0E00               	movlw	0
  2574   000C22  6F6F               	movwf	efgtoa@e& (0+255),b
  2575   000C24                     l3311:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  2579   000C24  0E67               	movlw	103
  2580   000C26  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2581   000C28  B4D8               	btfsc	status,2,c
  2582   000C2A  EF19  F006         	goto	u3491
  2583   000C2E  EF1B  F006         	goto	u3490
  2584   000C32                     u3491:
  2585   000C32  EF1F  F006         	goto	l3315
  2586   000C36                     u3490:
  2587   000C36                     
  2588                           ; BSR set to: 0
  2589                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  2590   000C36  516F               	movf	efgtoa@e& (0+255),w,b
  2591   000C38  276D               	addwf	efgtoa@m& (0+255),f,b
  2592   000C3A  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2593   000C3C  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2594   000C3E                     l3315:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  2598   000C3E  0E00               	movlw	0
  2599   000C40  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2600   000C42  0E00               	movlw	0
  2601   000C44  6F77               	movwf	efgtoa@i& (0+255),b
  2602   000C46                     
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  2605   000C46  C084  F079         	movff	efgtoa@g,efgtoa@h
  2606   000C4A  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2607   000C4E  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2608   000C52  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2609   000C56                     
  2610                           ; BSR set to: 0
  2611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  2612   000C56  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2613   000C5A  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2614   000C5E  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2615   000C62  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2616                           
  2617                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2618   000C66  EFB0  F006         	goto	l3329
  2619   000C6A                     l3321:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  2623   000C6A  C079  F028         	movff	efgtoa@h,___fldiv@b
  2624   000C6E  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2625   000C72  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2626   000C76  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2627   000C7A  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2628   000C7E  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2629   000C82  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2630   000C86  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2631   000C8A  EC82  F00D         	call	___fldiv	;wreg free
  2632   000C8E  C028  F041         	movff	?___fldiv,floorf@x
  2633   000C92  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2634   000C96  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2635   000C9A  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2636   000C9E  ECB7  F010         	call	_floorf	;wreg free
  2637   000CA2  C041  F07D         	movff	?_floorf,efgtoa@l
  2638   000CA6  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  2639   000CAA  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  2640   000CAE  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  2643   000CB2  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2644   000CB6  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2645   000CBA  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2646   000CBE  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2647   000CC2  EC31  F013         	call	___fltol	;wreg free
  2648   000CC6  C001  F06B         	movff	?___fltol,efgtoa@d
  2649   000CCA  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2650   000CCE                     
  2651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  2652   000CCE  C079  F028         	movff	efgtoa@h,___flsub@b
  2653   000CD2  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  2654   000CD6  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2655   000CDA  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2656   000CDE  C07D  F013         	movff	efgtoa@l,___flmul@a
  2657   000CE2  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  2658   000CE6  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  2659   000CEA  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  2660   000CEE  C088  F00F         	movff	efgtoa@u,___flmul@b
  2661   000CF2  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2662   000CF6  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2663   000CFA  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2664   000CFE  EC6D  F00B         	call	___flmul	;wreg free
  2665   000D02  C00F  F02C         	movff	?___flmul,___flsub@a
  2666   000D06  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2667   000D0A  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2668   000D0E  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2669   000D12  EC15  F018         	call	___flsub	;wreg free
  2670   000D16  C028  F079         	movff	?___flsub,efgtoa@h
  2671   000D1A  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  2672   000D1E  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  2673   000D22  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  2674   000D26                     
  2675                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  2676   000D26  C088  F028         	movff	efgtoa@u,___fldiv@b
  2677   000D2A  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2678   000D2E  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2679   000D32  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2680   000D36  0E00               	movlw	0
  2681   000D38  6E2C               	movwf	___fldiv@a^0,c
  2682   000D3A  0E00               	movlw	0
  2683   000D3C  6E2D               	movwf	(___fldiv@a+1)^0,c
  2684   000D3E  0E20               	movlw	32
  2685   000D40  6E2E               	movwf	(___fldiv@a+2)^0,c
  2686   000D42  0E41               	movlw	65
  2687   000D44  6E2F               	movwf	(___fldiv@a+3)^0,c
  2688   000D46  EC82  F00D         	call	___fldiv	;wreg free
  2689   000D4A  C028  F088         	movff	?___fldiv,efgtoa@u
  2690   000D4E  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2691   000D52  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2692   000D56  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2693   000D5A                     
  2694                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  2695   000D5A  0100               	movlb	0	; () banked
  2696   000D5C  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2697   000D5E  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2698   000D60                     l3329:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2702   000D60  516D               	movf	efgtoa@m& (0+255),w,b
  2703   000D62  5D77               	subwf	efgtoa@i& (0+255),w,b
  2704   000D64  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2705   000D66  0A80               	xorlw	128
  2706   000D68  6E5C               	movwf	??_efgtoa^0,c
  2707   000D6A  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2708   000D6C  0A80               	xorlw	128
  2709   000D6E  585C               	subwfb	??_efgtoa^0,w,c
  2710   000D70  A0D8               	btfss	status,0,c
  2711   000D72  EFBD  F006         	goto	u3501
  2712   000D76  EFBF  F006         	goto	u3500
  2713   000D7A                     u3501:
  2714   000D7A  EF35  F006         	goto	l3321
  2715   000D7E                     u3500:
  2716   000D7E                     
  2717                           ; BSR set to: 0
  2718                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  2719   000D7E  C088  F00F         	movff	efgtoa@u,___flmul@b
  2720   000D82  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2721   000D86  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2722   000D8A  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2723   000D8E  0E00               	movlw	0
  2724   000D90  6E13               	movwf	___flmul@a^0,c
  2725   000D92  0E00               	movlw	0
  2726   000D94  6E14               	movwf	(___flmul@a+1)^0,c
  2727   000D96  0EA0               	movlw	160
  2728   000D98  6E15               	movwf	(___flmul@a+2)^0,c
  2729   000D9A  0E40               	movlw	64
  2730   000D9C  6E16               	movwf	(___flmul@a+3)^0,c
  2731   000D9E  EC6D  F00B         	call	___flmul	;wreg free
  2732   000DA2  C00F  F07D         	movff	?___flmul,efgtoa@l
  2733   000DA6  C010  F07E         	movff	?___flmul+1,efgtoa@l+1
  2734   000DAA  C011  F07F         	movff	?___flmul+2,efgtoa@l+2
  2735   000DAE  C012  F080         	movff	?___flmul+3,efgtoa@l+3
  2736   000DB2                     
  2737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  2738   000DB2  C079  F028         	movff	efgtoa@h,___flge@ff1
  2739   000DB6  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2740   000DBA  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2741   000DBE  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2742   000DC2  C07D  F02C         	movff	efgtoa@l,___flge@ff2
  2743   000DC6  C07E  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2744   000DCA  C07F  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2745   000DCE  C080  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2746   000DD2  ECB4  F013         	call	___flge	;wreg free
  2747   000DD6  B0D8               	btfsc	status,0,c
  2748   000DD8  EFF0  F006         	goto	u3511
  2749   000DDC  EFF2  F006         	goto	u3510
  2750   000DE0                     u3511:
  2751   000DE0  EFFD  F006         	goto	l3337
  2752   000DE4                     u3510:
  2753   000DE4                     
  2754                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  2755   000DE4  0E00               	movlw	0
  2756   000DE6  0100               	movlb	0	; () banked
  2757   000DE8  6F7D               	movwf	efgtoa@l& (0+255),b
  2758   000DEA  0E00               	movlw	0
  2759   000DEC  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2760   000DEE  0E00               	movlw	0
  2761   000DF0  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2762   000DF2  0E00               	movlw	0
  2763   000DF4  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  2766   000DF6  EF26  F007         	goto	l3343
  2767   000DFA                     l3337:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  2770   000DFA  C079  F001         	movff	efgtoa@h,___fleq@ff1
  2771   000DFE  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2772   000E02  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2773   000E06  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2774   000E0A  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  2775   000E0E  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2776   000E12  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2777   000E16  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2778   000E1A  ECFC  F015         	call	___fleq	;wreg free
  2779   000E1E  A0D8               	btfss	status,0,c
  2780   000E20  EF14  F007         	goto	u3521
  2781   000E24  EF16  F007         	goto	u3520
  2782   000E28                     u3521:
  2783   000E28  EF26  F007         	goto	l3343
  2784   000E2C                     u3520:
  2785   000E2C  0100               	movlb	0	; () banked
  2786   000E2E  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2787   000E30  EF1C  F007         	goto	u3531
  2788   000E34  EF1E  F007         	goto	u3530
  2789   000E38                     u3531:
  2790   000E38  EF26  F007         	goto	l3343
  2791   000E3C                     u3530:
  2792   000E3C                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  2795   000E3C  0E00               	movlw	0
  2796   000E3E  6F7D               	movwf	efgtoa@l& (0+255),b
  2797   000E40  0E00               	movlw	0
  2798   000E42  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2799   000E44  0E00               	movlw	0
  2800   000E46  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2801   000E48  0E00               	movlw	0
  2802   000E4A  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2803   000E4C                     l3343:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  2806   000E4C  C084  F001         	movff	efgtoa@g,___fladd@b
  2807   000E50  C085  F002         	movff	efgtoa@g+1,___fladd@b+1
  2808   000E54  C086  F003         	movff	efgtoa@g+2,___fladd@b+2
  2809   000E58  C087  F004         	movff	efgtoa@g+3,___fladd@b+3
  2810   000E5C  C07D  F005         	movff	efgtoa@l,___fladd@a
  2811   000E60  C07E  F006         	movff	efgtoa@l+1,___fladd@a+1
  2812   000E64  C07F  F007         	movff	efgtoa@l+2,___fladd@a+2
  2813   000E68  C080  F008         	movff	efgtoa@l+3,___fladd@a+3
  2814   000E6C  EC0D  F009         	call	___fladd	;wreg free
  2815   000E70  C001  F079         	movff	?___fladd,efgtoa@h
  2816   000E74  C002  F07A         	movff	?___fladd+1,efgtoa@h+1
  2817   000E78  C003  F07B         	movff	?___fladd+2,efgtoa@h+2
  2818   000E7C  C004  F07C         	movff	?___fladd+3,efgtoa@h+3
  2819   000E80                     
  2820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  2821   000E80  C079  F028         	movff	efgtoa@h,___flge@ff1
  2822   000E84  C07A  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2823   000E88  C07B  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2824   000E8C  C07C  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2825   000E90  0E00               	movlw	0
  2826   000E92  6E13               	movwf	___flmul@a^0,c
  2827   000E94  0E00               	movlw	0
  2828   000E96  6E14               	movwf	(___flmul@a+1)^0,c
  2829   000E98  0E20               	movlw	32
  2830   000E9A  6E15               	movwf	(___flmul@a+2)^0,c
  2831   000E9C  0E41               	movlw	65
  2832   000E9E  6E16               	movwf	(___flmul@a+3)^0,c
  2833   000EA0  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2834   000EA4  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2835   000EA8  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2836   000EAC  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2837   000EB0  EC6D  F00B         	call	___flmul	;wreg free
  2838   000EB4  C00F  F02C         	movff	?___flmul,___flge@ff2
  2839   000EB8  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2840   000EBC  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2841   000EC0  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2842   000EC4  ECB4  F013         	call	___flge	;wreg free
  2843   000EC8  A0D8               	btfss	status,0,c
  2844   000ECA  EF69  F007         	goto	u3541
  2845   000ECE  EF6B  F007         	goto	u3540
  2846   000ED2                     u3541:
  2847   000ED2  EF94  F007         	goto	l3355
  2848   000ED6                     u3540:
  2849   000ED6                     
  2850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  2851   000ED6  0100               	movlb	0	; () banked
  2852   000ED8  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2853   000EDA  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2854   000EDC                     
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  2857   000EDC  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2858   000EE0  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2859   000EE4  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2860   000EE8  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2861   000EEC  0E00               	movlw	0
  2862   000EEE  6E13               	movwf	___flmul@a^0,c
  2863   000EF0  0E00               	movlw	0
  2864   000EF2  6E14               	movwf	(___flmul@a+1)^0,c
  2865   000EF4  0E20               	movlw	32
  2866   000EF6  6E15               	movwf	(___flmul@a+2)^0,c
  2867   000EF8  0E41               	movlw	65
  2868   000EFA  6E16               	movwf	(___flmul@a+3)^0,c
  2869   000EFC  EC6D  F00B         	call	___flmul	;wreg free
  2870   000F00  C00F  F073         	movff	?___flmul,efgtoa@ou
  2871   000F04  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2872   000F08  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2873   000F0C  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2874   000F10                     
  2875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  2876   000F10  0E66               	movlw	102
  2877   000F12  0100               	movlb	0	; () banked
  2878   000F14  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2879   000F16  A4D8               	btfss	status,2,c
  2880   000F18  EF90  F007         	goto	u3551
  2881   000F1C  EF92  F007         	goto	u3550
  2882   000F20                     u3551:
  2883   000F20  EF94  F007         	goto	l3355
  2884   000F24                     u3550:
  2885   000F24                     
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  2888   000F24  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2889   000F26  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2890   000F28                     l3355:
  2891                           
  2892                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  2893   000F28  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2894   000F2C  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2895   000F30  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2896   000F34  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2897   000F38                     
  2898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  2899   000F38  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2900   000F3C  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2901   000F40                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  2903   000F40  0E00               	movlw	0
  2904   000F42  0100               	movlb	0	; () banked
  2905   000F44  6F68               	movwf	efgtoa@pp& (0+255),b
  2906   000F46                     
  2907                           ; BSR set to: 0
  2908                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  2909   000F46  0E00               	movlw	0
  2910   000F48  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2911   000F4A  0E00               	movlw	0
  2912   000F4C  6F64               	movwf	efgtoa@t& (0+255),b
  2913   000F4E                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  2916   000F4E  0E00               	movlw	0
  2917   000F50  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2918   000F52  0E00               	movlw	0
  2919   000F54  6F77               	movwf	efgtoa@i& (0+255),b
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2922   000F56  EF92  F008         	goto	l3405
  2923   000F5A                     l3365:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  2927   000F5A  C079  F028         	movff	efgtoa@h,___fldiv@b
  2928   000F5E  C07A  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2929   000F62  C07B  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2930   000F66  C07C  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2931   000F6A  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2932   000F6E  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2933   000F72  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2934   000F76  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2935   000F7A  EC82  F00D         	call	___fldiv	;wreg free
  2936   000F7E  C028  F041         	movff	?___fldiv,floorf@x
  2937   000F82  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2938   000F86  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2939   000F8A  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2940   000F8E  ECB7  F010         	call	_floorf	;wreg free
  2941   000F92  C041  F07D         	movff	?_floorf,efgtoa@l
  2942   000F96  C042  F07E         	movff	?_floorf+1,efgtoa@l+1
  2943   000F9A  C043  F07F         	movff	?_floorf+2,efgtoa@l+2
  2944   000F9E  C044  F080         	movff	?_floorf+3,efgtoa@l+3
  2945                           
  2946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2947   000FA2  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2948   000FA6  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2949   000FAA  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2950   000FAE  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2951   000FB2  EC31  F013         	call	___fltol	;wreg free
  2952   000FB6  BE02               	btfsc	(?___fltol+1)^0,7,c
  2953   000FB8  EFE9  F007         	goto	u3560
  2954   000FBC  5002               	movf	(?___fltol+1)^0,w,c
  2955   000FBE  E107               	bnz	u3561
  2956   000FC0  0E0A               	movlw	10
  2957   000FC2  5C01               	subwf	?___fltol^0,w,c
  2958   000FC4  B0D8               	btfsc	status,0,c
  2959   000FC6  EFE7  F007         	goto	u3561
  2960   000FCA  EFE9  F007         	goto	u3560
  2961   000FCE                     u3561:
  2962   000FCE  EFF9  F007         	goto	l3369
  2963   000FD2                     u3560:
  2964   000FD2  C07D  F001         	movff	efgtoa@l,___fltol@f1
  2965   000FD6  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2966   000FDA  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2967   000FDE  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2968   000FE2  EC31  F013         	call	___fltol	;wreg free
  2969   000FE6  C001  F06B         	movff	?___fltol,efgtoa@d
  2970   000FEA  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2971   000FEE  EFFE  F007         	goto	l905
  2972   000FF2                     l3369:
  2973   000FF2  0E00               	movlw	0
  2974   000FF4  0100               	movlb	0	; () banked
  2975   000FF6  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2976   000FF8  0E09               	movlw	9
  2977   000FFA  6F6B               	movwf	efgtoa@d& (0+255),b
  2978   000FFC                     l905:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  2981   000FFC  0100               	movlb	0	; () banked
  2982   000FFE  5168               	movf	efgtoa@pp& (0+255),w,b
  2983   001000  A4D8               	btfss	status,2,c
  2984   001002  EF05  F008         	goto	u3571
  2985   001006  EF07  F008         	goto	u3570
  2986   00100A                     u3571:
  2987   00100A  EF2F  F008         	goto	l3389
  2988   00100E                     u3570:
  2989   00100E                     
  2990                           ; BSR set to: 0
  2991   00100E  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2992   001010  EF0E  F008         	goto	u3580
  2993   001014  EF0C  F008         	goto	u3581
  2994   001018                     u3581:
  2995   001018  EF2F  F008         	goto	l3389
  2996   00101C                     u3580:
  2997   00101C                     
  2998                           ; BSR set to: 0
  2999                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  3000   00101C  0E00               	movlw	low _dbuf
  3001   00101E  2582               	addwf	efgtoa@n& (0+255),w,b
  3002   001020  6ED9               	movwf	fsr2l,c
  3003   001022  0E01               	movlw	high _dbuf
  3004   001024  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3005   001026  6EDA               	movwf	fsr2h,c
  3006   001028  0E2E               	movlw	46
  3007   00102A  6EDF               	movwf	indf2,c
  3008   00102C                     
  3009                           ; BSR set to: 0
  3010   00102C  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3011   00102E  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3012   001030                     
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  3015   001030  0771               	decf	efgtoa@w& (0+255),f,b
  3016   001032  A0D8               	btfss	status,0,c
  3017   001034  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3018   001036                     
  3019                           ; BSR set to: 0
  3020                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  3021   001036  0E01               	movlw	1
  3022   001038  6F68               	movwf	efgtoa@pp& (0+255),b
  3023   00103A  EF2F  F008         	goto	l3389
  3024   00103E                     l3381:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  3028   00103E  0E00               	movlw	low _dbuf
  3029   001040  2582               	addwf	efgtoa@n& (0+255),w,b
  3030   001042  6ED9               	movwf	fsr2l,c
  3031   001044  0E01               	movlw	high _dbuf
  3032   001046  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3033   001048  6EDA               	movwf	fsr2h,c
  3034   00104A  0E30               	movlw	48
  3035   00104C  6EDF               	movwf	indf2,c
  3036   00104E                     
  3037                           ; BSR set to: 0
  3038   00104E  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3039   001050  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3040   001052                     
  3041                           ; BSR set to: 0
  3042                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  3043   001052  0771               	decf	efgtoa@w& (0+255),f,b
  3044   001054  A0D8               	btfss	status,0,c
  3045   001056  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3046   001058                     
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  3049   001058  0764               	decf	efgtoa@t& (0+255),f,b
  3050   00105A  A0D8               	btfss	status,0,c
  3051   00105C  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3052   00105E                     l3389:
  3053                           
  3054                           ; BSR set to: 0
  3055                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  3056   00105E  5164               	movf	efgtoa@t& (0+255),w,b
  3057   001060  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3058   001062  A4D8               	btfss	status,2,c
  3059   001064  EF36  F008         	goto	u3591
  3060   001068  EF38  F008         	goto	u3590
  3061   00106C                     u3591:
  3062   00106C  EF1F  F008         	goto	l3381
  3063   001070                     u3590:
  3064   001070                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3067   001070  0E00               	movlw	low _dbuf
  3068   001072  2582               	addwf	efgtoa@n& (0+255),w,b
  3069   001074  6ED9               	movwf	fsr2l,c
  3070   001076  0E01               	movlw	high _dbuf
  3071   001078  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3072   00107A  6EDA               	movwf	fsr2h,c
  3073   00107C  516B               	movf	efgtoa@d& (0+255),w,b
  3074   00107E  0F30               	addlw	48
  3075   001080  6EDF               	movwf	indf2,c
  3076   001082                     
  3077                           ; BSR set to: 0
  3078   001082  4B82               	infsnz	efgtoa@n& (0+255),f,b
  3079   001084  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  3080   001086                     
  3081                           ; BSR set to: 0
  3082                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  3083   001086  0771               	decf	efgtoa@w& (0+255),f,b
  3084   001088  A0D8               	btfss	status,0,c
  3085   00108A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3086   00108C                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  3089   00108C  C079  F028         	movff	efgtoa@h,___flsub@b
  3090   001090  C07A  F029         	movff	efgtoa@h+1,___flsub@b+1
  3091   001094  C07B  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3092   001098  C07C  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3093   00109C  C07D  F013         	movff	efgtoa@l,___flmul@a
  3094   0010A0  C07E  F014         	movff	efgtoa@l+1,___flmul@a+1
  3095   0010A4  C07F  F015         	movff	efgtoa@l+2,___flmul@a+2
  3096   0010A8  C080  F016         	movff	efgtoa@l+3,___flmul@a+3
  3097   0010AC  C088  F00F         	movff	efgtoa@u,___flmul@b
  3098   0010B0  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3099   0010B4  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3100   0010B8  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3101   0010BC  EC6D  F00B         	call	___flmul	;wreg free
  3102   0010C0  C00F  F02C         	movff	?___flmul,___flsub@a
  3103   0010C4  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3104   0010C8  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3105   0010CC  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3106   0010D0  EC15  F018         	call	___flsub	;wreg free
  3107   0010D4  C028  F079         	movff	?___flsub,efgtoa@h
  3108   0010D8  C029  F07A         	movff	?___flsub+1,efgtoa@h+1
  3109   0010DC  C02A  F07B         	movff	?___flsub+2,efgtoa@h+2
  3110   0010E0  C02B  F07C         	movff	?___flsub+3,efgtoa@h+3
  3111   0010E4                     
  3112                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  3113   0010E4  C088  F028         	movff	efgtoa@u,___fldiv@b
  3114   0010E8  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3115   0010EC  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3116   0010F0  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3117   0010F4  0E00               	movlw	0
  3118   0010F6  6E2C               	movwf	___fldiv@a^0,c
  3119   0010F8  0E00               	movlw	0
  3120   0010FA  6E2D               	movwf	(___fldiv@a+1)^0,c
  3121   0010FC  0E20               	movlw	32
  3122   0010FE  6E2E               	movwf	(___fldiv@a+2)^0,c
  3123   001100  0E41               	movlw	65
  3124   001102  6E2F               	movwf	(___fldiv@a+3)^0,c
  3125   001104  EC82  F00D         	call	___fldiv	;wreg free
  3126   001108  C028  F088         	movff	?___fldiv,efgtoa@u
  3127   00110C  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3128   001110  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3129   001114  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3130   001118                     
  3131                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  3132   001118  0100               	movlb	0	; () banked
  3133   00111A  0760               	decf	efgtoa@ne& (0+255),f,b
  3134   00111C  A0D8               	btfss	status,0,c
  3135   00111E  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3136   001120                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  3139   001120  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3140   001122  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3141   001124                     l3405:
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3145   001124  516D               	movf	efgtoa@m& (0+255),w,b
  3146   001126  5D77               	subwf	efgtoa@i& (0+255),w,b
  3147   001128  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3148   00112A  0A80               	xorlw	128
  3149   00112C  6E5C               	movwf	??_efgtoa^0,c
  3150   00112E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3151   001130  0A80               	xorlw	128
  3152   001132  585C               	subwfb	??_efgtoa^0,w,c
  3153   001134  B0D8               	btfsc	status,0,c
  3154   001136  EF9F  F008         	goto	u3601
  3155   00113A  EFA1  F008         	goto	u3600
  3156   00113E                     u3601:
  3157   00113E  EFAF  F008         	goto	l3409
  3158   001142                     u3600:
  3159   001142                     
  3160                           ; BSR set to: 0
  3161   001142  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3162   001144  EFAD  F008         	goto	u3611
  3163   001148  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3164   00114A  E109               	bnz	u3610
  3165   00114C  0E4B               	movlw	75
  3166   00114E  5D82               	subwf	efgtoa@n& (0+255),w,b
  3167   001150  A0D8               	btfss	status,0,c
  3168   001152  EFAD  F008         	goto	u3611
  3169   001156  EFAF  F008         	goto	u3610
  3170   00115A                     u3611:
  3171   00115A  EFAD  F007         	goto	l3365
  3172   00115E                     u3610:
  3173   00115E                     l3409:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  3177   00115E  0E00               	movlw	0
  3178   001160  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3179   001162  0E4F               	movlw	79
  3180   001164  6F77               	movwf	efgtoa@i& (0+255),b
  3181   001166                     
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  3184   001166  0E00               	movlw	low _dbuf
  3185   001168  2577               	addwf	efgtoa@i& (0+255),w,b
  3186   00116A  6ED9               	movwf	fsr2l,c
  3187   00116C  0E01               	movlw	high _dbuf
  3188   00116E  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3189   001170  6EDA               	movwf	fsr2h,c
  3190   001172  6ADF               	clrf	indf2,c
  3191   001174                     
  3192                           ; BSR set to: 0
  3193                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3194   001174  0E00               	movlw	low _dbuf
  3195   001176  6E5C               	movwf	??_efgtoa^0,c
  3196   001178  0E01               	movlw	high _dbuf
  3197   00117A  6E5D               	movwf	(??_efgtoa+1)^0,c
  3198   00117C  5182               	movf	efgtoa@n& (0+255),w,b
  3199   00117E  5E5C               	subwf	??_efgtoa^0,f,c
  3200   001180  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3201   001182  5A5D               	subwfb	(??_efgtoa+1)^0,f,c
  3202   001184  5177               	movf	efgtoa@i& (0+255),w,b
  3203   001186  245C               	addwf	??_efgtoa^0,w,c
  3204   001188  6E01               	movwf	memcpy@d1^0,c
  3205   00118A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3206   00118C  205D               	addwfc	(??_efgtoa+1)^0,w,c
  3207   00118E  6E02               	movwf	(memcpy@d1+1)^0,c
  3208   001190  0E00               	movlw	low _dbuf
  3209   001192  6E03               	movwf	memcpy@s1^0,c
  3210   001194  0E01               	movlw	high _dbuf
  3211   001196  6E04               	movwf	(memcpy@s1+1)^0,c
  3212   001198  C082  F005         	movff	efgtoa@n,memcpy@n
  3213   00119C  C083  F006         	movff	efgtoa@n+1,memcpy@n+1
  3214   0011A0  ECED  F017         	call	_memcpy	;wreg free
  3215   0011A4                     
  3216                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  3217   0011A4  0100               	movlb	0	; () banked
  3218   0011A6  5182               	movf	efgtoa@n& (0+255),w,b
  3219   0011A8  5D77               	subwf	efgtoa@i& (0+255),w,b
  3220   0011AA  6F82               	movwf	efgtoa@n& (0+255),b
  3221   0011AC  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3222   0011AE  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3223   0011B0  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3224   0011B2                     
  3225                           ; BSR set to: 0
  3226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  3227   0011B2  5181               	movf	efgtoa@sign& (0+255),w,b
  3228   0011B4  A4D8               	btfss	status,2,c
  3229   0011B6  EFDF  F008         	goto	u3621
  3230   0011BA  EFE2  F008         	goto	u3620
  3231   0011BE                     u3621:
  3232   0011BE  0E01               	movlw	1
  3233   0011C0  EFE3  F008         	goto	u3630
  3234   0011C4                     u3620:
  3235   0011C4  0E00               	movlw	0
  3236   0011C6                     u3630:
  3237   0011C6  6F77               	movwf	efgtoa@i& (0+255),b
  3238   0011C8  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3239   0011CA                     
  3240                           ; BSR set to: 0
  3241                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  3242   0011CA  5181               	movf	efgtoa@sign& (0+255),w,b
  3243   0011CC  B4D8               	btfsc	status,2,c
  3244   0011CE  EFEB  F008         	goto	u3641
  3245   0011D2  EFED  F008         	goto	u3640
  3246   0011D6                     u3641:
  3247   0011D6  EFF8  F008         	goto	l3423
  3248   0011DA                     u3640:
  3249   0011DA                     
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  3252   0011DA  0782               	decf	efgtoa@n& (0+255),f,b
  3253   0011DC  A0D8               	btfss	status,0,c
  3254   0011DE  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3255   0011E0  0E00               	movlw	low _dbuf
  3256   0011E2  2582               	addwf	efgtoa@n& (0+255),w,b
  3257   0011E4  6ED9               	movwf	fsr2l,c
  3258   0011E6  0E01               	movlw	high _dbuf
  3259   0011E8  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3260   0011EA  6EDA               	movwf	fsr2h,c
  3261   0011EC  C081  FFDF         	movff	efgtoa@sign,indf2
  3262   0011F0                     l3423:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  3266   0011F0  5177               	movf	efgtoa@i& (0+255),w,b
  3267   0011F2  5F71               	subwf	efgtoa@w& (0+255),f,b
  3268   0011F4  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3269   0011F6  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3270   0011F8                     
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3273   0011F8  C055  F011         	movff	efgtoa@fp,pad@fp
  3274   0011FC  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3275   001200  0E00               	movlw	low _dbuf
  3276   001202  2582               	addwf	efgtoa@n& (0+255),w,b
  3277   001204  6E13               	movwf	pad@buf^0,c
  3278   001206  0E01               	movlw	high _dbuf
  3279   001208  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3280   00120A  6E14               	movwf	(pad@buf+1)^0,c
  3281   00120C  C071  F015         	movff	efgtoa@w,pad@p
  3282   001210  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3283   001214  EC92  F016         	call	_pad	;wreg free
  3284   001218                     l872:
  3285   001218  0012               	return		;funcret
  3286   00121A                     __end_of_efgtoa:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _strcpy *****************
  3290 ;; Defined at:
  3291 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3294 ;;		 -> dbuf(80), 
  3295 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3296 ;;		 -> STR_6(4), STR_3(4), 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  d               2    6[COMRAM] PTR unsigned char 
  3299 ;;		 -> dbuf(80), 
  3300 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3301 ;;		 -> STR_6(4), STR_3(4), 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  2    0[COMRAM] PTR unsigned char 
  3304 ;; Registers used:
  3305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3311 ;;      Params:         4       0       0       0       0       0       0       0       0
  3312 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3314 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3315 ;;Total ram usage:        8 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_efgtoa
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text8
  3325   0030B4                     __ptext8:
  3326                           	callstack 0
  3327   0030B4                     _strcpy:
  3328                           	callstack 26
  3329   0030B4  C003  F005         	movff	strcpy@src,strcpy@s
  3330   0030B8  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3331   0030BC  C001  F007         	movff	strcpy@dest,strcpy@d
  3332   0030C0  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3333   0030C4                     l3145:
  3334   0030C4  C005  FFF6         	movff	strcpy@s,tblptrl
  3335   0030C8  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3336   0030CC  4A05               	infsnz	strcpy@s^0,f,c
  3337   0030CE  2A06               	incf	(strcpy@s+1)^0,f,c
  3338   0030D0                     	if	0	;tblptru may be non-zero
  3339   0030D0                     	endif
  3340   0030D0                     	if	0	;tblptru may be non-zero
  3341   0030D0                     	endif
  3342   0030D0  C007  FFD9         	movff	strcpy@d,fsr2l
  3343   0030D4  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3344   0030D8  4A07               	infsnz	strcpy@d^0,f,c
  3345   0030DA  2A08               	incf	(strcpy@d+1)^0,f,c
  3346   0030DC  0008               	tblrd		*
  3347   0030DE  CFF5 FFDF          	movff	tablat,indf2
  3348   0030E2  50DF               	movf	indf2,w,c
  3349   0030E4  A4D8               	btfss	status,2,c
  3350   0030E6  EF77  F018         	goto	u3161
  3351   0030EA  EF79  F018         	goto	u3160
  3352   0030EE                     u3161:
  3353   0030EE  EF62  F018         	goto	l3145
  3354   0030F2                     u3160:
  3355   0030F2  0012               	return		;funcret
  3356   0030F4                     __end_of_strcpy:
  3357                           	callstack 0
  3358                           
  3359 ;; *************** function _pad *****************
  3360 ;; Defined at:
  3361 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3364 ;;		 -> sprintf@f(12), 
  3365 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3366 ;;		 -> dbuf(80), 
  3367 ;;  p               2   20[COMRAM] int 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  w               2   25[COMRAM] int 
  3370 ;;  i               2   23[COMRAM] int 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3380 ;;      Params:         6       0       0       0       0       0       0       0       0
  3381 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3382 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3383 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3384 ;;Total ram usage:       11 bytes
  3385 ;; Hardware stack levels used: 1
  3386 ;; Hardware stack levels required when called: 3
  3387 ;; This function calls:
  3388 ;;		_fputc
  3389 ;;		_fputs
  3390 ;; This function is called by:
  3391 ;;		_efgtoa
  3392 ;;		_utoa
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text9
  3397   002D24                     __ptext9:
  3398                           	callstack 0
  3399   002D24                     _pad:
  3400                           	callstack 23
  3401   002D24                     
  3402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3403   002D24  BE16               	btfsc	(pad@p+1)^0,7,c
  3404   002D26  EF97  F016         	goto	u3071
  3405   002D2A  EF99  F016         	goto	u3070
  3406   002D2E                     u3071:
  3407   002D2E  EF9F  F016         	goto	l3111
  3408   002D32                     u3070:
  3409   002D32  C015  F01A         	movff	pad@p,pad@w
  3410   002D36  C016  F01B         	movff	pad@p+1,pad@w+1
  3411   002D3A  EFA3  F016         	goto	l857
  3412   002D3E                     l3111:
  3413   002D3E  0E00               	movlw	0
  3414   002D40  6E1B               	movwf	(pad@w+1)^0,c
  3415   002D42  0E00               	movlw	0
  3416   002D44  6E1A               	movwf	pad@w^0,c
  3417   002D46                     l857:
  3418                           
  3419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3420   002D46  0E00               	movlw	0
  3421   002D48  6E19               	movwf	(pad@i+1)^0,c
  3422   002D4A  0E00               	movlw	0
  3423   002D4C  6E18               	movwf	pad@i^0,c
  3424                           
  3425                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3426   002D4E  EFB5  F016         	goto	l3117
  3427   002D52                     l3113:
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3430   002D52  0E00               	movlw	0
  3431   002D54  6E02               	movwf	(fputc@c+1)^0,c
  3432   002D56  0E20               	movlw	32
  3433   002D58  6E01               	movwf	fputc@c^0,c
  3434   002D5A  C011  F003         	movff	pad@fp,fputc@fp
  3435   002D5E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3436   002D62  EC97  F015         	call	_fputc	;wreg free
  3437   002D66                     
  3438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3439   002D66  4A18               	infsnz	pad@i^0,f,c
  3440   002D68  2A19               	incf	(pad@i+1)^0,f,c
  3441   002D6A                     l3117:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3444   002D6A  501A               	movf	pad@w^0,w,c
  3445   002D6C  5C18               	subwf	pad@i^0,w,c
  3446   002D6E  5019               	movf	(pad@i+1)^0,w,c
  3447   002D70  0A80               	xorlw	128
  3448   002D72  6E17               	movwf	??_pad^0,c
  3449   002D74  501B               	movf	(pad@w+1)^0,w,c
  3450   002D76  0A80               	xorlw	128
  3451   002D78  5817               	subwfb	??_pad^0,w,c
  3452   002D7A  A0D8               	btfss	status,0,c
  3453   002D7C  EFC2  F016         	goto	u3081
  3454   002D80  EFC4  F016         	goto	u3080
  3455   002D84                     u3081:
  3456   002D84  EFA9  F016         	goto	l3113
  3457   002D88                     u3080:
  3458   002D88                     
  3459                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3460   002D88  C013  F00A         	movff	pad@buf,fputs@s
  3461   002D8C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3462   002D90  C011  F00C         	movff	pad@fp,fputs@fp
  3463   002D94  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3464   002D98  EC38  F018         	call	_fputs	;wreg free
  3465   002D9C  0012               	return		;funcret
  3466   002D9E                     __end_of_pad:
  3467                           	callstack 0
  3468                           
  3469 ;; *************** function _fputs *****************
  3470 ;; Defined at:
  3471 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3474 ;;		 -> dbuf(80), 
  3475 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3476 ;;		 -> sprintf@f(12), 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  i               2   14[COMRAM] int 
  3479 ;;  c               1   13[COMRAM] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  2    9[COMRAM] int 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3489 ;;      Params:         4       0       0       0       0       0       0       0       0
  3490 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3492 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3493 ;;Total ram usage:        7 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 2
  3496 ;; This function calls:
  3497 ;;		_fputc
  3498 ;; This function is called by:
  3499 ;;		_pad
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text10
  3504   003070                     __ptext10:
  3505                           	callstack 0
  3506   003070                     _fputs:
  3507                           	callstack 23
  3508   003070  0E00               	movlw	0
  3509   003072  6E10               	movwf	(fputs@i+1)^0,c
  3510   003074  0E00               	movlw	0
  3511   003076  6E0F               	movwf	fputs@i^0,c
  3512   003078  EF49  F018         	goto	l2703
  3513   00307C                     l2699:
  3514   00307C  C00E  F001         	movff	fputs@c,fputc@c
  3515   003080  6A02               	clrf	(fputc@c+1)^0,c
  3516   003082  C00C  F003         	movff	fputs@fp,fputc@fp
  3517   003086  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3518   00308A  EC97  F015         	call	_fputc	;wreg free
  3519   00308E  4A0F               	infsnz	fputs@i^0,f,c
  3520   003090  2A10               	incf	(fputs@i+1)^0,f,c
  3521   003092                     l2703:
  3522   003092  500F               	movf	fputs@i^0,w,c
  3523   003094  240A               	addwf	fputs@s^0,w,c
  3524   003096  6ED9               	movwf	fsr2l,c
  3525   003098  5010               	movf	(fputs@i+1)^0,w,c
  3526   00309A  200B               	addwfc	(fputs@s+1)^0,w,c
  3527   00309C  6EDA               	movwf	fsr2h,c
  3528   00309E  50DF               	movf	indf2,w,c
  3529   0030A0  6E0E               	movwf	fputs@c^0,c
  3530   0030A2  500E               	movf	fputs@c^0,w,c
  3531   0030A4  A4D8               	btfss	status,2,c
  3532   0030A6  EF57  F018         	goto	u2421
  3533   0030AA  EF59  F018         	goto	u2420
  3534   0030AE                     u2421:
  3535   0030AE  EF3E  F018         	goto	l2699
  3536   0030B2                     u2420:
  3537   0030B2  0012               	return		;funcret
  3538   0030B4                     __end_of_fputs:
  3539                           	callstack 0
  3540                           
  3541 ;; *************** function _fputc *****************
  3542 ;; Defined at:
  3543 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  c               2    0[COMRAM] int 
  3546 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3547 ;;		 -> sprintf@f(12), 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  2    0[COMRAM] int 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3559 ;;      Params:         4       0       0       0       0       0       0       0       0
  3560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3561 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3562 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3563 ;;Total ram usage:        9 bytes
  3564 ;; Hardware stack levels used: 1
  3565 ;; Hardware stack levels required when called: 1
  3566 ;; This function calls:
  3567 ;;		_putch
  3568 ;; This function is called by:
  3569 ;;		_pad
  3570 ;;		_vfpfcnvrt
  3571 ;;		_fputs
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text11
  3576   002B2E                     __ptext11:
  3577                           	callstack 0
  3578   002B2E                     _fputc:
  3579                           	callstack 23
  3580   002B2E  5003               	movf	fputc@fp^0,w,c
  3581   002B30  1004               	iorwf	(fputc@fp+1)^0,w,c
  3582   002B32  B4D8               	btfsc	status,2,c
  3583   002B34  EF9E  F015         	goto	u1991
  3584   002B38  EFA0  F015         	goto	u1990
  3585   002B3C                     u1991:
  3586   002B3C  EFA9  F015         	goto	l2485
  3587   002B40                     u1990:
  3588   002B40  5003               	movf	fputc@fp^0,w,c
  3589   002B42  1004               	iorwf	(fputc@fp+1)^0,w,c
  3590   002B44  A4D8               	btfss	status,2,c
  3591   002B46  EFA7  F015         	goto	u2001
  3592   002B4A  EFA9  F015         	goto	u2000
  3593   002B4E                     u2001:
  3594   002B4E  EFAE  F015         	goto	l2487
  3595   002B52                     u2000:
  3596   002B52                     l2485:
  3597   002B52  5001               	movf	fputc@c^0,w,c
  3598   002B54  EC03  F019         	call	_putch
  3599   002B58  EFFB  F015         	goto	l1006
  3600   002B5C                     l2487:
  3601   002B5C  EE20 F00A          	lfsr	2,10
  3602   002B60  5003               	movf	fputc@fp^0,w,c
  3603   002B62  26D9               	addwf	fsr2l,f,c
  3604   002B64  5004               	movf	(fputc@fp+1)^0,w,c
  3605   002B66  22DA               	addwfc	fsr2h,f,c
  3606   002B68  50DE               	movf	postinc2,w,c
  3607   002B6A  10DE               	iorwf	postinc2,w,c
  3608   002B6C  B4D8               	btfsc	status,2,c
  3609   002B6E  EFBB  F015         	goto	u2011
  3610   002B72  EFBD  F015         	goto	u2010
  3611   002B76                     u2011:
  3612   002B76  EFD8  F015         	goto	l2491
  3613   002B7A                     u2010:
  3614   002B7A  EE20 F00A          	lfsr	2,10
  3615   002B7E  5003               	movf	fputc@fp^0,w,c
  3616   002B80  26D9               	addwf	fsr2l,f,c
  3617   002B82  5004               	movf	(fputc@fp+1)^0,w,c
  3618   002B84  22DA               	addwfc	fsr2h,f,c
  3619   002B86  EE10 F003          	lfsr	1,3
  3620   002B8A  5003               	movf	fputc@fp^0,w,c
  3621   002B8C  26E1               	addwf	fsr1l,f,c
  3622   002B8E  5004               	movf	(fputc@fp+1)^0,w,c
  3623   002B90  22E2               	addwfc	fsr1h,f,c
  3624   002B92  50DE               	movf	postinc2,w,c
  3625   002B94  5CE6               	subwf	postinc1,w,c
  3626   002B96  50E6               	movf	postinc1,w,c
  3627   002B98  0A80               	xorlw	128
  3628   002B9A  6E09               	movwf	(??_fputc+4)^0,c
  3629   002B9C  50DE               	movf	postinc2,w,c
  3630   002B9E  0A80               	xorlw	128
  3631   002BA0  5809               	subwfb	(??_fputc+4)^0,w,c
  3632   002BA2  B0D8               	btfsc	status,0,c
  3633   002BA4  EFD6  F015         	goto	u2021
  3634   002BA8  EFD8  F015         	goto	u2020
  3635   002BAC                     u2021:
  3636   002BAC  EFFB  F015         	goto	l1006
  3637   002BB0                     u2020:
  3638   002BB0                     l2491:
  3639   002BB0  EE20 F003          	lfsr	2,3
  3640   002BB4  5003               	movf	fputc@fp^0,w,c
  3641   002BB6  26D9               	addwf	fsr2l,f,c
  3642   002BB8  5004               	movf	(fputc@fp+1)^0,w,c
  3643   002BBA  22DA               	addwfc	fsr2h,f,c
  3644   002BBC  CFDE F005          	movff	postinc2,??_fputc
  3645   002BC0  CFDD F006          	movff	postdec2,??_fputc+1
  3646   002BC4  C003  FFD9         	movff	fputc@fp,fsr2l
  3647   002BC8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3648   002BCC  CFDE F007          	movff	postinc2,??_fputc+2
  3649   002BD0  CFDD F008          	movff	postdec2,??_fputc+3
  3650   002BD4  5005               	movf	??_fputc^0,w,c
  3651   002BD6  2407               	addwf	(??_fputc+2)^0,w,c
  3652   002BD8  6ED9               	movwf	fsr2l,c
  3653   002BDA  5006               	movf	(??_fputc+1)^0,w,c
  3654   002BDC  2008               	addwfc	(??_fputc+3)^0,w,c
  3655   002BDE  6EDA               	movwf	fsr2h,c
  3656   002BE0  C001  FFDF         	movff	fputc@c,indf2
  3657   002BE4  EE20 F003          	lfsr	2,3
  3658   002BE8  5003               	movf	fputc@fp^0,w,c
  3659   002BEA  26D9               	addwf	fsr2l,f,c
  3660   002BEC  5004               	movf	(fputc@fp+1)^0,w,c
  3661   002BEE  22DA               	addwfc	fsr2h,f,c
  3662   002BF0  2ADE               	incf	postinc2,f,c
  3663   002BF2  0E00               	movlw	0
  3664   002BF4  22DD               	addwfc	postdec2,f,c
  3665   002BF6                     l1006:
  3666   002BF6  0012               	return		;funcret
  3667   002BF8                     __end_of_fputc:
  3668                           	callstack 0
  3669                           
  3670 ;; *************** function _putch *****************
  3671 ;; Defined at:
  3672 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  c               1    wreg     unsigned char 
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;  c               1    0[COMRAM] unsigned char 
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3686 ;;      Params:         0       0       0       0       0       0       0       0       0
  3687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3689 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used: 1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_fputc
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text12
  3700   003206                     __ptext12:
  3701                           	callstack 0
  3702   003206                     _putch:
  3703                           	callstack 23
  3704   003206  0012               	return		;funcret
  3705   003208                     __end_of_putch:
  3706                           	callstack 0
  3707                           
  3708 ;; *************** function _memcpy *****************
  3709 ;; Defined at:
  3710 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  d1              2    0[COMRAM] PTR void 
  3713 ;;		 -> dbuf(80), 
  3714 ;;  s1              2    2[COMRAM] PTR const void 
  3715 ;;		 -> dbuf(80), 
  3716 ;;  n               2    4[COMRAM] unsigned int 
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3719 ;;		 -> dbuf(80), 
  3720 ;;  d               2    6[COMRAM] PTR unsigned char 
  3721 ;;		 -> dbuf(80), 
  3722 ;;  tmp             1   10[COMRAM] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  2    0[COMRAM] PTR void 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3732 ;;      Params:         6       0       0       0       0       0       0       0       0
  3733 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3735 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3736 ;;Total ram usage:       11 bytes
  3737 ;; Hardware stack levels used: 1
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_efgtoa
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text13
  3746   002FDA                     __ptext13:
  3747                           	callstack 0
  3748   002FDA                     _memcpy:
  3749                           	callstack 26
  3750   002FDA  C003  F009         	movff	memcpy@s1,memcpy@s
  3751   002FDE  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3752   002FE2  C001  F007         	movff	memcpy@d1,memcpy@d
  3753   002FE6  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3754   002FEA  EF07  F018         	goto	l3189
  3755   002FEE                     l3181:
  3756   002FEE  C009  FFD9         	movff	memcpy@s,fsr2l
  3757   002FF2  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3758   002FF6  50DF               	movf	indf2,w,c
  3759   002FF8  6E0B               	movwf	memcpy@tmp^0,c
  3760   002FFA  4A09               	infsnz	memcpy@s^0,f,c
  3761   002FFC  2A0A               	incf	(memcpy@s+1)^0,f,c
  3762   002FFE  C007  FFD9         	movff	memcpy@d,fsr2l
  3763   003002  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3764   003006  C00B  FFDF         	movff	memcpy@tmp,indf2
  3765   00300A  4A07               	infsnz	memcpy@d^0,f,c
  3766   00300C  2A08               	incf	(memcpy@d+1)^0,f,c
  3767   00300E                     l3189:
  3768   00300E  0605               	decf	memcpy@n^0,f,c
  3769   003010  A0D8               	btfss	status,0,c
  3770   003012  0606               	decf	(memcpy@n+1)^0,f,c
  3771   003014  2805               	incf	memcpy@n^0,w,c
  3772   003016  E106               	bnz	u3281
  3773   003018  2806               	incf	(memcpy@n+1)^0,w,c
  3774   00301A  A4D8               	btfss	status,2,c
  3775   00301C  EF12  F018         	goto	u3281
  3776   003020  EF14  F018         	goto	u3280
  3777   003024                     u3281:
  3778   003024  EFF7  F017         	goto	l3181
  3779   003028                     u3280:
  3780   003028  0012               	return		;funcret
  3781   00302A                     __end_of_memcpy:
  3782                           	callstack 0
  3783                           
  3784 ;; *************** function _labs *****************
  3785 ;; Defined at:
  3786 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  a               4    0[COMRAM] long 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;		None
  3791 ;; Return value:  Size  Location     Type
  3792 ;;                  4    0[COMRAM] long 
  3793 ;; Registers used:
  3794 ;;		wreg, status,2, status,0
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3800 ;;      Params:         4       0       0       0       0       0       0       0       0
  3801 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3802 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3803 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3804 ;;Total ram usage:        8 bytes
  3805 ;; Hardware stack levels used: 1
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_efgtoa
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           	psect	text14
  3814   002E12                     __ptext14:
  3815                           	callstack 0
  3816   002E12                     _labs:
  3817                           	callstack 26
  3818   002E12  BE04               	btfsc	(labs@a+3)^0,7,c
  3819   002E14  EF18  F017         	goto	u3170
  3820   002E18  5004               	movf	(labs@a+3)^0,w,c
  3821   002E1A  1003               	iorwf	(labs@a+2)^0,w,c
  3822   002E1C  1002               	iorwf	(labs@a+1)^0,w,c
  3823   002E1E  E106               	bnz	u3171
  3824   002E20  0401               	decf	labs@a^0,w,c
  3825   002E22  B0D8               	btfsc	status,0,c
  3826   002E24  EF16  F017         	goto	u3171
  3827   002E28  EF18  F017         	goto	u3170
  3828   002E2C                     u3171:
  3829   002E2C  EF33  F017         	goto	l985
  3830   002E30                     u3170:
  3831   002E30  C001  F005         	movff	labs@a,??_labs
  3832   002E34  C002  F006         	movff	labs@a+1,??_labs+1
  3833   002E38  C003  F007         	movff	labs@a+2,??_labs+2
  3834   002E3C  C004  F008         	movff	labs@a+3,??_labs+3
  3835   002E40  1E05               	comf	??_labs^0,f,c
  3836   002E42  1E06               	comf	(??_labs+1)^0,f,c
  3837   002E44  1E07               	comf	(??_labs+2)^0,f,c
  3838   002E46  1E08               	comf	(??_labs+3)^0,f,c
  3839   002E48  2A05               	incf	??_labs^0,f,c
  3840   002E4A  0E00               	movlw	0
  3841   002E4C  2206               	addwfc	(??_labs+1)^0,f,c
  3842   002E4E  2207               	addwfc	(??_labs+2)^0,f,c
  3843   002E50  2208               	addwfc	(??_labs+3)^0,f,c
  3844   002E52  C005  F001         	movff	??_labs,?_labs
  3845   002E56  C006  F002         	movff	??_labs+1,?_labs+1
  3846   002E5A  C007  F003         	movff	??_labs+2,?_labs+2
  3847   002E5E  C008  F004         	movff	??_labs+3,?_labs+3
  3848   002E62  EF3B  F017         	goto	l988
  3849   002E66                     l985:
  3850   002E66  C001  F001         	movff	labs@a,?_labs
  3851   002E6A  C002  F002         	movff	labs@a+1,?_labs+1
  3852   002E6E  C003  F003         	movff	labs@a+2,?_labs+2
  3853   002E72  C004  F004         	movff	labs@a+3,?_labs+3
  3854   002E76                     l988:
  3855   002E76  0012               	return		;funcret
  3856   002E78                     __end_of_labs:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _floorf *****************
  3860 ;; Defined at:
  3861 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  x               4   64[COMRAM] float 
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;  u               4   80[COMRAM] struct .
  3866 ;;  m               4   74[COMRAM] unsigned long 
  3867 ;;  e               2   78[COMRAM] int 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  4   64[COMRAM] float 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3877 ;;      Params:         4       0       0       0       0       0       0       0       0
  3878 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3879 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3880 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3881 ;;Total ram usage:       20 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_efgtoa
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text15
  3891   00216E                     __ptext15:
  3892                           	callstack 0
  3893   00216E                     _floorf:
  3894                           	callstack 26
  3895   00216E  C0B9  F051         	movff	floorf@F526,floorf@u
  3896   002172  C0BA  F052         	movff	floorf@F526+1,floorf@u+1
  3897   002176  C0BB  F053         	movff	floorf@F526+2,floorf@u+2
  3898   00217A  C0BC  F054         	movff	floorf@F526+3,floorf@u+3
  3899   00217E  C041  F051         	movff	floorf@x,floorf@u
  3900   002182  C042  F052         	movff	floorf@x+1,floorf@u+1
  3901   002186  C043  F053         	movff	floorf@x+2,floorf@u+2
  3902   00218A  C044  F054         	movff	floorf@x+3,floorf@u+3
  3903   00218E  0E81               	movlw	129
  3904   002190  6E45               	movwf	??_floorf^0,c
  3905   002192  0EFF               	movlw	255
  3906   002194  6E46               	movwf	(??_floorf+1)^0,c
  3907   002196  C051  F047         	movff	floorf@u,??_floorf+2
  3908   00219A  C052  F048         	movff	floorf@u+1,??_floorf+3
  3909   00219E  C053  F049         	movff	floorf@u+2,??_floorf+4
  3910   0021A2  C054  F04A         	movff	floorf@u+3,??_floorf+5
  3911   0021A6  0E18               	movlw	24
  3912   0021A8  EFDB  F010         	goto	u3180
  3913   0021AC                     u3185:
  3914   0021AC  90D8               	bcf	status,0,c
  3915   0021AE  324A               	rrcf	(??_floorf+5)^0,f,c
  3916   0021B0  3249               	rrcf	(??_floorf+4)^0,f,c
  3917   0021B2  3248               	rrcf	(??_floorf+3)^0,f,c
  3918   0021B4  3247               	rrcf	(??_floorf+2)^0,f,c
  3919   0021B6                     u3180:
  3920   0021B6  2EE8               	decfsz	wreg,f,c
  3921   0021B8  EFD6  F010         	goto	u3185
  3922   0021BC  5047               	movf	(??_floorf+2)^0,w,c
  3923   0021BE  2445               	addwf	??_floorf^0,w,c
  3924   0021C0  6E4F               	movwf	floorf@e^0,c
  3925   0021C2  0E00               	movlw	0
  3926   0021C4  2046               	addwfc	(??_floorf+1)^0,w,c
  3927   0021C6  6E50               	movwf	(floorf@e+1)^0,c
  3928   0021C8  BE50               	btfsc	(floorf@e+1)^0,7,c
  3929   0021CA  EFF0  F010         	goto	u3191
  3930   0021CE  5050               	movf	(floorf@e+1)^0,w,c
  3931   0021D0  E109               	bnz	u3190
  3932   0021D2  0E17               	movlw	23
  3933   0021D4  5C4F               	subwf	floorf@e^0,w,c
  3934   0021D6  A0D8               	btfss	status,0,c
  3935   0021D8  EFF0  F010         	goto	u3191
  3936   0021DC  EFF2  F010         	goto	u3190
  3937   0021E0                     u3191:
  3938   0021E0  EFFC  F010         	goto	l3157
  3939   0021E4                     u3190:
  3940   0021E4                     l3155:
  3941   0021E4  C041  F041         	movff	floorf@x,?_floorf
  3942   0021E8  C042  F042         	movff	floorf@x+1,?_floorf+1
  3943   0021EC  C043  F043         	movff	floorf@x+2,?_floorf+2
  3944   0021F0  C044  F044         	movff	floorf@x+3,?_floorf+3
  3945   0021F4  EFBF  F011         	goto	l974
  3946   0021F8                     l3157:
  3947   0021F8  BE50               	btfsc	(floorf@e+1)^0,7,c
  3948   0021FA  EF01  F011         	goto	u3201
  3949   0021FE  EF03  F011         	goto	u3200
  3950   002202                     u3201:
  3951   002202  EF73  F011         	goto	l3167
  3952   002206                     u3200:
  3953   002206  C04F  F045         	movff	floorf@e,??_floorf
  3954   00220A  0EFF               	movlw	255
  3955   00220C  6E46               	movwf	(??_floorf+1)^0,c
  3956   00220E  0EFF               	movlw	255
  3957   002210  6E47               	movwf	(??_floorf+2)^0,c
  3958   002212  0E7F               	movlw	127
  3959   002214  6E48               	movwf	(??_floorf+3)^0,c
  3960   002216  0E00               	movlw	0
  3961   002218  6E49               	movwf	(??_floorf+4)^0,c
  3962   00221A                     u3215:
  3963   00221A  6645               	tstfsz	??_floorf^0,c
  3964   00221C  EF12  F011         	goto	u3216
  3965   002220  EF1A  F011         	goto	u3217
  3966   002224                     u3216:
  3967   002224  3449               	rlcf	(??_floorf+4)^0,w,c
  3968   002226  3249               	rrcf	(??_floorf+4)^0,f,c
  3969   002228  3248               	rrcf	(??_floorf+3)^0,f,c
  3970   00222A  3247               	rrcf	(??_floorf+2)^0,f,c
  3971   00222C  3246               	rrcf	(??_floorf+1)^0,f,c
  3972   00222E  2E45               	decfsz	??_floorf^0,f,c
  3973   002230  EF0D  F011         	goto	u3215
  3974   002234                     u3217:
  3975   002234  C046  F04B         	movff	??_floorf+1,floorf@m
  3976   002238  C047  F04C         	movff	??_floorf+2,floorf@m+1
  3977   00223C  C048  F04D         	movff	??_floorf+3,floorf@m+2
  3978   002240  C049  F04E         	movff	??_floorf+4,floorf@m+3
  3979   002244  504B               	movf	floorf@m^0,w,c
  3980   002246  1451               	andwf	floorf@u^0,w,c
  3981   002248  6E45               	movwf	??_floorf^0,c
  3982   00224A  504C               	movf	(floorf@m+1)^0,w,c
  3983   00224C  1452               	andwf	(floorf@u+1)^0,w,c
  3984   00224E  6E46               	movwf	(??_floorf+1)^0,c
  3985   002250  504D               	movf	(floorf@m+2)^0,w,c
  3986   002252  1453               	andwf	(floorf@u+2)^0,w,c
  3987   002254  6E47               	movwf	(??_floorf+2)^0,c
  3988   002256  504E               	movf	(floorf@m+3)^0,w,c
  3989   002258  1454               	andwf	(floorf@u+3)^0,w,c
  3990   00225A  6E48               	movwf	(??_floorf+3)^0,c
  3991   00225C  5045               	movf	??_floorf^0,w,c
  3992   00225E  1046               	iorwf	(??_floorf+1)^0,w,c
  3993   002260  1047               	iorwf	(??_floorf+2)^0,w,c
  3994   002262  1048               	iorwf	(??_floorf+3)^0,w,c
  3995   002264  A4D8               	btfss	status,2,c
  3996   002266  EF37  F011         	goto	u3221
  3997   00226A  EF39  F011         	goto	u3220
  3998   00226E                     u3221:
  3999   00226E  EF3B  F011         	goto	l3163
  4000   002272                     u3220:
  4001   002272  EFF2  F010         	goto	l3155
  4002   002276                     l3163:
  4003   002276  C051  F045         	movff	floorf@u,??_floorf
  4004   00227A  C052  F046         	movff	floorf@u+1,??_floorf+1
  4005   00227E  C053  F047         	movff	floorf@u+2,??_floorf+2
  4006   002282  C054  F048         	movff	floorf@u+3,??_floorf+3
  4007   002286  0E20               	movlw	32
  4008   002288  EF4B  F011         	goto	u3230
  4009   00228C                     u3235:
  4010   00228C  90D8               	bcf	status,0,c
  4011   00228E  3248               	rrcf	(??_floorf+3)^0,f,c
  4012   002290  3247               	rrcf	(??_floorf+2)^0,f,c
  4013   002292  3246               	rrcf	(??_floorf+1)^0,f,c
  4014   002294  3245               	rrcf	??_floorf^0,f,c
  4015   002296                     u3230:
  4016   002296  2EE8               	decfsz	wreg,f,c
  4017   002298  EF46  F011         	goto	u3235
  4018   00229C  5045               	movf	??_floorf^0,w,c
  4019   00229E  1046               	iorwf	(??_floorf+1)^0,w,c
  4020   0022A0  1047               	iorwf	(??_floorf+2)^0,w,c
  4021   0022A2  1048               	iorwf	(??_floorf+3)^0,w,c
  4022   0022A4  B4D8               	btfsc	status,2,c
  4023   0022A6  EF57  F011         	goto	u3241
  4024   0022AA  EF59  F011         	goto	u3240
  4025   0022AE                     u3241:
  4026   0022AE  EF61  F011         	goto	l977
  4027   0022B2                     u3240:
  4028   0022B2  504B               	movf	floorf@m^0,w,c
  4029   0022B4  2651               	addwf	floorf@u^0,f,c
  4030   0022B6  504C               	movf	(floorf@m+1)^0,w,c
  4031   0022B8  2252               	addwfc	(floorf@u+1)^0,f,c
  4032   0022BA  504D               	movf	(floorf@m+2)^0,w,c
  4033   0022BC  2253               	addwfc	(floorf@u+2)^0,f,c
  4034   0022BE  504E               	movf	(floorf@m+3)^0,w,c
  4035   0022C0  2254               	addwfc	(floorf@u+3)^0,f,c
  4036   0022C2                     l977:
  4037   0022C2  1C4B               	comf	floorf@m^0,w,c
  4038   0022C4  6E45               	movwf	??_floorf^0,c
  4039   0022C6  1C4C               	comf	(floorf@m+1)^0,w,c
  4040   0022C8  6E46               	movwf	(??_floorf+1)^0,c
  4041   0022CA  1C4D               	comf	(floorf@m+2)^0,w,c
  4042   0022CC  6E47               	movwf	(??_floorf+2)^0,c
  4043   0022CE  1C4E               	comf	(floorf@m+3)^0,w,c
  4044   0022D0  6E48               	movwf	(??_floorf+3)^0,c
  4045   0022D2  5045               	movf	??_floorf^0,w,c
  4046   0022D4  1651               	andwf	floorf@u^0,f,c
  4047   0022D6  5046               	movf	(??_floorf+1)^0,w,c
  4048   0022D8  1652               	andwf	(floorf@u+1)^0,f,c
  4049   0022DA  5047               	movf	(??_floorf+2)^0,w,c
  4050   0022DC  1653               	andwf	(floorf@u+2)^0,f,c
  4051   0022DE  5048               	movf	(??_floorf+3)^0,w,c
  4052   0022E0  1654               	andwf	(floorf@u+3)^0,f,c
  4053   0022E2  EFB7  F011         	goto	l3175
  4054   0022E6                     l3167:
  4055   0022E6  C051  F045         	movff	floorf@u,??_floorf
  4056   0022EA  C052  F046         	movff	floorf@u+1,??_floorf+1
  4057   0022EE  C053  F047         	movff	floorf@u+2,??_floorf+2
  4058   0022F2  C054  F048         	movff	floorf@u+3,??_floorf+3
  4059   0022F6  0E20               	movlw	32
  4060   0022F8  EF83  F011         	goto	u3250
  4061   0022FC                     u3255:
  4062   0022FC  90D8               	bcf	status,0,c
  4063   0022FE  3248               	rrcf	(??_floorf+3)^0,f,c
  4064   002300  3247               	rrcf	(??_floorf+2)^0,f,c
  4065   002302  3246               	rrcf	(??_floorf+1)^0,f,c
  4066   002304  3245               	rrcf	??_floorf^0,f,c
  4067   002306                     u3250:
  4068   002306  2EE8               	decfsz	wreg,f,c
  4069   002308  EF7E  F011         	goto	u3255
  4070   00230C  5045               	movf	??_floorf^0,w,c
  4071   00230E  1046               	iorwf	(??_floorf+1)^0,w,c
  4072   002310  1047               	iorwf	(??_floorf+2)^0,w,c
  4073   002312  1048               	iorwf	(??_floorf+3)^0,w,c
  4074   002314  A4D8               	btfss	status,2,c
  4075   002316  EF8F  F011         	goto	u3261
  4076   00231A  EF91  F011         	goto	u3260
  4077   00231E                     u3261:
  4078   00231E  EF9B  F011         	goto	l3171
  4079   002322                     u3260:
  4080   002322  0E00               	movlw	0
  4081   002324  6E51               	movwf	floorf@u^0,c
  4082   002326  0E00               	movlw	0
  4083   002328  6E52               	movwf	(floorf@u+1)^0,c
  4084   00232A  0E00               	movlw	0
  4085   00232C  6E53               	movwf	(floorf@u+2)^0,c
  4086   00232E  0E00               	movlw	0
  4087   002330  6E54               	movwf	(floorf@u+3)^0,c
  4088   002332  EFB7  F011         	goto	l3175
  4089   002336                     l3171:
  4090   002336  90D8               	bcf	status,0,c
  4091   002338  3451               	rlcf	floorf@u^0,w,c
  4092   00233A  6E45               	movwf	??_floorf^0,c
  4093   00233C  3452               	rlcf	(floorf@u+1)^0,w,c
  4094   00233E  6E46               	movwf	(??_floorf+1)^0,c
  4095   002340  3453               	rlcf	(floorf@u+2)^0,w,c
  4096   002342  6E47               	movwf	(??_floorf+2)^0,c
  4097   002344  3454               	rlcf	(floorf@u+3)^0,w,c
  4098   002346  6E48               	movwf	(??_floorf+3)^0,c
  4099   002348  5045               	movf	??_floorf^0,w,c
  4100   00234A  1046               	iorwf	(??_floorf+1)^0,w,c
  4101   00234C  1047               	iorwf	(??_floorf+2)^0,w,c
  4102   00234E  1048               	iorwf	(??_floorf+3)^0,w,c
  4103   002350  B4D8               	btfsc	status,2,c
  4104   002352  EFAD  F011         	goto	u3271
  4105   002356  EFAF  F011         	goto	u3270
  4106   00235A                     u3271:
  4107   00235A  EFB7  F011         	goto	l3175
  4108   00235E                     u3270:
  4109   00235E  0E00               	movlw	0
  4110   002360  6E51               	movwf	floorf@u^0,c
  4111   002362  0E00               	movlw	0
  4112   002364  6E52               	movwf	(floorf@u+1)^0,c
  4113   002366  0E80               	movlw	128
  4114   002368  6E53               	movwf	(floorf@u+2)^0,c
  4115   00236A  0EBF               	movlw	191
  4116   00236C  6E54               	movwf	(floorf@u+3)^0,c
  4117   00236E                     l3175:
  4118   00236E  C051  F041         	movff	floorf@u,?_floorf
  4119   002372  C052  F042         	movff	floorf@u+1,?_floorf+1
  4120   002376  C053  F043         	movff	floorf@u+2,?_floorf+2
  4121   00237A  C054  F044         	movff	floorf@u+3,?_floorf+3
  4122   00237E                     l974:
  4123   00237E  0012               	return		;funcret
  4124   002380                     __end_of_floorf:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function ___fpclassifyf *****************
  4128 ;; Defined at:
  4129 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  x               4    0[COMRAM] float 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  u               4   10[COMRAM] struct .
  4134 ;;  e               2    8[COMRAM] int 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  2    0[COMRAM] int 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4144 ;;      Params:         4       0       0       0       0       0       0       0       0
  4145 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4146 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4147 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4148 ;;Total ram usage:       14 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_efgtoa
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           	psect	text16
  4158   00286C                     __ptext16:
  4159                           	callstack 0
  4160   00286C                     ___fpclassifyf:
  4161                           	callstack 26
  4162   00286C  C0BD  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4163   002870  C0BE  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4164   002874  C0BF  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4165   002878  C0C0  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4166   00287C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4167   002880  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4168   002884  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4169   002888  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4170   00288C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4171   002890  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4172   002894  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4173   002898  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4174   00289C  0E18               	movlw	24
  4175   00289E  EF56  F014         	goto	u3090
  4176   0028A2                     u3095:
  4177   0028A2  90D8               	bcf	status,0,c
  4178   0028A4  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4179   0028A6  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4180   0028A8  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4181   0028AA  3205               	rrcf	??___fpclassifyf^0,f,c
  4182   0028AC                     u3090:
  4183   0028AC  2EE8               	decfsz	wreg,f,c
  4184   0028AE  EF51  F014         	goto	u3095
  4185   0028B2  5005               	movf	??___fpclassifyf^0,w,c
  4186   0028B4  6E09               	movwf	___fpclassifyf@e^0,c
  4187   0028B6  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4188   0028B8  5009               	movf	___fpclassifyf@e^0,w,c
  4189   0028BA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4190   0028BC  A4D8               	btfss	status,2,c
  4191   0028BE  EF63  F014         	goto	u3101
  4192   0028C2  EF65  F014         	goto	u3100
  4193   0028C6                     u3101:
  4194   0028C6  EF85  F014         	goto	l3133
  4195   0028CA                     u3100:
  4196   0028CA  90D8               	bcf	status,0,c
  4197   0028CC  340B               	rlcf	___fpclassifyf@u^0,w,c
  4198   0028CE  6E05               	movwf	??___fpclassifyf^0,c
  4199   0028D0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4200   0028D2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4201   0028D4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4202   0028D6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4203   0028D8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4204   0028DA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4205   0028DC  5005               	movf	??___fpclassifyf^0,w,c
  4206   0028DE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4207   0028E0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4208   0028E2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4209   0028E4  A4D8               	btfss	status,2,c
  4210   0028E6  EF77  F014         	goto	u3111
  4211   0028EA  EF79  F014         	goto	u3110
  4212   0028EE                     u3111:
  4213   0028EE  EF7F  F014         	goto	l3129
  4214   0028F2                     u3110:
  4215   0028F2  0E00               	movlw	0
  4216   0028F4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4217   0028F6  0E02               	movlw	2
  4218   0028F8  6E01               	movwf	?___fpclassifyf^0,c
  4219   0028FA  EFB4  F014         	goto	l967
  4220   0028FE                     l3129:
  4221   0028FE  0E00               	movlw	0
  4222   002900  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4223   002902  0E03               	movlw	3
  4224   002904  6E01               	movwf	?___fpclassifyf^0,c
  4225   002906  EFB4  F014         	goto	l967
  4226   00290A                     l3133:
  4227   00290A  2809               	incf	___fpclassifyf@e^0,w,c
  4228   00290C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4229   00290E  A4D8               	btfss	status,2,c
  4230   002910  EF8C  F014         	goto	u3121
  4231   002914  EF8E  F014         	goto	u3120
  4232   002918                     u3121:
  4233   002918  EFB0  F014         	goto	l3139
  4234   00291C                     u3120:
  4235   00291C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4236   002920  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4237   002924  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4238   002928  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4239   00292C  0E09               	movlw	9
  4240   00292E                     u3135:
  4241   00292E  90D8               	bcf	status,0,c
  4242   002930  3605               	rlcf	??___fpclassifyf^0,f,c
  4243   002932  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4244   002934  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4245   002936  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4246   002938  2EE8               	decfsz	wreg,f,c
  4247   00293A  EF97  F014         	goto	u3135
  4248   00293E  5005               	movf	??___fpclassifyf^0,w,c
  4249   002940  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4250   002942  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4251   002944  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4252   002946  B4D8               	btfsc	status,2,c
  4253   002948  EFA8  F014         	goto	u3141
  4254   00294C  EFAB  F014         	goto	u3140
  4255   002950                     u3141:
  4256   002950  0E01               	movlw	1
  4257   002952  EFAC  F014         	goto	u3150
  4258   002956                     u3140:
  4259   002956  0E00               	movlw	0
  4260   002958                     u3150:
  4261   002958  6E01               	movwf	?___fpclassifyf^0,c
  4262   00295A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4263   00295C  EFB4  F014         	goto	l967
  4264   002960                     l3139:
  4265   002960  0E00               	movlw	0
  4266   002962  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4267   002964  0E04               	movlw	4
  4268   002966  6E01               	movwf	?___fpclassifyf^0,c
  4269   002968                     l967:
  4270   002968  0012               	return		;funcret
  4271   00296A                     __end_of___fpclassifyf:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function ___fltol *****************
  4275 ;; Defined at:
  4276 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  f1              4    0[COMRAM] int 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  exp1            1    9[COMRAM] unsigned char 
  4281 ;;  sign1           1    8[COMRAM] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  4    0[COMRAM] long 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4291 ;;      Params:         4       0       0       0       0       0       0       0       0
  4292 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4293 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4294 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4295 ;;Total ram usage:       10 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_efgtoa
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text17
  4305   002662                     __ptext17:
  4306                           	callstack 0
  4307   002662                     ___fltol:
  4308                           	callstack 26
  4309   002662  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4310   002664  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4311   002666  6E0A               	movwf	___fltol@exp1^0,c
  4312   002668  500A               	movf	___fltol@exp1^0,w,c
  4313   00266A  A4D8               	btfss	status,2,c
  4314   00266C  EF3A  F013         	goto	u2941
  4315   002670  EF3C  F013         	goto	u2940
  4316   002674                     u2941:
  4317   002674  EF46  F013         	goto	l3031
  4318   002678                     u2940:
  4319   002678                     l3027:
  4320   002678  0E00               	movlw	0
  4321   00267A  6E01               	movwf	?___fltol^0,c
  4322   00267C  0E00               	movlw	0
  4323   00267E  6E02               	movwf	(?___fltol+1)^0,c
  4324   002680  0E00               	movlw	0
  4325   002682  6E03               	movwf	(?___fltol+2)^0,c
  4326   002684  0E00               	movlw	0
  4327   002686  6E04               	movwf	(?___fltol+3)^0,c
  4328   002688  EFB3  F013         	goto	l446
  4329   00268C                     l3031:
  4330   00268C  C001  F005         	movff	___fltol@f1,??___fltol
  4331   002690  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4332   002694  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4333   002698  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4334   00269C  0E20               	movlw	32
  4335   00269E  EF56  F013         	goto	u2950
  4336   0026A2                     u2955:
  4337   0026A2  90D8               	bcf	status,0,c
  4338   0026A4  3208               	rrcf	(??___fltol+3)^0,f,c
  4339   0026A6  3207               	rrcf	(??___fltol+2)^0,f,c
  4340   0026A8  3206               	rrcf	(??___fltol+1)^0,f,c
  4341   0026AA  3205               	rrcf	??___fltol^0,f,c
  4342   0026AC                     u2950:
  4343   0026AC  2EE8               	decfsz	wreg,f,c
  4344   0026AE  EF51  F013         	goto	u2955
  4345   0026B2  5005               	movf	??___fltol^0,w,c
  4346   0026B4  6E09               	movwf	___fltol@sign1^0,c
  4347   0026B6  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4348   0026B8  0EFF               	movlw	255
  4349   0026BA  1601               	andwf	___fltol@f1^0,f,c
  4350   0026BC  0EFF               	movlw	255
  4351   0026BE  1602               	andwf	(___fltol@f1+1)^0,f,c
  4352   0026C0  0EFF               	movlw	255
  4353   0026C2  1603               	andwf	(___fltol@f1+2)^0,f,c
  4354   0026C4  0E00               	movlw	0
  4355   0026C6  1604               	andwf	(___fltol@f1+3)^0,f,c
  4356   0026C8  0E96               	movlw	150
  4357   0026CA  5E0A               	subwf	___fltol@exp1^0,f,c
  4358   0026CC  BE0A               	btfsc	___fltol@exp1^0,7,c
  4359   0026CE  EF6D  F013         	goto	u2960
  4360   0026D2  EF6B  F013         	goto	u2961
  4361   0026D6                     u2961:
  4362   0026D6  EF83  F013         	goto	l3051
  4363   0026DA                     u2960:
  4364   0026DA  500A               	movf	___fltol@exp1^0,w,c
  4365   0026DC  0A80               	xorlw	128
  4366   0026DE  0F97               	addlw	151
  4367   0026E0  B0D8               	btfsc	status,0,c
  4368   0026E2  EF75  F013         	goto	u2971
  4369   0026E6  EF77  F013         	goto	u2970
  4370   0026EA                     u2971:
  4371   0026EA  EF79  F013         	goto	l3047
  4372   0026EE                     u2970:
  4373   0026EE  EF3C  F013         	goto	l3027
  4374   0026F2                     l3047:
  4375   0026F2  90D8               	bcf	status,0,c
  4376   0026F4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4377   0026F6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4378   0026F8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4379   0026FA  3201               	rrcf	___fltol@f1^0,f,c
  4380   0026FC  3E0A               	incfsz	___fltol@exp1^0,f,c
  4381   0026FE  EF79  F013         	goto	l3047
  4382   002702  EF9B  F013         	goto	l3061
  4383   002706                     l3051:
  4384   002706  0E1F               	movlw	31
  4385   002708  640A               	cpfsgt	___fltol@exp1^0,c
  4386   00270A  EF89  F013         	goto	u2981
  4387   00270E  EF8B  F013         	goto	u2980
  4388   002712                     u2981:
  4389   002712  EF93  F013         	goto	l3059
  4390   002716                     u2980:
  4391   002716  EF3C  F013         	goto	l3027
  4392   00271A                     l3057:
  4393   00271A  90D8               	bcf	status,0,c
  4394   00271C  3601               	rlcf	___fltol@f1^0,f,c
  4395   00271E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4396   002720  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4397   002722  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4398   002724  060A               	decf	___fltol@exp1^0,f,c
  4399   002726                     l3059:
  4400   002726  500A               	movf	___fltol@exp1^0,w,c
  4401   002728  A4D8               	btfss	status,2,c
  4402   00272A  EF99  F013         	goto	u2991
  4403   00272E  EF9B  F013         	goto	u2990
  4404   002732                     u2991:
  4405   002732  EF8D  F013         	goto	l3057
  4406   002736                     u2990:
  4407   002736                     l3061:
  4408   002736  5009               	movf	___fltol@sign1^0,w,c
  4409   002738  B4D8               	btfsc	status,2,c
  4410   00273A  EFA1  F013         	goto	u3001
  4411   00273E  EFA3  F013         	goto	u3000
  4412   002742                     u3001:
  4413   002742  EFAB  F013         	goto	l3065
  4414   002746                     u3000:
  4415   002746  1E04               	comf	(___fltol@f1+3)^0,f,c
  4416   002748  1E03               	comf	(___fltol@f1+2)^0,f,c
  4417   00274A  1E02               	comf	(___fltol@f1+1)^0,f,c
  4418   00274C  6C01               	negf	___fltol@f1^0,c
  4419   00274E  0E00               	movlw	0
  4420   002750  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4421   002752  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4422   002754  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4423   002756                     l3065:
  4424   002756  C001  F001         	movff	___fltol@f1,?___fltol
  4425   00275A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4426   00275E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4427   002762  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4428   002766                     l446:
  4429   002766  0012               	return		;funcret
  4430   002768                     __end_of___fltol:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function ___flsub *****************
  4434 ;; Defined at:
  4435 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  b               4   39[COMRAM] long 
  4438 ;;  a               4   43[COMRAM] long 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;		None
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  4   39[COMRAM] long 
  4443 ;; Registers used:
  4444 ;;		wreg, status,2, status,0, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4450 ;;      Params:         8       0       0       0       0       0       0       0       0
  4451 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4453 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4454 ;;Total ram usage:        8 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 1
  4457 ;; This function calls:
  4458 ;;		___fladd
  4459 ;; This function is called by:
  4460 ;;		_efgtoa
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text18
  4465   00302A                     __ptext18:
  4466                           	callstack 0
  4467   00302A                     ___flsub:
  4468                           	callstack 25
  4469   00302A  0E00               	movlw	0
  4470   00302C  1A2C               	xorwf	___flsub@a^0,f,c
  4471   00302E  0E00               	movlw	0
  4472   003030  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4473   003032  0E00               	movlw	0
  4474   003034  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4475   003036  0E80               	movlw	128
  4476   003038  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4477   00303A  C028  F001         	movff	___flsub@b,___fladd@b
  4478   00303E  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4479   003042  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4480   003046  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4481   00304A  C02C  F005         	movff	___flsub@a,___fladd@a
  4482   00304E  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4483   003052  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4484   003056  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4485   00305A  EC0D  F009         	call	___fladd	;wreg free
  4486   00305E  C001  F028         	movff	?___fladd,?___flsub
  4487   003062  C002  F029         	movff	?___fladd+1,?___flsub+1
  4488   003066  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4489   00306A  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4490   00306E  0012               	return		;funcret
  4491   003070                     __end_of___flsub:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function ___fladd *****************
  4495 ;; Defined at:
  4496 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  b               4    0[COMRAM] long 
  4499 ;;  a               4    4[COMRAM] long 
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  grs             1   15[COMRAM] unsigned char 
  4502 ;;  bexp            1   14[COMRAM] unsigned char 
  4503 ;;  aexp            1   13[COMRAM] unsigned char 
  4504 ;;  signs           1   12[COMRAM] unsigned char 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  4    0[COMRAM] unsigned char 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4514 ;;      Params:         8       0       0       0       0       0       0       0       0
  4515 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4516 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4517 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4518 ;;Total ram usage:       16 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; This function calls:
  4521 ;;		Nothing
  4522 ;; This function is called by:
  4523 ;;		___flsub
  4524 ;;		_efgtoa
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text19
  4529   00121A                     __ptext19:
  4530                           	callstack 0
  4531   00121A                     ___fladd:
  4532                           	callstack 25
  4533   00121A  5004               	movf	(___fladd@b+3)^0,w,c
  4534   00121C  0B80               	andlw	128
  4535   00121E  6E0D               	movwf	___fladd@signs^0,c
  4536   001220  5004               	movf	(___fladd@b+3)^0,w,c
  4537   001222  2404               	addwf	(___fladd@b+3)^0,w,c
  4538   001224  6E0F               	movwf	___fladd@bexp^0,c
  4539   001226  AE03               	btfss	(___fladd@b+2)^0,7,c
  4540   001228  EF18  F009         	goto	u2031
  4541   00122C  EF1A  F009         	goto	u2030
  4542   001230                     u2031:
  4543   001230  EF1B  F009         	goto	l2501
  4544   001234                     u2030:
  4545   001234  800F               	bsf	___fladd@bexp^0,0,c
  4546   001236                     l2501:
  4547   001236  500F               	movf	___fladd@bexp^0,w,c
  4548   001238  B4D8               	btfsc	status,2,c
  4549   00123A  EF21  F009         	goto	u2041
  4550   00123E  EF23  F009         	goto	u2040
  4551   001242                     u2041:
  4552   001242  EF38  F009         	goto	l2511
  4553   001246                     u2040:
  4554   001246  280F               	incf	___fladd@bexp^0,w,c
  4555   001248  A4D8               	btfss	status,2,c
  4556   00124A  EF29  F009         	goto	u2051
  4557   00124E  EF2B  F009         	goto	u2050
  4558   001252                     u2051:
  4559   001252  EF33  F009         	goto	l2507
  4560   001256                     u2050:
  4561   001256  0E00               	movlw	0
  4562   001258  6E01               	movwf	___fladd@b^0,c
  4563   00125A  0E00               	movlw	0
  4564   00125C  6E02               	movwf	(___fladd@b+1)^0,c
  4565   00125E  0E00               	movlw	0
  4566   001260  6E03               	movwf	(___fladd@b+2)^0,c
  4567   001262  0E00               	movlw	0
  4568   001264  6E04               	movwf	(___fladd@b+3)^0,c
  4569   001266                     l2507:
  4570   001266  8E03               	bsf	(___fladd@b+2)^0,7,c
  4571   001268  0E00               	movlw	0
  4572   00126A  6E04               	movwf	(___fladd@b+3)^0,c
  4573   00126C  EF40  F009         	goto	l2513
  4574   001270                     l2511:
  4575   001270  0E00               	movlw	0
  4576   001272  6E01               	movwf	___fladd@b^0,c
  4577   001274  0E00               	movlw	0
  4578   001276  6E02               	movwf	(___fladd@b+1)^0,c
  4579   001278  0E00               	movlw	0
  4580   00127A  6E03               	movwf	(___fladd@b+2)^0,c
  4581   00127C  0E00               	movlw	0
  4582   00127E  6E04               	movwf	(___fladd@b+3)^0,c
  4583   001280                     l2513:
  4584   001280  5008               	movf	(___fladd@a+3)^0,w,c
  4585   001282  0B80               	andlw	128
  4586   001284  6E0E               	movwf	___fladd@aexp^0,c
  4587   001286  500D               	movf	___fladd@signs^0,w,c
  4588   001288  180E               	xorwf	___fladd@aexp^0,w,c
  4589   00128A  B4D8               	btfsc	status,2,c
  4590   00128C  EF4A  F009         	goto	u2061
  4591   001290  EF4C  F009         	goto	u2060
  4592   001294                     u2061:
  4593   001294  EF4D  F009         	goto	l2519
  4594   001298                     u2060:
  4595   001298  8C0D               	bsf	___fladd@signs^0,6,c
  4596   00129A                     l2519:
  4597   00129A  5008               	movf	(___fladd@a+3)^0,w,c
  4598   00129C  2408               	addwf	(___fladd@a+3)^0,w,c
  4599   00129E  6E0E               	movwf	___fladd@aexp^0,c
  4600   0012A0  AE07               	btfss	(___fladd@a+2)^0,7,c
  4601   0012A2  EF55  F009         	goto	u2071
  4602   0012A6  EF57  F009         	goto	u2070
  4603   0012AA                     u2071:
  4604   0012AA  EF58  F009         	goto	l2525
  4605   0012AE                     u2070:
  4606   0012AE  800E               	bsf	___fladd@aexp^0,0,c
  4607   0012B0                     l2525:
  4608   0012B0  500E               	movf	___fladd@aexp^0,w,c
  4609   0012B2  B4D8               	btfsc	status,2,c
  4610   0012B4  EF5E  F009         	goto	u2081
  4611   0012B8  EF60  F009         	goto	u2080
  4612   0012BC                     u2081:
  4613   0012BC  EF75  F009         	goto	l2535
  4614   0012C0                     u2080:
  4615   0012C0  280E               	incf	___fladd@aexp^0,w,c
  4616   0012C2  A4D8               	btfss	status,2,c
  4617   0012C4  EF66  F009         	goto	u2091
  4618   0012C8  EF68  F009         	goto	u2090
  4619   0012CC                     u2091:
  4620   0012CC  EF70  F009         	goto	l2531
  4621   0012D0                     u2090:
  4622   0012D0  0E00               	movlw	0
  4623   0012D2  6E05               	movwf	___fladd@a^0,c
  4624   0012D4  0E00               	movlw	0
  4625   0012D6  6E06               	movwf	(___fladd@a+1)^0,c
  4626   0012D8  0E00               	movlw	0
  4627   0012DA  6E07               	movwf	(___fladd@a+2)^0,c
  4628   0012DC  0E00               	movlw	0
  4629   0012DE  6E08               	movwf	(___fladd@a+3)^0,c
  4630   0012E0                     l2531:
  4631   0012E0  8E07               	bsf	(___fladd@a+2)^0,7,c
  4632   0012E2  0E00               	movlw	0
  4633   0012E4  6E08               	movwf	(___fladd@a+3)^0,c
  4634   0012E6  EF7D  F009         	goto	l2537
  4635   0012EA                     l2535:
  4636   0012EA  0E00               	movlw	0
  4637   0012EC  6E05               	movwf	___fladd@a^0,c
  4638   0012EE  0E00               	movlw	0
  4639   0012F0  6E06               	movwf	(___fladd@a+1)^0,c
  4640   0012F2  0E00               	movlw	0
  4641   0012F4  6E07               	movwf	(___fladd@a+2)^0,c
  4642   0012F6  0E00               	movlw	0
  4643   0012F8  6E08               	movwf	(___fladd@a+3)^0,c
  4644   0012FA                     l2537:
  4645   0012FA  500F               	movf	___fladd@bexp^0,w,c
  4646   0012FC  5C0E               	subwf	___fladd@aexp^0,w,c
  4647   0012FE  B0D8               	btfsc	status,0,c
  4648   001300  EF84  F009         	goto	u2101
  4649   001304  EF86  F009         	goto	u2100
  4650   001308                     u2101:
  4651   001308  EFAD  F009         	goto	l2573
  4652   00130C                     u2100:
  4653   00130C  AC0D               	btfss	___fladd@signs^0,6,c
  4654   00130E  EF8B  F009         	goto	u2111
  4655   001312  EF8D  F009         	goto	u2110
  4656   001316                     u2111:
  4657   001316  EF8F  F009         	goto	l2543
  4658   00131A                     u2110:
  4659   00131A  0E80               	movlw	128
  4660   00131C  1A0D               	xorwf	___fladd@signs^0,f,c
  4661   00131E                     l2543:
  4662   00131E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4663   001322  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4664   001326  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4665   00132A  C001  F010         	movff	___fladd@b,___fladd@grs
  4666   00132E  C005  F001         	movff	___fladd@a,___fladd@b
  4667   001332  C010  F005         	movff	___fladd@grs,___fladd@a
  4668   001336  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4669   00133A  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4670   00133E  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4671   001342  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4672   001346  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4673   00134A  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4674   00134E  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4675   001352  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4676   001356  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4677   00135A                     l2573:
  4678   00135A  0E00               	movlw	0
  4679   00135C  6E10               	movwf	___fladd@grs^0,c
  4680   00135E  500F               	movf	___fladd@bexp^0,w,c
  4681   001360  C00E  F009         	movff	___fladd@aexp,??___fladd
  4682   001364  6A0A               	clrf	(??___fladd+1)^0,c
  4683   001366  5E09               	subwf	??___fladd^0,f,c
  4684   001368  0E00               	movlw	0
  4685   00136A  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4686   00136C  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4687   00136E  EFC2  F009         	goto	u2121
  4688   001372  500A               	movf	(??___fladd+1)^0,w,c
  4689   001374  E109               	bnz	u2120
  4690   001376  0E1A               	movlw	26
  4691   001378  5C09               	subwf	??___fladd^0,w,c
  4692   00137A  A0D8               	btfss	status,0,c
  4693   00137C  EFC2  F009         	goto	u2121
  4694   001380  EFC4  F009         	goto	u2120
  4695   001384                     u2121:
  4696   001384  EFFB  F009         	goto	l678
  4697   001388                     u2120:
  4698   001388  5001               	movf	___fladd@b^0,w,c
  4699   00138A  1002               	iorwf	(___fladd@b+1)^0,w,c
  4700   00138C  1003               	iorwf	(___fladd@b+2)^0,w,c
  4701   00138E  1004               	iorwf	(___fladd@b+3)^0,w,c
  4702   001390  A4D8               	btfss	status,2,c
  4703   001392  EFCD  F009         	goto	u2131
  4704   001396  EFD0  F009         	goto	u2130
  4705   00139A                     u2131:
  4706   00139A  0E01               	movlw	1
  4707   00139C  EFD1  F009         	goto	u2140
  4708   0013A0                     u2130:
  4709   0013A0  0E00               	movlw	0
  4710   0013A2                     u2140:
  4711   0013A2  6E10               	movwf	___fladd@grs^0,c
  4712   0013A4  0E00               	movlw	0
  4713   0013A6  6E01               	movwf	___fladd@b^0,c
  4714   0013A8  0E00               	movlw	0
  4715   0013AA  6E02               	movwf	(___fladd@b+1)^0,c
  4716   0013AC  0E00               	movlw	0
  4717   0013AE  6E03               	movwf	(___fladd@b+2)^0,c
  4718   0013B0  0E00               	movlw	0
  4719   0013B2  6E04               	movwf	(___fladd@b+3)^0,c
  4720   0013B4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4721   0013B8  EF04  F00A         	goto	l677
  4722   0013BC                     l679:
  4723   0013BC  A010               	btfss	___fladd@grs^0,0,c
  4724   0013BE  EFE3  F009         	goto	u2151
  4725   0013C2  EFE5  F009         	goto	u2150
  4726   0013C6                     u2151:
  4727   0013C6  EFEB  F009         	goto	l2585
  4728   0013CA                     u2150:
  4729   0013CA  90D8               	bcf	status,0,c
  4730   0013CC  3010               	rrcf	___fladd@grs^0,w,c
  4731   0013CE  0901               	iorlw	1
  4732   0013D0  6E10               	movwf	___fladd@grs^0,c
  4733   0013D2  EFED  F009         	goto	l2587
  4734   0013D6                     l2585:
  4735   0013D6  90D8               	bcf	status,0,c
  4736   0013D8  3210               	rrcf	___fladd@grs^0,f,c
  4737   0013DA                     l2587:
  4738   0013DA  A001               	btfss	___fladd@b^0,0,c
  4739   0013DC  EFF2  F009         	goto	u2161
  4740   0013E0  EFF4  F009         	goto	u2160
  4741   0013E4                     u2161:
  4742   0013E4  EFF5  F009         	goto	l2591
  4743   0013E8                     u2160:
  4744   0013E8  8E10               	bsf	___fladd@grs^0,7,c
  4745   0013EA                     l2591:
  4746   0013EA  3404               	rlcf	(___fladd@b+3)^0,w,c
  4747   0013EC  3204               	rrcf	(___fladd@b+3)^0,f,c
  4748   0013EE  3203               	rrcf	(___fladd@b+2)^0,f,c
  4749   0013F0  3202               	rrcf	(___fladd@b+1)^0,f,c
  4750   0013F2  3201               	rrcf	___fladd@b^0,f,c
  4751   0013F4  2A0F               	incf	___fladd@bexp^0,f,c
  4752   0013F6                     l678:
  4753   0013F6  500E               	movf	___fladd@aexp^0,w,c
  4754   0013F8  5C0F               	subwf	___fladd@bexp^0,w,c
  4755   0013FA  A0D8               	btfss	status,0,c
  4756   0013FC  EF02  F00A         	goto	u2171
  4757   001400  EF04  F00A         	goto	u2170
  4758   001404                     u2171:
  4759   001404  EFDE  F009         	goto	l679
  4760   001408                     u2170:
  4761   001408                     l677:
  4762   001408  BC0D               	btfsc	___fladd@signs^0,6,c
  4763   00140A  EF09  F00A         	goto	u2181
  4764   00140E  EF0B  F00A         	goto	u2180
  4765   001412                     u2181:
  4766   001412  EF4B  F00A         	goto	l2619
  4767   001416                     u2180:
  4768   001416  500F               	movf	___fladd@bexp^0,w,c
  4769   001418  A4D8               	btfss	status,2,c
  4770   00141A  EF11  F00A         	goto	u2191
  4771   00141E  EF13  F00A         	goto	u2190
  4772   001422                     u2191:
  4773   001422  EF1D  F00A         	goto	l2601
  4774   001426                     u2190:
  4775   001426  0E00               	movlw	0
  4776   001428  6E01               	movwf	?___fladd^0,c
  4777   00142A  0E00               	movlw	0
  4778   00142C  6E02               	movwf	(?___fladd+1)^0,c
  4779   00142E  0E00               	movlw	0
  4780   001430  6E03               	movwf	(?___fladd+2)^0,c
  4781   001432  0E00               	movlw	0
  4782   001434  6E04               	movwf	(?___fladd+3)^0,c
  4783   001436  EF6C  F00B         	goto	l686
  4784   00143A                     l2601:
  4785   00143A  5005               	movf	___fladd@a^0,w,c
  4786   00143C  2601               	addwf	___fladd@b^0,f,c
  4787   00143E  5006               	movf	(___fladd@a+1)^0,w,c
  4788   001440  2202               	addwfc	(___fladd@b+1)^0,f,c
  4789   001442  5007               	movf	(___fladd@a+2)^0,w,c
  4790   001444  2203               	addwfc	(___fladd@b+2)^0,f,c
  4791   001446  5008               	movf	(___fladd@a+3)^0,w,c
  4792   001448  2204               	addwfc	(___fladd@b+3)^0,f,c
  4793   00144A  A004               	btfss	(___fladd@b+3)^0,0,c
  4794   00144C  EF2A  F00A         	goto	u2201
  4795   001450  EF2C  F00A         	goto	u2200
  4796   001454                     u2201:
  4797   001454  EFD8  F00A         	goto	l2655
  4798   001458                     u2200:
  4799   001458  A010               	btfss	___fladd@grs^0,0,c
  4800   00145A  EF31  F00A         	goto	u2211
  4801   00145E  EF33  F00A         	goto	u2210
  4802   001462                     u2211:
  4803   001462  EF39  F00A         	goto	l2609
  4804   001466                     u2210:
  4805   001466  90D8               	bcf	status,0,c
  4806   001468  3010               	rrcf	___fladd@grs^0,w,c
  4807   00146A  0901               	iorlw	1
  4808   00146C  6E10               	movwf	___fladd@grs^0,c
  4809   00146E  EF3B  F00A         	goto	l2611
  4810   001472                     l2609:
  4811   001472  90D8               	bcf	status,0,c
  4812   001474  3210               	rrcf	___fladd@grs^0,f,c
  4813   001476                     l2611:
  4814   001476  A001               	btfss	___fladd@b^0,0,c
  4815   001478  EF40  F00A         	goto	u2221
  4816   00147C  EF42  F00A         	goto	u2220
  4817   001480                     u2221:
  4818   001480  EF43  F00A         	goto	l2615
  4819   001484                     u2220:
  4820   001484  8E10               	bsf	___fladd@grs^0,7,c
  4821   001486                     l2615:
  4822   001486  3404               	rlcf	(___fladd@b+3)^0,w,c
  4823   001488  3204               	rrcf	(___fladd@b+3)^0,f,c
  4824   00148A  3203               	rrcf	(___fladd@b+2)^0,f,c
  4825   00148C  3202               	rrcf	(___fladd@b+1)^0,f,c
  4826   00148E  3201               	rrcf	___fladd@b^0,f,c
  4827   001490  2A0F               	incf	___fladd@bexp^0,f,c
  4828   001492  EFD8  F00A         	goto	l2655
  4829   001496                     l2619:
  4830   001496  5005               	movf	___fladd@a^0,w,c
  4831   001498  5C01               	subwf	___fladd@b^0,w,c
  4832   00149A  5006               	movf	(___fladd@a+1)^0,w,c
  4833   00149C  5802               	subwfb	(___fladd@b+1)^0,w,c
  4834   00149E  5007               	movf	(___fladd@a+2)^0,w,c
  4835   0014A0  5803               	subwfb	(___fladd@b+2)^0,w,c
  4836   0014A2  5004               	movf	(___fladd@b+3)^0,w,c
  4837   0014A4  0A80               	xorlw	128
  4838   0014A6  6E09               	movwf	??___fladd^0,c
  4839   0014A8  5008               	movf	(___fladd@a+3)^0,w,c
  4840   0014AA  0A80               	xorlw	128
  4841   0014AC  5809               	subwfb	??___fladd^0,w,c
  4842   0014AE  B0D8               	btfsc	status,0,c
  4843   0014B0  EF5C  F00A         	goto	u2231
  4844   0014B4  EF5E  F00A         	goto	u2230
  4845   0014B8                     u2231:
  4846   0014B8  EF89  F00A         	goto	l2629
  4847   0014BC                     u2230:
  4848   0014BC  5001               	movf	___fladd@b^0,w,c
  4849   0014BE  5C05               	subwf	___fladd@a^0,w,c
  4850   0014C0  6E09               	movwf	??___fladd^0,c
  4851   0014C2  5002               	movf	(___fladd@b+1)^0,w,c
  4852   0014C4  5806               	subwfb	(___fladd@a+1)^0,w,c
  4853   0014C6  6E0A               	movwf	(??___fladd+1)^0,c
  4854   0014C8  5003               	movf	(___fladd@b+2)^0,w,c
  4855   0014CA  5807               	subwfb	(___fladd@a+2)^0,w,c
  4856   0014CC  6E0B               	movwf	(??___fladd+2)^0,c
  4857   0014CE  5004               	movf	(___fladd@b+3)^0,w,c
  4858   0014D0  5808               	subwfb	(___fladd@a+3)^0,w,c
  4859   0014D2  6E0C               	movwf	(??___fladd+3)^0,c
  4860   0014D4  0EFF               	movlw	255
  4861   0014D6  2409               	addwf	??___fladd^0,w,c
  4862   0014D8  6E01               	movwf	___fladd@b^0,c
  4863   0014DA  0EFF               	movlw	255
  4864   0014DC  200A               	addwfc	(??___fladd+1)^0,w,c
  4865   0014DE  6E02               	movwf	(___fladd@b+1)^0,c
  4866   0014E0  0EFF               	movlw	255
  4867   0014E2  200B               	addwfc	(??___fladd+2)^0,w,c
  4868   0014E4  6E03               	movwf	(___fladd@b+2)^0,c
  4869   0014E6  0EFF               	movlw	255
  4870   0014E8  200C               	addwfc	(??___fladd+3)^0,w,c
  4871   0014EA  6E04               	movwf	(___fladd@b+3)^0,c
  4872   0014EC  0E80               	movlw	128
  4873   0014EE  1A0D               	xorwf	___fladd@signs^0,f,c
  4874   0014F0  6C10               	negf	___fladd@grs^0,c
  4875   0014F2  5010               	movf	___fladd@grs^0,w,c
  4876   0014F4  A4D8               	btfss	status,2,c
  4877   0014F6  EF7F  F00A         	goto	u2241
  4878   0014FA  EF81  F00A         	goto	u2240
  4879   0014FE                     u2241:
  4880   0014FE  EF91  F00A         	goto	l694
  4881   001502                     u2240:
  4882   001502  0E01               	movlw	1
  4883   001504  2601               	addwf	___fladd@b^0,f,c
  4884   001506  0E00               	movlw	0
  4885   001508  2202               	addwfc	(___fladd@b+1)^0,f,c
  4886   00150A  2203               	addwfc	(___fladd@b+2)^0,f,c
  4887   00150C  2204               	addwfc	(___fladd@b+3)^0,f,c
  4888   00150E  EF91  F00A         	goto	l694
  4889   001512                     l2629:
  4890   001512  5005               	movf	___fladd@a^0,w,c
  4891   001514  5E01               	subwf	___fladd@b^0,f,c
  4892   001516  5006               	movf	(___fladd@a+1)^0,w,c
  4893   001518  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4894   00151A  5007               	movf	(___fladd@a+2)^0,w,c
  4895   00151C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4896   00151E  5008               	movf	(___fladd@a+3)^0,w,c
  4897   001520  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4898   001522                     l694:
  4899   001522  5001               	movf	___fladd@b^0,w,c
  4900   001524  1002               	iorwf	(___fladd@b+1)^0,w,c
  4901   001526  1003               	iorwf	(___fladd@b+2)^0,w,c
  4902   001528  1004               	iorwf	(___fladd@b+3)^0,w,c
  4903   00152A  A4D8               	btfss	status,2,c
  4904   00152C  EF9A  F00A         	goto	u2251
  4905   001530  EF9C  F00A         	goto	u2250
  4906   001534                     u2251:
  4907   001534  EFD1  F00A         	goto	l2653
  4908   001538                     u2250:
  4909   001538  5010               	movf	___fladd@grs^0,w,c
  4910   00153A  A4D8               	btfss	status,2,c
  4911   00153C  EFA2  F00A         	goto	u2261
  4912   001540  EFA4  F00A         	goto	u2260
  4913   001544                     u2261:
  4914   001544  EFD1  F00A         	goto	l2653
  4915   001548                     u2260:
  4916   001548  0E00               	movlw	0
  4917   00154A  6E01               	movwf	?___fladd^0,c
  4918   00154C  0E00               	movlw	0
  4919   00154E  6E02               	movwf	(?___fladd+1)^0,c
  4920   001550  0E00               	movlw	0
  4921   001552  6E03               	movwf	(?___fladd+2)^0,c
  4922   001554  0E00               	movlw	0
  4923   001556  6E04               	movwf	(?___fladd+3)^0,c
  4924   001558  EF6C  F00B         	goto	l686
  4925   00155C                     l2637:
  4926   00155C  90D8               	bcf	status,0,c
  4927   00155E  3601               	rlcf	___fladd@b^0,f,c
  4928   001560  3602               	rlcf	(___fladd@b+1)^0,f,c
  4929   001562  3603               	rlcf	(___fladd@b+2)^0,f,c
  4930   001564  3604               	rlcf	(___fladd@b+3)^0,f,c
  4931   001566  AE10               	btfss	___fladd@grs^0,7,c
  4932   001568  EFB8  F00A         	goto	u2271
  4933   00156C  EFBA  F00A         	goto	u2270
  4934   001570                     u2271:
  4935   001570  EFBB  F00A         	goto	l2643
  4936   001574                     u2270:
  4937   001574  8001               	bsf	___fladd@b^0,0,c
  4938   001576                     l2643:
  4939   001576  A010               	btfss	___fladd@grs^0,0,c
  4940   001578  EFC0  F00A         	goto	u2281
  4941   00157C  EFC2  F00A         	goto	u2280
  4942   001580                     u2281:
  4943   001580  EFC6  F00A         	goto	l2647
  4944   001584                     u2280:
  4945   001584  80D8               	bsf	status,0,c
  4946   001586  3610               	rlcf	___fladd@grs^0,f,c
  4947   001588  EFC8  F00A         	goto	l2649
  4948   00158C                     l2647:
  4949   00158C  90D8               	bcf	status,0,c
  4950   00158E  3610               	rlcf	___fladd@grs^0,f,c
  4951   001590                     l2649:
  4952   001590  500F               	movf	___fladd@bexp^0,w,c
  4953   001592  B4D8               	btfsc	status,2,c
  4954   001594  EFCE  F00A         	goto	u2291
  4955   001598  EFD0  F00A         	goto	u2290
  4956   00159C                     u2291:
  4957   00159C  EFD1  F00A         	goto	l2653
  4958   0015A0                     u2290:
  4959   0015A0  060F               	decf	___fladd@bexp^0,f,c
  4960   0015A2                     l2653:
  4961   0015A2  AE03               	btfss	(___fladd@b+2)^0,7,c
  4962   0015A4  EFD6  F00A         	goto	u2301
  4963   0015A8  EFD8  F00A         	goto	u2300
  4964   0015AC                     u2301:
  4965   0015AC  EFAE  F00A         	goto	l2637
  4966   0015B0                     u2300:
  4967   0015B0                     l2655:
  4968   0015B0  0E00               	movlw	0
  4969   0015B2  6E0E               	movwf	___fladd@aexp^0,c
  4970   0015B4  AE10               	btfss	___fladd@grs^0,7,c
  4971   0015B6  EFDF  F00A         	goto	u2311
  4972   0015BA  EFE1  F00A         	goto	u2310
  4973   0015BE                     u2311:
  4974   0015BE  EFF9  F00A         	goto	l703
  4975   0015C2                     u2310:
  4976   0015C2  C010  F009         	movff	___fladd@grs,??___fladd
  4977   0015C6  0E7F               	movlw	127
  4978   0015C8  1609               	andwf	??___fladd^0,f,c
  4979   0015CA  B4D8               	btfsc	status,2,c
  4980   0015CC  EFEA  F00A         	goto	u2321
  4981   0015D0  EFEC  F00A         	goto	u2320
  4982   0015D4                     u2321:
  4983   0015D4  EFF0  F00A         	goto	l704
  4984   0015D8                     u2320:
  4985   0015D8                     l2661:
  4986   0015D8  0E01               	movlw	1
  4987   0015DA  6E0E               	movwf	___fladd@aexp^0,c
  4988   0015DC  EFF9  F00A         	goto	l703
  4989   0015E0                     l704:
  4990   0015E0  A001               	btfss	___fladd@b^0,0,c
  4991   0015E2  EFF5  F00A         	goto	u2331
  4992   0015E6  EFF7  F00A         	goto	u2330
  4993   0015EA                     u2331:
  4994   0015EA  EFF9  F00A         	goto	l703
  4995   0015EE                     u2330:
  4996   0015EE  EFEC  F00A         	goto	l2661
  4997   0015F2                     l703:
  4998   0015F2  500E               	movf	___fladd@aexp^0,w,c
  4999   0015F4  B4D8               	btfsc	status,2,c
  5000   0015F6  EFFF  F00A         	goto	u2341
  5001   0015FA  EF01  F00B         	goto	u2340
  5002   0015FE                     u2341:
  5003   0015FE  EF2C  F00B         	goto	l2673
  5004   001602                     u2340:
  5005   001602  0E01               	movlw	1
  5006   001604  2601               	addwf	___fladd@b^0,f,c
  5007   001606  0E00               	movlw	0
  5008   001608  2202               	addwfc	(___fladd@b+1)^0,f,c
  5009   00160A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5010   00160C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5011   00160E  A004               	btfss	(___fladd@b+3)^0,0,c
  5012   001610  EF0C  F00B         	goto	u2351
  5013   001614  EF0E  F00B         	goto	u2350
  5014   001618                     u2351:
  5015   001618  EF2C  F00B         	goto	l2673
  5016   00161C                     u2350:
  5017   00161C  C001  F009         	movff	___fladd@b,??___fladd
  5018   001620  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5019   001624  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5020   001628  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5021   00162C  340C               	rlcf	(??___fladd+3)^0,w,c
  5022   00162E  320C               	rrcf	(??___fladd+3)^0,f,c
  5023   001630  320B               	rrcf	(??___fladd+2)^0,f,c
  5024   001632  320A               	rrcf	(??___fladd+1)^0,f,c
  5025   001634  3209               	rrcf	??___fladd^0,f,c
  5026   001636  C009  F001         	movff	??___fladd,___fladd@b
  5027   00163A  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5028   00163E  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5029   001642  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5030   001646  280F               	incf	___fladd@bexp^0,w,c
  5031   001648  B4D8               	btfsc	status,2,c
  5032   00164A  EF29  F00B         	goto	u2361
  5033   00164E  EF2B  F00B         	goto	u2360
  5034   001652                     u2361:
  5035   001652  EF2C  F00B         	goto	l2673
  5036   001656                     u2360:
  5037   001656  2A0F               	incf	___fladd@bexp^0,f,c
  5038   001658                     l2673:
  5039   001658  280F               	incf	___fladd@bexp^0,w,c
  5040   00165A  B4D8               	btfsc	status,2,c
  5041   00165C  EF32  F00B         	goto	u2371
  5042   001660  EF34  F00B         	goto	u2370
  5043   001664                     u2371:
  5044   001664  EF3C  F00B         	goto	l2677
  5045   001668                     u2370:
  5046   001668  500F               	movf	___fladd@bexp^0,w,c
  5047   00166A  A4D8               	btfss	status,2,c
  5048   00166C  EF3A  F00B         	goto	u2381
  5049   001670  EF3C  F00B         	goto	u2380
  5050   001674                     u2381:
  5051   001674  EF4E  F00B         	goto	l2681
  5052   001678                     u2380:
  5053   001678                     l2677:
  5054   001678  0E00               	movlw	0
  5055   00167A  6E01               	movwf	___fladd@b^0,c
  5056   00167C  0E00               	movlw	0
  5057   00167E  6E02               	movwf	(___fladd@b+1)^0,c
  5058   001680  0E00               	movlw	0
  5059   001682  6E03               	movwf	(___fladd@b+2)^0,c
  5060   001684  0E00               	movlw	0
  5061   001686  6E04               	movwf	(___fladd@b+3)^0,c
  5062   001688  500F               	movf	___fladd@bexp^0,w,c
  5063   00168A  A4D8               	btfss	status,2,c
  5064   00168C  EF4A  F00B         	goto	u2391
  5065   001690  EF4C  F00B         	goto	u2390
  5066   001694                     u2391:
  5067   001694  EF4E  F00B         	goto	l2681
  5068   001698                     u2390:
  5069   001698  0E00               	movlw	0
  5070   00169A  6E0D               	movwf	___fladd@signs^0,c
  5071   00169C                     l2681:
  5072   00169C  A00F               	btfss	___fladd@bexp^0,0,c
  5073   00169E  EF53  F00B         	goto	u2401
  5074   0016A2  EF55  F00B         	goto	u2400
  5075   0016A6                     u2401:
  5076   0016A6  EF58  F00B         	goto	l2685
  5077   0016AA                     u2400:
  5078   0016AA  8E03               	bsf	(___fladd@b+2)^0,7,c
  5079   0016AC  EF59  F00B         	goto	l2687
  5080   0016B0                     l2685:
  5081   0016B0  9E03               	bcf	(___fladd@b+2)^0,7,c
  5082   0016B2                     l2687:
  5083   0016B2  90D8               	bcf	status,0,c
  5084   0016B4  300F               	rrcf	___fladd@bexp^0,w,c
  5085   0016B6  6E04               	movwf	(___fladd@b+3)^0,c
  5086   0016B8  AE0D               	btfss	___fladd@signs^0,7,c
  5087   0016BA  EF61  F00B         	goto	u2411
  5088   0016BE  EF63  F00B         	goto	u2410
  5089   0016C2                     u2411:
  5090   0016C2  EF64  F00B         	goto	l2693
  5091   0016C6                     u2410:
  5092   0016C6  8E04               	bsf	(___fladd@b+3)^0,7,c
  5093   0016C8                     l2693:
  5094   0016C8  C001  F001         	movff	___fladd@b,?___fladd
  5095   0016CC  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5096   0016D0  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5097   0016D4  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5098   0016D8                     l686:
  5099   0016D8  0012               	return		;funcret
  5100   0016DA                     __end_of___fladd:
  5101                           	callstack 0
  5102                           
  5103 ;; *************** function ___flneg *****************
  5104 ;; Defined at:
  5105 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  f1              4    0[COMRAM] unsigned char 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;		None
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  4    0[COMRAM] unsigned char 
  5112 ;; Registers used:
  5113 ;;		wreg, status,2, status,0
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5119 ;;      Params:         4       0       0       0       0       0       0       0       0
  5120 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5122 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5123 ;;Total ram usage:        4 bytes
  5124 ;; Hardware stack levels used: 1
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_efgtoa
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           	psect	text20
  5133   003134                     __ptext20:
  5134                           	callstack 0
  5135   003134                     ___flneg:
  5136                           	callstack 26
  5137   003134  5001               	movf	___flneg@f1^0,w,c
  5138   003136  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5139   003138  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5140   00313A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5141   00313C  B4D8               	btfsc	status,2,c
  5142   00313E  EFA3  F018         	goto	u2931
  5143   003142  EFA5  F018         	goto	u2930
  5144   003146                     u2931:
  5145   003146  EFAD  F018         	goto	l3021
  5146   00314A                     u2930:
  5147   00314A  0E00               	movlw	0
  5148   00314C  1A01               	xorwf	___flneg@f1^0,f,c
  5149   00314E  0E00               	movlw	0
  5150   003150  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5151   003152  0E00               	movlw	0
  5152   003154  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5153   003156  0E80               	movlw	128
  5154   003158  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5155   00315A                     l3021:
  5156   00315A  C001  F001         	movff	___flneg@f1,?___flneg
  5157   00315E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5158   003162  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5159   003166  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5160   00316A  0012               	return		;funcret
  5161   00316C                     __end_of___flneg:
  5162                           	callstack 0
  5163                           
  5164 ;; *************** function ___flmul *****************
  5165 ;; Defined at:
  5166 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  b               4   14[COMRAM] unsigned char 
  5169 ;;  a               4   18[COMRAM] unsigned char 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  prod            4   33[COMRAM] struct .
  5172 ;;  grs             4   27[COMRAM] unsigned long 
  5173 ;;  temp            2   37[COMRAM] struct .
  5174 ;;  bexp            1   32[COMRAM] unsigned char 
  5175 ;;  aexp            1   31[COMRAM] unsigned char 
  5176 ;;  sign            1   26[COMRAM] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  4   14[COMRAM] unsigned char 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, prodl, prodh
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5186 ;;      Params:         8       0       0       0       0       0       0       0       0
  5187 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5188 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5189 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5190 ;;Total ram usage:       25 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_main
  5196 ;;		_efgtoa
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text21
  5201   0016DA                     __ptext21:
  5202                           	callstack 0
  5203   0016DA                     ___flmul:
  5204                           	callstack 26
  5205   0016DA  5012               	movf	(___flmul@b+3)^0,w,c
  5206   0016DC  0B80               	andlw	128
  5207   0016DE  6E1B               	movwf	___flmul@sign^0,c
  5208   0016E0  5012               	movf	(___flmul@b+3)^0,w,c
  5209   0016E2  2412               	addwf	(___flmul@b+3)^0,w,c
  5210   0016E4  6E21               	movwf	___flmul@bexp^0,c
  5211   0016E6  AE11               	btfss	(___flmul@b+2)^0,7,c
  5212   0016E8  EF78  F00B         	goto	u2661
  5213   0016EC  EF7A  F00B         	goto	u2660
  5214   0016F0                     u2661:
  5215   0016F0  EF7B  F00B         	goto	l2849
  5216   0016F4                     u2660:
  5217   0016F4  8021               	bsf	___flmul@bexp^0,0,c
  5218   0016F6                     l2849:
  5219   0016F6  5021               	movf	___flmul@bexp^0,w,c
  5220   0016F8  B4D8               	btfsc	status,2,c
  5221   0016FA  EF81  F00B         	goto	u2671
  5222   0016FE  EF83  F00B         	goto	u2670
  5223   001702                     u2671:
  5224   001702  EF96  F00B         	goto	l2857
  5225   001706                     u2670:
  5226   001706  2821               	incf	___flmul@bexp^0,w,c
  5227   001708  A4D8               	btfss	status,2,c
  5228   00170A  EF89  F00B         	goto	u2681
  5229   00170E  EF8B  F00B         	goto	u2680
  5230   001712                     u2681:
  5231   001712  EF93  F00B         	goto	l2855
  5232   001716                     u2680:
  5233   001716  0E00               	movlw	0
  5234   001718  6E0F               	movwf	___flmul@b^0,c
  5235   00171A  0E00               	movlw	0
  5236   00171C  6E10               	movwf	(___flmul@b+1)^0,c
  5237   00171E  0E00               	movlw	0
  5238   001720  6E11               	movwf	(___flmul@b+2)^0,c
  5239   001722  0E00               	movlw	0
  5240   001724  6E12               	movwf	(___flmul@b+3)^0,c
  5241   001726                     l2855:
  5242   001726  8E11               	bsf	(___flmul@b+2)^0,7,c
  5243   001728  EF9E  F00B         	goto	l2859
  5244   00172C                     l2857:
  5245   00172C  0E00               	movlw	0
  5246   00172E  6E0F               	movwf	___flmul@b^0,c
  5247   001730  0E00               	movlw	0
  5248   001732  6E10               	movwf	(___flmul@b+1)^0,c
  5249   001734  0E00               	movlw	0
  5250   001736  6E11               	movwf	(___flmul@b+2)^0,c
  5251   001738  0E00               	movlw	0
  5252   00173A  6E12               	movwf	(___flmul@b+3)^0,c
  5253   00173C                     l2859:
  5254   00173C  5016               	movf	(___flmul@a+3)^0,w,c
  5255   00173E  0B80               	andlw	128
  5256   001740  1A1B               	xorwf	___flmul@sign^0,f,c
  5257   001742  5016               	movf	(___flmul@a+3)^0,w,c
  5258   001744  2416               	addwf	(___flmul@a+3)^0,w,c
  5259   001746  6E20               	movwf	___flmul@aexp^0,c
  5260   001748  AE15               	btfss	(___flmul@a+2)^0,7,c
  5261   00174A  EFA9  F00B         	goto	u2691
  5262   00174E  EFAB  F00B         	goto	u2690
  5263   001752                     u2691:
  5264   001752  EFAC  F00B         	goto	l2867
  5265   001756                     u2690:
  5266   001756  8020               	bsf	___flmul@aexp^0,0,c
  5267   001758                     l2867:
  5268   001758  5020               	movf	___flmul@aexp^0,w,c
  5269   00175A  B4D8               	btfsc	status,2,c
  5270   00175C  EFB2  F00B         	goto	u2701
  5271   001760  EFB4  F00B         	goto	u2700
  5272   001764                     u2701:
  5273   001764  EFC7  F00B         	goto	l2875
  5274   001768                     u2700:
  5275   001768  2820               	incf	___flmul@aexp^0,w,c
  5276   00176A  A4D8               	btfss	status,2,c
  5277   00176C  EFBA  F00B         	goto	u2711
  5278   001770  EFBC  F00B         	goto	u2710
  5279   001774                     u2711:
  5280   001774  EFC4  F00B         	goto	l2873
  5281   001778                     u2710:
  5282   001778  0E00               	movlw	0
  5283   00177A  6E13               	movwf	___flmul@a^0,c
  5284   00177C  0E00               	movlw	0
  5285   00177E  6E14               	movwf	(___flmul@a+1)^0,c
  5286   001780  0E00               	movlw	0
  5287   001782  6E15               	movwf	(___flmul@a+2)^0,c
  5288   001784  0E00               	movlw	0
  5289   001786  6E16               	movwf	(___flmul@a+3)^0,c
  5290   001788                     l2873:
  5291   001788  8E15               	bsf	(___flmul@a+2)^0,7,c
  5292   00178A  EFCF  F00B         	goto	l763
  5293   00178E                     l2875:
  5294   00178E  0E00               	movlw	0
  5295   001790  6E13               	movwf	___flmul@a^0,c
  5296   001792  0E00               	movlw	0
  5297   001794  6E14               	movwf	(___flmul@a+1)^0,c
  5298   001796  0E00               	movlw	0
  5299   001798  6E15               	movwf	(___flmul@a+2)^0,c
  5300   00179A  0E00               	movlw	0
  5301   00179C  6E16               	movwf	(___flmul@a+3)^0,c
  5302   00179E                     l763:
  5303   00179E  5020               	movf	___flmul@aexp^0,w,c
  5304   0017A0  B4D8               	btfsc	status,2,c
  5305   0017A2  EFD5  F00B         	goto	u2721
  5306   0017A6  EFD7  F00B         	goto	u2720
  5307   0017AA                     u2721:
  5308   0017AA  EFDF  F00B         	goto	l2879
  5309   0017AE                     u2720:
  5310   0017AE  5021               	movf	___flmul@bexp^0,w,c
  5311   0017B0  A4D8               	btfss	status,2,c
  5312   0017B2  EFDD  F00B         	goto	u2731
  5313   0017B6  EFDF  F00B         	goto	u2730
  5314   0017BA                     u2731:
  5315   0017BA  EFE9  F00B         	goto	l2883
  5316   0017BE                     u2730:
  5317   0017BE                     l2879:
  5318   0017BE  0E00               	movlw	0
  5319   0017C0  6E0F               	movwf	?___flmul^0,c
  5320   0017C2  0E00               	movlw	0
  5321   0017C4  6E10               	movwf	(?___flmul+1)^0,c
  5322   0017C6  0E00               	movlw	0
  5323   0017C8  6E11               	movwf	(?___flmul+2)^0,c
  5324   0017CA  0E00               	movlw	0
  5325   0017CC  6E12               	movwf	(?___flmul+3)^0,c
  5326   0017CE  EF81  F00D         	goto	l767
  5327   0017D2                     l2883:
  5328   0017D2  5015               	movf	(___flmul@a+2)^0,w,c
  5329   0017D4  020F               	mulwf	___flmul@b^0,c
  5330   0017D6  CFF3 F026          	movff	prodl,___flmul@temp
  5331   0017DA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5332   0017DE  5026               	movf	___flmul@temp^0,w,c
  5333   0017E0  6E1C               	movwf	___flmul@grs^0,c
  5334   0017E2  6A1D               	clrf	(___flmul@grs+1)^0,c
  5335   0017E4  6A1E               	clrf	(___flmul@grs+2)^0,c
  5336   0017E6  6A1F               	clrf	(___flmul@grs+3)^0,c
  5337   0017E8  5027               	movf	(___flmul@temp+1)^0,w,c
  5338   0017EA  6E22               	movwf	___flmul@prod^0,c
  5339   0017EC  6A23               	clrf	(___flmul@prod+1)^0,c
  5340   0017EE  6A24               	clrf	(___flmul@prod+2)^0,c
  5341   0017F0  6A25               	clrf	(___flmul@prod+3)^0,c
  5342   0017F2  5014               	movf	(___flmul@a+1)^0,w,c
  5343   0017F4  0210               	mulwf	(___flmul@b+1)^0,c
  5344   0017F6  CFF3 F026          	movff	prodl,___flmul@temp
  5345   0017FA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5346   0017FE  5026               	movf	___flmul@temp^0,w,c
  5347   001800  261C               	addwf	___flmul@grs^0,f,c
  5348   001802  0E00               	movlw	0
  5349   001804  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5350   001806  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5351   001808  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5352   00180A  5027               	movf	(___flmul@temp+1)^0,w,c
  5353   00180C  2622               	addwf	___flmul@prod^0,f,c
  5354   00180E  0E00               	movlw	0
  5355   001810  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5356   001812  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5357   001814  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5358   001816  5013               	movf	___flmul@a^0,w,c
  5359   001818  0211               	mulwf	(___flmul@b+2)^0,c
  5360   00181A  CFF3 F026          	movff	prodl,___flmul@temp
  5361   00181E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5362   001822  5026               	movf	___flmul@temp^0,w,c
  5363   001824  261C               	addwf	___flmul@grs^0,f,c
  5364   001826  0E00               	movlw	0
  5365   001828  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5366   00182A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5367   00182C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5368   00182E  5027               	movf	(___flmul@temp+1)^0,w,c
  5369   001830  2622               	addwf	___flmul@prod^0,f,c
  5370   001832  0E00               	movlw	0
  5371   001834  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5372   001836  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5373   001838  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5374   00183A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5375   00183E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5376   001842  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5377   001846  6A1C               	clrf	___flmul@grs^0,c
  5378   001848  5013               	movf	___flmul@a^0,w,c
  5379   00184A  0210               	mulwf	(___flmul@b+1)^0,c
  5380   00184C  CFF3 F026          	movff	prodl,___flmul@temp
  5381   001850  CFF4 F027          	movff	prodh,___flmul@temp+1
  5382   001854  5026               	movf	___flmul@temp^0,w,c
  5383   001856  261C               	addwf	___flmul@grs^0,f,c
  5384   001858  5027               	movf	(___flmul@temp+1)^0,w,c
  5385   00185A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5386   00185C  0E00               	movlw	0
  5387   00185E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5388   001860  0E00               	movlw	0
  5389   001862  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5390   001864  5014               	movf	(___flmul@a+1)^0,w,c
  5391   001866  020F               	mulwf	___flmul@b^0,c
  5392   001868  CFF3 F026          	movff	prodl,___flmul@temp
  5393   00186C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5394   001870  5026               	movf	___flmul@temp^0,w,c
  5395   001872  261C               	addwf	___flmul@grs^0,f,c
  5396   001874  5027               	movf	(___flmul@temp+1)^0,w,c
  5397   001876  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5398   001878  0E00               	movlw	0
  5399   00187A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5400   00187C  0E00               	movlw	0
  5401   00187E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5402   001880  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5403   001884  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5404   001888  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5405   00188C  6A1C               	clrf	___flmul@grs^0,c
  5406   00188E  5013               	movf	___flmul@a^0,w,c
  5407   001890  020F               	mulwf	___flmul@b^0,c
  5408   001892  CFF3 F026          	movff	prodl,___flmul@temp
  5409   001896  CFF4 F027          	movff	prodh,___flmul@temp+1
  5410   00189A  5026               	movf	___flmul@temp^0,w,c
  5411   00189C  261C               	addwf	___flmul@grs^0,f,c
  5412   00189E  5027               	movf	(___flmul@temp+1)^0,w,c
  5413   0018A0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5414   0018A2  0E00               	movlw	0
  5415   0018A4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5416   0018A6  0E00               	movlw	0
  5417   0018A8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5418   0018AA  5015               	movf	(___flmul@a+2)^0,w,c
  5419   0018AC  0210               	mulwf	(___flmul@b+1)^0,c
  5420   0018AE  CFF3 F026          	movff	prodl,___flmul@temp
  5421   0018B2  CFF4 F027          	movff	prodh,___flmul@temp+1
  5422   0018B6  5026               	movf	___flmul@temp^0,w,c
  5423   0018B8  2622               	addwf	___flmul@prod^0,f,c
  5424   0018BA  5027               	movf	(___flmul@temp+1)^0,w,c
  5425   0018BC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5426   0018BE  0E00               	movlw	0
  5427   0018C0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5428   0018C2  0E00               	movlw	0
  5429   0018C4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5430   0018C6  5014               	movf	(___flmul@a+1)^0,w,c
  5431   0018C8  0211               	mulwf	(___flmul@b+2)^0,c
  5432   0018CA  CFF3 F026          	movff	prodl,___flmul@temp
  5433   0018CE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5434   0018D2  5026               	movf	___flmul@temp^0,w,c
  5435   0018D4  2622               	addwf	___flmul@prod^0,f,c
  5436   0018D6  5027               	movf	(___flmul@temp+1)^0,w,c
  5437   0018D8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5438   0018DA  0E00               	movlw	0
  5439   0018DC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5440   0018DE  0E00               	movlw	0
  5441   0018E0  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5442   0018E2  5015               	movf	(___flmul@a+2)^0,w,c
  5443   0018E4  0211               	mulwf	(___flmul@b+2)^0,c
  5444   0018E6  CFF3 F026          	movff	prodl,___flmul@temp
  5445   0018EA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5446   0018EE  5026               	movf	___flmul@temp^0,w,c
  5447   0018F0  6E17               	movwf	??___flmul^0,c
  5448   0018F2  5027               	movf	(___flmul@temp+1)^0,w,c
  5449   0018F4  6E18               	movwf	(??___flmul+1)^0,c
  5450   0018F6  6A19               	clrf	(??___flmul+2)^0,c
  5451   0018F8  6A1A               	clrf	(??___flmul+3)^0,c
  5452   0018FA  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5453   0018FE  C018  F019         	movff	??___flmul+1,??___flmul+2
  5454   001902  C017  F018         	movff	??___flmul,??___flmul+1
  5455   001906  6A17               	clrf	??___flmul^0,c
  5456   001908  5017               	movf	??___flmul^0,w,c
  5457   00190A  2622               	addwf	___flmul@prod^0,f,c
  5458   00190C  5018               	movf	(??___flmul+1)^0,w,c
  5459   00190E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5460   001910  5019               	movf	(??___flmul+2)^0,w,c
  5461   001912  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5462   001914  501A               	movf	(??___flmul+3)^0,w,c
  5463   001916  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5464   001918  C01C  F017         	movff	___flmul@grs,??___flmul
  5465   00191C  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5466   001920  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5467   001924  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5468   001928  0E19               	movlw	25
  5469   00192A  EF9C  F00C         	goto	u2740
  5470   00192E                     u2745:
  5471   00192E  90D8               	bcf	status,0,c
  5472   001930  321A               	rrcf	(??___flmul+3)^0,f,c
  5473   001932  3219               	rrcf	(??___flmul+2)^0,f,c
  5474   001934  3218               	rrcf	(??___flmul+1)^0,f,c
  5475   001936  3217               	rrcf	??___flmul^0,f,c
  5476   001938                     u2740:
  5477   001938  2EE8               	decfsz	wreg,f,c
  5478   00193A  EF97  F00C         	goto	u2745
  5479   00193E  5017               	movf	??___flmul^0,w,c
  5480   001940  2622               	addwf	___flmul@prod^0,f,c
  5481   001942  5018               	movf	(??___flmul+1)^0,w,c
  5482   001944  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5483   001946  5019               	movf	(??___flmul+2)^0,w,c
  5484   001948  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5485   00194A  501A               	movf	(??___flmul+3)^0,w,c
  5486   00194C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5487   00194E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5488   001952  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5489   001956  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5490   00195A  6A1C               	clrf	___flmul@grs^0,c
  5491   00195C  5020               	movf	___flmul@aexp^0,w,c
  5492   00195E  C021  F017         	movff	___flmul@bexp,??___flmul
  5493   001962  6A18               	clrf	(??___flmul+1)^0,c
  5494   001964  2617               	addwf	??___flmul^0,f,c
  5495   001966  0E00               	movlw	0
  5496   001968  2218               	addwfc	(??___flmul+1)^0,f,c
  5497   00196A  0E82               	movlw	130
  5498   00196C  2417               	addwf	??___flmul^0,w,c
  5499   00196E  6E26               	movwf	___flmul@temp^0,c
  5500   001970  0EFF               	movlw	255
  5501   001972  2018               	addwfc	(??___flmul+1)^0,w,c
  5502   001974  6E27               	movwf	(___flmul@temp+1)^0,c
  5503   001976  EFD2  F00C         	goto	l2931
  5504   00197A                     l2925:
  5505   00197A  90D8               	bcf	status,0,c
  5506   00197C  3622               	rlcf	___flmul@prod^0,f,c
  5507   00197E  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5508   001980  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5509   001982  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5510   001984  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5511   001986  EFC7  F00C         	goto	u2751
  5512   00198A  EFC9  F00C         	goto	u2750
  5513   00198E                     u2751:
  5514   00198E  EFCA  F00C         	goto	l770
  5515   001992                     u2750:
  5516   001992  8022               	bsf	___flmul@prod^0,0,c
  5517   001994                     l770:
  5518   001994  90D8               	bcf	status,0,c
  5519   001996  361C               	rlcf	___flmul@grs^0,f,c
  5520   001998  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5521   00199A  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5522   00199C  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5523   00199E  0626               	decf	___flmul@temp^0,f,c
  5524   0019A0  A0D8               	btfss	status,0,c
  5525   0019A2  0627               	decf	(___flmul@temp+1)^0,f,c
  5526   0019A4                     l2931:
  5527   0019A4  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5528   0019A6  EFD7  F00C         	goto	u2761
  5529   0019AA  EFD9  F00C         	goto	u2760
  5530   0019AE                     u2761:
  5531   0019AE  EFBD  F00C         	goto	l2925
  5532   0019B2                     u2760:
  5533   0019B2  0E00               	movlw	0
  5534   0019B4  6E20               	movwf	___flmul@aexp^0,c
  5535   0019B6  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5536   0019B8  EFE0  F00C         	goto	u2771
  5537   0019BC  EFE2  F00C         	goto	u2770
  5538   0019C0                     u2771:
  5539   0019C0  EF06  F00D         	goto	l772
  5540   0019C4                     u2770:
  5541   0019C4  0EFF               	movlw	255
  5542   0019C6  141C               	andwf	___flmul@grs^0,w,c
  5543   0019C8  6E17               	movwf	??___flmul^0,c
  5544   0019CA  0EFF               	movlw	255
  5545   0019CC  141D               	andwf	(___flmul@grs+1)^0,w,c
  5546   0019CE  6E18               	movwf	(??___flmul+1)^0,c
  5547   0019D0  0EFF               	movlw	255
  5548   0019D2  141E               	andwf	(___flmul@grs+2)^0,w,c
  5549   0019D4  6E19               	movwf	(??___flmul+2)^0,c
  5550   0019D6  0E7F               	movlw	127
  5551   0019D8  141F               	andwf	(___flmul@grs+3)^0,w,c
  5552   0019DA  6E1A               	movwf	(??___flmul+3)^0,c
  5553   0019DC  5017               	movf	??___flmul^0,w,c
  5554   0019DE  1018               	iorwf	(??___flmul+1)^0,w,c
  5555   0019E0  1019               	iorwf	(??___flmul+2)^0,w,c
  5556   0019E2  101A               	iorwf	(??___flmul+3)^0,w,c
  5557   0019E4  B4D8               	btfsc	status,2,c
  5558   0019E6  EFF7  F00C         	goto	u2781
  5559   0019EA  EFF9  F00C         	goto	u2780
  5560   0019EE                     u2781:
  5561   0019EE  EFFD  F00C         	goto	l773
  5562   0019F2                     u2780:
  5563   0019F2                     l2939:
  5564   0019F2  0E01               	movlw	1
  5565   0019F4  6E20               	movwf	___flmul@aexp^0,c
  5566   0019F6  EF06  F00D         	goto	l772
  5567   0019FA                     l773:
  5568   0019FA  A022               	btfss	___flmul@prod^0,0,c
  5569   0019FC  EF02  F00D         	goto	u2791
  5570   001A00  EF04  F00D         	goto	u2790
  5571   001A04                     u2791:
  5572   001A04  EF06  F00D         	goto	l772
  5573   001A08                     u2790:
  5574   001A08  EFF9  F00C         	goto	l2939
  5575   001A0C                     l772:
  5576   001A0C  5020               	movf	___flmul@aexp^0,w,c
  5577   001A0E  B4D8               	btfsc	status,2,c
  5578   001A10  EF0C  F00D         	goto	u2801
  5579   001A14  EF0E  F00D         	goto	u2800
  5580   001A18                     u2801:
  5581   001A18  EF32  F00D         	goto	l2951
  5582   001A1C                     u2800:
  5583   001A1C  0E01               	movlw	1
  5584   001A1E  2622               	addwf	___flmul@prod^0,f,c
  5585   001A20  0E00               	movlw	0
  5586   001A22  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5587   001A24  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5588   001A26  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5589   001A28  A025               	btfss	(___flmul@prod+3)^0,0,c
  5590   001A2A  EF19  F00D         	goto	u2811
  5591   001A2E  EF1B  F00D         	goto	u2810
  5592   001A32                     u2811:
  5593   001A32  EF32  F00D         	goto	l2951
  5594   001A36                     u2810:
  5595   001A36  C022  F017         	movff	___flmul@prod,??___flmul
  5596   001A3A  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5597   001A3E  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5598   001A42  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5599   001A46  341A               	rlcf	(??___flmul+3)^0,w,c
  5600   001A48  321A               	rrcf	(??___flmul+3)^0,f,c
  5601   001A4A  3219               	rrcf	(??___flmul+2)^0,f,c
  5602   001A4C  3218               	rrcf	(??___flmul+1)^0,f,c
  5603   001A4E  3217               	rrcf	??___flmul^0,f,c
  5604   001A50  C017  F022         	movff	??___flmul,___flmul@prod
  5605   001A54  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5606   001A58  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5607   001A5C  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5608   001A60  4A26               	infsnz	___flmul@temp^0,f,c
  5609   001A62  2A27               	incf	(___flmul@temp+1)^0,f,c
  5610   001A64                     l2951:
  5611   001A64  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5612   001A66  EF3D  F00D         	goto	u2821
  5613   001A6A  5027               	movf	(___flmul@temp+1)^0,w,c
  5614   001A6C  E108               	bnz	u2820
  5615   001A6E  2826               	incf	___flmul@temp^0,w,c
  5616   001A70  A0D8               	btfss	status,0,c
  5617   001A72  EF3D  F00D         	goto	u2821
  5618   001A76  EF3F  F00D         	goto	u2820
  5619   001A7A                     u2821:
  5620   001A7A  EF49  F00D         	goto	l2955
  5621   001A7E                     u2820:
  5622   001A7E  0E00               	movlw	0
  5623   001A80  6E22               	movwf	___flmul@prod^0,c
  5624   001A82  0E00               	movlw	0
  5625   001A84  6E23               	movwf	(___flmul@prod+1)^0,c
  5626   001A86  0E80               	movlw	128
  5627   001A88  6E24               	movwf	(___flmul@prod+2)^0,c
  5628   001A8A  0E7F               	movlw	127
  5629   001A8C  6E25               	movwf	(___flmul@prod+3)^0,c
  5630   001A8E  EF77  F00D         	goto	l2967
  5631   001A92                     l2955:
  5632   001A92  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5633   001A94  EF56  F00D         	goto	u2830
  5634   001A98  5027               	movf	(___flmul@temp+1)^0,w,c
  5635   001A9A  E106               	bnz	u2831
  5636   001A9C  0426               	decf	___flmul@temp^0,w,c
  5637   001A9E  B0D8               	btfsc	status,0,c
  5638   001AA0  EF54  F00D         	goto	u2831
  5639   001AA4  EF56  F00D         	goto	u2830
  5640   001AA8                     u2831:
  5641   001AA8  EF62  F00D         	goto	l780
  5642   001AAC                     u2830:
  5643   001AAC  0E00               	movlw	0
  5644   001AAE  6E22               	movwf	___flmul@prod^0,c
  5645   001AB0  0E00               	movlw	0
  5646   001AB2  6E23               	movwf	(___flmul@prod+1)^0,c
  5647   001AB4  0E00               	movlw	0
  5648   001AB6  6E24               	movwf	(___flmul@prod+2)^0,c
  5649   001AB8  0E00               	movlw	0
  5650   001ABA  6E25               	movwf	(___flmul@prod+3)^0,c
  5651   001ABC  0E00               	movlw	0
  5652   001ABE  6E1B               	movwf	___flmul@sign^0,c
  5653   001AC0  EF77  F00D         	goto	l2967
  5654   001AC4                     l780:
  5655   001AC4  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5656   001AC8  0EFF               	movlw	255
  5657   001ACA  1622               	andwf	___flmul@prod^0,f,c
  5658   001ACC  0EFF               	movlw	255
  5659   001ACE  1623               	andwf	(___flmul@prod+1)^0,f,c
  5660   001AD0  0E7F               	movlw	127
  5661   001AD2  1624               	andwf	(___flmul@prod+2)^0,f,c
  5662   001AD4  0E00               	movlw	0
  5663   001AD6  1625               	andwf	(___flmul@prod+3)^0,f,c
  5664   001AD8  A021               	btfss	___flmul@bexp^0,0,c
  5665   001ADA  EF71  F00D         	goto	u2841
  5666   001ADE  EF73  F00D         	goto	u2840
  5667   001AE2                     u2841:
  5668   001AE2  EF74  F00D         	goto	l2965
  5669   001AE6                     u2840:
  5670   001AE6  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5671   001AE8                     l2965:
  5672   001AE8  90D8               	bcf	status,0,c
  5673   001AEA  3021               	rrcf	___flmul@bexp^0,w,c
  5674   001AEC  6E25               	movwf	(___flmul@prod+3)^0,c
  5675   001AEE                     l2967:
  5676   001AEE  501B               	movf	___flmul@sign^0,w,c
  5677   001AF0  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5678   001AF2  C022  F00F         	movff	___flmul@prod,?___flmul
  5679   001AF6  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5680   001AFA  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5681   001AFE  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5682   001B02                     l767:
  5683   001B02  0012               	return		;funcret
  5684   001B04                     __end_of___flmul:
  5685                           	callstack 0
  5686                           
  5687 ;; *************** function ___flge *****************
  5688 ;; Defined at:
  5689 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  ff1             4   39[COMRAM] unsigned char 
  5692 ;;  ff2             4   43[COMRAM] unsigned char 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;		None
  5695 ;; Return value:  Size  Location     Type
  5696 ;;		None               void
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5704 ;;      Params:         8       0       0       0       0       0       0       0       0
  5705 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5706 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5707 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5708 ;;Total ram usage:       12 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; This function calls:
  5711 ;;		Nothing
  5712 ;; This function is called by:
  5713 ;;		_efgtoa
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           	psect	text22
  5718   002768                     __ptext22:
  5719                           	callstack 0
  5720   002768                     ___flge:
  5721                           	callstack 26
  5722   002768  0E00               	movlw	0
  5723   00276A  1428               	andwf	___flge@ff1^0,w,c
  5724   00276C  6E30               	movwf	??___flge^0,c
  5725   00276E  0E00               	movlw	0
  5726   002770  1429               	andwf	(___flge@ff1+1)^0,w,c
  5727   002772  6E31               	movwf	(??___flge+1)^0,c
  5728   002774  0E80               	movlw	128
  5729   002776  142A               	andwf	(___flge@ff1+2)^0,w,c
  5730   002778  6E32               	movwf	(??___flge+2)^0,c
  5731   00277A  0E7F               	movlw	127
  5732   00277C  142B               	andwf	(___flge@ff1+3)^0,w,c
  5733   00277E  6E33               	movwf	(??___flge+3)^0,c
  5734   002780  5030               	movf	??___flge^0,w,c
  5735   002782  1031               	iorwf	(??___flge+1)^0,w,c
  5736   002784  1032               	iorwf	(??___flge+2)^0,w,c
  5737   002786  1033               	iorwf	(??___flge+3)^0,w,c
  5738   002788  A4D8               	btfss	status,2,c
  5739   00278A  EFC9  F013         	goto	u2881
  5740   00278E  EFCB  F013         	goto	u2880
  5741   002792                     u2881:
  5742   002792  EFD3  F013         	goto	l2999
  5743   002796                     u2880:
  5744   002796  0E00               	movlw	0
  5745   002798  6E28               	movwf	___flge@ff1^0,c
  5746   00279A  0E00               	movlw	0
  5747   00279C  6E29               	movwf	(___flge@ff1+1)^0,c
  5748   00279E  0E00               	movlw	0
  5749   0027A0  6E2A               	movwf	(___flge@ff1+2)^0,c
  5750   0027A2  0E00               	movlw	0
  5751   0027A4  6E2B               	movwf	(___flge@ff1+3)^0,c
  5752   0027A6                     l2999:
  5753   0027A6  0E00               	movlw	0
  5754   0027A8  142C               	andwf	___flge@ff2^0,w,c
  5755   0027AA  6E30               	movwf	??___flge^0,c
  5756   0027AC  0E00               	movlw	0
  5757   0027AE  142D               	andwf	(___flge@ff2+1)^0,w,c
  5758   0027B0  6E31               	movwf	(??___flge+1)^0,c
  5759   0027B2  0E80               	movlw	128
  5760   0027B4  142E               	andwf	(___flge@ff2+2)^0,w,c
  5761   0027B6  6E32               	movwf	(??___flge+2)^0,c
  5762   0027B8  0E7F               	movlw	127
  5763   0027BA  142F               	andwf	(___flge@ff2+3)^0,w,c
  5764   0027BC  6E33               	movwf	(??___flge+3)^0,c
  5765   0027BE  5030               	movf	??___flge^0,w,c
  5766   0027C0  1031               	iorwf	(??___flge+1)^0,w,c
  5767   0027C2  1032               	iorwf	(??___flge+2)^0,w,c
  5768   0027C4  1033               	iorwf	(??___flge+3)^0,w,c
  5769   0027C6  A4D8               	btfss	status,2,c
  5770   0027C8  EFE8  F013         	goto	u2891
  5771   0027CC  EFEA  F013         	goto	u2890
  5772   0027D0                     u2891:
  5773   0027D0  EFF2  F013         	goto	l3003
  5774   0027D4                     u2890:
  5775   0027D4  0E00               	movlw	0
  5776   0027D6  6E2C               	movwf	___flge@ff2^0,c
  5777   0027D8  0E00               	movlw	0
  5778   0027DA  6E2D               	movwf	(___flge@ff2+1)^0,c
  5779   0027DC  0E00               	movlw	0
  5780   0027DE  6E2E               	movwf	(___flge@ff2+2)^0,c
  5781   0027E0  0E00               	movlw	0
  5782   0027E2  6E2F               	movwf	(___flge@ff2+3)^0,c
  5783   0027E4                     l3003:
  5784   0027E4  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5785   0027E6  EFF7  F013         	goto	u2901
  5786   0027EA  EFF9  F013         	goto	u2900
  5787   0027EE                     u2901:
  5788   0027EE  EF02  F014         	goto	l3007
  5789   0027F2                     u2900:
  5790   0027F2  6C28               	negf	___flge@ff1^0,c
  5791   0027F4  1E29               	comf	(___flge@ff1+1)^0,f,c
  5792   0027F6  B0D8               	btfsc	status,0,c
  5793   0027F8  2A29               	incf	(___flge@ff1+1)^0,f,c
  5794   0027FA  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5795   0027FC  B0D8               	btfsc	status,0,c
  5796   0027FE  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5797   002800  0E80               	movlw	128
  5798   002802  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5799   002804                     l3007:
  5800   002804  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5801   002806  EF07  F014         	goto	u2911
  5802   00280A  EF09  F014         	goto	u2910
  5803   00280E                     u2911:
  5804   00280E  EF12  F014         	goto	l414
  5805   002812                     u2910:
  5806   002812  6C2C               	negf	___flge@ff2^0,c
  5807   002814  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5808   002816  B0D8               	btfsc	status,0,c
  5809   002818  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5810   00281A  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5811   00281C  B0D8               	btfsc	status,0,c
  5812   00281E  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5813   002820  0E80               	movlw	128
  5814   002822  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5815   002824                     l414:
  5816   002824  0E00               	movlw	0
  5817   002826  1A28               	xorwf	___flge@ff1^0,f,c
  5818   002828  0E00               	movlw	0
  5819   00282A  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5820   00282C  0E00               	movlw	0
  5821   00282E  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5822   002830  0E80               	movlw	128
  5823   002832  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5824   002834  0E00               	movlw	0
  5825   002836  1A2C               	xorwf	___flge@ff2^0,f,c
  5826   002838  0E00               	movlw	0
  5827   00283A  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5828   00283C  0E00               	movlw	0
  5829   00283E  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5830   002840  0E80               	movlw	128
  5831   002842  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5832   002844  502C               	movf	___flge@ff2^0,w,c
  5833   002846  5C28               	subwf	___flge@ff1^0,w,c
  5834   002848  502D               	movf	(___flge@ff2+1)^0,w,c
  5835   00284A  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5836   00284C  502E               	movf	(___flge@ff2+2)^0,w,c
  5837   00284E  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5838   002850  502F               	movf	(___flge@ff2+3)^0,w,c
  5839   002852  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5840   002854  B0D8               	btfsc	status,0,c
  5841   002856  EF2F  F014         	goto	u2921
  5842   00285A  EF31  F014         	goto	u2920
  5843   00285E                     u2921:
  5844   00285E  EF34  F014         	goto	l3013
  5845   002862                     u2920:
  5846   002862  90D8               	bcf	status,0,c
  5847   002864  EF35  F014         	goto	l419
  5848   002868                     l3013:
  5849   002868  80D8               	bsf	status,0,c
  5850   00286A                     l419:
  5851   00286A  0012               	return		;funcret
  5852   00286C                     __end_of___flge:
  5853                           	callstack 0
  5854                           
  5855 ;; *************** function ___fleq *****************
  5856 ;; Defined at:
  5857 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  ff1             4    0[COMRAM] unsigned char 
  5860 ;;  ff2             4    4[COMRAM] unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;		None
  5863 ;; Return value:  Size  Location     Type
  5864 ;;		None               void
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5872 ;;      Params:         8       0       0       0       0       0       0       0       0
  5873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5874 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5875 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5876 ;;Total ram usage:       12 bytes
  5877 ;; Hardware stack levels used: 1
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_efgtoa
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text23
  5886   002BF8                     __ptext23:
  5887                           	callstack 0
  5888   002BF8                     ___fleq:
  5889                           	callstack 26
  5890   002BF8  0E00               	movlw	0
  5891   002BFA  1401               	andwf	___fleq@ff1^0,w,c
  5892   002BFC  6E09               	movwf	??___fleq^0,c
  5893   002BFE  0E00               	movlw	0
  5894   002C00  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5895   002C02  6E0A               	movwf	(??___fleq+1)^0,c
  5896   002C04  0E80               	movlw	128
  5897   002C06  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5898   002C08  6E0B               	movwf	(??___fleq+2)^0,c
  5899   002C0A  0E7F               	movlw	127
  5900   002C0C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5901   002C0E  6E0C               	movwf	(??___fleq+3)^0,c
  5902   002C10  5009               	movf	??___fleq^0,w,c
  5903   002C12  100A               	iorwf	(??___fleq+1)^0,w,c
  5904   002C14  100B               	iorwf	(??___fleq+2)^0,w,c
  5905   002C16  100C               	iorwf	(??___fleq+3)^0,w,c
  5906   002C18  A4D8               	btfss	status,2,c
  5907   002C1A  EF11  F016         	goto	u2851
  5908   002C1E  EF13  F016         	goto	u2850
  5909   002C22                     u2851:
  5910   002C22  EF1B  F016         	goto	l2983
  5911   002C26                     u2850:
  5912   002C26  0E00               	movlw	0
  5913   002C28  6E01               	movwf	___fleq@ff1^0,c
  5914   002C2A  0E00               	movlw	0
  5915   002C2C  6E02               	movwf	(___fleq@ff1+1)^0,c
  5916   002C2E  0E00               	movlw	0
  5917   002C30  6E03               	movwf	(___fleq@ff1+2)^0,c
  5918   002C32  0E00               	movlw	0
  5919   002C34  6E04               	movwf	(___fleq@ff1+3)^0,c
  5920   002C36                     l2983:
  5921   002C36  0E00               	movlw	0
  5922   002C38  1405               	andwf	___fleq@ff2^0,w,c
  5923   002C3A  6E09               	movwf	??___fleq^0,c
  5924   002C3C  0E00               	movlw	0
  5925   002C3E  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5926   002C40  6E0A               	movwf	(??___fleq+1)^0,c
  5927   002C42  0E80               	movlw	128
  5928   002C44  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5929   002C46  6E0B               	movwf	(??___fleq+2)^0,c
  5930   002C48  0E7F               	movlw	127
  5931   002C4A  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5932   002C4C  6E0C               	movwf	(??___fleq+3)^0,c
  5933   002C4E  5009               	movf	??___fleq^0,w,c
  5934   002C50  100A               	iorwf	(??___fleq+1)^0,w,c
  5935   002C52  100B               	iorwf	(??___fleq+2)^0,w,c
  5936   002C54  100C               	iorwf	(??___fleq+3)^0,w,c
  5937   002C56  A4D8               	btfss	status,2,c
  5938   002C58  EF30  F016         	goto	u2861
  5939   002C5C  EF32  F016         	goto	u2860
  5940   002C60                     u2861:
  5941   002C60  EF3A  F016         	goto	l2987
  5942   002C64                     u2860:
  5943   002C64  0E00               	movlw	0
  5944   002C66  6E05               	movwf	___fleq@ff2^0,c
  5945   002C68  0E00               	movlw	0
  5946   002C6A  6E06               	movwf	(___fleq@ff2+1)^0,c
  5947   002C6C  0E00               	movlw	0
  5948   002C6E  6E07               	movwf	(___fleq@ff2+2)^0,c
  5949   002C70  0E00               	movlw	0
  5950   002C72  6E08               	movwf	(___fleq@ff2+3)^0,c
  5951   002C74                     l2987:
  5952   002C74  5005               	movf	___fleq@ff2^0,w,c
  5953   002C76  1801               	xorwf	___fleq@ff1^0,w,c
  5954   002C78  E10F               	bnz	u2870
  5955   002C7A  5006               	movf	(___fleq@ff2+1)^0,w,c
  5956   002C7C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5957   002C7E  E10C               	bnz	u2870
  5958   002C80  5007               	movf	(___fleq@ff2+2)^0,w,c
  5959   002C82  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5960   002C84  E109               	bnz	u2870
  5961   002C86  5008               	movf	(___fleq@ff2+3)^0,w,c
  5962   002C88  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5963   002C8A  B4D8               	btfsc	status,2,c
  5964   002C8C  EF4A  F016         	goto	u2871
  5965   002C90  EF4C  F016         	goto	u2870
  5966   002C94                     u2871:
  5967   002C94  EF4F  F016         	goto	l2991
  5968   002C98                     u2870:
  5969   002C98  90D8               	bcf	status,0,c
  5970   002C9A  EF50  F016         	goto	l408
  5971   002C9E                     l2991:
  5972   002C9E  80D8               	bsf	status,0,c
  5973   002CA0                     l408:
  5974   002CA0  0012               	return		;funcret
  5975   002CA2                     __end_of___fleq:
  5976                           	callstack 0
  5977                           
  5978 ;; *************** function ___fldiv *****************
  5979 ;; Defined at:
  5980 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  b               4   39[COMRAM] unsigned char 
  5983 ;;  a               4   43[COMRAM] unsigned char 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  grs             4   58[COMRAM] unsigned long 
  5986 ;;  rem             4   51[COMRAM] unsigned long 
  5987 ;;  new_exp         2   56[COMRAM] short 
  5988 ;;  aexp            1   63[COMRAM] unsigned char 
  5989 ;;  bexp            1   62[COMRAM] unsigned char 
  5990 ;;  sign            1   55[COMRAM] unsigned char 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  4   39[COMRAM] unsigned char 
  5993 ;; Registers used:
  5994 ;;		wreg, status,2, status,0
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6000 ;;      Params:         8       0       0       0       0       0       0       0       0
  6001 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6002 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6003 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6004 ;;Total ram usage:       25 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; This function calls:
  6007 ;;		Nothing
  6008 ;; This function is called by:
  6009 ;;		_main
  6010 ;;		_efgtoa
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text24
  6015   001B04                     __ptext24:
  6016                           	callstack 0
  6017   001B04                     ___fldiv:
  6018                           	callstack 26
  6019   001B04  502B               	movf	(___fldiv@b+3)^0,w,c
  6020   001B06  0B80               	andlw	128
  6021   001B08  6E38               	movwf	___fldiv@sign^0,c
  6022   001B0A  502B               	movf	(___fldiv@b+3)^0,w,c
  6023   001B0C  242B               	addwf	(___fldiv@b+3)^0,w,c
  6024   001B0E  6E3F               	movwf	___fldiv@bexp^0,c
  6025   001B10  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6026   001B12  EF8D  F00D         	goto	u2431
  6027   001B16  EF8F  F00D         	goto	u2430
  6028   001B1A                     u2431:
  6029   001B1A  EF90  F00D         	goto	l2711
  6030   001B1E                     u2430:
  6031   001B1E  803F               	bsf	___fldiv@bexp^0,0,c
  6032   001B20                     l2711:
  6033   001B20  503F               	movf	___fldiv@bexp^0,w,c
  6034   001B22  B4D8               	btfsc	status,2,c
  6035   001B24  EF96  F00D         	goto	u2441
  6036   001B28  EF98  F00D         	goto	u2440
  6037   001B2C                     u2441:
  6038   001B2C  EFAD  F00D         	goto	l2721
  6039   001B30                     u2440:
  6040   001B30  283F               	incf	___fldiv@bexp^0,w,c
  6041   001B32  A4D8               	btfss	status,2,c
  6042   001B34  EF9E  F00D         	goto	u2451
  6043   001B38  EFA0  F00D         	goto	u2450
  6044   001B3C                     u2451:
  6045   001B3C  EFA8  F00D         	goto	l2717
  6046   001B40                     u2450:
  6047   001B40  0E00               	movlw	0
  6048   001B42  6E28               	movwf	___fldiv@b^0,c
  6049   001B44  0E00               	movlw	0
  6050   001B46  6E29               	movwf	(___fldiv@b+1)^0,c
  6051   001B48  0E00               	movlw	0
  6052   001B4A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6053   001B4C  0E00               	movlw	0
  6054   001B4E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6055   001B50                     l2717:
  6056   001B50  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6057   001B52  0E00               	movlw	0
  6058   001B54  6E2B               	movwf	(___fldiv@b+3)^0,c
  6059   001B56  EFB5  F00D         	goto	l2723
  6060   001B5A                     l2721:
  6061   001B5A  0E00               	movlw	0
  6062   001B5C  6E28               	movwf	___fldiv@b^0,c
  6063   001B5E  0E00               	movlw	0
  6064   001B60  6E29               	movwf	(___fldiv@b+1)^0,c
  6065   001B62  0E00               	movlw	0
  6066   001B64  6E2A               	movwf	(___fldiv@b+2)^0,c
  6067   001B66  0E00               	movlw	0
  6068   001B68  6E2B               	movwf	(___fldiv@b+3)^0,c
  6069   001B6A                     l2723:
  6070   001B6A  502F               	movf	(___fldiv@a+3)^0,w,c
  6071   001B6C  0B80               	andlw	128
  6072   001B6E  1A38               	xorwf	___fldiv@sign^0,f,c
  6073   001B70  502F               	movf	(___fldiv@a+3)^0,w,c
  6074   001B72  242F               	addwf	(___fldiv@a+3)^0,w,c
  6075   001B74  6E40               	movwf	___fldiv@aexp^0,c
  6076   001B76  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6077   001B78  EFC0  F00D         	goto	u2461
  6078   001B7C  EFC2  F00D         	goto	u2460
  6079   001B80                     u2461:
  6080   001B80  EFC3  F00D         	goto	l2731
  6081   001B84                     u2460:
  6082   001B84  8040               	bsf	___fldiv@aexp^0,0,c
  6083   001B86                     l2731:
  6084   001B86  5040               	movf	___fldiv@aexp^0,w,c
  6085   001B88  B4D8               	btfsc	status,2,c
  6086   001B8A  EFC9  F00D         	goto	u2471
  6087   001B8E  EFCB  F00D         	goto	u2470
  6088   001B92                     u2471:
  6089   001B92  EFE0  F00D         	goto	l2741
  6090   001B96                     u2470:
  6091   001B96  2840               	incf	___fldiv@aexp^0,w,c
  6092   001B98  A4D8               	btfss	status,2,c
  6093   001B9A  EFD1  F00D         	goto	u2481
  6094   001B9E  EFD3  F00D         	goto	u2480
  6095   001BA2                     u2481:
  6096   001BA2  EFDB  F00D         	goto	l2737
  6097   001BA6                     u2480:
  6098   001BA6  0E00               	movlw	0
  6099   001BA8  6E2C               	movwf	___fldiv@a^0,c
  6100   001BAA  0E00               	movlw	0
  6101   001BAC  6E2D               	movwf	(___fldiv@a+1)^0,c
  6102   001BAE  0E00               	movlw	0
  6103   001BB0  6E2E               	movwf	(___fldiv@a+2)^0,c
  6104   001BB2  0E00               	movlw	0
  6105   001BB4  6E2F               	movwf	(___fldiv@a+3)^0,c
  6106   001BB6                     l2737:
  6107   001BB6  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6108   001BB8  0E00               	movlw	0
  6109   001BBA  6E2F               	movwf	(___fldiv@a+3)^0,c
  6110   001BBC  EFE8  F00D         	goto	l2743
  6111   001BC0                     l2741:
  6112   001BC0  0E00               	movlw	0
  6113   001BC2  6E2C               	movwf	___fldiv@a^0,c
  6114   001BC4  0E00               	movlw	0
  6115   001BC6  6E2D               	movwf	(___fldiv@a+1)^0,c
  6116   001BC8  0E00               	movlw	0
  6117   001BCA  6E2E               	movwf	(___fldiv@a+2)^0,c
  6118   001BCC  0E00               	movlw	0
  6119   001BCE  6E2F               	movwf	(___fldiv@a+3)^0,c
  6120   001BD0                     l2743:
  6121   001BD0  502C               	movf	___fldiv@a^0,w,c
  6122   001BD2  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6123   001BD4  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6124   001BD6  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6125   001BD8  A4D8               	btfss	status,2,c
  6126   001BDA  EFF1  F00D         	goto	u2491
  6127   001BDE  EFF3  F00D         	goto	u2490
  6128   001BE2                     u2491:
  6129   001BE2  EF0B  F00E         	goto	l2755
  6130   001BE6                     u2490:
  6131   001BE6  0E00               	movlw	0
  6132   001BE8  6E28               	movwf	___fldiv@b^0,c
  6133   001BEA  0E00               	movlw	0
  6134   001BEC  6E29               	movwf	(___fldiv@b+1)^0,c
  6135   001BEE  0E00               	movlw	0
  6136   001BF0  6E2A               	movwf	(___fldiv@b+2)^0,c
  6137   001BF2  0E00               	movlw	0
  6138   001BF4  6E2B               	movwf	(___fldiv@b+3)^0,c
  6139   001BF6  0E80               	movlw	128
  6140   001BF8  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6141   001BFA  0E7F               	movlw	127
  6142   001BFC  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6143   001BFE                     l2749:
  6144   001BFE  5038               	movf	___fldiv@sign^0,w,c
  6145   001C00  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6146   001C02  C028  F028         	movff	___fldiv@b,?___fldiv
  6147   001C06  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6148   001C0A  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6149   001C0E  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6150   001C12  EF4E  F00F         	goto	l731
  6151   001C16                     l2755:
  6152   001C16  503F               	movf	___fldiv@bexp^0,w,c
  6153   001C18  A4D8               	btfss	status,2,c
  6154   001C1A  EF11  F00E         	goto	u2501
  6155   001C1E  EF13  F00E         	goto	u2500
  6156   001C22                     u2501:
  6157   001C22  EF1D  F00E         	goto	l2763
  6158   001C26                     u2500:
  6159   001C26  0E00               	movlw	0
  6160   001C28  6E28               	movwf	?___fldiv^0,c
  6161   001C2A  0E00               	movlw	0
  6162   001C2C  6E29               	movwf	(?___fldiv+1)^0,c
  6163   001C2E  0E00               	movlw	0
  6164   001C30  6E2A               	movwf	(?___fldiv+2)^0,c
  6165   001C32  0E00               	movlw	0
  6166   001C34  6E2B               	movwf	(?___fldiv+3)^0,c
  6167   001C36  EF4E  F00F         	goto	l731
  6168   001C3A                     l2763:
  6169   001C3A  5040               	movf	___fldiv@aexp^0,w,c
  6170   001C3C  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6171   001C40  6A31               	clrf	(??___fldiv+1)^0,c
  6172   001C42  5E30               	subwf	??___fldiv^0,f,c
  6173   001C44  0E00               	movlw	0
  6174   001C46  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6175   001C48  0E7F               	movlw	127
  6176   001C4A  2430               	addwf	??___fldiv^0,w,c
  6177   001C4C  6E39               	movwf	___fldiv@new_exp^0,c
  6178   001C4E  0E00               	movlw	0
  6179   001C50  2031               	addwfc	(??___fldiv+1)^0,w,c
  6180   001C52  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6181   001C54  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6182   001C58  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6183   001C5C  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6184   001C60  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6185   001C64  0E00               	movlw	0
  6186   001C66  6E28               	movwf	___fldiv@b^0,c
  6187   001C68  0E00               	movlw	0
  6188   001C6A  6E29               	movwf	(___fldiv@b+1)^0,c
  6189   001C6C  0E00               	movlw	0
  6190   001C6E  6E2A               	movwf	(___fldiv@b+2)^0,c
  6191   001C70  0E00               	movlw	0
  6192   001C72  6E2B               	movwf	(___fldiv@b+3)^0,c
  6193   001C74  0E00               	movlw	0
  6194   001C76  6E3B               	movwf	___fldiv@grs^0,c
  6195   001C78  0E00               	movlw	0
  6196   001C7A  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6197   001C7C  0E00               	movlw	0
  6198   001C7E  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6199   001C80  0E00               	movlw	0
  6200   001C82  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6201   001C84  0E00               	movlw	0
  6202   001C86  6E40               	movwf	___fldiv@aexp^0,c
  6203   001C88  EF7E  F00E         	goto	l733
  6204   001C8C                     l2773:
  6205   001C8C  5040               	movf	___fldiv@aexp^0,w,c
  6206   001C8E  B4D8               	btfsc	status,2,c
  6207   001C90  EF4C  F00E         	goto	u2511
  6208   001C94  EF4E  F00E         	goto	u2510
  6209   001C98                     u2511:
  6210   001C98  EF65  F00E         	goto	l2781
  6211   001C9C                     u2510:
  6212   001C9C  90D8               	bcf	status,0,c
  6213   001C9E  3634               	rlcf	___fldiv@rem^0,f,c
  6214   001CA0  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6215   001CA2  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6216   001CA4  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6217   001CA6  90D8               	bcf	status,0,c
  6218   001CA8  3628               	rlcf	___fldiv@b^0,f,c
  6219   001CAA  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6220   001CAC  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6221   001CAE  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6222   001CB0  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6223   001CB2  EF5D  F00E         	goto	u2521
  6224   001CB6  EF5F  F00E         	goto	u2520
  6225   001CBA                     u2521:
  6226   001CBA  EF60  F00E         	goto	l736
  6227   001CBE                     u2520:
  6228   001CBE  8028               	bsf	___fldiv@b^0,0,c
  6229   001CC0                     l736:
  6230   001CC0  90D8               	bcf	status,0,c
  6231   001CC2  363B               	rlcf	___fldiv@grs^0,f,c
  6232   001CC4  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6233   001CC6  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6234   001CC8  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6235   001CCA                     l2781:
  6236   001CCA  502C               	movf	___fldiv@a^0,w,c
  6237   001CCC  5C34               	subwf	___fldiv@rem^0,w,c
  6238   001CCE  502D               	movf	(___fldiv@a+1)^0,w,c
  6239   001CD0  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6240   001CD2  502E               	movf	(___fldiv@a+2)^0,w,c
  6241   001CD4  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6242   001CD6  502F               	movf	(___fldiv@a+3)^0,w,c
  6243   001CD8  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6244   001CDA  A0D8               	btfss	status,0,c
  6245   001CDC  EF72  F00E         	goto	u2531
  6246   001CE0  EF74  F00E         	goto	u2530
  6247   001CE4                     u2531:
  6248   001CE4  EF7D  F00E         	goto	l2787
  6249   001CE8                     u2530:
  6250   001CE8  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6251   001CEA  502C               	movf	___fldiv@a^0,w,c
  6252   001CEC  5E34               	subwf	___fldiv@rem^0,f,c
  6253   001CEE  502D               	movf	(___fldiv@a+1)^0,w,c
  6254   001CF0  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6255   001CF2  502E               	movf	(___fldiv@a+2)^0,w,c
  6256   001CF4  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6257   001CF6  502F               	movf	(___fldiv@a+3)^0,w,c
  6258   001CF8  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6259   001CFA                     l2787:
  6260   001CFA  2A40               	incf	___fldiv@aexp^0,f,c
  6261   001CFC                     l733:
  6262   001CFC  0E19               	movlw	25
  6263   001CFE  6440               	cpfsgt	___fldiv@aexp^0,c
  6264   001D00  EF84  F00E         	goto	u2541
  6265   001D04  EF86  F00E         	goto	u2540
  6266   001D08                     u2541:
  6267   001D08  EF46  F00E         	goto	l2773
  6268   001D0C                     u2540:
  6269   001D0C  5034               	movf	___fldiv@rem^0,w,c
  6270   001D0E  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6271   001D10  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6272   001D12  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6273   001D14  B4D8               	btfsc	status,2,c
  6274   001D16  EF8F  F00E         	goto	u2551
  6275   001D1A  EF91  F00E         	goto	u2550
  6276   001D1E                     u2551:
  6277   001D1E  EFA9  F00E         	goto	l2799
  6278   001D22                     u2550:
  6279   001D22  803B               	bsf	___fldiv@grs^0,0,c
  6280   001D24  EFA9  F00E         	goto	l2799
  6281   001D28                     l2793:
  6282   001D28  90D8               	bcf	status,0,c
  6283   001D2A  3628               	rlcf	___fldiv@b^0,f,c
  6284   001D2C  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6285   001D2E  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6286   001D30  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6287   001D32  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6288   001D34  EF9E  F00E         	goto	u2561
  6289   001D38  EFA0  F00E         	goto	u2560
  6290   001D3C                     u2561:
  6291   001D3C  EFA1  F00E         	goto	l742
  6292   001D40                     u2560:
  6293   001D40  8028               	bsf	___fldiv@b^0,0,c
  6294   001D42                     l742:
  6295   001D42  90D8               	bcf	status,0,c
  6296   001D44  363B               	rlcf	___fldiv@grs^0,f,c
  6297   001D46  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6298   001D48  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6299   001D4A  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6300   001D4C  0639               	decf	___fldiv@new_exp^0,f,c
  6301   001D4E  A0D8               	btfss	status,0,c
  6302   001D50  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6303   001D52                     l2799:
  6304   001D52  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6305   001D54  EFAE  F00E         	goto	u2571
  6306   001D58  EFB0  F00E         	goto	u2570
  6307   001D5C                     u2571:
  6308   001D5C  EF94  F00E         	goto	l2793
  6309   001D60                     u2570:
  6310   001D60  0E00               	movlw	0
  6311   001D62  6E40               	movwf	___fldiv@aexp^0,c
  6312   001D64  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6313   001D66  EFB7  F00E         	goto	u2581
  6314   001D6A  EFB9  F00E         	goto	u2580
  6315   001D6E                     u2581:
  6316   001D6E  EFDD  F00E         	goto	l744
  6317   001D72                     u2580:
  6318   001D72  0EFF               	movlw	255
  6319   001D74  143B               	andwf	___fldiv@grs^0,w,c
  6320   001D76  6E30               	movwf	??___fldiv^0,c
  6321   001D78  0EFF               	movlw	255
  6322   001D7A  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6323   001D7C  6E31               	movwf	(??___fldiv+1)^0,c
  6324   001D7E  0EFF               	movlw	255
  6325   001D80  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6326   001D82  6E32               	movwf	(??___fldiv+2)^0,c
  6327   001D84  0E7F               	movlw	127
  6328   001D86  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6329   001D88  6E33               	movwf	(??___fldiv+3)^0,c
  6330   001D8A  5030               	movf	??___fldiv^0,w,c
  6331   001D8C  1031               	iorwf	(??___fldiv+1)^0,w,c
  6332   001D8E  1032               	iorwf	(??___fldiv+2)^0,w,c
  6333   001D90  1033               	iorwf	(??___fldiv+3)^0,w,c
  6334   001D92  B4D8               	btfsc	status,2,c
  6335   001D94  EFCE  F00E         	goto	u2591
  6336   001D98  EFD0  F00E         	goto	u2590
  6337   001D9C                     u2591:
  6338   001D9C  EFD4  F00E         	goto	l745
  6339   001DA0                     u2590:
  6340   001DA0                     l2807:
  6341   001DA0  0E01               	movlw	1
  6342   001DA2  6E40               	movwf	___fldiv@aexp^0,c
  6343   001DA4  EFDD  F00E         	goto	l744
  6344   001DA8                     l745:
  6345   001DA8  A028               	btfss	___fldiv@b^0,0,c
  6346   001DAA  EFD9  F00E         	goto	u2601
  6347   001DAE  EFDB  F00E         	goto	u2600
  6348   001DB2                     u2601:
  6349   001DB2  EFDD  F00E         	goto	l744
  6350   001DB6                     u2600:
  6351   001DB6  EFD0  F00E         	goto	l2807
  6352   001DBA                     l744:
  6353   001DBA  5040               	movf	___fldiv@aexp^0,w,c
  6354   001DBC  B4D8               	btfsc	status,2,c
  6355   001DBE  EFE3  F00E         	goto	u2611
  6356   001DC2  EFE5  F00E         	goto	u2610
  6357   001DC6                     u2611:
  6358   001DC6  EF09  F00F         	goto	l2819
  6359   001DCA                     u2610:
  6360   001DCA  0E01               	movlw	1
  6361   001DCC  2628               	addwf	___fldiv@b^0,f,c
  6362   001DCE  0E00               	movlw	0
  6363   001DD0  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6364   001DD2  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6365   001DD4  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6366   001DD6  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6367   001DD8  EFF0  F00E         	goto	u2621
  6368   001DDC  EFF2  F00E         	goto	u2620
  6369   001DE0                     u2621:
  6370   001DE0  EF09  F00F         	goto	l2819
  6371   001DE4                     u2620:
  6372   001DE4  C028  F030         	movff	___fldiv@b,??___fldiv
  6373   001DE8  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6374   001DEC  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6375   001DF0  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6376   001DF4  3433               	rlcf	(??___fldiv+3)^0,w,c
  6377   001DF6  3233               	rrcf	(??___fldiv+3)^0,f,c
  6378   001DF8  3232               	rrcf	(??___fldiv+2)^0,f,c
  6379   001DFA  3231               	rrcf	(??___fldiv+1)^0,f,c
  6380   001DFC  3230               	rrcf	??___fldiv^0,f,c
  6381   001DFE  C030  F028         	movff	??___fldiv,___fldiv@b
  6382   001E02  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6383   001E06  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6384   001E0A  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6385   001E0E  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6386   001E10  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6387   001E12                     l2819:
  6388   001E12  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6389   001E14  EF14  F00F         	goto	u2631
  6390   001E18  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6391   001E1A  E108               	bnz	u2630
  6392   001E1C  2839               	incf	___fldiv@new_exp^0,w,c
  6393   001E1E  A0D8               	btfss	status,0,c
  6394   001E20  EF14  F00F         	goto	u2631
  6395   001E24  EF16  F00F         	goto	u2630
  6396   001E28                     u2631:
  6397   001E28  EF21  F00F         	goto	l2823
  6398   001E2C                     u2630:
  6399   001E2C  0E00               	movlw	0
  6400   001E2E  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6401   001E30  6839               	setf	___fldiv@new_exp^0,c
  6402   001E32  0E00               	movlw	0
  6403   001E34  6E28               	movwf	___fldiv@b^0,c
  6404   001E36  0E00               	movlw	0
  6405   001E38  6E29               	movwf	(___fldiv@b+1)^0,c
  6406   001E3A  0E00               	movlw	0
  6407   001E3C  6E2A               	movwf	(___fldiv@b+2)^0,c
  6408   001E3E  0E00               	movlw	0
  6409   001E40  6E2B               	movwf	(___fldiv@b+3)^0,c
  6410   001E42                     l2823:
  6411   001E42  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6412   001E44  EF2E  F00F         	goto	u2640
  6413   001E48  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6414   001E4A  E106               	bnz	u2641
  6415   001E4C  0439               	decf	___fldiv@new_exp^0,w,c
  6416   001E4E  B0D8               	btfsc	status,0,c
  6417   001E50  EF2C  F00F         	goto	u2641
  6418   001E54  EF2E  F00F         	goto	u2640
  6419   001E58                     u2641:
  6420   001E58  EF3C  F00F         	goto	l2827
  6421   001E5C                     u2640:
  6422   001E5C  0E00               	movlw	0
  6423   001E5E  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6424   001E60  0E00               	movlw	0
  6425   001E62  6E39               	movwf	___fldiv@new_exp^0,c
  6426   001E64  0E00               	movlw	0
  6427   001E66  6E28               	movwf	___fldiv@b^0,c
  6428   001E68  0E00               	movlw	0
  6429   001E6A  6E29               	movwf	(___fldiv@b+1)^0,c
  6430   001E6C  0E00               	movlw	0
  6431   001E6E  6E2A               	movwf	(___fldiv@b+2)^0,c
  6432   001E70  0E00               	movlw	0
  6433   001E72  6E2B               	movwf	(___fldiv@b+3)^0,c
  6434   001E74  0E00               	movlw	0
  6435   001E76  6E38               	movwf	___fldiv@sign^0,c
  6436   001E78                     l2827:
  6437   001E78  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6438   001E7C  A03F               	btfss	___fldiv@bexp^0,0,c
  6439   001E7E  EF43  F00F         	goto	u2651
  6440   001E82  EF45  F00F         	goto	u2650
  6441   001E86                     u2651:
  6442   001E86  EF48  F00F         	goto	l2833
  6443   001E8A                     u2650:
  6444   001E8A  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6445   001E8C  EF49  F00F         	goto	l2835
  6446   001E90                     l2833:
  6447   001E90  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6448   001E92                     l2835:
  6449   001E92  90D8               	bcf	status,0,c
  6450   001E94  303F               	rrcf	___fldiv@bexp^0,w,c
  6451   001E96  6E2B               	movwf	(___fldiv@b+3)^0,c
  6452   001E98  EFFF  F00D         	goto	l2749
  6453   001E9C                     l731:
  6454   001E9C  0012               	return		;funcret
  6455   001E9E                     __end_of___fldiv:
  6456                           	callstack 0
  6457                           
  6458 ;; *************** function _set_adc *****************
  6459 ;; Defined at:
  6460 ;;		line 99 in file "adc_lcd.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;		None
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  1    wreg      void 
  6467 ;; Registers used:
  6468 ;;		wreg, status,2
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6474 ;;      Params:         0       0       0       0       0       0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6478 ;;Total ram usage:        0 bytes
  6479 ;; Hardware stack levels used: 1
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_main
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           	psect	text25
  6488   0031E2                     __ptext25:
  6489                           	callstack 0
  6490   0031E2                     _set_adc:
  6491                           	callstack 30
  6492   0031E2                     
  6493                           ;adc_lcd.c: 100:     ANSELAbits.ANSA0 = 1;
  6494   0031E2  010F               	movlb	15	; () banked
  6495   0031E4  815B               	bsf	91,0,b	;volatile
  6496                           
  6497                           ;adc_lcd.c: 101:     TRISAbits.RA0 = 1;
  6498   0031E6  8092               	bsf	146,0,c	;volatile
  6499   0031E8                     
  6500                           ; BSR set to: 15
  6501                           ;adc_lcd.c: 102:     ADCON0 = 0x00;
  6502   0031E8  0E00               	movlw	0
  6503   0031EA  6EC2               	movwf	194,c	;volatile
  6504                           
  6505                           ;adc_lcd.c: 103:     ADCON1 = 0x00;
  6506   0031EC  0E00               	movlw	0
  6507   0031EE  6EC1               	movwf	193,c	;volatile
  6508                           
  6509                           ;adc_lcd.c: 104:     ADCON2 = 0b10011101;
  6510   0031F0  0E9D               	movlw	157
  6511   0031F2  6EC0               	movwf	192,c	;volatile
  6512   0031F4                     
  6513                           ; BSR set to: 15
  6514                           ;adc_lcd.c: 105:     ADCON0bits.ADON = 1;
  6515   0031F4  80C2               	bsf	194,0,c	;volatile
  6516   0031F6                     
  6517                           ; BSR set to: 15
  6518   0031F6  0012               	return		;funcret
  6519   0031F8                     __end_of_set_adc:
  6520                           	callstack 0
  6521                           
  6522 ;; *************** function ___xxtofl *****************
  6523 ;; Defined at:
  6524 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  sign            1    wreg     unsigned char 
  6527 ;;  val             4    0[COMRAM] long 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  sign            1    8[COMRAM] unsigned char 
  6530 ;;  arg             4   10[COMRAM] unsigned long 
  6531 ;;  exp             1    9[COMRAM] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  4    0[COMRAM] unsigned char 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6541 ;;      Params:         4       0       0       0       0       0       0       0       0
  6542 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6543 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6544 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6545 ;;Total ram usage:       14 bytes
  6546 ;; Hardware stack levels used: 1
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_main
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           	psect	text26
  6555   002380                     __ptext26:
  6556                           	callstack 0
  6557   002380                     ___xxtofl:
  6558                           	callstack 30
  6559                           
  6560                           ; BSR set to: 15
  6561                           ;incstack = 0
  6562                           ;___xxtofl@sign stored from wreg
  6563   002380  6E09               	movwf	___xxtofl@sign^0,c
  6564   002382  5009               	movf	___xxtofl@sign^0,w,c
  6565   002384  B4D8               	btfsc	status,2,c
  6566   002386  EFC7  F011         	goto	u3781
  6567   00238A  EFC9  F011         	goto	u3780
  6568   00238E                     u3781:
  6569   00238E  EFEB  F011         	goto	l804
  6570   002392                     u3780:
  6571   002392  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6572   002394  EFD0  F011         	goto	u3790
  6573   002398  EFCE  F011         	goto	u3791
  6574   00239C                     u3791:
  6575   00239C  EFEB  F011         	goto	l804
  6576   0023A0                     u3790:
  6577   0023A0  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6578   0023A4  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6579   0023A8  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6580   0023AC  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6581   0023B0  1E05               	comf	??___xxtofl^0,f,c
  6582   0023B2  1E06               	comf	(??___xxtofl+1)^0,f,c
  6583   0023B4  1E07               	comf	(??___xxtofl+2)^0,f,c
  6584   0023B6  1E08               	comf	(??___xxtofl+3)^0,f,c
  6585   0023B8  2A05               	incf	??___xxtofl^0,f,c
  6586   0023BA  0E00               	movlw	0
  6587   0023BC  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6588   0023BE  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6589   0023C0  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6590   0023C2  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6591   0023C6  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6592   0023CA  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6593   0023CE  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6594   0023D2  EFF3  F011         	goto	l3685
  6595   0023D6                     l804:
  6596   0023D6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6597   0023DA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6598   0023DE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6599   0023E2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6600   0023E6                     l3685:
  6601   0023E6  5001               	movf	___xxtofl@val^0,w,c
  6602   0023E8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6603   0023EA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6604   0023EC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6605   0023EE  A4D8               	btfss	status,2,c
  6606   0023F0  EFFC  F011         	goto	u3801
  6607   0023F4  EFFE  F011         	goto	u3800
  6608   0023F8                     u3801:
  6609   0023F8  EF08  F012         	goto	l3691
  6610   0023FC                     u3800:
  6611   0023FC  0E00               	movlw	0
  6612   0023FE  6E01               	movwf	?___xxtofl^0,c
  6613   002400  0E00               	movlw	0
  6614   002402  6E02               	movwf	(?___xxtofl+1)^0,c
  6615   002404  0E00               	movlw	0
  6616   002406  6E03               	movwf	(?___xxtofl+2)^0,c
  6617   002408  0E00               	movlw	0
  6618   00240A  6E04               	movwf	(?___xxtofl+3)^0,c
  6619   00240C  EF99  F012         	goto	l807
  6620   002410                     l3691:
  6621   002410  0E96               	movlw	150
  6622   002412  6E0A               	movwf	___xxtofl@exp^0,c
  6623   002414  EF12  F012         	goto	l3695
  6624   002418                     l3693:
  6625   002418  2A0A               	incf	___xxtofl@exp^0,f,c
  6626   00241A  90D8               	bcf	status,0,c
  6627   00241C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6628   00241E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6629   002420  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6630   002422  320B               	rrcf	___xxtofl@arg^0,f,c
  6631   002424                     l3695:
  6632   002424  0E00               	movlw	0
  6633   002426  140B               	andwf	___xxtofl@arg^0,w,c
  6634   002428  6E05               	movwf	??___xxtofl^0,c
  6635   00242A  0E00               	movlw	0
  6636   00242C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6637   00242E  6E06               	movwf	(??___xxtofl+1)^0,c
  6638   002430  0E00               	movlw	0
  6639   002432  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6640   002434  6E07               	movwf	(??___xxtofl+2)^0,c
  6641   002436  0EFE               	movlw	254
  6642   002438  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6643   00243A  6E08               	movwf	(??___xxtofl+3)^0,c
  6644   00243C  5005               	movf	??___xxtofl^0,w,c
  6645   00243E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6646   002440  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6647   002442  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6648   002444  A4D8               	btfss	status,2,c
  6649   002446  EF27  F012         	goto	u3811
  6650   00244A  EF29  F012         	goto	u3810
  6651   00244E                     u3811:
  6652   00244E  EF0C  F012         	goto	l3693
  6653   002452                     u3810:
  6654   002452  EF37  F012         	goto	l811
  6655   002456                     l3697:
  6656   002456  2A0A               	incf	___xxtofl@exp^0,f,c
  6657   002458  0E01               	movlw	1
  6658   00245A  260B               	addwf	___xxtofl@arg^0,f,c
  6659   00245C  0E00               	movlw	0
  6660   00245E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6661   002460  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6662   002462  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6663   002464  90D8               	bcf	status,0,c
  6664   002466  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6665   002468  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6666   00246A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6667   00246C  320B               	rrcf	___xxtofl@arg^0,f,c
  6668   00246E                     l811:
  6669   00246E  0E00               	movlw	0
  6670   002470  140B               	andwf	___xxtofl@arg^0,w,c
  6671   002472  6E05               	movwf	??___xxtofl^0,c
  6672   002474  0E00               	movlw	0
  6673   002476  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6674   002478  6E06               	movwf	(??___xxtofl+1)^0,c
  6675   00247A  0E00               	movlw	0
  6676   00247C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6677   00247E  6E07               	movwf	(??___xxtofl+2)^0,c
  6678   002480  0EFF               	movlw	255
  6679   002482  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6680   002484  6E08               	movwf	(??___xxtofl+3)^0,c
  6681   002486  5005               	movf	??___xxtofl^0,w,c
  6682   002488  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6683   00248A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6684   00248C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6685   00248E  A4D8               	btfss	status,2,c
  6686   002490  EF4C  F012         	goto	u3821
  6687   002494  EF4E  F012         	goto	u3820
  6688   002498                     u3821:
  6689   002498  EF2B  F012         	goto	l3697
  6690   00249C                     u3820:
  6691   00249C  EF56  F012         	goto	l3705
  6692   0024A0                     l3703:
  6693   0024A0  060A               	decf	___xxtofl@exp^0,f,c
  6694   0024A2  90D8               	bcf	status,0,c
  6695   0024A4  360B               	rlcf	___xxtofl@arg^0,f,c
  6696   0024A6  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6697   0024A8  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6698   0024AA  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6699   0024AC                     l3705:
  6700   0024AC  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6701   0024AE  EF5B  F012         	goto	u3831
  6702   0024B2  EF5D  F012         	goto	u3830
  6703   0024B6                     u3831:
  6704   0024B6  EF65  F012         	goto	l818
  6705   0024BA                     u3830:
  6706   0024BA  0E02               	movlw	2
  6707   0024BC  600A               	cpfslt	___xxtofl@exp^0,c
  6708   0024BE  EF63  F012         	goto	u3841
  6709   0024C2  EF65  F012         	goto	u3840
  6710   0024C6                     u3841:
  6711   0024C6  EF50  F012         	goto	l3703
  6712   0024CA                     u3840:
  6713   0024CA                     l818:
  6714   0024CA  B00A               	btfsc	___xxtofl@exp^0,0,c
  6715   0024CC  EF6A  F012         	goto	u3851
  6716   0024D0  EF6C  F012         	goto	u3850
  6717   0024D4                     u3851:
  6718   0024D4  EF6D  F012         	goto	l3711
  6719   0024D8                     u3850:
  6720   0024D8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6721   0024DA                     l3711:
  6722   0024DA  90D8               	bcf	status,0,c
  6723   0024DC  320A               	rrcf	___xxtofl@exp^0,f,c
  6724   0024DE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6725   0024E2  6A06               	clrf	(??___xxtofl+1)^0,c
  6726   0024E4  6A07               	clrf	(??___xxtofl+2)^0,c
  6727   0024E6  6A08               	clrf	(??___xxtofl+3)^0,c
  6728   0024E8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6729   0024EC  6A07               	clrf	(??___xxtofl+2)^0,c
  6730   0024EE  6A06               	clrf	(??___xxtofl+1)^0,c
  6731   0024F0  6A05               	clrf	??___xxtofl^0,c
  6732   0024F2  5005               	movf	??___xxtofl^0,w,c
  6733   0024F4  120B               	iorwf	___xxtofl@arg^0,f,c
  6734   0024F6  5006               	movf	(??___xxtofl+1)^0,w,c
  6735   0024F8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6736   0024FA  5007               	movf	(??___xxtofl+2)^0,w,c
  6737   0024FC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6738   0024FE  5008               	movf	(??___xxtofl+3)^0,w,c
  6739   002500  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6740   002502  5009               	movf	___xxtofl@sign^0,w,c
  6741   002504  B4D8               	btfsc	status,2,c
  6742   002506  EF87  F012         	goto	u3861
  6743   00250A  EF89  F012         	goto	u3860
  6744   00250E                     u3861:
  6745   00250E  EF91  F012         	goto	l3721
  6746   002512                     u3860:
  6747   002512  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6748   002514  EF90  F012         	goto	u3870
  6749   002518  EF8E  F012         	goto	u3871
  6750   00251C                     u3871:
  6751   00251C  EF91  F012         	goto	l3721
  6752   002520                     u3870:
  6753   002520  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6754   002522                     l3721:
  6755   002522  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6756   002526  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6757   00252A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6758   00252E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6759   002532                     l807:
  6760   002532  0012               	return		;funcret
  6761   002534                     __end_of___xxtofl:
  6762                           	callstack 0
  6763                           
  6764 ;; *************** function _Lcd_Write_String *****************
  6765 ;; Defined at:
  6766 ;;		line 104 in file "lcd.c"
  6767 ;; Parameters:    Size  Location     Type
  6768 ;;  a               2    4[COMRAM] PTR const unsigned char 
  6769 ;;		 -> buffer(20), 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  i               2    6[COMRAM] int 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6781 ;;      Params:         2       0       0       0       0       0       0       0       0
  6782 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6784 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6785 ;;Total ram usage:        4 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 2
  6788 ;; This function calls:
  6789 ;;		_Lcd_Write_Char
  6790 ;; This function is called by:
  6791 ;;		_main
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text27
  6796   0030F4                     __ptext27:
  6797                           	callstack 0
  6798   0030F4                     _Lcd_Write_String:
  6799                           	callstack 28
  6800   0030F4                     
  6801                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  6802   0030F4  0E00               	movlw	0
  6803   0030F6  6E08               	movwf	(Lcd_Write_String@i+1)^0,c
  6804   0030F8  0E00               	movlw	0
  6805   0030FA  6E07               	movwf	Lcd_Write_String@i^0,c
  6806   0030FC  EF8B  F018         	goto	l3659
  6807   003100                     l3655:
  6808                           
  6809                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  6810   003100  5007               	movf	Lcd_Write_String@i^0,w,c
  6811   003102  2405               	addwf	Lcd_Write_String@a^0,w,c
  6812   003104  6ED9               	movwf	fsr2l,c
  6813   003106  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  6814   003108  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6815   00310A  6EDA               	movwf	fsr2h,c
  6816   00310C  50DF               	movf	indf2,w,c
  6817   00310E  ECB6  F018         	call	_Lcd_Write_Char
  6818   003112  4A07               	infsnz	Lcd_Write_String@i^0,f,c
  6819   003114  2A08               	incf	(Lcd_Write_String@i+1)^0,f,c
  6820   003116                     l3659:
  6821   003116  5007               	movf	Lcd_Write_String@i^0,w,c
  6822   003118  2405               	addwf	Lcd_Write_String@a^0,w,c
  6823   00311A  6ED9               	movwf	fsr2l,c
  6824   00311C  5008               	movf	(Lcd_Write_String@i+1)^0,w,c
  6825   00311E  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6826   003120  6EDA               	movwf	fsr2h,c
  6827   003122  50DF               	movf	indf2,w,c
  6828   003124  A4D8               	btfss	status,2,c
  6829   003126  EF97  F018         	goto	u3771
  6830   00312A  EF99  F018         	goto	u3770
  6831   00312E                     u3771:
  6832   00312E  EF80  F018         	goto	l3655
  6833   003132                     u3770:
  6834   003132  0012               	return		;funcret
  6835   003134                     __end_of_Lcd_Write_String:
  6836                           	callstack 0
  6837                           
  6838 ;; *************** function _Lcd_Write_Char *****************
  6839 ;; Defined at:
  6840 ;;		line 88 in file "lcd.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  a               1    wreg     unsigned char 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  a               1    3[COMRAM] unsigned char 
  6845 ;;  y               1    2[COMRAM] unsigned char 
  6846 ;;  temp            1    1[COMRAM] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  1    wreg      void 
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0, cstack
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6856 ;;      Params:         0       0       0       0       0       0       0       0       0
  6857 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6859 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6860 ;;Total ram usage:        3 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; Hardware stack levels required when called: 1
  6863 ;; This function calls:
  6864 ;;		_Lcd_Port
  6865 ;; This function is called by:
  6866 ;;		_Lcd_Write_String
  6867 ;;		_Lcd_CGRAM_CreateChar
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text28
  6872   00316C                     __ptext28:
  6873                           	callstack 0
  6874   00316C                     _Lcd_Write_Char:
  6875                           	callstack 28
  6876                           
  6877                           ;incstack = 0
  6878                           ;Lcd_Write_Char@a stored from wreg
  6879   00316C  6E04               	movwf	Lcd_Write_Char@a^0,c
  6880   00316E                     
  6881                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  6882   00316E  5004               	movf	Lcd_Write_Char@a^0,w,c
  6883   003170  0B0F               	andlw	15
  6884   003172  6E02               	movwf	Lcd_Write_Char@temp^0,c
  6885                           
  6886                           ;lcd.c: 92:     y = a&0xF0;
  6887   003174  5004               	movf	Lcd_Write_Char@a^0,w,c
  6888   003176  0BF0               	andlw	240
  6889   003178  6E03               	movwf	Lcd_Write_Char@y^0,c
  6890   00317A                     
  6891                           ;lcd.c: 93:     LATDbits.LD2 = 1;
  6892   00317A  848C               	bsf	140,2,c	;volatile
  6893   00317C                     
  6894                           ;lcd.c: 94:     Lcd_Port(y>>4);
  6895   00317C  3803               	swapf	Lcd_Write_Char@y^0,w,c
  6896   00317E  0B0F               	andlw	15
  6897   003180  EC6E  F017         	call	_Lcd_Port
  6898   003184                     
  6899                           ;lcd.c: 95:     LATDbits.LD3 = 1;
  6900   003184  868C               	bsf	140,3,c	;volatile
  6901   003186                     
  6902                           ;lcd.c: 96:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  6903   003186  0E28               	movlw	40
  6904   003188                     u3987:
  6905   003188  2EE8               	decfsz	wreg,f,c
  6906   00318A  D7FE               	bra	u3987
  6907   00318C                     
  6908                           ;lcd.c: 97:     LATDbits.LD3 = 0;
  6909   00318C  968C               	bcf	140,3,c	;volatile
  6910   00318E                     
  6911                           ;lcd.c: 98:     Lcd_Port(temp);
  6912   00318E  5002               	movf	Lcd_Write_Char@temp^0,w,c
  6913   003190  EC6E  F017         	call	_Lcd_Port
  6914   003194                     
  6915                           ;lcd.c: 99:     LATDbits.LD3 = 1;
  6916   003194  868C               	bsf	140,3,c	;volatile
  6917   003196                     
  6918                           ;lcd.c: 100:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  6919   003196  0E28               	movlw	40
  6920   003198                     u3997:
  6921   003198  2EE8               	decfsz	wreg,f,c
  6922   00319A  D7FE               	bra	u3997
  6923   00319C                     
  6924                           ;lcd.c: 101:     LATDbits.LD3 = 0;
  6925   00319C  968C               	bcf	140,3,c	;volatile
  6926   00319E  0012               	return		;funcret
  6927   0031A0                     __end_of_Lcd_Write_Char:
  6928                           	callstack 0
  6929                           
  6930 ;; *************** function _Lcd_Set_Cursor *****************
  6931 ;; Defined at:
  6932 ;;		line 26 in file "lcd.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  a               1    wreg     unsigned char 
  6935 ;;  b               1    3[COMRAM] unsigned char 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  a               1    4[COMRAM] unsigned char 
  6938 ;;  temp            1    7[COMRAM] unsigned char 
  6939 ;;  y               1    6[COMRAM] unsigned char 
  6940 ;;  z               1    5[COMRAM] unsigned char 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, status,2, status,0, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6950 ;;      Params:         1       0       0       0       0       0       0       0       0
  6951 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6953 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6954 ;;Total ram usage:        5 bytes
  6955 ;; Hardware stack levels used: 1
  6956 ;; Hardware stack levels required when called: 2
  6957 ;; This function calls:
  6958 ;;		_Lcd_Cmd
  6959 ;; This function is called by:
  6960 ;;		_main
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text29
  6965   002A5C                     __ptext29:
  6966                           	callstack 0
  6967   002A5C                     _Lcd_Set_Cursor:
  6968                           	callstack 28
  6969                           
  6970                           ;incstack = 0
  6971                           ;Lcd_Set_Cursor@a stored from wreg
  6972   002A5C  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  6973   002A5E                     
  6974                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  6975   002A5E  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  6976   002A60  A4D8               	btfss	status,2,c
  6977   002A62  EF35  F015         	goto	u3731
  6978   002A66  EF37  F015         	goto	u3730
  6979   002A6A                     u3731:
  6980   002A6A  EF48  F015         	goto	l3597
  6981   002A6E                     u3730:
  6982   002A6E                     
  6983                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  6984   002A6E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  6985   002A70  0F7F               	addlw	127
  6986   002A72  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  6987                           
  6988                           ;lcd.c: 32:         z = temp>>4;
  6989   002A74  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  6990   002A76  0B0F               	andlw	15
  6991   002A78  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  6992                           
  6993                           ;lcd.c: 33:         y = temp & 0x0F;
  6994   002A7A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  6995   002A7C  0B0F               	andlw	15
  6996   002A7E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  6997   002A80                     
  6998                           ;lcd.c: 34:         Lcd_Cmd(z);
  6999   002A80  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7000   002A82  ECE1  F018         	call	_Lcd_Cmd
  7001   002A86                     
  7002                           ;lcd.c: 35:         Lcd_Cmd(y);
  7003   002A86  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7004   002A88  ECE1  F018         	call	_Lcd_Cmd
  7005                           
  7006                           ;lcd.c: 36:     }
  7007   002A8C  EF96  F015         	goto	l41
  7008   002A90                     l3597:
  7009   002A90  0E02               	movlw	2
  7010   002A92  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7011   002A94  A4D8               	btfss	status,2,c
  7012   002A96  EF4F  F015         	goto	u3741
  7013   002A9A  EF51  F015         	goto	u3740
  7014   002A9E                     u3741:
  7015   002A9E  EF62  F015         	goto	l3605
  7016   002AA2                     u3740:
  7017   002AA2                     
  7018                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  7019   002AA2  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7020   002AA4  0FBF               	addlw	191
  7021   002AA6  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7022                           
  7023                           ;lcd.c: 40:         z = temp>>4;
  7024   002AA8  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7025   002AAA  0B0F               	andlw	15
  7026   002AAC  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7027                           
  7028                           ;lcd.c: 41:         y = temp & 0x0F;
  7029   002AAE  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7030   002AB0  0B0F               	andlw	15
  7031   002AB2  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7032   002AB4                     
  7033                           ;lcd.c: 42:         Lcd_Cmd(z);
  7034   002AB4  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7035   002AB6  ECE1  F018         	call	_Lcd_Cmd
  7036   002ABA                     
  7037                           ;lcd.c: 43:         Lcd_Cmd(y);
  7038   002ABA  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7039   002ABC  ECE1  F018         	call	_Lcd_Cmd
  7040                           
  7041                           ;lcd.c: 44:     }
  7042   002AC0  EF96  F015         	goto	l41
  7043   002AC4                     l3605:
  7044   002AC4  0E03               	movlw	3
  7045   002AC6  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7046   002AC8  A4D8               	btfss	status,2,c
  7047   002ACA  EF69  F015         	goto	u3751
  7048   002ACE  EF6B  F015         	goto	u3750
  7049   002AD2                     u3751:
  7050   002AD2  EF7C  F015         	goto	l3613
  7051   002AD6                     u3750:
  7052   002AD6                     
  7053                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  7054   002AD6  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7055   002AD8  0F93               	addlw	147
  7056   002ADA  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7057                           
  7058                           ;lcd.c: 48:         z = temp>>4;
  7059   002ADC  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7060   002ADE  0B0F               	andlw	15
  7061   002AE0  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7062                           
  7063                           ;lcd.c: 49:         y = temp & 0x0F;
  7064   002AE2  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7065   002AE4  0B0F               	andlw	15
  7066   002AE6  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7067   002AE8                     
  7068                           ;lcd.c: 50:         Lcd_Cmd(z);
  7069   002AE8  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7070   002AEA  ECE1  F018         	call	_Lcd_Cmd
  7071   002AEE                     
  7072                           ;lcd.c: 51:         Lcd_Cmd(y);
  7073   002AEE  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7074   002AF0  ECE1  F018         	call	_Lcd_Cmd
  7075                           
  7076                           ;lcd.c: 52:     }
  7077   002AF4  EF96  F015         	goto	l41
  7078   002AF8                     l3613:
  7079   002AF8  0E04               	movlw	4
  7080   002AFA  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7081   002AFC  A4D8               	btfss	status,2,c
  7082   002AFE  EF83  F015         	goto	u3761
  7083   002B02  EF85  F015         	goto	u3760
  7084   002B06                     u3761:
  7085   002B06  EF96  F015         	goto	l37
  7086   002B0A                     u3760:
  7087   002B0A                     
  7088                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  7089   002B0A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7090   002B0C  0FD3               	addlw	211
  7091   002B0E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7092                           
  7093                           ;lcd.c: 56:         z = temp>>4;
  7094   002B10  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7095   002B12  0B0F               	andlw	15
  7096   002B14  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7097                           
  7098                           ;lcd.c: 57:         y = temp & 0x0F;
  7099   002B16  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7100   002B18  0B0F               	andlw	15
  7101   002B1A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7102   002B1C                     
  7103                           ;lcd.c: 58:         Lcd_Cmd(z);
  7104   002B1C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7105   002B1E  ECE1  F018         	call	_Lcd_Cmd
  7106   002B22                     
  7107                           ;lcd.c: 59:         Lcd_Cmd(y);
  7108   002B22  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7109   002B24  ECE1  F018         	call	_Lcd_Cmd
  7110   002B28  EF96  F015         	goto	l41
  7111   002B2C                     l37:
  7112   002B2C                     l41:
  7113   002B2C  0012               	return		;funcret
  7114   002B2E                     __end_of_Lcd_Set_Cursor:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function _Lcd_Init *****************
  7118 ;; Defined at:
  7119 ;;		line 63 in file "lcd.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, cstack
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7133 ;;      Params:         0       0       0       0       0       0       0       0       0
  7134 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7135 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7136 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7137 ;;Total ram usage:        1 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; Hardware stack levels required when called: 3
  7140 ;; This function calls:
  7141 ;;		_Lcd_Clear
  7142 ;;		_Lcd_Cmd
  7143 ;;		_Lcd_Port
  7144 ;; This function is called by:
  7145 ;;		_main
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text30
  7150   002CA2                     __ptext30:
  7151                           	callstack 0
  7152   002CA2                     _Lcd_Init:
  7153                           	callstack 27
  7154   002CA2                     
  7155                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  7156   002CA2  9495               	bcf	149,2,c	;volatile
  7157                           
  7158                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  7159   002CA4  9695               	bcf	149,3,c	;volatile
  7160                           
  7161                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  7162   002CA6  9895               	bcf	149,4,c	;volatile
  7163                           
  7164                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  7165   002CA8  9A95               	bcf	149,5,c	;volatile
  7166                           
  7167                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  7168   002CAA  9C95               	bcf	149,6,c	;volatile
  7169                           
  7170                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  7171   002CAC  9E95               	bcf	149,7,c	;volatile
  7172   002CAE                     
  7173                           ;lcd.c: 71:     Lcd_Port(0x00);
  7174   002CAE  0E00               	movlw	0
  7175   002CB0  EC6E  F017         	call	_Lcd_Port
  7176   002CB4                     
  7177                           ;lcd.c: 72:     _delay((unsigned long)((20)*(12000000/4000.0)));
  7178   002CB4  0E4E               	movlw	78
  7179   002CB6  6E04               	movwf	??_Lcd_Init^0,c
  7180   002CB8  0EEB               	movlw	235
  7181   002CBA                     u4007:
  7182   002CBA  2EE8               	decfsz	wreg,f,c
  7183   002CBC  D7FE               	bra	u4007
  7184   002CBE  2E04               	decfsz	??_Lcd_Init^0,f,c
  7185   002CC0  D7FC               	bra	u4007
  7186   002CC2  F000               	nop	
  7187   002CC4                     
  7188                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  7189   002CC4  0E03               	movlw	3
  7190   002CC6  ECE1  F018         	call	_Lcd_Cmd
  7191   002CCA                     
  7192                           ;lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000.0)));
  7193   002CCA  0E14               	movlw	20
  7194   002CCC  6E04               	movwf	??_Lcd_Init^0,c
  7195   002CCE  0E7A               	movlw	122
  7196   002CD0                     u4017:
  7197   002CD0  2EE8               	decfsz	wreg,f,c
  7198   002CD2  D7FE               	bra	u4017
  7199   002CD4  2E04               	decfsz	??_Lcd_Init^0,f,c
  7200   002CD6  D7FC               	bra	u4017
  7201   002CD8                     
  7202                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  7203   002CD8  0E03               	movlw	3
  7204   002CDA  ECE1  F018         	call	_Lcd_Cmd
  7205   002CDE                     
  7206                           ;lcd.c: 76:     _delay((unsigned long)((11)*(12000000/4000.0)));
  7207   002CDE  0E2B               	movlw	43
  7208   002CE0  6E04               	movwf	??_Lcd_Init^0,c
  7209   002CE2  0EDA               	movlw	218
  7210   002CE4                     u4027:
  7211   002CE4  2EE8               	decfsz	wreg,f,c
  7212   002CE6  D7FE               	bra	u4027
  7213   002CE8  2E04               	decfsz	??_Lcd_Init^0,f,c
  7214   002CEA  D7FC               	bra	u4027
  7215   002CEC  D000               	nop2	
  7216   002CEE                     
  7217                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  7218   002CEE  0E03               	movlw	3
  7219   002CF0  ECE1  F018         	call	_Lcd_Cmd
  7220   002CF4                     
  7221                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  7222   002CF4  0E02               	movlw	2
  7223   002CF6  ECE1  F018         	call	_Lcd_Cmd
  7224   002CFA                     
  7225                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  7226   002CFA  0E02               	movlw	2
  7227   002CFC  ECE1  F018         	call	_Lcd_Cmd
  7228   002D00                     
  7229                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  7230   002D00  0E08               	movlw	8
  7231   002D02  ECE1  F018         	call	_Lcd_Cmd
  7232   002D06                     
  7233                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  7234   002D06  0E00               	movlw	0
  7235   002D08  ECE1  F018         	call	_Lcd_Cmd
  7236   002D0C                     
  7237                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  7238   002D0C  0E0C               	movlw	12
  7239   002D0E  ECE1  F018         	call	_Lcd_Cmd
  7240   002D12                     
  7241                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  7242   002D12  0E00               	movlw	0
  7243   002D14  ECE1  F018         	call	_Lcd_Cmd
  7244   002D18                     
  7245                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  7246   002D18  0E06               	movlw	6
  7247   002D1A  ECE1  F018         	call	_Lcd_Cmd
  7248   002D1E                     
  7249                           ;lcd.c: 85:     Lcd_Clear();
  7250   002D1E  ECFC  F018         	call	_Lcd_Clear	;wreg free
  7251   002D22  0012               	return		;funcret
  7252   002D24                     __end_of_Lcd_Init:
  7253                           	callstack 0
  7254                           
  7255 ;; *************** function _Lcd_Clear *****************
  7256 ;; Defined at:
  7257 ;;		line 20 in file "lcd.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;		None
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;		None
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      void 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0
  7272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7274 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7275 ;;Total ram usage:        0 bytes
  7276 ;; Hardware stack levels used: 1
  7277 ;; Hardware stack levels required when called: 2
  7278 ;; This function calls:
  7279 ;;		_Lcd_Cmd
  7280 ;; This function is called by:
  7281 ;;		_Lcd_Init
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           	psect	text31
  7286   0031F8                     __ptext31:
  7287                           	callstack 0
  7288   0031F8                     _Lcd_Clear:
  7289                           	callstack 27
  7290   0031F8                     
  7291                           ;lcd.c: 22:     Lcd_Cmd(0);
  7292   0031F8  0E00               	movlw	0
  7293   0031FA  ECE1  F018         	call	_Lcd_Cmd
  7294                           
  7295                           ;lcd.c: 23:     Lcd_Cmd(1);
  7296   0031FE  0E01               	movlw	1
  7297   003200  ECE1  F018         	call	_Lcd_Cmd
  7298   003204  0012               	return		;funcret
  7299   003206                     __end_of_Lcd_Clear:
  7300                           	callstack 0
  7301                           
  7302 ;; *************** function _Lcd_Cmd *****************
  7303 ;; Defined at:
  7304 ;;		line 11 in file "lcd.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;  a               1    wreg     unsigned char 
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;  a               1    2[COMRAM] unsigned char 
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      void 
  7311 ;; Registers used:
  7312 ;;		wreg, status,2, cstack
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7318 ;;      Params:         0       0       0       0       0       0       0       0       0
  7319 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7320 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7321 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7322 ;;Total ram usage:        2 bytes
  7323 ;; Hardware stack levels used: 1
  7324 ;; Hardware stack levels required when called: 1
  7325 ;; This function calls:
  7326 ;;		_Lcd_Port
  7327 ;; This function is called by:
  7328 ;;		_Lcd_Clear
  7329 ;;		_Lcd_Set_Cursor
  7330 ;;		_Lcd_Init
  7331 ;;		_Lcd_Shift_Right
  7332 ;;		_Lcd_Shift_Left
  7333 ;;		_Lcd_Blink
  7334 ;;		_Lcd_NoBlink
  7335 ;;		_Lcd_CGRAM_Init
  7336 ;;		_Lcd_CGRAM_Close
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           	psect	text32
  7341   0031C2                     __ptext32:
  7342                           	callstack 0
  7343   0031C2                     _Lcd_Cmd:
  7344                           	callstack 28
  7345                           
  7346                           ;incstack = 0
  7347                           ;Lcd_Cmd@a stored from wreg
  7348   0031C2  6E03               	movwf	Lcd_Cmd@a^0,c
  7349   0031C4                     
  7350                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD2 = 0;
  7351   0031C4  948C               	bcf	140,2,c	;volatile
  7352   0031C6                     
  7353                           ;lcd.c: 14:     Lcd_Port(a);
  7354   0031C6  5003               	movf	Lcd_Cmd@a^0,w,c
  7355   0031C8  EC6E  F017         	call	_Lcd_Port
  7356   0031CC                     
  7357                           ;lcd.c: 15:     LATDbits.LD3 = 1;
  7358   0031CC  868C               	bsf	140,3,c	;volatile
  7359   0031CE                     
  7360                           ;lcd.c: 16:     _delay((unsigned long)((4)*(12000000/4000.0)));
  7361   0031CE  0E10               	movlw	16
  7362   0031D0  6E02               	movwf	??_Lcd_Cmd^0,c
  7363   0031D2  0E94               	movlw	148
  7364   0031D4                     u4037:
  7365   0031D4  2EE8               	decfsz	wreg,f,c
  7366   0031D6  D7FE               	bra	u4037
  7367   0031D8  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7368   0031DA  D7FC               	bra	u4037
  7369   0031DC  D000               	nop2	
  7370   0031DE                     
  7371                           ;lcd.c: 17:     LATDbits.LD3 = 0;
  7372   0031DE  968C               	bcf	140,3,c	;volatile
  7373   0031E0  0012               	return		;funcret
  7374   0031E2                     __end_of_Lcd_Cmd:
  7375                           	callstack 0
  7376                           
  7377 ;; *************** function _Lcd_Port *****************
  7378 ;; Defined at:
  7379 ;;		line 3 in file "lcd.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  a               1    wreg     unsigned char 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  a               1    0[COMRAM] unsigned char 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      void 
  7386 ;; Registers used:
  7387 ;;		wreg
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7393 ;;      Params:         0       0       0       0       0       0       0       0       0
  7394 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7396 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7397 ;;Total ram usage:        1 bytes
  7398 ;; Hardware stack levels used: 1
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_Lcd_Cmd
  7403 ;;		_Lcd_Init
  7404 ;;		_Lcd_Write_Char
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text33
  7409   002EDC                     __ptext33:
  7410                           	callstack 0
  7411   002EDC                     _Lcd_Port:
  7412                           	callstack 28
  7413                           
  7414                           ;incstack = 0
  7415                           ;Lcd_Port@a stored from wreg
  7416   002EDC  6E01               	movwf	Lcd_Port@a^0,c
  7417   002EDE                     
  7418                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  7419   002EDE  A001               	btfss	Lcd_Port@a^0,0,c
  7420   002EE0  EF74  F017         	goto	u3291
  7421   002EE4  EF76  F017         	goto	u3290
  7422   002EE8                     u3291:
  7423   002EE8  EF79  F017         	goto	l10
  7424   002EEC                     u3290:
  7425   002EEC  888C               	bsf	140,4,c	;volatile
  7426   002EEE  EF7A  F017         	goto	l3195
  7427   002EF2                     l10:
  7428   002EF2  988C               	bcf	140,4,c	;volatile
  7429   002EF4                     l3195:
  7430                           
  7431                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  7432   002EF4  A201               	btfss	Lcd_Port@a^0,1,c
  7433   002EF6  EF7F  F017         	goto	u3301
  7434   002EFA  EF81  F017         	goto	u3300
  7435   002EFE                     u3301:
  7436   002EFE  EF84  F017         	goto	l14
  7437   002F02                     u3300:
  7438   002F02  8A8C               	bsf	140,5,c	;volatile
  7439   002F04  EF85  F017         	goto	l3199
  7440   002F08                     l14:
  7441   002F08  9A8C               	bcf	140,5,c	;volatile
  7442   002F0A                     l3199:
  7443                           
  7444                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  7445   002F0A  A401               	btfss	Lcd_Port@a^0,2,c
  7446   002F0C  EF8A  F017         	goto	u3311
  7447   002F10  EF8C  F017         	goto	u3310
  7448   002F14                     u3311:
  7449   002F14  EF8F  F017         	goto	l18
  7450   002F18                     u3310:
  7451   002F18  8C8C               	bsf	140,6,c	;volatile
  7452   002F1A  EF90  F017         	goto	l3203
  7453   002F1E                     l18:
  7454   002F1E  9C8C               	bcf	140,6,c	;volatile
  7455   002F20                     l3203:
  7456                           
  7457                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  7458   002F20  A601               	btfss	Lcd_Port@a^0,3,c
  7459   002F22  EF95  F017         	goto	u3321
  7460   002F26  EF97  F017         	goto	u3320
  7461   002F2A                     u3321:
  7462   002F2A  EF9A  F017         	goto	l22
  7463   002F2E                     u3320:
  7464   002F2E  8E8C               	bsf	140,7,c	;volatile
  7465   002F30  EF9B  F017         	goto	l25
  7466   002F34                     l22:
  7467   002F34  9E8C               	bcf	140,7,c	;volatile
  7468   002F36                     l25:
  7469   002F36  0012               	return		;funcret
  7470   002F38                     __end_of_Lcd_Port:
  7471                           	callstack 0
  7472                           
  7473                           	psect	rparam
  7474   000000                     
  7475                           	psect	config
  7476                           
  7477                           ;Config register CONFIG1L @ 0x300000
  7478                           ;	PLL Selection
  7479                           ;	PLLSEL = PLL4X, 4x clock multiplier
  7480                           ;	PLL Enable Configuration bit
  7481                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  7482                           ;	CPU System Clock Postscaler
  7483                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  7484                           ;	Low Speed USB mode with 48 MHz system clock
  7485                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  7486   300000                     	org	3145728
  7487   300000  00                 	db	0
  7488                           
  7489                           ;Config register CONFIG1H @ 0x300001
  7490                           ;	Oscillator Selection
  7491                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  7492                           ;	Primary Oscillator Shutdown
  7493                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  7494                           ;	Fail-Safe Clock Monitor
  7495                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7496                           ;	Internal/External Oscillator Switchover
  7497                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7498   300001                     	org	3145729
  7499   300001  03                 	db	3
  7500                           
  7501                           ;Config register CONFIG2L @ 0x300002
  7502                           ;	Power-up Timer Enable
  7503                           ;	nPWRTEN = ON, Power up timer enabled
  7504                           ;	Brown-out Reset Enable
  7505                           ;	BOREN = ON, BOR controlled by firmware (SBOREN is enabled)
  7506                           ;	Brown-out Reset Voltage
  7507                           ;	BORV = 190, BOR set to 1.9V nominal
  7508                           ;	Low-Power Brown-out Reset
  7509                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  7510   300002                     	org	3145730
  7511   300002  5A                 	db	90
  7512                           
  7513                           ;Config register CONFIG2H @ 0x300003
  7514                           ;	Watchdog Timer Enable bits
  7515                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  7516                           ;	Watchdog Timer Postscaler
  7517                           ;	WDTPS = 32768, 1:32768
  7518   300003                     	org	3145731
  7519   300003  3C                 	db	60
  7520                           
  7521                           ; Padding undefined space
  7522   300004                     	org	3145732
  7523   300004  FF                 	db	255
  7524                           
  7525                           ;Config register CONFIG3H @ 0x300005
  7526                           ;	CCP2 MUX bit
  7527                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  7528                           ;	PORTB A/D Enable bit
  7529                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  7530                           ;	Timer3 Clock Input MUX bit
  7531                           ;	T3CMX = RC0, T3CKI function is on RC0
  7532                           ;	SDO Output MUX bit
  7533                           ;	SDOMX = RB3, SDO function is on RB3
  7534                           ;	Master Clear Reset Pin Enable
  7535                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  7536   300005                     	org	3145733
  7537   300005  D1                 	db	209
  7538                           
  7539                           ;Config register CONFIG4L @ 0x300006
  7540                           ;	Stack Full/Underflow Reset
  7541                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7542                           ;	Single-Supply ICSP Enable bit
  7543                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  7544                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  7545                           ;	ICPRT = OFF, ICPORT disabled
  7546                           ;	Extended Instruction Set Enable bit
  7547                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  7548                           ;	Background Debugger Enable bit
  7549                           ;	DEBUG = 0x1, unprogrammed default
  7550   300006                     	org	3145734
  7551   300006  85                 	db	133
  7552                           
  7553                           ; Padding undefined space
  7554   300007                     	org	3145735
  7555   300007  FF                 	db	255
  7556                           
  7557                           ;Config register CONFIG5L @ 0x300008
  7558                           ;	Block 0 Code Protect
  7559                           ;	CP0 = OFF, Block 0 is not code-protected
  7560                           ;	Block 1 Code Protect
  7561                           ;	CP1 = OFF, Block 1 is not code-protected
  7562                           ;	Block 2 Code Protect
  7563                           ;	CP2 = OFF, Block 2 is not code-protected
  7564                           ;	Block 3 Code Protect
  7565                           ;	CP3 = OFF, Block 3 is not code-protected
  7566   300008                     	org	3145736
  7567   300008  0F                 	db	15
  7568                           
  7569                           ;Config register CONFIG5H @ 0x300009
  7570                           ;	Boot Block Code Protect
  7571                           ;	CPB = OFF, Boot block is not code-protected
  7572                           ;	Data EEPROM Code Protect
  7573                           ;	CPD = OFF, Data EEPROM is not code-protected
  7574   300009                     	org	3145737
  7575   300009  C0                 	db	192
  7576                           
  7577                           ;Config register CONFIG6L @ 0x30000A
  7578                           ;	Block 0 Write Protect
  7579                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  7580                           ;	Block 1 Write Protect
  7581                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  7582                           ;	Block 2 Write Protect
  7583                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  7584                           ;	Block 3 Write Protect
  7585                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  7586   30000A                     	org	3145738
  7587   30000A  0F                 	db	15
  7588                           
  7589                           ;Config register CONFIG6H @ 0x30000B
  7590                           ;	Configuration Registers Write Protect
  7591                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7592                           ;	Boot Block Write Protect
  7593                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  7594                           ;	Data EEPROM Write Protect
  7595                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7596   30000B                     	org	3145739
  7597   30000B  E0                 	db	224
  7598                           
  7599                           ;Config register CONFIG7L @ 0x30000C
  7600                           ;	Block 0 Table Read Protect
  7601                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  7602                           ;	Block 1 Table Read Protect
  7603                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  7604                           ;	Block 2 Table Read Protect
  7605                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  7606                           ;	Block 3 Table Read Protect
  7607                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  7608   30000C                     	org	3145740
  7609   30000C  0F                 	db	15
  7610                           
  7611                           ;Config register CONFIG7H @ 0x30000D
  7612                           ;	Boot Block Table Read Protect
  7613                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  7614   30000D                     	org	3145741
  7615   30000D  40                 	db	64
  7616                           tosu	equ	0xFFF
  7617                           tosh	equ	0xFFE
  7618                           tosl	equ	0xFFD
  7619                           stkptr	equ	0xFFC
  7620                           pclatu	equ	0xFFB
  7621                           pclath	equ	0xFFA
  7622                           pcl	equ	0xFF9
  7623                           tblptru	equ	0xFF8
  7624                           tblptrh	equ	0xFF7
  7625                           tblptrl	equ	0xFF6
  7626                           tablat	equ	0xFF5
  7627                           prodh	equ	0xFF4
  7628                           prodl	equ	0xFF3
  7629                           indf0	equ	0xFEF
  7630                           postinc0	equ	0xFEE
  7631                           postdec0	equ	0xFED
  7632                           preinc0	equ	0xFEC
  7633                           plusw0	equ	0xFEB
  7634                           fsr0h	equ	0xFEA
  7635                           fsr0l	equ	0xFE9
  7636                           wreg	equ	0xFE8
  7637                           indf1	equ	0xFE7
  7638                           postinc1	equ	0xFE6
  7639                           postdec1	equ	0xFE5
  7640                           preinc1	equ	0xFE4
  7641                           plusw1	equ	0xFE3
  7642                           fsr1h	equ	0xFE2
  7643                           fsr1l	equ	0xFE1
  7644                           bsr	equ	0xFE0
  7645                           indf2	equ	0xFDF
  7646                           postinc2	equ	0xFDE
  7647                           postdec2	equ	0xFDD
  7648                           preinc2	equ	0xFDC
  7649                           plusw2	equ	0xFDB
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8

Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     89     128
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[8]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S849$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S770$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S770$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31917
                                             87 BANK0      2     2      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _set_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8   25174
                                             65 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   24667
                                             57 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   24314
                                             93 COMRAM     2     2      0
                                             44 BANK0     13     7      6
                             _efgtoa
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                10     6      4    3688
                                             27 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19113
                                             84 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _set_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     420
                                              4 COMRAM     4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     802
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _set_adc
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _utoa
           ___lwdiv
           ___lwmod
           _pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      80       5       80.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       3B      0       0      20        0.0%
BITBIGSFRlh         30      0       0      24        0.0%
BITBIGSFRhhl        2A      0       0      21        0.0%
BITBIGSFRll          8      0       0      25        0.0%
BITBIGSFRhll         5      0       0      23        0.0%
BITBIGSFRhlh         2      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12F      26        0.0%
DATA                 0      0     12F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jul 06 22:42:32 2023

            ___fldiv@aexp 0040              ___fldiv@bexp 003F              ___fldiv@sign 0038  
                      l10 2EF2                        l22 2F34                        l14 2F08  
                      l31 3204                        l25 2F36                        l41 2B2C  
                      l18 2F1E                        l28 31E0                        l44 2D22  
                      l37 2B2C                        l53 3132                        l47 319E  
                     l140 2534                       l141 253E                       l135 31F6  
                     l414 2824                       l423 316A                       l408 2CA0  
                     l419 286A                       l446 2766                       l703 15F2  
                     l704 15E0                       l640 2E08                       l650 2ED2  
                     l811 246E                       l731 1E9C                       l804 23D6  
                     l733 1CFC                       l742 1D42                       l807 2532  
                     l719 306E                       l647 2E10                       l744 1DBA  
                     l736 1CC0                       l745 1DA8                       l905 0FFC  
                     l657 2EDA                       l818 24CA                       l770 1994  
                     l763 179E                       l827 2FD8                       l780 1AC4  
                     l772 1A0C                       l773 19FA                       l677 1408  
                     l861 2D9C                       l925 2A5A                       l917 2986  
                     l694 1522                       l686 16D8                       l678 13F6  
                     l934 216C                       l767 1B02                       l679 13BC  
                     l919 298E                       l872 1218                       l857 2D46  
                     l875 0BB4                       l877 09FA                       l957 2F88  
                     l974 237E                       l967 2968                       l977 22C2  
                     l985 2E66                       l994 3028                       l988 2E76  
                     _pad 2D24                       wreg 0FE8              ___flmul@aexp 0020  
            ___flmul@bexp 0021              ___flmul@sign 001B              ___flmul@temp 0026  
            ___flmul@prod 0022              ___fltol@exp1 000A                      l1006 2BF6  
                    l1014 30B2                      l1023 30F2                      l1017 3206  
                    l3001 27D4                      l3011 2862                      l3003 27E4  
                    l3013 2868                      l3005 27F2                      l3021 315A  
                    l3101 2EBE                      l3007 2804                      l3031 268C  
                    l3111 2D3E                      l3103 2EC6                      l3201 2F18  
                    l3009 2812                      l3017 3134                      l3041 26DA  
                    l3033 26B6                      l3025 2662                      l3121 286C  
                    l3113 2D52                      l3105 2ECC                      l3203 2F20  
                    l3019 314A                      l3051 2706                      l3035 26B8  
                    l3027 2678                      l3123 288C                      l3115 2D66  
                    l3107 2D24                      l3211 0838                      l3205 2F2E  
                    l2501 1236                      l3061 2736                      l3037 26C8  
                    l3125 28CA                      l3133 290A                      l3117 2D6A  
                    l3109 2D32                      l3301 0BE0                      l3221 0880  
                    l3213 0846                      l2503 1246                      l2511 1270  
                    l3063 2746                      l3047 26F2                      l3039 26CC  
                    l3135 291C                      l3127 28F2                      l3151 216E  
                    l3119 2D88                      l3143 30B4                      l3311 0C24  
                    l3303 0BE8                      l3223 0890                      l3231 08B8  
                    l3215 084A                      l3207 0822                      l3071 2DA6  
                    l2601 143A                      l2521 12A0                      l2513 1280  
                    l2505 1256                      l3065 2756                      l3057 271A  
                    l3049 26FC                      l3129 28FE                      l3153 218E  
                    l3145 30C4                      l3401 1118                      l3321 0C6A  
                    l3313 0C36                      l3305 0BEC                      l3241 0902  
                    l3233 08DE                      l3225 08A0                      l3217 086E  
                    l3209 0828                      l3081 2DDC                      l3073 2DB8  
                    l2611 1476                      l2603 144A                      l2531 12E0  
                    l2523 12AE                      l2515 1286                      l2507 1266  
                    l3059 2726                      l3139 2960                      l3171 2336  
                    l3163 2276                      l3155 21E4                      l3147 2E12  
                    l3411 1166                      l3403 1120                      l3331 0D7E  
                    l3323 0CCE                      l3307 0BFE                      l3315 0C3E  
                    l3251 096A                      l3243 091A                      l3235 08F0  
                    l3227 08AC                      l3219 0878                      l3083 2DF2  
                    l3075 2DC0                      l3091 2E78                      l2621 14BC  
                    l2613 1484                      l2605 1458                      l2541 131A  
                    l2533 12E2                      l2525 12B0                      l2517 1298  
                    l2509 1268                      l3173 235E                      l3165 22B2  
                    l3157 21F8                      l3149 2E30                      l3181 2FEE  
                    l2701 308E                      l3421 11DA                      l3413 1174  
                    l3405 1124                      l3341 0E3C                      l3333 0DB2  
                    l3325 0D26                      l3317 0C46                      l3309 0C0C  
                    l3253 097C                      l3245 0924                      l3237 08F4  
                    l3229 08B4                      l3085 2DFA                      l3077 2DC8  
                    l3069 2D9E                      l3093 2E8A                      l3501 1FD4  
                    l3191 2EDE                      l2711 1B20                      l2631 1538  
                    l2623 14F0                      l2615 1486                      l2607 1466  
                    l2551 132E                      l2543 131E                      l2527 12C0  
                    l2535 12EA                      l2519 129A                      l3175 236E  
                    l3159 2206                      l3167 22E6                      l3183 2FFA  
                    l2703 3092                      l3423 11F0                      l3415 11A4  
                    l3407 1142                      l3351 0F10                      l3343 0E4C  
                    l3335 0DE4                      l3327 0D5A                      l3319 0C56  
                    l3255 0980                      l3239 08FA                      l3087 2DFC  
                    l3079 2DD6                      l3095 2E92                      l3431 297A  
                    l3511 208E                      l3503 2006                      l3193 2EEC  
                    l3601 2AB4                      l2801 1D60                      l2713 1B30  
                    l2721 1B5A                      l2705 1B04                      l2641 1574  
                    l2633 1548                      l2625 14F2                      l2617 1490  
                    l2609 1472                      l2561 1342                      l2553 1332  
                    l2545 1322                      l2537 12FA                      l2529 12D0  
                    l3169 2322                      l3185 2FFE                      l2481 2B2E  
                    l3425 11F8                      l3417 11B2                      l3409 115E  
                    l3361 0F46                      l3353 0F24                      l3345 0E80  
                    l3337 0DFA                      l3329 0D60                      l3281 0AB4  
                    l3273 0A0A                      l3257 0986                      l3249 0944  
                    l3089 2E02                      l3097 2E9A                      l3441 29D4  
                    l3433 2996                      l3521 2106                      l3513 20B8  
                    l3505 2026                      l3195 2EF4                      l3611 2AEE  
                    l3603 2ABA                      l2811 1DCA                      l2803 1D64  
                    l2731 1B86                      l2723 1B6A                      l2715 1B40  
                    l2707 1B10                      l2651 15A0                      l2643 1576  
                    l2627 1502                      l2619 1496                      l2571 1356  
                    l2563 1346                      l2555 1336                      l2547 1326  
                    l2539 130C                      l3187 300A                      l3179 2FDA  
                    l2491 2BB0                      l2483 2B40                      l3419 11CA  
                    l3371 100E                      l3363 0F4E                      l3347 0ED6  
                    l3355 0F28                      l3339 0E2C                      l3283 0AF2  
                    l3275 0A10                      l3259 098E                      l3267 09AA  
                    l3099 2EA8                      l3451 2A20                      l3443 29DA  
                    l3435 299E                      l3515 20D8                      l3507 205A  
                    l3523 2132                      l3197 2F02                      l3461 31CC  
                    l3621 2CA2                      l3613 2AF8                      l3605 2AC4  
                    l3701 2464                      l2821 1E2C                      l2813 1DD6  
                    l2805 1D72                      l2733 1B96                      l2741 1BC0  
                    l2725 1B70                      l2717 1B50                      l2709 1B1E  
                    l2901 1854                      l2661 15D8                      l2645 1584  
                    l2637 155C                      l2653 15A2                      l2629 1512  
                    l2581 13B4                      l2565 134A                      l2557 133A  
                    l2549 132A                      l2573 135A                      l3189 300E  
                    l2485 2B52                      l3381 103E                      l3373 101C  
                    l3365 0F5A                      l3357 0F38                      l3349 0EDC  
                    l3285 0B06                      l3293 0B82                      l3277 0A44  
                    l3269 09C4                      l3453 2A3A                      l3445 29E0  
                    l3437 29A8                      l3429 296A                      l3199 2F0A  
                    l3463 31CE                      l3631 2CD8                      l3623 2CAE  
                    l3615 2B0A                      l3607 2AD6                      l3711 24DA  
                    l3703 24A0                      l2831 1E8A                      l2823 1E42  
                    l2815 1DE4                      l2807 1DA0                      l2751 1C02  
                    l2743 1BD0                      l2735 1BA6                      l2727 1B76  
                    l2719 1B52                      l2911 18AA                      l2903 1864  
                    l2671 1656                      l2647 158C                      l2639 1566  
                    l2655 15B0                      l2591 13EA                      l2583 13CA  
                    l2575 135E                      l2567 134E                      l2559 133E  
                    l2495 121A                      l2487 2B5C                      l3391 1070  
                    l3383 104E                      l3375 102C                      l3367 0FD2  
                    l3359 0F40                      l3295 0BBC                      l3287 0B3A  
                    l3279 0A82                      l3439 29AE                      l3447 29FC  
                    l3471 1ED0                      l3527 2144                      l3465 31DE  
                    l3457 31C4                      l3641 2D00                      l3633 2CDE  
                    l3625 2CB4                      l3617 2B1C                      l3609 2AE8  
                    l3561 317A                      l3721 2522                      l3713 24DE  
                    l3705 24AC                      l2833 1E90                      l2825 1E5C  
                    l2817 1E0E                      l2745 1BE6                      l2737 1BB6  
                    l2729 1B84                      l2921 194E                      l2913 18C6  
                    l2905 1870                      l2681 169C                      l2665 1602  
                    l2673 1658                      l2657 15B4                      l2649 1590  
                    l2593 13F4                      l2585 13D6                      l2577 1388  
                    l2569 1352                      l2497 1226                      l2489 2B7A  
                    l3393 1082                      l3385 1052                      l3377 1030  
                    l3369 0FF2                      l3297 0BCC                      l3289 0B42  
                    l3449 2A0E                      l3481 1F56                      l3473 1EDE  
                    l3459 31C6                      l3651 2D1E                      l3643 2D06  
                    l3635 2CEE                      l3627 2CC4                      l3619 2B22  
                    l3571 318E                      l3563 317C                      l3715 2502  
                    l3707 24BA                      l2835 1E92                      l2827 1E78  
                    l2819 1E12                      l2771 1C84                      l2763 1C3A  
                    l2747 1BF6                      l2755 1C16                      l2739 1BB8  
                    l2931 19A4                      l2923 195C                      l2915 18D2  
                    l2907 1880                      l2851 1706                      l2843 16DA  
                    l2691 16C6                      l2683 16AA                      l2675 1668  
                    l2667 160E                      l2659 15C2                      l2595 1416  
                    l2587 13DA                      l2579 13A4                      l2499 1234  
                    l3395 1086                      l3387 1058                      l3379 1036  
                    l3299 0BD8                      l3491 1FAA                      l3475 1EE2  
                    l3467 1E9E                      l3557 31F8                      l3645 2D0C  
                    l3637 2CF4                      l3629 2CCA                      l3573 3194  
                    l3565 3184                      l3653 30F4                      l3717 2512  
                    l3709 24D8                      l3661 31E2                      l2829 1E7C  
                    l2781 1CCA                      l2773 1C8C                      l2765 1C54  
                    l2757 1C26                      l2749 1BFE                      l2933 19B2  
                    l2925 197A                      l2917 18EE                      l2909 189A  
                    l2861 1742                      l2853 1716                      l2845 16E6  
                    l2693 16C8                      l2685 16B0                      l2677 1678  
                    l2669 161C                      l2597 1426                      l2589 13E8  
                    l3397 108C                      l3389 105E                      l3493 1FBC  
                    l3477 1EF2                      l3469 1EC2                      l3581 2F44  
                    ?_pad 0011                      l3647 2D12                      l3639 2CFA  
                    l3591 2A6E                      l3575 3196                      l3567 3186  
                    l3559 316E                      l3655 3100                      l3719 2520  
                    l3663 31E8                      l2791 1D22                      l2783 1CE8  
                    l2775 1C9C                      l2767 1C64                      l2759 1C26  
                    l2943 1A1C                      l2951 1A64                      l2935 19B6  
                    l2927 1984                      l2919 1918                      l2871 1778  
                    l2863 1748                      l2855 1726                      l2847 16F4  
                    l2687 16B2                      l2679 1698                      l3399 10E4  
                    l3495 1FC4                      l3487 1F6E                      l3479 1F0E  
                    l3583 2F62                      l3671 2FA4                      l3649 2D18  
                    l3593 2A80                      l3577 319C                      l3569 318C  
                    l3657 3112                      l3681 2392                      l3665 31F4  
                    l2793 1D28                      l2785 1CEA                      l2777 1CB0  
                    l2769 1C74                      l2961 1AD8                      l2953 1A7E  
                    l2945 1A28                      l2937 19C4                      l2929 1992  
                    l2873 1788                      l2865 1756                      l2857 172C  
                    l2849 16F6                      l2689 16B8                      l2697 3070  
                    l3497 1FCC                      l3489 1F9A                      l3585 2F7E  
                    l3673 2FAC                      l3595 2A86                      l3659 3116  
                    l3691 2410                      l3683 23A0                      l2795 1D32  
                    l2787 1CFA                      l2779 1CBE                      l2963 1AE6  
                    l2955 1A92                      l2947 1A36                      l2939 19F2  
                    l2891 180A                      l2883 17D2                      l2875 178E  
                    l2867 1758                      l2859 173C                      l2699 307C  
                    l3579 2F38                      l3675 2FC8                      l3667 2F8A  
                    l3851 25D0                      l3843 2534                      l3597 2A90  
                    l3589 2A5E                      l3693 2418                      l3685 23E6  
                    l2797 1D40                      l2789 1D0C                      l2981 2C26  
                    l2965 1AE8                      l2957 1AAC                      l2949 1A60  
                    l2893 1822                      l2885 17DE                      l2877 17AE  
                    l2869 1768                      l2973 302A                      l3669 2F9C  
                    l3861 2634                      l3853 25DA                      l3845 253C  
                    l3599 2AA2                      l3695 2424                      l3687 23FC  
                    l3679 2382                      l2799 1D52                      l2991 2C9E  
                    l2983 2C36                      l2959 1AC8                      l2967 1AEE  
                    l2895 182E                      l2887 17E8                      l2879 17BE  
                    l2975 303A                      l3863 2640                      l3855 25F8  
                    l3847 254C                      l3697 2456                      l2985 2C64  
                    l2969 1AF2                      l2897 183A                      l2889 17FE  
                    l3857 2604                      l3849 2560                      l3699 2458  
                    l2987 2C74                      l2979 2BF8                      l2995 2768  
                    l2899 1848                      l3859 260E                      l2989 2C98  
                    l2997 2796                      l2999 27A6                      l3991 2124  
                    l3985 1F8C                      l3987 1FE8                      l3989 20A2  
                    STR_1 0810                      STR_2 0801                      STR_3 0818  
                    STR_6 081C                      u2000 2B52                      u2001 2B4E  
                    u2010 2B7A                      u2011 2B76                      u2100 130C  
                    u2020 2BB0                      u2101 1308                      u2021 2BAC  
                    u2110 131A                      u2030 1234                      u2111 1316  
                    u2031 1230                      u2200 1458                      u2120 1388  
                    u2040 1246                      u3000 2746                      u2201 1454  
                    u2121 1384                      u2041 1242                      u3001 2742  
                    u2210 1466                      u2130 13A0                      u2050 1256  
                    u3010 2DB8                      u2211 1462                      u2131 139A  
                    u2051 1252                      u3011 2DB4                      u2300 15B0  
                    u2220 1484                      u2140 13A2                      u2060 1298  
                    u3100 28CA                      u3020 2DD6                      u2301 15AC  
                    u2221 1480                      u2061 1294                      u3101 28C6  
                    u3021 2DD2                      u2310 15C2                      u2230 14BC  
                    u2150 13CA                      u2070 12AE                      u3110 28F2  
                    u3030 2DF2                      u2311 15BE                      u2231 14B8  
                    u2151 13C6                      u2071 12AA                      u3111 28EE  
                    u3031 2DEE                      u2400 16AA                      u2320 15D8  
                    u2240 1502                      u2160 13E8                      u2080 12C0  
                    u3120 291C                      u3200 2206                      u3040 2E8A  
                    u2401 16A6                      u2321 15D4                      u2241 14FE  
                    u2161 13E4                      u2081 12BC                      u3121 2918  
                    u3201 2202                      u3041 2E86                      u2410 16C6  
                    u2330 15EE                      u2250 1538                      u2170 1408  
                    u2090 12D0                      u3050 2EA8                      u2411 16C2  
                    u2331 15EA                      u2251 1534                      u2171 1404  
                    u2091 12CC                      u3051 2EA4                      u3300 2F02  
                    u2500 1C26                      u2340 1602                      u2260 1548  
                    u2180 1416                      u3140 2956                      u3220 2272  
                    u2420 30B2                      u3060 2EBE                      u3301 2EFE  
                    u2501 1C22                      u2341 15FE                      u2261 1544  
                    u2181 1412                      u3141 2950                      u3221 226E  
                    u2421 30AE                      u3061 2EBA                      u3310 2F18  
                    u2510 1C9C                      u2430 1B1E                      u2350 161C  
                    u2270 1574                      u2190 1426                      u3150 2958  
                    u3230 2296                      u3070 2D32                      u3311 2F14  
                    u4007 2CBA                      u2511 1C98                      u2431 1B1A  
                    u2351 1618                      u2271 1570                      u2191 1422  
                    u3135 292E                      u3215 221A                      u3071 2D2E  
                    u3320 2F2E                      u2600 1DB6                      u2520 1CBE  
                    u2440 1B30                      u2360 1656                      u2280 1584  
                    u3240 22B2                      u3216 2224                      u3080 2D88  
                    u3160 30F2                      u3400 09F6                      u3321 2F2A  
                    u4017 2CD0                      u2601 1DB2                      u2521 1CBA  
                    u2441 1B2C                      u2361 1652                      u2281 1580  
                    u3241 22AE                      u3217 2234                      u3081 2D84  
                    u3161 30EE                      u3401 09F2                      u2610 1DCA  
                    u2530 1CE8                      u2450 1B40                      u2370 1668  
                    u2290 15A0                      u3090 28AC                      u3250 2306  
                    u3170 2E30                      u3410 0A82                      u3330 0846  
                    u4027 2CE4                      u2611 1DC6                      u2531 1CE4  
                    u2451 1B3C                      u2371 1664                      u2291 159C  
                    u3235 228C                      u3171 2E2C                      u3411 0A7E  
                    u3331 0842                      u2620 1DE4                      u2540 1D0C  
                    u2460 1B84                      u2700 1768                      u2380 1678  
                    u3260 2322                      u3180 21B6                      u3500 0D7E  
                    u3420 0AB4                      u3340 0890                      u4037 31D4  
                    u2621 1DE0                      u2541 1D08                      u2461 1B80  
                    u2701 1764                      u2381 1674                      u3261 231E  
                    u3501 0D7A                      u3421 0AB0                      u3341 088C  
                    u2630 1E2C                      u2550 1D22                      u2470 1B96  
                    u2710 1778                      u2390 1698                      u3270 235E  
                    u3190 21E4                      u3510 0DE4                      u3430 0AF2  
                    u3350 08A0                      u2631 1E28                      u2551 1D1E  
                    u2471 1B92                      u2711 1774                      u2391 1694  
                    u3095 28A2                      u3271 235A                      u3255 22FC  
                    u3191 21E0                      u3511 0DE0                      u3431 0AEE  
                    u3351 089C                      u2640 1E5C                      u2560 1D40  
                    u2480 1BA6                      u2800 1A1C                      u2720 17AE  
                    u3280 3028                      u3600 1142                      u3520 0E2C  
                    u3440 0B7E                      u3360 08DE                      u2641 1E58  
                    u2561 1D3C                      u2481 1BA2                      u2801 1A18  
                    u2721 17AA                      u3185 21AC                      u3281 3024  
                    u3601 113E                      u3521 0E28                      u3441 0B7A  
                    u3361 08DA                      u3290 2EEC                      u2650 1E8A  
                    u2570 1D60                      u2490 1BE6                      u2810 1A36  
                    u2730 17BE                      u3610 115E                      u3530 0E3C  
                    u3450 0BB4                      u3370 08F0                      u3291 2EE8  
                    u2651 1E86                      u2571 1D5C                      u2491 1BE2  
                    u2811 1A32                      u2731 17BA                      u3611 115A  
                    u3531 0E38                      u3451 0BB0                      u3371 08EC  
                    u2580 1D72                      u2900 27F2                      u2820 1A7E  
                    u2740 1938                      u2660 16F4                      u3620 11C4  
                    u3540 0ED6                      u3460 0BCC                      u3380 096A  
                    u3700 1F0E                      u2581 1D6E                      u2901 27EE  
                    u2821 1A7A                      u2661 16F0                      u3621 11BE  
                    u3541 0ED2                      u3461 0BC8                      u3381 0966  
                    u3701 1F0A                      u2590 1DA0                      u2910 2812  
                    u2830 1AAC                      u2750 1992                      u2670 1706  
                    u3630 11C6                      u3550 0F24                      u3470 0BFE  
                    u3390 097C                      u3710 2022                      u2591 1D9C  
                    u2911 280E                      u2831 1AA8                      u2751 198E  
                    u2671 1702                      u3551 0F20                      u3471 0BFA  
                    u3391 0978                      u3711 201E                      u3800 23FC  
                    u2920 2862                      u2840 1AE6                      u2760 19B2  
                    u2680 1716                      u3640 11DA                      u3560 0FD2  
                    u3480 0C0C                      u3720 2F7E                      u3801 23F8  
                    u2921 285E                      u2841 1AE2                      u2761 19AE  
                    u2745 192E                      u2681 1712                      u3641 11D6  
                    u3561 0FCE                      u3481 0C08                      u3721 2F7A  
                    u3730 2A6E                      u3810 2452                      u2850 2C26  
                    u2770 19C4                      u2690 1756                      u2930 314A  
                    u3570 100E                      u3490 0C36                      u3650 297A  
                    u3731 2A6A                      u3811 244E                      u2851 2C22  
                    u2771 19C0                      u2691 1752                      u2931 3146  
                    u3571 100A                      u3491 0C32                      u3651 2976  
                    u3740 2AA2                      u3820 249C                      u2860 2C64  
                    u2780 19F2                      u2940 2678                      u3580 101C  
                    u3660 2A0E                      u3741 2A9E                      u3821 2498  
                    u2861 2C60                      u2781 19EE                      u2941 2674  
                    u3581 1018                      u3661 2A0A                      u3750 2AD6  
                    u3830 24BA                      u2870 2C98                      u2790 1A08  
                    u2950 26AC                      u1990 2B40                      u3590 1070  
                    u3670 2A20                      u3751 2AD2                      u3831 24B6  
                    u2871 2C94                      u2791 1A04                      u1991 2B3C  
                    u3591 106C                      u3671 2A1C                      u3760 2B0A  
                    u3840 24CA                      u2880 2796                      u2960 26DA  
                    u3680 2A3A                      u3761 2B06                      u3841 24C6  
                    u2881 2792                      u2961 26D6                      u3681 2A36  
                    u3770 3132                      u3850 24D8                      u2890 27D4  
                    u2970 26EE                      u3690 1EC2                      u3771 312E  
                    u3851 24D4                      u2891 27D0                      u2971 26EA  
                    u2955 26A2                      u3691 1EBE                      u3860 2512  
                    u3780 2392                      u2980 2716                      u3861 250E  
                    u3781 238E                      u2981 2712                      u3870 2520  
                    u3790 23A0                      u2990 2736                      u3871 251C  
                    u3791 239C                      u2991 2732                      u3960 254C  
                    u3961 2548                      u3977 264C                      u3987 3188  
                    u3997 3198         ?_Lcd_Write_String 0005                      _dbuf 0100  
                    _labs 2E12                      _main 2534                      _prec 00C7  
                    pad@i 0018                      pad@p 0015                      fsr1h 0FE2  
                    fsr2h 0FDA                      indf2 0FDF                      fsr1l 0FE1  
                    pad@w 001A                      fsr2l 0FD9                      _utoa 296A  
                    _volt 00C1             ___fpclassifyf 286C                      prodh 0FF4  
                    prodl 0FF3                      start 0000        ??_Lcd_Write_String 0007  
         ___fldiv@new_exp 0039           __end_of_Lcd_Cmd 31E2              ___param_bank 0000  
                   ??_pad 0017             ___fltol@sign1 0009                     ?_labs 0001  
         __end_of___fladd 16DA                     ?_main 0001           __end_of___fldiv 1E9E  
         __end_of___flneg 316C           __end_of___flmul 1B04           __end_of___flsub 3070  
         __end_of___fltol 2768                     ?_utoa 001C           __end_of___lwdiv 2E12  
         __end_of___lwmod 2EDC              vfpfcnvrt@fmt 008E                     _flags 00CB  
                   _fputc 2B2E                     _v_adc 00C9                     _fputs 3070  
                   labs@a 0001                     pad@fp 0011                     _width 00C5  
                   _putch 3206           __end_of_set_adc 31F8                     tablat 0FF5  
                   utoa@d 001E                     utoa@i 0024                     utoa@p 0022  
                   utoa@w 0020                     status 0FD8           __end_of_sprintf 2FDA  
          ?___fpclassifyf 0001          __end_of_Lcd_Init 2D24          __end_of_Lcd_Port 2F38  
         __initialization 31A0              __end_of_labs 2E78              __end_of_main 2662  
            __end_of_utoa 2A5C                    ??_labs 0005                    ??_main 00B7  
                  ??_utoa 0020             __activetblptr 0002                    _ADCON0 0FC2  
                  _ADCON1 0FC1                    _ADCON2 0FC0                    ?_fputc 0001  
                  ?_fputs 000A                    _ADRESH 0FC4                    _ADRESL 0FC3  
                  ?_putch 0001                 ??_Lcd_Cmd 0002          __end_of___xxtofl 2534  
            vfprintf@cfmt 009F                    ___flge 2768                    ___fleq 2BF8  
               ??___fladd 0009                 ??___fldiv 0030                 ??___flneg 0005  
               ??___flmul 0017                 ??___flsub 0030                 ??___fltol 0005  
                  _efgtoa 0822                 ??___lwdiv 0005                 ??___lwmod 0005  
                  _buffer 00CC                    _floorf 216E                    _memcpy 2FDA  
                  clear_0 31A6                    clear_1 31B2                    isa$std 0001  
                  pad@buf 0013                    _strcpy 30B4                    fputc@c 0001  
                  fputs@c 000E                    fputs@i 000F                    fputs@s 000A  
         ___fpclassifyf@e 0009           ___fpclassifyf@u 000B           ___fpclassifyf@x 0001  
            __mediumconst 0000                 ??_set_adc 0001                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8                    putch@c 0001  
        __end_of_vfprintf 2F8A                    utoa@fp 001C                 ??_sprintf 0060  
         Lcd_Set_Cursor@a 0005           Lcd_Set_Cursor@b 0004           Lcd_Set_Cursor@y 0007  
         Lcd_Set_Cursor@z 0006                ___flge@ff1 0028                ___flge@ff2 002C  
         ??___fpclassifyf 0005              ___xxtofl@arg 000B              ___xxtofl@exp 000A  
            ___xxtofl@val 0001                ___fleq@ff1 0001                ___fleq@ff2 0005  
              __accesstop 0060   __end_of__initialization 31B8                ___flneg@f1 0001  
       __end_of_Lcd_Clear 3206             ___rparam_used 0001                ___fltol@f1 0001  
          __pcstackCOMRAM 0001             __end_of_fputc 2BF8             __end_of_fputs 30B4  
           __end_of_putch 3208            _Lcd_Set_Cursor 2A5C                 ?_Lcd_Init 0001  
               ?_Lcd_Port 0001                   ??_fputc 0005                   ??_fputs 000E  
                 ??_putch 0001                __pbssBANK0 00B9                __pbssBANK1 0100  
              _efgtoa$898 0066                   ?___flge 0028                   ?___fleq 0001  
                 ?_efgtoa 0055                   ?_floorf 0041                   ?_memcpy 0001  
  __end_of_Lcd_Set_Cursor 2B2E                   ?_strcpy 0001                 ?___xxtofl 0001  
              ??_Lcd_Init 0004                ??_Lcd_Port 0001            _Lcd_Write_Char 316C  
                 _Lcd_Cmd 31C2                   __Hparam 0000                   __Lparam 0000  
                 ___fladd 121A                   ___fldiv 1B04                   ___flneg 3134  
                 ___flmul 16DA                   ___flsub 302A                   ___fltol 2662  
                 ___lwdiv 2D9E                   ___lwmod 2E78                 ?_vfprintf 0099  
            __psmallconst 0800                   __pcinit 31A0                   __ramtop 0800  
         ?_Lcd_Set_Cursor 0004                   __ptext0 2534                   __ptext1 2F8A  
                 __ptext2 2F38                   __ptext3 1E9E                   __ptext4 296A  
                 __ptext5 2E78                   __ptext6 2D9E                   __ptext7 0822  
                 __ptext8 30B4                   __ptext9 2D24                ??___xxtofl 0005  
                 _set_adc 31E2                   efgtoa@c 005B                   efgtoa@d 006B  
                 efgtoa@e 006F                   efgtoa@f 0057                   efgtoa@g 0084  
                 efgtoa@h 0079                   efgtoa@i 0077                   efgtoa@l 007D  
                 efgtoa@m 006D                   efgtoa@n 0082                   efgtoa@p 0062  
                 efgtoa@t 0064                   efgtoa@u 0088                   efgtoa@w 0071  
                 _sprintf 2F8A    __end_of_Lcd_Write_Char 31A0      end_of_initialization 31B8  
                 floorf@e 004F                   floorf@m 004B                   floorf@u 0051  
                 floorf@x 0041                   memcpy@d 0007                   memcpy@n 0005  
                 memcpy@s 0009                   fputc@fp 0003             __Lmediumconst 0000  
                 fputs@fp 000C         __end_of_vfpfcnvrt 216E                efgtoa@mode 0069  
              efgtoa@sign 0081                   postdec2 0FDD                   postinc0 0FEE  
                 postinc1 0FE6                   postinc2 0FDE          vfpfcnvrt@convarg 0092  
               Lcd_Port@a 0001                ??_vfprintf 0060                   strcpy@d 0007  
                 strcpy@s 0005               ___fladd@grs 0010             ___xxtofl@sign 0009  
               _TRISAbits 0F92                 _TRISDbits 0F95               ___fldiv@grs 003B  
             ___fldiv@rem 0034           ?_Lcd_Write_Char 0001         Lcd_Write_String@a 0005  
       Lcd_Write_String@i 0007               ___flmul@grs 001C                 _Lcd_Clear 31F8  
          __end_of___flge 286C            __end_of___fleq 2CA2               vfpfcnvrt@ap 0090  
             vfpfcnvrt@cp 0097               vfpfcnvrt@fp 008C          _Lcd_Write_String 30F4  
          __end_of_efgtoa 121A            __end_of_floorf 2380            __end_of_memcpy 302A  
              floorf@F526 00B9            __end_of_strcpy 30F4       start_initialization 31A0  
             __end_of_pad 2D9E     __end_of___fpclassifyf 296A               vfprintf@fmt 009B  
              ?_Lcd_Clear 0001                  ??___flge 0030                  ??___fleq 0009  
                ??_efgtoa 005C                  ??_floorf 0045                  ??_memcpy 0007  
         Lcd_Write_Char@a 0004           Lcd_Write_Char@y 0003                  ??_strcpy 0005  
               ___fladd@a 0005                 ___fladd@b 0001                 ___fldiv@a 002C  
               ___fldiv@b 0028                 ___flmul@a 0013                 ___flmul@b 000F  
               ___flsub@a 002C                 ___flsub@b 0028             __pcstackBANK0 0060  
                ?_Lcd_Cmd 0001          ___lwdiv@dividend 0001          ??_Lcd_Set_Cursor 0005  
                ?___fladd 0001                  ?___fldiv 0028                  ?___flneg 0001  
                ?___flmul 000F                  ?___flsub 0028                  ?___fltol 0001  
                ?___lwdiv 0001                  ?___lwmod 0001               __smallconst 0800  
                ?_set_adc 0001          ___lwdiv@quotient 0005                  ?_sprintf 00A1  
                _LATDbits 0F8C                  Lcd_Cmd@a 0003               ??_Lcd_Clear 0004  
               _vfpfcnvrt 1E9E                _ADCON0bits 0FC2          ??_Lcd_Write_Char 0002  
                _Lcd_Init 2CA2                  _Lcd_Port 2EDC                vfpfcnvrt@c 0096  
__end_of_Lcd_Write_String 3134                  __Hrparam 0000                 memcpy@tmp 000B  
              vfprintf@ap 009D                  __Lrparam 0000                vfprintf@fp 0099  
              ?_vfpfcnvrt 008C                _ANSELAbits 0F5B        ___fpclassifyf@F465 00BD  
              sprintf@fmt 00A3                  ___xxtofl 2380           ___lwdiv@divisor 0003  
         ___lwdiv@counter 0007                  __ptext10 3070                  __ptext11 2B2E  
                __ptext20 3134                  __ptext12 3206                  __ptext21 16DA  
                __ptext13 2FDA                  __ptext30 2CA2                  __ptext22 2768  
                __ptext14 2E12                  __ptext31 31F8                  __ptext23 2BF8  
                __ptext15 216E                  __ptext32 31C2                  __ptext24 1B04  
                __ptext16 286C                  __ptext33 2EDC                  __ptext25 31E2  
                __ptext17 2662                  __ptext26 2380                  __ptext18 302A  
                __ptext27 30F4                  __ptext19 121A                  __ptext28 316C  
                __ptext29 2A5C                strcpy@dest 0001                  efgtoa@fp 0055  
                efgtoa@ne 0060                  efgtoa@pp 0068                  efgtoa@ou 0073  
                isa$xinst 0000                  _vfprintf 2F38                  memcpy@d1 0001  
                memcpy@s1 0003        Lcd_Write_Char@temp 0002                 sprintf@ap 00A9  
        ___lwmod@dividend 0001                 strcpy@src 0003               efgtoa@nmode 006A  
             ??_vfpfcnvrt 005E        Lcd_Set_Cursor@temp 0008                  sprintf@f 00AB  
                sprintf@s 00A1           ___lwmod@divisor 0003           ___lwmod@counter 0005  
           ___fladd@signs 000D              ___fladd@aexp 000E              ___fladd@bexp 000F  
