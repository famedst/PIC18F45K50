

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jul 07 09:50:29 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 22/03/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K50 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     _ADRESL	set	4035
    83   000000                     _ADRESH	set	4036
    84   000000                     _ADCON0bits	set	4034
    85   000000                     _ANSELAbits	set	3931
    86   000000                     _LATDbits	set	3980
    87   000000                     _TRISAbits	set	3986
    88   000000                     _TRISDbits	set	3989
    89   000000                     _ADCON2	set	4032
    90   000000                     _ADCON1	set	4033
    91   000000                     _ADCON0	set	4034
    92                           
    93                           	psect	smallconst
    94   000800                     __psmallconst:
    95                           	callstack 0
    96   000800  00                 	db	0
    97   000801                     STR_2:
    98   000801  56                 	db	86	;'V'
    99   000802  6F                 	db	111	;'o'
   100   000803  6C                 	db	108	;'l'
   101   000804  74                 	db	116	;'t'
   102   000805  61                 	db	97	;'a'
   103   000806  6A                 	db	106	;'j'
   104   000807  65                 	db	101	;'e'
   105   000808  20                 	db	32
   106   000809  25                 	db	37
   107   00080A  30                 	db	48	;'0'
   108   00080B  2E                 	db	46
   109   00080C  32                 	db	50	;'2'
   110   00080D  66                 	db	102	;'f'
   111   00080E  00                 	db	0
   112   00080F                     STR_1:
   113   00080F  4C                 	db	76	;'L'
   114   000810  61                 	db	97	;'a'
   115   000811  20                 	db	32
   116   000812  4C                 	db	76	;'L'
   117   000813  65                 	db	101	;'e'
   118   000814  63                 	db	99	;'c'
   119   000815  74                 	db	116	;'t'
   120   000816  75                 	db	117	;'u'
   121   000817  72                 	db	114	;'r'
   122   000818  61                 	db	97	;'a'
   123   000819  3A                 	db	58	;':'
   124   00081A  20                 	db	32
   125   00081B  00                 	db	0
   126   00081C                     STR_3:
   127   00081C  69                 	db	105	;'i'
   128   00081D  6E                 	db	110	;'n'
   129   00081E  66                 	db	102	;'f'
   130   00081F  00                 	db	0
   131   000820                     STR_6:
   132   000820  6E                 	db	110	;'n'
   133   000821  61                 	db	97	;'a'
   134   000822  6E                 	db	110	;'n'
   135   000823  00                 	db	0
   136   000824  00                 	db	0	; dummy byte at the end
   137   000000                     
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141   00315E                     __pcinit:
   142                           	callstack 0
   143   00315E                     start_initialization:
   144                           	callstack 0
   145   00315E                     __initialization:
   146                           	callstack 0
   147                           
   148                           ; Clear objects allocated to BANK1 (80 bytes)
   149   00315E  EE01  F000         	lfsr	0,__pbssBANK1
   150   003162  0E50               	movlw	80
   151   003164                     clear_0:
   152   003164  6AEE               	clrf	postinc0,c
   153   003166  06E8               	decf	wreg,f,c
   154   003168  E1FD               	bnz	clear_0
   155                           
   156                           ; Clear objects allocated to BANK0 (39 bytes)
   157   00316A  EE00  F0BB         	lfsr	0,__pbssBANK0
   158   00316E  0E27               	movlw	39
   159   003170                     clear_1:
   160   003170  6AEE               	clrf	postinc0,c
   161   003172  06E8               	decf	wreg,f,c
   162   003174  E1FD               	bnz	clear_1
   163   003176                     end_of_initialization:
   164                           	callstack 0
   165   003176                     __end_of__initialization:
   166                           	callstack 0
   167   003176  0E00               	movlw	low (__Lmediumconst shr (0+16))
   168   003178  6EF8               	movwf	tblptru,c
   169   00317A  0100               	movlb	0
   170   00317C  EFD6  F012         	goto	_main	;jump to C main() function
   171                           
   172                           	psect	bssBANK0
   173   0000BB                     __pbssBANK0:
   174                           	callstack 0
   175   0000BB                     floorf@F526:
   176                           	callstack 0
   177   0000BB                     	ds	4
   178   0000BF                     ___fpclassifyf@F465:
   179                           	callstack 0
   180   0000BF                     	ds	4
   181   0000C3                     _volt:
   182                           	callstack 0
   183   0000C3                     	ds	4
   184   0000C7                     _width:
   185                           	callstack 0
   186   0000C7                     	ds	2
   187   0000C9                     _prec:
   188                           	callstack 0
   189   0000C9                     	ds	2
   190   0000CB                     _v_adc:
   191                           	callstack 0
   192   0000CB                     	ds	2
   193   0000CD                     _flags:
   194                           	callstack 0
   195   0000CD                     	ds	1
   196   0000CE                     _buffer:
   197                           	callstack 0
   198   0000CE                     	ds	20
   199                           
   200                           	psect	bssBANK1
   201   000100                     __pbssBANK1:
   202                           	callstack 0
   203   000100                     _dbuf:
   204                           	callstack 0
   205   000100                     	ds	80
   206                           
   207                           	psect	cstackBANK0
   208   000060                     __pcstackBANK0:
   209                           	callstack 0
   210   000060                     efgtoa@ne:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x0
   214   000060                     	ds	2
   215   000062                     efgtoa@p:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x2
   219   000062                     	ds	2
   220   000064                     efgtoa@t:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x4
   224   000064                     	ds	2
   225   000066                     _efgtoa$898:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x6
   229   000066                     	ds	2
   230   000068                     efgtoa@pp:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0x8
   234   000068                     	ds	1
   235   000069                     efgtoa@mode:
   236                           	callstack 0
   237                           
   238                           ; 1 bytes @ 0x9
   239   000069                     	ds	1
   240   00006A                     efgtoa@nmode:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0xA
   244   00006A                     	ds	1
   245   00006B                     efgtoa@d:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0xB
   249   00006B                     	ds	2
   250   00006D                     efgtoa@m:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0xD
   254   00006D                     	ds	2
   255   00006F                     efgtoa@e:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0xF
   259   00006F                     	ds	2
   260   000071                     efgtoa@w:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x11
   264   000071                     	ds	2
   265   000073                     efgtoa@ou:
   266                           	callstack 0
   267                           
   268                           ; 4 bytes @ 0x13
   269   000073                     	ds	4
   270   000077                     efgtoa@h:
   271                           	callstack 0
   272                           
   273                           ; 4 bytes @ 0x17
   274   000077                     	ds	4
   275   00007B                     efgtoa@l:
   276                           	callstack 0
   277                           
   278                           ; 4 bytes @ 0x1B
   279   00007B                     	ds	4
   280   00007F                     efgtoa@i:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x1F
   284   00007F                     	ds	2
   285   000081                     efgtoa@sign:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x21
   289   000081                     	ds	1
   290   000082                     efgtoa@g:
   291                           	callstack 0
   292                           
   293                           ; 4 bytes @ 0x22
   294   000082                     	ds	4
   295   000086                     efgtoa@n:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x26
   299   000086                     	ds	2
   300   000088                     efgtoa@u:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x28
   304   000088                     	ds	4
   305   00008C                     vfpfcnvrt@fp:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x2C
   309   00008C                     	ds	2
   310   00008E                     vfpfcnvrt@fmt:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x2E
   314   00008E                     	ds	2
   315   000090                     vfpfcnvrt@ap:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x30
   319   000090                     	ds	2
   320   000092                     vfpfcnvrt@convarg:
   321                           	callstack 0
   322                           
   323                           ; 4 bytes @ 0x32
   324   000092                     	ds	4
   325   000096                     vfpfcnvrt@done:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x36
   329   000096                     	ds	2
   330   000098                     vfpfcnvrt@c:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x38
   334   000098                     	ds	1
   335   000099                     vfpfcnvrt@cp:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x39
   339   000099                     	ds	2
   340   00009B                     ?_vfprintf:
   341                           	callstack 0
   342   00009B                     vfprintf@fp:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x3B
   346   00009B                     	ds	2
   347   00009D                     vfprintf@fmt:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x3D
   351   00009D                     	ds	2
   352   00009F                     vfprintf@ap:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x3F
   356   00009F                     	ds	2
   357   0000A1                     vfprintf@cfmt:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x41
   361   0000A1                     	ds	2
   362   0000A3                     ?_sprintf:
   363                           	callstack 0
   364   0000A3                     sprintf@s:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x43
   368   0000A3                     	ds	2
   369   0000A5                     sprintf@fmt:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x45
   373   0000A5                     	ds	6
   374   0000AB                     sprintf@ap:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x4B
   378   0000AB                     	ds	2
   379   0000AD                     sprintf@f:
   380                           	callstack 0
   381                           
   382                           ; 12 bytes @ 0x4D
   383   0000AD                     	ds	12
   384   0000B9                     ??_main:
   385                           
   386                           ; 1 bytes @ 0x59
   387   0000B9                     	ds	2
   388                           
   389                           	psect	cstackCOMRAM
   390   000001                     __pcstackCOMRAM:
   391                           	callstack 0
   392   000001                     ?___fpclassifyf:
   393                           	callstack 0
   394   000001                     ?___wmul:
   395                           	callstack 0
   396   000001                     ?___fladd:
   397                           	callstack 0
   398   000001                     ?_labs:
   399                           	callstack 0
   400   000001                     ?___flneg:
   401                           	callstack 0
   402   000001                     ?___fltol:
   403                           	callstack 0
   404   000001                     ?___xxtofl:
   405                           	callstack 0
   406   000001                     Lcd_Port@a:
   407                           	callstack 0
   408   000001                     ___wmul@multiplier:
   409                           	callstack 0
   410   000001                     memcpy@d1:
   411                           	callstack 0
   412   000001                     fputc@c:
   413                           	callstack 0
   414   000001                     strcpy@dest:
   415                           	callstack 0
   416   000001                     ___fleq@ff1:
   417                           	callstack 0
   418   000001                     ___flneg@f1:
   419                           	callstack 0
   420   000001                     ___fltol@f1:
   421                           	callstack 0
   422   000001                     ___fladd@b:
   423                           	callstack 0
   424   000001                     ___xxtofl@val:
   425                           	callstack 0
   426   000001                     ___fpclassifyf@x:
   427                           	callstack 0
   428   000001                     labs@a:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0x0
   432   000001                     	ds	1
   433   000002                     ??_Lcd_Cmd:
   434   000002                     Lcd_Write_Char@temp:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x1
   438   000002                     	ds	1
   439   000003                     Lcd_Cmd@a:
   440                           	callstack 0
   441   000003                     Lcd_Write_Char@y:
   442                           	callstack 0
   443   000003                     ___wmul@multiplicand:
   444                           	callstack 0
   445   000003                     memcpy@s1:
   446                           	callstack 0
   447   000003                     fputc@fp:
   448                           	callstack 0
   449   000003                     strcpy@src:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2
   453   000003                     	ds	1
   454   000004                     ??_Lcd_Init:
   455   000004                     Lcd_Set_Cursor@b:
   456                           	callstack 0
   457   000004                     Lcd_Write_Char@a:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x3
   461   000004                     	ds	1
   462   000005                     ??_fputc:
   463   000005                     ??___fpclassifyf:
   464   000005                     ??_labs:
   465   000005                     ??___fltol:
   466   000005                     ??___xxtofl:
   467   000005                     Lcd_Set_Cursor@a:
   468                           	callstack 0
   469   000005                     Lcd_Write_String@a:
   470                           	callstack 0
   471   000005                     ___wmul@product:
   472                           	callstack 0
   473   000005                     memcpy@n:
   474                           	callstack 0
   475   000005                     strcpy@s:
   476                           	callstack 0
   477   000005                     ___fleq@ff2:
   478                           	callstack 0
   479   000005                     ___fladd@a:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x4
   483   000005                     	ds	1
   484   000006                     Lcd_Set_Cursor@z:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x5
   488   000006                     	ds	1
   489   000007                     ??_Lcd_Write_String:
   490   000007                     ?_read_prec_or_width:
   491                           	callstack 0
   492   000007                     Lcd_Set_Cursor@y:
   493                           	callstack 0
   494   000007                     read_prec_or_width@fmt:
   495                           	callstack 0
   496   000007                     memcpy@d:
   497                           	callstack 0
   498   000007                     strcpy@d:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x6
   502   000007                     	ds	1
   503   000008                     Lcd_Set_Cursor@temp:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x7
   507   000008                     	ds	1
   508   000009                     ??___fladd:
   509   000009                     ??___fleq:
   510   000009                     ___fltol@sign1:
   511                           	callstack 0
   512   000009                     ___xxtofl@sign:
   513                           	callstack 0
   514   000009                     Lcd_Write_String@i:
   515                           	callstack 0
   516   000009                     read_prec_or_width@ap:
   517                           	callstack 0
   518   000009                     ___fpclassifyf@e:
   519                           	callstack 0
   520   000009                     memcpy@s:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x8
   524   000009                     	ds	1
   525   00000A                     ___fltol@exp1:
   526                           	callstack 0
   527   00000A                     ___xxtofl@exp:
   528                           	callstack 0
   529   00000A                     fputs@s:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x9
   533   00000A                     	ds	1
   534   00000B                     ??_read_prec_or_width:
   535   00000B                     memcpy@tmp:
   536                           	callstack 0
   537   00000B                     ___xxtofl@arg:
   538                           	callstack 0
   539   00000B                     ___fpclassifyf@u:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0xA
   543   00000B                     	ds	1
   544   00000C                     fputs@fp:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0xB
   548   00000C                     	ds	1
   549   00000D                     ___fladd@signs:
   550                           	callstack 0
   551   00000D                     read_prec_or_width@c:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0xC
   555   00000D                     	ds	1
   556   00000E                     ___fladd@aexp:
   557                           	callstack 0
   558   00000E                     fputs@c:
   559                           	callstack 0
   560   00000E                     read_prec_or_width@n:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0xD
   564   00000E                     	ds	1
   565   00000F                     ?___flmul:
   566                           	callstack 0
   567   00000F                     ___fladd@bexp:
   568                           	callstack 0
   569   00000F                     fputs@i:
   570                           	callstack 0
   571   00000F                     ___flmul@b:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0xE
   575   00000F                     	ds	1
   576   000010                     ___fladd@grs:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0xF
   580   000010                     	ds	1
   581   000011                     pad@fp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x10
   585   000011                     	ds	2
   586   000013                     pad@buf:
   587                           	callstack 0
   588   000013                     ___flmul@a:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x12
   592   000013                     	ds	2
   593   000015                     pad@p:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x14
   597   000015                     	ds	2
   598   000017                     ??___flmul:
   599   000017                     ??_pad:
   600                           
   601                           ; 1 bytes @ 0x16
   602   000017                     	ds	1
   603   000018                     pad@i:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x17
   607   000018                     	ds	2
   608   00001A                     pad@w:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x19
   612   00001A                     	ds	1
   613   00001B                     ___flmul@sign:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x1A
   617   00001B                     	ds	1
   618   00001C                     ___flmul@grs:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x1B
   622   00001C                     	ds	4
   623   000020                     ___flmul@aexp:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x1F
   627   000020                     	ds	1
   628   000021                     ___flmul@bexp:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x20
   632   000021                     	ds	1
   633   000022                     ___flmul@prod:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0x21
   637   000022                     	ds	4
   638   000026                     ___flmul@temp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x25
   642   000026                     	ds	2
   643   000028                     ?___fldiv:
   644                           	callstack 0
   645   000028                     ?___flsub:
   646                           	callstack 0
   647   000028                     ___flge@ff1:
   648                           	callstack 0
   649   000028                     ___flsub@b:
   650                           	callstack 0
   651   000028                     ___fldiv@b:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x27
   655   000028                     	ds	4
   656   00002C                     ___flge@ff2:
   657                           	callstack 0
   658   00002C                     ___flsub@a:
   659                           	callstack 0
   660   00002C                     ___fldiv@a:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x2B
   664   00002C                     	ds	4
   665   000030                     ??___fldiv:
   666   000030                     ??___flge:
   667                           
   668                           ; 1 bytes @ 0x2F
   669   000030                     	ds	4
   670   000034                     ___fldiv@rem:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x33
   674   000034                     	ds	4
   675   000038                     ___fldiv@sign:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x37
   679   000038                     	ds	1
   680   000039                     ___fldiv@new_exp:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x38
   684   000039                     	ds	2
   685   00003B                     ___fldiv@grs:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x3A
   689   00003B                     	ds	4
   690   00003F                     ___fldiv@bexp:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x3E
   694   00003F                     	ds	1
   695   000040                     ___fldiv@aexp:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x3F
   699   000040                     	ds	1
   700   000041                     ?_floorf:
   701                           	callstack 0
   702   000041                     floorf@x:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0x40
   706   000041                     	ds	4
   707   000045                     ??_floorf:
   708                           
   709                           ; 1 bytes @ 0x44
   710   000045                     	ds	6
   711   00004B                     floorf@m:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x4A
   715   00004B                     	ds	4
   716   00004F                     floorf@e:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x4E
   720   00004F                     	ds	2
   721   000051                     floorf@u:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x50
   725   000051                     	ds	4
   726   000055                     efgtoa@fp:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x54
   730   000055                     	ds	2
   731   000057                     efgtoa@f:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x56
   735   000057                     	ds	4
   736   00005B                     efgtoa@c:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x5A
   740   00005B                     	ds	1
   741   00005C                     ??_efgtoa:
   742                           
   743                           ; 1 bytes @ 0x5B
   744   00005C                     	ds	2
   745   00005E                     ??_vfpfcnvrt:
   746                           
   747                           ; 1 bytes @ 0x5D
   748   00005E                     	ds	2
   749   000060                     
   750                           ; 1 bytes @ 0x5F
   751 ;;
   752 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   753 ;;
   754 ;; *************** function _main *****************
   755 ;; Defined at:
   756 ;;		line 109 in file "adc_lcd.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;		None
   759 ;; Auto vars:     Size  Location     Type
   760 ;;		None
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   770 ;;      Params:         0       0       0       0       0       0       0       0       0
   771 ;;      Locals:         0       0       0       0       0       0       0       0       0
   772 ;;      Temps:          0       2       0       0       0       0       0       0       0
   773 ;;      Totals:         0       2       0       0       0       0       0       0       0
   774 ;;Total ram usage:        2 bytes
   775 ;; Hardware stack levels required when called: 8
   776 ;; This function calls:
   777 ;;		_Lcd_Clear
   778 ;;		_Lcd_Init
   779 ;;		_Lcd_Set_Cursor
   780 ;;		_Lcd_Write_String
   781 ;;		___fldiv
   782 ;;		___flmul
   783 ;;		___xxtofl
   784 ;;		_set_adc
   785 ;;		_sprintf
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text0
   792   0025AC                     __ptext0:
   793                           	callstack 0
   794   0025AC                     _main:
   795                           	callstack 23
   796   0025AC                     l142:
   797   0025AC                     
   798                           ;adc_lcd.c: 111:     Lcd_Init();
   799   0025AC  EC6A  F016         	call	_Lcd_Init	;wreg free
   800                           
   801                           ;adc_lcd.c: 112:     Lcd_Clear();
   802   0025B0  ECDB  F018         	call	_Lcd_Clear	;wreg free
   803                           
   804                           ;adc_lcd.c: 113:     set_adc();
   805   0025B4  ECD0  F018         	call	_set_adc	;wreg free
   806   0025B8                     
   807                           ;adc_lcd.c: 114:     ADCON0bits.GO_DONE = 1;
   808   0025B8  82C2               	bsf	194,1,c	;volatile
   809   0025BA                     l143:
   810   0025BA  B2C2               	btfsc	194,1,c	;volatile
   811   0025BC  EFE2  F012         	goto	u3921
   812   0025C0  EFE4  F012         	goto	u3920
   813   0025C4                     u3921:
   814   0025C4  EFDD  F012         	goto	l143
   815   0025C8                     u3920:
   816   0025C8                     
   817                           ;adc_lcd.c: 116:     v_adc = (int)((ADRESH << 8) + ADRESL);
   818   0025C8  50C4               	movf	196,w,c	;volatile
   819   0025CA  0100               	movlb	0	; () banked
   820   0025CC  6FBA               	movwf	(??_main+1)& (0+255),b
   821   0025CE  6BB9               	clrf	??_main& (0+255),b
   822   0025D0  50C3               	movf	195,w,c	;volatile
   823   0025D2  25B9               	addwf	??_main& (0+255),w,b
   824   0025D4  6FCB               	movwf	_v_adc& (0+255),b
   825   0025D6  0E00               	movlw	0
   826   0025D8  21BA               	addwfc	(??_main+1)& (0+255),w,b
   827   0025DA  6FCC               	movwf	(_v_adc+1)& (0+255),b
   828   0025DC                     
   829                           ; BSR set to: 0
   830                           ;adc_lcd.c: 117:     volt = (float)((v_adc*5.0)/1023.0);
   831   0025DC  0E00               	movlw	0
   832   0025DE  6E13               	movwf	___flmul@a^0,c
   833   0025E0  0E00               	movlw	0
   834   0025E2  6E14               	movwf	(___flmul@a+1)^0,c
   835   0025E4  0EA0               	movlw	160
   836   0025E6  6E15               	movwf	(___flmul@a+2)^0,c
   837   0025E8  0E40               	movlw	64
   838   0025EA  6E16               	movwf	(___flmul@a+3)^0,c
   839   0025EC  C0CB  F001         	movff	_v_adc,___xxtofl@val
   840   0025F0  C0CC  F002         	movff	_v_adc+1,___xxtofl@val+1
   841   0025F4  0E00               	movlw	0
   842   0025F6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   843   0025F8  0EFF               	movlw	-1
   844   0025FA  6E03               	movwf	(___xxtofl@val+2)^0,c
   845   0025FC  6E04               	movwf	(___xxtofl@val+3)^0,c
   846   0025FE  0E01               	movlw	1
   847   002600  ECFC  F011         	call	___xxtofl
   848   002604  C001  F00F         	movff	?___xxtofl,___flmul@b
   849   002608  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   850   00260C  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   851   002610  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   852   002614  ECA4  F00B         	call	___flmul	;wreg free
   853   002618  C00F  F028         	movff	?___flmul,___fldiv@b
   854   00261C  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   855   002620  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   856   002624  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   857   002628  0E00               	movlw	0
   858   00262A  6E2C               	movwf	___fldiv@a^0,c
   859   00262C  0EC0               	movlw	192
   860   00262E  6E2D               	movwf	(___fldiv@a+1)^0,c
   861   002630  0E7F               	movlw	127
   862   002632  6E2E               	movwf	(___fldiv@a+2)^0,c
   863   002634  0E44               	movlw	68
   864   002636  6E2F               	movwf	(___fldiv@a+3)^0,c
   865   002638  ECB9  F00D         	call	___fldiv	;wreg free
   866   00263C  C028  F0C3         	movff	?___fldiv,_volt
   867   002640  C029  F0C4         	movff	?___fldiv+1,_volt+1
   868   002644  C02A  F0C5         	movff	?___fldiv+2,_volt+2
   869   002648  C02B  F0C6         	movff	?___fldiv+3,_volt+3
   870   00264C                     
   871                           ;adc_lcd.c: 118:     Lcd_Set_Cursor(1,1);
   872   00264C  0E01               	movlw	1
   873   00264E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   874   002650  0E01               	movlw	1
   875   002652  ECE4  F014         	call	_Lcd_Set_Cursor
   876   002656                     
   877                           ;adc_lcd.c: 120:     Lcd_Write_String("La Lectura: ");
   878   002656  0E0F               	movlw	low STR_1
   879   002658  6E05               	movwf	Lcd_Write_String@a^0,c
   880   00265A  0E08               	movlw	high STR_1
   881   00265C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   882   00265E  ECAB  F016         	call	_Lcd_Write_String	;wreg free
   883   002662                     
   884                           ;adc_lcd.c: 121:     Lcd_Set_Cursor(2,1);
   885   002662  0E01               	movlw	1
   886   002664  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   887   002666  0E02               	movlw	2
   888   002668  ECE4  F014         	call	_Lcd_Set_Cursor
   889   00266C                     
   890                           ;adc_lcd.c: 122:     sprintf(buffer,"Voltaje %0.2f", volt);
   891   00266C  0ECE               	movlw	low _buffer
   892   00266E  0100               	movlb	0	; () banked
   893   002670  6FA3               	movwf	sprintf@s& (0+255),b
   894   002672  0E00               	movlw	high _buffer
   895   002674  6FA4               	movwf	(sprintf@s+1)& (0+255),b
   896   002676  0E01               	movlw	low STR_2
   897   002678  6FA5               	movwf	sprintf@fmt& (0+255),b
   898   00267A  0E08               	movlw	high STR_2
   899   00267C  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
   900   00267E  C0C3  F0A7         	movff	_volt,?_sprintf+4
   901   002682  C0C4  F0A8         	movff	_volt+1,?_sprintf+5
   902   002686  C0C5  F0A9         	movff	_volt+2,?_sprintf+6
   903   00268A  C0C6  F0AA         	movff	_volt+3,?_sprintf+7
   904   00268E  ECB1  F017         	call	_sprintf	;wreg free
   905   002692                     
   906                           ;adc_lcd.c: 123:     Lcd_Write_String(buffer);
   907   002692  0ECE               	movlw	low _buffer
   908   002694  6E05               	movwf	Lcd_Write_String@a^0,c
   909   002696  0E00               	movlw	high _buffer
   910   002698  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   911   00269A  ECAB  F016         	call	_Lcd_Write_String	;wreg free
   912   00269E                     
   913                           ;adc_lcd.c: 124:     _delay((unsigned long)((200)*(12000000/4000.0)));
   914   00269E  0E04               	movlw	4
   915   0026A0  0100               	movlb	0	; () banked
   916   0026A2  6FBA               	movwf	(??_main+1)& (0+255),b
   917   0026A4  0E0C               	movlw	12
   918   0026A6  6FB9               	movwf	??_main& (0+255),b
   919   0026A8  0E33               	movlw	51
   920   0026AA                     u3937:
   921   0026AA  2EE8               	decfsz	wreg,f,c
   922   0026AC  D7FE               	bra	u3937
   923   0026AE  2FB9               	decfsz	??_main& (0+255),f,b
   924   0026B0  D7FC               	bra	u3937
   925   0026B2  2FBA               	decfsz	(??_main+1)& (0+255),f,b
   926   0026B4  D7FA               	bra	u3937
   927   0026B6  D000               	nop2	
   928   0026B8  EFD6  F012         	goto	l142
   929   0026BC  EF00  F000         	goto	start
   930   0026C0                     __end_of_main:
   931                           	callstack 0
   932                           
   933 ;; *************** function _sprintf *****************
   934 ;; Defined at:
   935 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  s               2   67[BANK0 ] PTR unsigned char 
   938 ;;		 -> buffer(20), 
   939 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
   940 ;;		 -> STR_2(14), 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  f              12   77[BANK0 ] struct _IO_FILE
   943 ;;  ap              2   75[BANK0 ] PTR void [1]
   944 ;;		 -> ?_sprintf(2), 
   945 ;;  ret             2    0        int 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  2   67[BANK0 ] int 
   948 ;; Registers used:
   949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   955 ;;      Params:         0       8       0       0       0       0       0       0       0
   956 ;;      Locals:         0      14       0       0       0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0       0       0
   958 ;;      Totals:         0      22       0       0       0       0       0       0       0
   959 ;;Total ram usage:       22 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 7
   962 ;; This function calls:
   963 ;;		_vfprintf
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text1
   970   002F62                     __ptext1:
   971                           	callstack 0
   972   002F62                     _sprintf:
   973                           	callstack 23
   974   002F62  0EA7               	movlw	low (?_sprintf+4)
   975   002F64  0100               	movlb	0	; () banked
   976   002F66  6FAB               	movwf	sprintf@ap& (0+255),b
   977   002F68  0E00               	movlw	high (?_sprintf+4)
   978   002F6A  6FAC               	movwf	(sprintf@ap+1)& (0+255),b
   979   002F6C  C0A3  F0AD         	movff	sprintf@s,sprintf@f
   980   002F70  C0A4  F0AE         	movff	sprintf@s+1,sprintf@f+1
   981   002F74                     
   982                           ; BSR set to: 0
   983   002F74  0E00               	movlw	0
   984   002F76  6FB1               	movwf	(sprintf@f+4)& (0+255),b
   985   002F78  0E00               	movlw	0
   986   002F7A  6FB0               	movwf	(sprintf@f+3)& (0+255),b
   987   002F7C                     
   988                           ; BSR set to: 0
   989   002F7C  0E00               	movlw	0
   990   002F7E  6FB8               	movwf	(sprintf@f+11)& (0+255),b
   991   002F80  0E00               	movlw	0
   992   002F82  6FB7               	movwf	(sprintf@f+10)& (0+255),b
   993   002F84                     
   994                           ; BSR set to: 0
   995   002F84  0EAD               	movlw	low sprintf@f
   996   002F86  6F9B               	movwf	vfprintf@fp& (0+255),b
   997   002F88  0E00               	movlw	high sprintf@f
   998   002F8A  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
   999   002F8C  C0A5  F09D         	movff	sprintf@fmt,vfprintf@fmt
  1000   002F90  C0A6  F09E         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1001   002F94  0EAB               	movlw	low sprintf@ap
  1002   002F96  6F9F               	movwf	vfprintf@ap& (0+255),b
  1003   002F98  0E00               	movlw	high sprintf@ap
  1004   002F9A  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
  1005   002F9C  EC88  F017         	call	_vfprintf	;wreg free
  1006   002FA0  0100               	movlb	0	; () banked
  1007   002FA2  51B0               	movf	(sprintf@f+3)& (0+255),w,b
  1008   002FA4  25A3               	addwf	sprintf@s& (0+255),w,b
  1009   002FA6  6ED9               	movwf	fsr2l,c
  1010   002FA8  51B1               	movf	(sprintf@f+4)& (0+255),w,b
  1011   002FAA  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  1012   002FAC  6EDA               	movwf	fsr2h,c
  1013   002FAE  6ADF               	clrf	indf2,c
  1014   002FB0                     
  1015                           ; BSR set to: 0
  1016   002FB0  0012               	return		;funcret
  1017   002FB2                     __end_of_sprintf:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _vfprintf *****************
  1021 ;; Defined at:
  1022 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  1025 ;;		 -> sprintf@f(12), 
  1026 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  1027 ;;		 -> STR_2(14), 
  1028 ;;  ap              2   63[BANK0 ] PTR PTR void 
  1029 ;;		 -> sprintf@ap(2), 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  1032 ;;		 -> STR_2(14), 
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  2   59[BANK0 ] int 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         0       6       0       0       0       0       0       0       0
  1043 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1046 ;;Total ram usage:        8 bytes
  1047 ;; Hardware stack levels used: 1
  1048 ;; Hardware stack levels required when called: 6
  1049 ;; This function calls:
  1050 ;;		_vfpfcnvrt
  1051 ;; This function is called by:
  1052 ;;		_sprintf
  1053 ;; This function uses a non-reentrant model
  1054 ;;
  1055                           
  1056                           	psect	text2
  1057   002F10                     __ptext2:
  1058                           	callstack 0
  1059   002F10                     _vfprintf:
  1060                           	callstack 23
  1061   002F10                     
  1062                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1063   002F10  C09D  F0A1         	movff	vfprintf@fmt,vfprintf@cfmt
  1064   002F14  C09E  F0A2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1065                           
  1066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1067   002F18  EF9D  F017         	goto	l3527
  1068   002F1C                     l3525:
  1069                           
  1070                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1071   002F1C  C09B  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1072   002F20  C09C  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1073   002F24  0EA1               	movlw	low vfprintf@cfmt
  1074   002F26  0100               	movlb	0	; () banked
  1075   002F28  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1076   002F2A  0E00               	movlw	high vfprintf@cfmt
  1077   002F2C  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1078   002F2E  C09F  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1079   002F32  C0A0  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1080   002F36  EC86  F00F         	call	_vfpfcnvrt	;wreg free
  1081   002F3A                     l3527:
  1082                           
  1083                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1084   002F3A  C0A1  FFF6         	movff	vfprintf@cfmt,tblptrl
  1085   002F3E  C0A2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1086   002F42                     	if	0	;tblptru may be non-zero
  1087   002F42                     	endif
  1088   002F42                     	if	0	;tblptru may be non-zero
  1089   002F42                     	endif
  1090   002F42  0008               	tblrd		*
  1091   002F44  50F5               	movf	tablat,w,c
  1092   002F46  0900               	iorlw	0
  1093   002F48  A4D8               	btfss	status,2,c
  1094   002F4A  EFA9  F017         	goto	u3661
  1095   002F4E  EFAB  F017         	goto	u3660
  1096   002F52                     u3661:
  1097   002F52  EF8E  F017         	goto	l3525
  1098   002F56                     u3660:
  1099   002F56                     
  1100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1101   002F56  0E00               	movlw	0
  1102   002F58  0100               	movlb	0	; () banked
  1103   002F5A  6F9C               	movwf	(?_vfprintf+1)& (0+255),b
  1104   002F5C  0E00               	movlw	0
  1105   002F5E  6F9B               	movwf	?_vfprintf& (0+255),b
  1106   002F60                     
  1107                           ; BSR set to: 0
  1108   002F60  0012               	return		;funcret
  1109   002F62                     __end_of_vfprintf:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function _vfpfcnvrt *****************
  1113 ;; Defined at:
  1114 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1117 ;;		 -> sprintf@f(12), 
  1118 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1119 ;;		 -> vfprintf@cfmt(2), 
  1120 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1121 ;;		 -> sprintf@ap(2), 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  convarg         4   50[BANK0 ] struct .
  1124 ;;  cp              2   57[BANK0 ] PTR unsigned char 
  1125 ;;		 -> STR_2(14), 
  1126 ;;  done            2   54[BANK0 ] int 
  1127 ;;  i               2    0        int 
  1128 ;;  c               1   56[BANK0 ] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      void 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1138 ;;      Params:         0       6       0       0       0       0       0       0       0
  1139 ;;      Locals:         0       9       0       0       0       0       0       0       0
  1140 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1141 ;;      Totals:         2      15       0       0       0       0       0       0       0
  1142 ;;Total ram usage:       17 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 5
  1145 ;; This function calls:
  1146 ;;		_efgtoa
  1147 ;;		_fputc
  1148 ;;		_read_prec_or_width
  1149 ;; This function is called by:
  1150 ;;		_vfprintf
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text3
  1155   001F0C                     __ptext3:
  1156                           	callstack 0
  1157   001F0C                     _vfpfcnvrt:
  1158                           	callstack 23
  1159   001F0C                     
  1160                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1161   001F0C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1162   001F10  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1163   001F14  CFDE FFF6          	movff	postinc2,tblptrl
  1164   001F18  CFDD FFF7          	movff	postdec2,tblptrh
  1165   001F1C                     	if	0	;tblptru may be non-zero
  1166   001F1C                     	endif
  1167   001F1C                     	if	0	;tblptru may be non-zero
  1168   001F1C                     	endif
  1169   001F1C  0008               	tblrd		*
  1170   001F1E  50F5               	movf	tablat,w,c
  1171   001F20  0A25               	xorlw	37
  1172   001F22  A4D8               	btfss	status,2,c
  1173   001F24  EF96  F00F         	goto	u3621
  1174   001F28  EF98  F00F         	goto	u3620
  1175   001F2C                     u3621:
  1176   001F2C  EFDE  F010         	goto	l3471
  1177   001F30                     u3620:
  1178   001F30                     
  1179                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1180   001F30  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1181   001F34  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1182   001F38  2ADE               	incf	postinc2,f,c
  1183   001F3A  0E00               	movlw	0
  1184   001F3C  22DD               	addwfc	postdec2,f,c
  1185   001F3E                     
  1186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1187   001F3E  0E00               	movlw	0
  1188   001F40  0100               	movlb	0	; () banked
  1189   001F42  6FC8               	movwf	(_width+1)& (0+255),b
  1190   001F44  0E00               	movlw	0
  1191   001F46  6FC7               	movwf	_width& (0+255),b
  1192   001F48  C0C7  F0CD         	movff	_width,_flags
  1193   001F4C                     
  1194                           ; BSR set to: 0
  1195                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1196   001F4C  69C9               	setf	_prec& (0+255),b
  1197   001F4E  69CA               	setf	(_prec+1)& (0+255),b
  1198   001F50                     
  1199                           ; BSR set to: 0
  1200                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1201   001F50  0E00               	movlw	0
  1202   001F52  6F97               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1203   001F54  0E00               	movlw	0
  1204   001F56  6F96               	movwf	vfpfcnvrt@done& (0+255),b
  1205                           
  1206                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1207   001F58  EFD8  F00F         	goto	l3425
  1208   001F5C                     l3415:
  1209                           
  1210                           ; BSR set to: 0
  1211                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1212   001F5C  83CD               	bsf	_flags& (0+255),1,b
  1213   001F5E                     
  1214                           ; BSR set to: 0
  1215                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1216   001F5E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1217   001F62  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1218   001F66  2ADE               	incf	postinc2,f,c
  1219   001F68  0E00               	movlw	0
  1220   001F6A  22DD               	addwfc	postdec2,f,c
  1221                           
  1222                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1223   001F6C  EFD8  F00F         	goto	l3425
  1224   001F70                     l3419:
  1225                           
  1226                           ; BSR set to: 0
  1227                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1228   001F70  0E00               	movlw	0
  1229   001F72  6F97               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1230   001F74  0E01               	movlw	1
  1231   001F76  6F96               	movwf	vfpfcnvrt@done& (0+255),b
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1234   001F78  EFD8  F00F         	goto	l3425
  1235   001F7C                     l3423:
  1236                           
  1237                           ; BSR set to: 0
  1238   001F7C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1239   001F80  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1240   001F84  CFDE FFF6          	movff	postinc2,tblptrl
  1241   001F88  CFDD FFF7          	movff	postdec2,tblptrh
  1242   001F8C                     	if	0	;tblptru may be non-zero
  1243   001F8C                     	endif
  1244   001F8C                     	if	0	;tblptru may be non-zero
  1245   001F8C                     	endif
  1246   001F8C  0008               	tblrd		*
  1247   001F8E  50F5               	movf	tablat,w,c
  1248   001F90  6E5E               	movwf	??_vfpfcnvrt^0,c
  1249   001F92  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1250                           
  1251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1252                           ; Switch size 1, requested type "simple"
  1253                           ; Number of cases is 1, Range of values is 0 to 0
  1254                           ; switch strategies available:
  1255                           ; Name         Instructions Cycles
  1256                           ; simple_byte            4     3 (average)
  1257                           ;	Chosen strategy is simple_byte
  1258   001F94  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1259   001F96  0A00               	xorlw	0	; case 0
  1260   001F98  B4D8               	btfsc	status,2,c
  1261   001F9A  EFD1  F00F         	goto	l3927
  1262   001F9E  EFB8  F00F         	goto	l3419
  1263   001FA2                     l3927:
  1264                           
  1265                           ; BSR set to: 0
  1266                           ; Switch size 1, requested type "simple"
  1267                           ; Number of cases is 1, Range of values is 48 to 48
  1268                           ; switch strategies available:
  1269                           ; Name         Instructions Cycles
  1270                           ; simple_byte            4     3 (average)
  1271                           ;	Chosen strategy is simple_byte
  1272   001FA2  505E               	movf	??_vfpfcnvrt^0,w,c
  1273   001FA4  0A30               	xorlw	48	; case 48
  1274   001FA6  B4D8               	btfsc	status,2,c
  1275   001FA8  EFAE  F00F         	goto	l3415
  1276   001FAC  EFB8  F00F         	goto	l3419
  1277   001FB0                     l3425:
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1281   001FB0  5196               	movf	vfpfcnvrt@done& (0+255),w,b
  1282   001FB2  1197               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1283   001FB4  B4D8               	btfsc	status,2,c
  1284   001FB6  EFDF  F00F         	goto	u3631
  1285   001FBA  EFE1  F00F         	goto	u3630
  1286   001FBE                     u3631:
  1287   001FBE  EFBE  F00F         	goto	l3423
  1288   001FC2                     u3630:
  1289   001FC2                     
  1290                           ; BSR set to: 0
  1291                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  1292   001FC2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1293   001FC6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1294   001FCA  CFDE FFF6          	movff	postinc2,tblptrl
  1295   001FCE  CFDD FFF7          	movff	postdec2,tblptrh
  1296   001FD2                     	if	0	;tblptru may be non-zero
  1297   001FD2                     	endif
  1298   001FD2                     	if	0	;tblptru may be non-zero
  1299   001FD2                     	endif
  1300   001FD2  0008               	tblrd		*
  1301   001FD4  50F5               	movf	tablat,w,c
  1302   001FD6  0A2E               	xorlw	46
  1303   001FD8  A4D8               	btfss	status,2,c
  1304   001FDA  EFF1  F00F         	goto	u3641
  1305   001FDE  EFF3  F00F         	goto	u3640
  1306   001FE2                     u3641:
  1307   001FE2  EF08  F010         	goto	l3433
  1308   001FE6                     u3640:
  1309   001FE6                     
  1310                           ; BSR set to: 0
  1311                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  1312   001FE6  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1313   001FEA  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1314   001FEE  2ADE               	incf	postinc2,f,c
  1315   001FF0  0E00               	movlw	0
  1316   001FF2  22DD               	addwfc	postdec2,f,c
  1317   001FF4                     
  1318                           ; BSR set to: 0
  1319                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1320   001FF4  C08E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1321   001FF8  C08F  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1322   001FFC  C090  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1323   002000  C091  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1324   002004  ECB2  F015         	call	_read_prec_or_width	;wreg free
  1325   002008  C007  F0C9         	movff	?_read_prec_or_width,_prec
  1326   00200C  C008  F0CA         	movff	?_read_prec_or_width+1,_prec+1
  1327   002010                     l3433:
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  1330   002010  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1331   002014  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1332   002018  CFDE F099          	movff	postinc2,vfpfcnvrt@cp
  1333   00201C  CFDD F09A          	movff	postdec2,vfpfcnvrt@cp+1
  1334   002020                     
  1335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  1336   002020  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1337   002024  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1338   002028                     	if	0	;tblptru may be non-zero
  1339   002028                     	endif
  1340   002028                     	if	0	;tblptru may be non-zero
  1341   002028                     	endif
  1342   002028  0008               	tblrd		*
  1343   00202A  CFF5 F098          	movff	tablat,vfpfcnvrt@c
  1344                           
  1345                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  1346   00202E  EF25  F010         	goto	l3445
  1347   002032                     l3437:
  1348                           
  1349                           ; BSR set to: 0
  1350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  1351   002032  4B99               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1352   002034  2B9A               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  1355   002036  EF3F  F010         	goto	l3447
  1356   00203A                     l3439:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  1360   00203A  0E6C               	movlw	108
  1361   00203C  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1362                           
  1363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  1364   00203E  EF3F  F010         	goto	l3447
  1365   002042                     l3441:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  1369   002042  0E00               	movlw	0
  1370   002044  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1371                           
  1372                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  1373   002046  EF3F  F010         	goto	l3447
  1374   00204A                     l3445:
  1375   00204A  0100               	movlb	0	; () banked
  1376   00204C  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1377   00204E  6E5E               	movwf	??_vfpfcnvrt^0,c
  1378   002050  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1379                           
  1380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1381                           ; Switch size 1, requested type "simple"
  1382                           ; Number of cases is 1, Range of values is 0 to 0
  1383                           ; switch strategies available:
  1384                           ; Name         Instructions Cycles
  1385                           ; simple_byte            4     3 (average)
  1386                           ;	Chosen strategy is simple_byte
  1387   002052  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1388   002054  0A00               	xorlw	0	; case 0
  1389   002056  B4D8               	btfsc	status,2,c
  1390   002058  EF30  F010         	goto	l3929
  1391   00205C  EF21  F010         	goto	l3441
  1392   002060                     l3929:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ; Switch size 1, requested type "simple"
  1396                           ; Number of cases is 3, Range of values is 76 to 108
  1397                           ; switch strategies available:
  1398                           ; Name         Instructions Cycles
  1399                           ; simple_byte           10     6 (average)
  1400                           ;	Chosen strategy is simple_byte
  1401   002060  505E               	movf	??_vfpfcnvrt^0,w,c
  1402   002062  0A4C               	xorlw	76	; case 76
  1403   002064  B4D8               	btfsc	status,2,c
  1404   002066  EF19  F010         	goto	l3437
  1405   00206A  0A2A               	xorlw	42	; case 102
  1406   00206C  B4D8               	btfsc	status,2,c
  1407   00206E  EF1D  F010         	goto	l3439
  1408   002072  0A0A               	xorlw	10	; case 108
  1409   002074  B4D8               	btfsc	status,2,c
  1410   002076  EF19  F010         	goto	l3437
  1411   00207A  EF21  F010         	goto	l3441
  1412   00207E                     l3447:
  1413                           
  1414                           ; BSR set to: 0
  1415   00207E  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1416   002082  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1417   002086                     	if	0	;tblptru may be non-zero
  1418   002086                     	endif
  1419   002086                     	if	0	;tblptru may be non-zero
  1420   002086                     	endif
  1421   002086  0008               	tblrd		*
  1422   002088  50F5               	movf	tablat,w,c
  1423   00208A  0A66               	xorlw	102
  1424   00208C  A4D8               	btfss	status,2,c
  1425   00208E  EF4B  F010         	goto	u3651
  1426   002092  EF4D  F010         	goto	u3650
  1427   002096                     u3651:
  1428   002096  EFD5  F010         	goto	l3467
  1429   00209A                     u3650:
  1430   00209A  EF83  F010         	goto	l3455
  1431   00209E                     l3449:
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1435   00209E  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1436   0020A2  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1437   0020A6  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  1438   0020AA  0E04               	movlw	4
  1439   0020AC  26DE               	addwf	postinc2,f,c
  1440   0020AE  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  1441   0020B2  0E00               	movlw	0
  1442   0020B4  22DD               	addwfc	postdec2,f,c
  1443   0020B6  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1444   0020BA  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1445   0020BE  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  1446   0020C2  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  1447   0020C6  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  1448   0020CA  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  1451   0020CE  EF98  F010         	goto	l3457
  1452   0020D2                     l3451:
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1456   0020D2  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1457   0020D6  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1458   0020DA  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  1459   0020DE  0E04               	movlw	4
  1460   0020E0  26DE               	addwf	postinc2,f,c
  1461   0020E2  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  1462   0020E6  0E00               	movlw	0
  1463   0020E8  22DD               	addwfc	postdec2,f,c
  1464   0020EA  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1465   0020EE  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1466   0020F2  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  1467   0020F6  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  1468   0020FA  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  1469   0020FE  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  1472   002102  EF98  F010         	goto	l3457
  1473   002106                     l3455:
  1474                           
  1475                           ; BSR set to: 0
  1476   002106  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1477   002108  6E5E               	movwf	??_vfpfcnvrt^0,c
  1478   00210A  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1479                           
  1480                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1481                           ; Switch size 1, requested type "simple"
  1482                           ; Number of cases is 1, Range of values is 0 to 0
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte            4     3 (average)
  1486                           ;	Chosen strategy is simple_byte
  1487   00210C  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1488   00210E  0A00               	xorlw	0	; case 0
  1489   002110  B4D8               	btfsc	status,2,c
  1490   002112  EF8D  F010         	goto	l3931
  1491   002116  EF98  F010         	goto	l3457
  1492   00211A                     l3931:
  1493                           
  1494                           ; BSR set to: 0
  1495                           ; Switch size 1, requested type "simple"
  1496                           ; Number of cases is 2, Range of values is 76 to 108
  1497                           ; switch strategies available:
  1498                           ; Name         Instructions Cycles
  1499                           ; simple_byte            7     4 (average)
  1500                           ;	Chosen strategy is simple_byte
  1501   00211A  505E               	movf	??_vfpfcnvrt^0,w,c
  1502   00211C  0A4C               	xorlw	76	; case 76
  1503   00211E  B4D8               	btfsc	status,2,c
  1504   002120  EF69  F010         	goto	l3451
  1505   002124  0A20               	xorlw	32	; case 108
  1506   002126  B4D8               	btfsc	status,2,c
  1507   002128  EF4F  F010         	goto	l3449
  1508   00212C  EF98  F010         	goto	l3457
  1509   002130                     l3457:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  1513   002130  0E01               	movlw	1
  1514   002132  2599               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1515   002134  6E5E               	movwf	??_vfpfcnvrt^0,c
  1516   002136  0E00               	movlw	0
  1517   002138  219A               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1518   00213A  6E5F               	movwf	(??_vfpfcnvrt+1)^0,c
  1519   00213C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1520   002140  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1521   002144  C05E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1522   002148  C05F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  1525   00214C  EFBF  F010         	goto	l3465
  1526   002150                     l3459:
  1527                           
  1528                           ; BSR set to: 0
  1529                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1530   002150  C08C  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1531   002154  C08D  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1532   002158  C092  F057         	movff	vfpfcnvrt@convarg,efgtoa@f
  1533   00215C  C093  F058         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1534   002160  C094  F059         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1535   002164  C095  F05A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1536   002168  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1537   00216C  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1538   002170                     	if	0	;tblptru may be non-zero
  1539   002170                     	endif
  1540   002170                     	if	0	;tblptru may be non-zero
  1541   002170                     	endif
  1542   002170  0008               	tblrd		*
  1543   002172  CFF5 F05B          	movff	tablat,efgtoa@c
  1544   002176  EC13  F004         	call	_efgtoa	;wreg free
  1545   00217A  EFF2  F010         	goto	l956
  1546   00217E                     l3465:
  1547                           
  1548                           ; BSR set to: 0
  1549   00217E  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1550   002182  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1551   002186                     	if	0	;tblptru may be non-zero
  1552   002186                     	endif
  1553   002186                     	if	0	;tblptru may be non-zero
  1554   002186                     	endif
  1555   002186  0008               	tblrd		*
  1556   002188  50F5               	movf	tablat,w,c
  1557   00218A  6E5E               	movwf	??_vfpfcnvrt^0,c
  1558   00218C  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1559                           
  1560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1561                           ; Switch size 1, requested type "simple"
  1562                           ; Number of cases is 1, Range of values is 0 to 0
  1563                           ; switch strategies available:
  1564                           ; Name         Instructions Cycles
  1565                           ; simple_byte            4     3 (average)
  1566                           ;	Chosen strategy is simple_byte
  1567   00218E  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1568   002190  0A00               	xorlw	0	; case 0
  1569   002192  B4D8               	btfsc	status,2,c
  1570   002194  EFCE  F010         	goto	l3933
  1571   002198  EFD5  F010         	goto	l3467
  1572   00219C                     l3933:
  1573                           
  1574                           ; BSR set to: 0
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 1, Range of values is 102 to 102
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte            4     3 (average)
  1580                           ;	Chosen strategy is simple_byte
  1581   00219C  505E               	movf	??_vfpfcnvrt^0,w,c
  1582   00219E  0A66               	xorlw	102	; case 102
  1583   0021A0  B4D8               	btfsc	status,2,c
  1584   0021A2  EFA8  F010         	goto	l3459
  1585   0021A6  EFD5  F010         	goto	l3467
  1586   0021AA                     l3467:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1589   0021AA  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1590   0021AE  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1591   0021B2  2ADE               	incf	postinc2,f,c
  1592   0021B4  0E00               	movlw	0
  1593   0021B6  22DD               	addwfc	postdec2,f,c
  1594   0021B8  EFF2  F010         	goto	l956
  1595   0021BC                     l3471:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1598   0021BC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1599   0021C0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1600   0021C4  CFDE FFF6          	movff	postinc2,tblptrl
  1601   0021C8  CFDD FFF7          	movff	postdec2,tblptrh
  1602   0021CC                     	if	0	;tblptru may be non-zero
  1603   0021CC                     	endif
  1604   0021CC                     	if	0	;tblptru may be non-zero
  1605   0021CC                     	endif
  1606   0021CC  0008               	tblrd		*
  1607   0021CE  50F5               	movf	tablat,w,c
  1608   0021D0  6E01               	movwf	fputc@c^0,c
  1609   0021D2  6A02               	clrf	(fputc@c+1)^0,c
  1610   0021D4  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1611   0021D8  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1612   0021DC  EC4D  F015         	call	_fputc	;wreg free
  1613   0021E0  EFD5  F010         	goto	l3467
  1614   0021E4                     l956:
  1615   0021E4  0012               	return		;funcret
  1616   0021E6                     __end_of_vfpfcnvrt:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _read_prec_or_width *****************
  1620 ;; Defined at:
  1621 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  1624 ;;		 -> vfprintf@cfmt(2), 
  1625 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  1626 ;;		 -> sprintf@ap(2), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  c               1   12[COMRAM] unsigned char 
  1629 ;;  n               2   13[COMRAM] int 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  2    6[COMRAM] int 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1639 ;;      Params:         4       0       0       0       0       0       0       0       0
  1640 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1641 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1642 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1643 ;;Total ram usage:        9 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 1
  1646 ;; This function calls:
  1647 ;;		___wmul
  1648 ;; This function is called by:
  1649 ;;		_vfpfcnvrt
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text4
  1654   002B64                     __ptext4:
  1655                           	callstack 0
  1656   002B64                     _read_prec_or_width:
  1657                           	callstack 26
  1658   002B64                     
  1659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  1660   002B64  0E00               	movlw	0
  1661   002B66  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1662   002B68  0E00               	movlw	0
  1663   002B6A  6E0E               	movwf	read_prec_or_width@n^0,c
  1664   002B6C                     
  1665                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  1666   002B6C  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1667   002B70  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1668   002B74  CFDE FFF6          	movff	postinc2,tblptrl
  1669   002B78  CFDD FFF7          	movff	postdec2,tblptrh
  1670   002B7C                     	if	0	;tblptru may be non-zero
  1671   002B7C                     	endif
  1672   002B7C                     	if	0	;tblptru may be non-zero
  1673   002B7C                     	endif
  1674   002B7C  0008               	tblrd		*
  1675   002B7E  50F5               	movf	tablat,w,c
  1676   002B80  0A2A               	xorlw	42
  1677   002B82  A4D8               	btfss	status,2,c
  1678   002B84  EFC6  F015         	goto	u3601
  1679   002B88  EFC8  F015         	goto	u3600
  1680   002B8C                     u3601:
  1681   002B8C  EFFC  F015         	goto	l3393
  1682   002B90                     u3600:
  1683   002B90                     
  1684                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  1685   002B90  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1686   002B94  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1687   002B98  2ADE               	incf	postinc2,f,c
  1688   002B9A  0E00               	movlw	0
  1689   002B9C  22DD               	addwfc	postdec2,f,c
  1690                           
  1691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1692   002B9E  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  1693   002BA2  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  1694   002BA6  CFDF F00B          	movff	indf2,??_read_prec_or_width
  1695   002BAA  0E02               	movlw	2
  1696   002BAC  26DE               	addwf	postinc2,f,c
  1697   002BAE  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  1698   002BB2  0E00               	movlw	0
  1699   002BB4  22DD               	addwfc	postdec2,f,c
  1700   002BB6  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  1701   002BBA  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  1702   002BBE  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  1703   002BC2  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  1706   002BC6  EF10  F016         	goto	l925
  1707   002BCA                     l3389:
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  1710   002BCA  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1711   002BCE  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1712   002BD2  0E00               	movlw	0
  1713   002BD4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1714   002BD6  0E0A               	movlw	10
  1715   002BD8  6E03               	movwf	___wmul@multiplicand^0,c
  1716   002BDA  EC9C  F018         	call	___wmul	;wreg free
  1717   002BDE  500D               	movf	read_prec_or_width@c^0,w,c
  1718   002BE0  2401               	addwf	?___wmul^0,w,c
  1719   002BE2  6E0E               	movwf	read_prec_or_width@n^0,c
  1720   002BE4  0E00               	movlw	0
  1721   002BE6  2002               	addwfc	(?___wmul+1)^0,w,c
  1722   002BE8  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1723   002BEA                     
  1724                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  1725   002BEA  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1726   002BEE  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1727   002BF2  2ADE               	incf	postinc2,f,c
  1728   002BF4  0E00               	movlw	0
  1729   002BF6  22DD               	addwfc	postdec2,f,c
  1730   002BF8                     l3393:
  1731                           
  1732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1733   002BF8  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1734   002BFC  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1735   002C00  CFDE FFF6          	movff	postinc2,tblptrl
  1736   002C04  CFDD FFF7          	movff	postdec2,tblptrh
  1737   002C08                     	if	0	;tblptru may be non-zero
  1738   002C08                     	endif
  1739   002C08                     	if	0	;tblptru may be non-zero
  1740   002C08                     	endif
  1741   002C08  0008               	tblrd		*
  1742   002C0A  50F5               	movf	tablat,w,c
  1743   002C0C  0FD0               	addlw	208
  1744   002C0E  6E0D               	movwf	read_prec_or_width@c^0,c
  1745   002C10  0E09               	movlw	9
  1746   002C12  640D               	cpfsgt	read_prec_or_width@c^0,c
  1747   002C14  EF0E  F016         	goto	u3611
  1748   002C18  EF10  F016         	goto	u3610
  1749   002C1C                     u3611:
  1750   002C1C  EFE5  F015         	goto	l3389
  1751   002C20                     u3610:
  1752   002C20                     l925:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  1755   002C20  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1756   002C24  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1757   002C28  0012               	return		;funcret
  1758   002C2A                     __end_of_read_prec_or_width:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function ___wmul *****************
  1762 ;; Defined at:
  1763 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  multiplier      2    0[COMRAM] unsigned int 
  1766 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  product         2    4[COMRAM] unsigned int 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  2    0[COMRAM] unsigned int 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, prodl, prodh
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1778 ;;      Params:         4       0       0       0       0       0       0       0       0
  1779 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1781 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1782 ;;Total ram usage:        6 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_read_prec_or_width
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text5
  1792   003138                     __ptext5:
  1793                           	callstack 0
  1794   003138                     ___wmul:
  1795                           	callstack 26
  1796   003138  5001               	movf	___wmul@multiplier^0,w,c
  1797   00313A  0203               	mulwf	___wmul@multiplicand^0,c
  1798   00313C  CFF3 F005          	movff	prodl,___wmul@product
  1799   003140  CFF4 F006          	movff	prodh,___wmul@product+1
  1800   003144  5001               	movf	___wmul@multiplier^0,w,c
  1801   003146  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1802   003148  50F3               	movf	243,w,c
  1803   00314A  2606               	addwf	(___wmul@product+1)^0,f,c
  1804   00314C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1805   00314E  0203               	mulwf	___wmul@multiplicand^0,c
  1806   003150  50F3               	movf	243,w,c
  1807   003152  2606               	addwf	(___wmul@product+1)^0,f,c
  1808   003154  C005  F001         	movff	___wmul@product,?___wmul
  1809   003158  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1810   00315C  0012               	return		;funcret
  1811   00315E                     __end_of___wmul:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _efgtoa *****************
  1815 ;; Defined at:
  1816 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  1819 ;;		 -> sprintf@f(12), 
  1820 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  1821 ;;  c               1   90[COMRAM] unsigned char 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  u               4   40[BANK0 ] struct flui
  1824 ;;  g               4   34[BANK0 ] struct flui
  1825 ;;  l               4   27[BANK0 ] struct flui
  1826 ;;  h               4   23[BANK0 ] struct flui
  1827 ;;  ou              4   19[BANK0 ] struct flui
  1828 ;;  n               2   38[BANK0 ] int 
  1829 ;;  i               2   31[BANK0 ] int 
  1830 ;;  w               2   17[BANK0 ] int 
  1831 ;;  e               2   15[BANK0 ] int 
  1832 ;;  m               2   13[BANK0 ] int 
  1833 ;;  d               2   11[BANK0 ] int 
  1834 ;;  t               2    4[BANK0 ] int 
  1835 ;;  p               2    2[BANK0 ] int 
  1836 ;;  ne              2    0[BANK0 ] int 
  1837 ;;  sign            1   33[BANK0 ] unsigned char 
  1838 ;;  nmode           1   10[BANK0 ] unsigned char 
  1839 ;;  mode            1    9[BANK0 ] unsigned char 
  1840 ;;  pp              1    8[BANK0 ] unsigned char 
  1841 ;;  esign           1    0        unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1851 ;;      Params:         7       0       0       0       0       0       0       0       0
  1852 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1853 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1854 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1855 ;;Total ram usage:       53 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; Hardware stack levels required when called: 4
  1858 ;; This function calls:
  1859 ;;		___fladd
  1860 ;;		___fldiv
  1861 ;;		___fleq
  1862 ;;		___flge
  1863 ;;		___flmul
  1864 ;;		___flneg
  1865 ;;		___flsub
  1866 ;;		___fltol
  1867 ;;		___fpclassifyf
  1868 ;;		_floorf
  1869 ;;		_labs
  1870 ;;		_memcpy
  1871 ;;		_pad
  1872 ;;		_strcpy
  1873 ;; This function is called by:
  1874 ;;		_vfpfcnvrt
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text6
  1879   000826                     __ptext6:
  1880                           	callstack 0
  1881   000826                     _efgtoa:
  1882                           	callstack 23
  1883   000826                     
  1884                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  1885   000826  0E00               	movlw	0
  1886   000828  0100               	movlb	0	; () banked
  1887   00082A  6F81               	movwf	efgtoa@sign& (0+255),b
  1888   00082C                     
  1889                           ; BSR set to: 0
  1890                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  1891   00082C  C057  F082         	movff	efgtoa@f,efgtoa@g
  1892   000830  C058  F083         	movff	efgtoa@f+1,efgtoa@g+1
  1893   000834  C059  F084         	movff	efgtoa@f+2,efgtoa@g+2
  1894   000838  C05A  F085         	movff	efgtoa@f+3,efgtoa@g+3
  1895   00083C                     
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  1898   00083C  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1899   00083E  EF25  F004         	goto	u3250
  1900   000842  EF23  F004         	goto	u3251
  1901   000846                     u3251:
  1902   000846  EF39  F004         	goto	l3159
  1903   00084A                     u3250:
  1904   00084A                     
  1905                           ; BSR set to: 0
  1906                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  1907   00084A  0E01               	movlw	1
  1908   00084C  6F81               	movwf	efgtoa@sign& (0+255),b
  1909   00084E                     
  1910                           ; BSR set to: 0
  1911                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  1912   00084E  C082  F001         	movff	efgtoa@g,___flneg@f1
  1913   000852  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1914   000856  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1915   00085A  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1916   00085E  EC66  F018         	call	___flneg	;wreg free
  1917   000862  C001  F082         	movff	?___flneg,efgtoa@g
  1918   000866  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  1919   00086A  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  1920   00086E  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  1921   000872                     l3159:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  1924   000872  0E00               	movlw	0
  1925   000874  0100               	movlb	0	; () banked
  1926   000876  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1927   000878  0E00               	movlw	0
  1928   00087A  6F86               	movwf	efgtoa@n& (0+255),b
  1929   00087C                     
  1930                           ; BSR set to: 0
  1931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  1932   00087C  C0C7  F071         	movff	_width,efgtoa@w
  1933   000880  C0C8  F072         	movff	_width+1,efgtoa@w+1
  1934   000884                     
  1935                           ; BSR set to: 0
  1936                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  1937   000884  5181               	movf	efgtoa@sign& (0+255),w,b
  1938   000886  B4D8               	btfsc	status,2,c
  1939   000888  EF48  F004         	goto	u3261
  1940   00088C  EF4A  F004         	goto	u3260
  1941   000890                     u3261:
  1942   000890  EF5E  F004         	goto	l3173
  1943   000894                     u3260:
  1944   000894                     
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  1947   000894  5181               	movf	efgtoa@sign& (0+255),w,b
  1948   000896  A4D8               	btfss	status,2,c
  1949   000898  EF50  F004         	goto	u3271
  1950   00089C  EF52  F004         	goto	u3270
  1951   0008A0                     u3271:
  1952   0008A0  EF58  F004         	goto	l3169
  1953   0008A4                     u3270:
  1954   0008A4                     
  1955                           ; BSR set to: 0
  1956   0008A4  0E00               	movlw	0
  1957   0008A6  6F67               	movwf	(_efgtoa$898+1)& (0+255),b
  1958   0008A8  0E2B               	movlw	43
  1959   0008AA  6F66               	movwf	_efgtoa$898& (0+255),b
  1960   0008AC  EF5C  F004         	goto	l3171
  1961   0008B0                     l3169:
  1962                           
  1963                           ; BSR set to: 0
  1964   0008B0  0E00               	movlw	0
  1965   0008B2  6F67               	movwf	(_efgtoa$898+1)& (0+255),b
  1966   0008B4  0E2D               	movlw	45
  1967   0008B6  6F66               	movwf	_efgtoa$898& (0+255),b
  1968   0008B8                     l3171:
  1969                           
  1970                           ; BSR set to: 0
  1971   0008B8  C066  F081         	movff	_efgtoa$898,efgtoa@sign
  1972   0008BC                     l3173:
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1976   0008BC  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  1977   0008C0  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1978   0008C4  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1979   0008C8  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1980   0008CC  EC65  F014         	call	___fpclassifyf	;wreg free
  1981   0008D0  0401               	decf	?___fpclassifyf^0,w,c
  1982   0008D2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  1983   0008D4  A4D8               	btfss	status,2,c
  1984   0008D6  EF6F  F004         	goto	u3281
  1985   0008DA  EF71  F004         	goto	u3280
  1986   0008DE                     u3281:
  1987   0008DE  EFA4  F004         	goto	l3191
  1988   0008E2                     u3280:
  1989   0008E2                     
  1990                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  1991   0008E2  0100               	movlb	0	; () banked
  1992   0008E4  5181               	movf	efgtoa@sign& (0+255),w,b
  1993   0008E6  B4D8               	btfsc	status,2,c
  1994   0008E8  EF78  F004         	goto	u3291
  1995   0008EC  EF7A  F004         	goto	u3290
  1996   0008F0                     u3291:
  1997   0008F0  EF83  F004         	goto	l3183
  1998   0008F4                     u3290:
  1999   0008F4                     
  2000                           ; BSR set to: 0
  2001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  2002   0008F4  C081  F100         	movff	efgtoa@sign,_dbuf
  2003   0008F8                     
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  2006   0008F8  0771               	decf	efgtoa@w& (0+255),f,b
  2007   0008FA  A0D8               	btfss	status,0,c
  2008   0008FC  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2009   0008FE                     
  2010                           ; BSR set to: 0
  2011                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  2012   0008FE  0E00               	movlw	0
  2013   000900  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2014   000902  0E01               	movlw	1
  2015   000904  6F86               	movwf	efgtoa@n& (0+255),b
  2016   000906                     l3183:
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  2020   000906  0E00               	movlw	low _dbuf
  2021   000908  2586               	addwf	efgtoa@n& (0+255),w,b
  2022   00090A  6E01               	movwf	strcpy@dest^0,c
  2023   00090C  0E01               	movlw	high _dbuf
  2024   00090E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2025   000910  6E02               	movwf	(strcpy@dest+1)^0,c
  2026   000912  0E1C               	movlw	low STR_3
  2027   000914  6E03               	movwf	strcpy@src^0,c
  2028   000916  0E08               	movlw	high STR_3
  2029   000918  6E04               	movwf	(strcpy@src+1)^0,c
  2030   00091A  EC46  F018         	call	_strcpy	;wreg free
  2031   00091E                     l3185:
  2032                           
  2033                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2034   00091E  0100               	movlb	0	; () banked
  2035   000920  0EFD               	movlw	253
  2036   000922  2771               	addwf	efgtoa@w& (0+255),f,b
  2037   000924  0EFF               	movlw	255
  2038   000926  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2039   000928                     
  2040                           ; BSR set to: 0
  2041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2042   000928  C055  F011         	movff	efgtoa@fp,pad@fp
  2043   00092C  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2044   000930  0E00               	movlw	low _dbuf
  2045   000932  6E13               	movwf	pad@buf^0,c
  2046   000934  0E01               	movlw	high _dbuf
  2047   000936  6E14               	movwf	(pad@buf+1)^0,c
  2048   000938  C071  F015         	movff	efgtoa@w,pad@p
  2049   00093C  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2050   000940  ECEA  F016         	call	_pad	;wreg free
  2051   000944  EF43  F009         	goto	l874
  2052   000948                     l3191:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2055   000948  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2056   00094C  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2057   000950  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2058   000954  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2059   000958  EC65  F014         	call	___fpclassifyf	;wreg free
  2060   00095C  5001               	movf	?___fpclassifyf^0,w,c
  2061   00095E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2062   000960  A4D8               	btfss	status,2,c
  2063   000962  EFB5  F004         	goto	u3301
  2064   000966  EFB7  F004         	goto	u3300
  2065   00096A                     u3301:
  2066   00096A  EFD7  F004         	goto	l3209
  2067   00096E                     u3300:
  2068   00096E                     
  2069                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  2070   00096E  0100               	movlb	0	; () banked
  2071   000970  5181               	movf	efgtoa@sign& (0+255),w,b
  2072   000972  B4D8               	btfsc	status,2,c
  2073   000974  EFBE  F004         	goto	u3311
  2074   000978  EFC0  F004         	goto	u3310
  2075   00097C                     u3311:
  2076   00097C  EFC9  F004         	goto	l3201
  2077   000980                     u3310:
  2078   000980                     
  2079                           ; BSR set to: 0
  2080                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  2081   000980  C081  F100         	movff	efgtoa@sign,_dbuf
  2082   000984                     
  2083                           ; BSR set to: 0
  2084                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  2085   000984  0771               	decf	efgtoa@w& (0+255),f,b
  2086   000986  A0D8               	btfss	status,0,c
  2087   000988  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2088   00098A                     
  2089                           ; BSR set to: 0
  2090                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  2091   00098A  0E00               	movlw	0
  2092   00098C  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2093   00098E  0E01               	movlw	1
  2094   000990  6F86               	movwf	efgtoa@n& (0+255),b
  2095   000992                     l3201:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  2099   000992  0E00               	movlw	low _dbuf
  2100   000994  2586               	addwf	efgtoa@n& (0+255),w,b
  2101   000996  6E01               	movwf	strcpy@dest^0,c
  2102   000998  0E01               	movlw	high _dbuf
  2103   00099A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2104   00099C  6E02               	movwf	(strcpy@dest+1)^0,c
  2105   00099E  0E20               	movlw	low STR_6
  2106   0009A0  6E03               	movwf	strcpy@src^0,c
  2107   0009A2  0E08               	movlw	high STR_6
  2108   0009A4  6E04               	movwf	(strcpy@src+1)^0,c
  2109   0009A6  EC46  F018         	call	_strcpy	;wreg free
  2110   0009AA  EF8F  F004         	goto	l3185
  2111   0009AE                     l3209:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  2114   0009AE  0E00               	movlw	0
  2115   0009B0  0100               	movlb	0	; () banked
  2116   0009B2  6F88               	movwf	efgtoa@u& (0+255),b
  2117   0009B4  0E00               	movlw	0
  2118   0009B6  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2119   0009B8  0E80               	movlw	128
  2120   0009BA  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2121   0009BC  0E3F               	movlw	63
  2122   0009BE  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  2125   0009C0  0E00               	movlw	0
  2126   0009C2  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2127   0009C4  0E00               	movlw	0
  2128   0009C6  6F6F               	movwf	efgtoa@e& (0+255),b
  2129   0009C8                     
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  2132   0009C8  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2133   0009CC  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2134   0009D0  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2135   0009D4  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2136   0009D8  0E00               	movlw	0
  2137   0009DA  6E05               	movwf	___fleq@ff2^0,c
  2138   0009DC  0E00               	movlw	0
  2139   0009DE  6E06               	movwf	(___fleq@ff2+1)^0,c
  2140   0009E0  0E00               	movlw	0
  2141   0009E2  6E07               	movwf	(___fleq@ff2+2)^0,c
  2142   0009E4  0E00               	movlw	0
  2143   0009E6  6E08               	movwf	(___fleq@ff2+3)^0,c
  2144   0009E8  EC15  F016         	call	___fleq	;wreg free
  2145   0009EC  B0D8               	btfsc	status,0,c
  2146   0009EE  EFFB  F004         	goto	u3321
  2147   0009F2  EFFD  F004         	goto	u3320
  2148   0009F6                     u3321:
  2149   0009F6  EFDC  F005         	goto	l877
  2150   0009FA                     u3320:
  2151   0009FA  EF0A  F005         	goto	l3217
  2152   0009FE                     l879:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  2155   0009FE  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2156   000A02  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2157   000A06  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2158   000A0A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2159   000A0E                     
  2160                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  2161   000A0E  0100               	movlb	0	; () banked
  2162   000A10  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2163   000A12  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2164   000A14                     l3217:
  2165                           
  2166                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2167   000A14  C088  F00F         	movff	efgtoa@u,___flmul@b
  2168   000A18  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2169   000A1C  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2170   000A20  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2171   000A24  0E00               	movlw	0
  2172   000A26  6E13               	movwf	___flmul@a^0,c
  2173   000A28  0E00               	movlw	0
  2174   000A2A  6E14               	movwf	(___flmul@a+1)^0,c
  2175   000A2C  0E20               	movlw	32
  2176   000A2E  6E15               	movwf	(___flmul@a+2)^0,c
  2177   000A30  0E41               	movlw	65
  2178   000A32  6E16               	movwf	(___flmul@a+3)^0,c
  2179   000A34  ECA4  F00B         	call	___flmul	;wreg free
  2180   000A38  C00F  F073         	movff	?___flmul,efgtoa@ou
  2181   000A3C  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2182   000A40  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2183   000A44  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2184   000A48  0100               	movlb	0	; () banked
  2185   000A4A  5173               	movf	efgtoa@ou& (0+255),w,b
  2186   000A4C  5D82               	subwf	efgtoa@g& (0+255),w,b
  2187   000A4E  6E01               	movwf	labs@a^0,c
  2188   000A50  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2189   000A52  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2190   000A54  6E02               	movwf	(labs@a+1)^0,c
  2191   000A56  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2192   000A58  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2193   000A5A  6E03               	movwf	(labs@a+2)^0,c
  2194   000A5C  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2195   000A5E  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2196   000A60  6E04               	movwf	(labs@a+3)^0,c
  2197   000A62  EC27  F017         	call	_labs	;wreg free
  2198   000A66  BE04               	btfsc	(?_labs+3)^0,7,c
  2199   000A68  EF41  F005         	goto	u3331
  2200   000A6C  5004               	movf	(?_labs+3)^0,w,c
  2201   000A6E  1003               	iorwf	(?_labs+2)^0,w,c
  2202   000A70  1002               	iorwf	(?_labs+1)^0,w,c
  2203   000A72  E109               	bnz	u3330
  2204   000A74  0E02               	movlw	2
  2205   000A76  5C01               	subwf	?_labs^0,w,c
  2206   000A78  A0D8               	btfss	status,0,c
  2207   000A7A  EF41  F005         	goto	u3331
  2208   000A7E  EF43  F005         	goto	u3330
  2209   000A82                     u3331:
  2210   000A82  EFFF  F004         	goto	l879
  2211   000A86                     u3330:
  2212   000A86  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2213   000A8A  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2214   000A8E  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2215   000A92  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2216   000A96  C082  F02C         	movff	efgtoa@g,___flge@ff2
  2217   000A9A  C083  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2218   000A9E  C084  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2219   000AA2  C085  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2220   000AA6  ECE3  F013         	call	___flge	;wreg free
  2221   000AAA  A0D8               	btfss	status,0,c
  2222   000AAC  EF5A  F005         	goto	u3341
  2223   000AB0  EF5C  F005         	goto	u3340
  2224   000AB4                     u3341:
  2225   000AB4  EFFF  F004         	goto	l879
  2226   000AB8                     u3340:
  2227   000AB8                     
  2228                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2229   000AB8  0100               	movlb	0	; () banked
  2230   000ABA  5188               	movf	efgtoa@u& (0+255),w,b
  2231   000ABC  5D82               	subwf	efgtoa@g& (0+255),w,b
  2232   000ABE  6E01               	movwf	labs@a^0,c
  2233   000AC0  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2234   000AC2  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2235   000AC4  6E02               	movwf	(labs@a+1)^0,c
  2236   000AC6  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2237   000AC8  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2238   000ACA  6E03               	movwf	(labs@a+2)^0,c
  2239   000ACC  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2240   000ACE  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2241   000AD0  6E04               	movwf	(labs@a+3)^0,c
  2242   000AD2  EC27  F017         	call	_labs	;wreg free
  2243   000AD6  BE04               	btfsc	(?_labs+3)^0,7,c
  2244   000AD8  EF7B  F005         	goto	u3350
  2245   000ADC  5004               	movf	(?_labs+3)^0,w,c
  2246   000ADE  1003               	iorwf	(?_labs+2)^0,w,c
  2247   000AE0  1002               	iorwf	(?_labs+1)^0,w,c
  2248   000AE2  E107               	bnz	u3351
  2249   000AE4  0E02               	movlw	2
  2250   000AE6  5C01               	subwf	?_labs^0,w,c
  2251   000AE8  B0D8               	btfsc	status,0,c
  2252   000AEA  EF79  F005         	goto	u3351
  2253   000AEE  EF7B  F005         	goto	u3350
  2254   000AF2                     u3351:
  2255   000AF2  EFC3  F005         	goto	l3235
  2256   000AF6                     u3350:
  2257   000AF6                     l3225:
  2258                           
  2259                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  2260   000AF6  C088  F082         	movff	efgtoa@u,efgtoa@g
  2261   000AFA  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2262   000AFE  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2263   000B02  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  2266   000B06  EFDC  F005         	goto	l877
  2267   000B0A                     l3227:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  2270   000B0A  C088  F028         	movff	efgtoa@u,___fldiv@b
  2271   000B0E  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2272   000B12  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2273   000B16  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2274   000B1A  0E00               	movlw	0
  2275   000B1C  6E2C               	movwf	___fldiv@a^0,c
  2276   000B1E  0E00               	movlw	0
  2277   000B20  6E2D               	movwf	(___fldiv@a+1)^0,c
  2278   000B22  0E20               	movlw	32
  2279   000B24  6E2E               	movwf	(___fldiv@a+2)^0,c
  2280   000B26  0E41               	movlw	65
  2281   000B28  6E2F               	movwf	(___fldiv@a+3)^0,c
  2282   000B2A  ECB9  F00D         	call	___fldiv	;wreg free
  2283   000B2E  C028  F088         	movff	?___fldiv,efgtoa@u
  2284   000B32  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2285   000B36  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2286   000B3A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2287   000B3E                     
  2288                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  2289   000B3E  0100               	movlb	0	; () banked
  2290   000B40  076F               	decf	efgtoa@e& (0+255),f,b
  2291   000B42  A0D8               	btfss	status,0,c
  2292   000B44  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2293   000B46                     
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2296   000B46  5188               	movf	efgtoa@u& (0+255),w,b
  2297   000B48  5D82               	subwf	efgtoa@g& (0+255),w,b
  2298   000B4A  6E01               	movwf	labs@a^0,c
  2299   000B4C  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2300   000B4E  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2301   000B50  6E02               	movwf	(labs@a+1)^0,c
  2302   000B52  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2303   000B54  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2304   000B56  6E03               	movwf	(labs@a+2)^0,c
  2305   000B58  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2306   000B5A  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2307   000B5C  6E04               	movwf	(labs@a+3)^0,c
  2308   000B5E  EC27  F017         	call	_labs	;wreg free
  2309   000B62  BE04               	btfsc	(?_labs+3)^0,7,c
  2310   000B64  EFC1  F005         	goto	u3360
  2311   000B68  5004               	movf	(?_labs+3)^0,w,c
  2312   000B6A  1003               	iorwf	(?_labs+2)^0,w,c
  2313   000B6C  1002               	iorwf	(?_labs+1)^0,w,c
  2314   000B6E  E107               	bnz	u3361
  2315   000B70  0E02               	movlw	2
  2316   000B72  5C01               	subwf	?_labs^0,w,c
  2317   000B74  B0D8               	btfsc	status,0,c
  2318   000B76  EFBF  F005         	goto	u3361
  2319   000B7A  EFC1  F005         	goto	u3360
  2320   000B7E                     u3361:
  2321   000B7E  EFC3  F005         	goto	l3235
  2322   000B82                     u3360:
  2323   000B82  EF7B  F005         	goto	l3225
  2324   000B86                     l3235:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  2327   000B86  C082  F028         	movff	efgtoa@g,___flge@ff1
  2328   000B8A  C083  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2329   000B8E  C084  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2330   000B92  C085  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2331   000B96  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2332   000B9A  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2333   000B9E  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2334   000BA2  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2335   000BA6  ECE3  F013         	call	___flge	;wreg free
  2336   000BAA  A0D8               	btfss	status,0,c
  2337   000BAC  EFDA  F005         	goto	u3371
  2338   000BB0  EFDC  F005         	goto	u3370
  2339   000BB4                     u3371:
  2340   000BB4  EF85  F005         	goto	l3227
  2341   000BB8                     u3370:
  2342   000BB8                     l877:
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  2345   000BB8  C05B  F069         	movff	efgtoa@c,efgtoa@mode
  2346                           
  2347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  2348   000BBC  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2349   000BC0                     
  2350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  2351   000BC0  0100               	movlb	0	; () banked
  2352   000BC2  BFCA               	btfsc	(_prec+1)& (0+255),7,b
  2353   000BC4  EFE6  F005         	goto	u3381
  2354   000BC8  EFE8  F005         	goto	u3380
  2355   000BCC                     u3381:
  2356   000BCC  EFEE  F005         	goto	l3241
  2357   000BD0                     u3380:
  2358   000BD0                     
  2359                           ; BSR set to: 0
  2360   000BD0  C0C9  F062         	movff	_prec,efgtoa@p
  2361   000BD4  C0CA  F063         	movff	_prec+1,efgtoa@p+1
  2362   000BD8  EFF2  F005         	goto	l3243
  2363   000BDC                     l3241:
  2364                           
  2365                           ; BSR set to: 0
  2366   000BDC  0E00               	movlw	0
  2367   000BDE  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2368   000BE0  0E06               	movlw	6
  2369   000BE2  6F62               	movwf	efgtoa@p& (0+255),b
  2370   000BE4                     l3243:
  2371                           
  2372                           ; BSR set to: 0
  2373                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  2374   000BE4  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2375   000BE8  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2376   000BEC                     
  2377                           ; BSR set to: 0
  2378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  2379   000BEC  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2380   000BEE  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2381   000BF0                     
  2382                           ; BSR set to: 0
  2383                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  2384   000BF0  0E66               	movlw	102
  2385   000BF2  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2386   000BF4  A4D8               	btfss	status,2,c
  2387   000BF6  EFFF  F005         	goto	u3391
  2388   000BFA  EF01  F006         	goto	u3390
  2389   000BFE                     u3391:
  2390   000BFE  EF21  F006         	goto	l3257
  2391   000C02                     u3390:
  2392   000C02                     
  2393                           ; BSR set to: 0
  2394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  2395   000C02  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2396   000C04  EF08  F006         	goto	u3400
  2397   000C08  EF06  F006         	goto	u3401
  2398   000C0C                     u3401:
  2399   000C0C  EF14  F006         	goto	l3253
  2400   000C10                     u3400:
  2401   000C10                     
  2402                           ; BSR set to: 0
  2403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  2404   000C10  0E00               	movlw	0
  2405   000C12  6F88               	movwf	efgtoa@u& (0+255),b
  2406   000C14  0E00               	movlw	0
  2407   000C16  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2408   000C18  0E80               	movlw	128
  2409   000C1A  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2410   000C1C  0E3F               	movlw	63
  2411   000C1E  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  2414   000C20  0E00               	movlw	0
  2415   000C22  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2416   000C24  0E00               	movlw	0
  2417   000C26  6F6F               	movwf	efgtoa@e& (0+255),b
  2418   000C28                     l3253:
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  2422   000C28  0E67               	movlw	103
  2423   000C2A  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2424   000C2C  B4D8               	btfsc	status,2,c
  2425   000C2E  EF1B  F006         	goto	u3411
  2426   000C32  EF1D  F006         	goto	u3410
  2427   000C36                     u3411:
  2428   000C36  EF21  F006         	goto	l3257
  2429   000C3A                     u3410:
  2430   000C3A                     
  2431                           ; BSR set to: 0
  2432                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  2433   000C3A  516F               	movf	efgtoa@e& (0+255),w,b
  2434   000C3C  276D               	addwf	efgtoa@m& (0+255),f,b
  2435   000C3E  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2436   000C40  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2437   000C42                     l3257:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  2441   000C42  0E00               	movlw	0
  2442   000C44  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2443   000C46  0E00               	movlw	0
  2444   000C48  6F7F               	movwf	efgtoa@i& (0+255),b
  2445   000C4A                     
  2446                           ; BSR set to: 0
  2447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  2448   000C4A  C082  F077         	movff	efgtoa@g,efgtoa@h
  2449   000C4E  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  2450   000C52  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  2451   000C56  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  2452   000C5A                     
  2453                           ; BSR set to: 0
  2454                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  2455   000C5A  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2456   000C5E  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2457   000C62  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2458   000C66  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2459                           
  2460                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2461   000C6A  EFB2  F006         	goto	l3271
  2462   000C6E                     l3263:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  2466   000C6E  C077  F028         	movff	efgtoa@h,___fldiv@b
  2467   000C72  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2468   000C76  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2469   000C7A  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2470   000C7E  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2471   000C82  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2472   000C86  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2473   000C8A  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2474   000C8E  ECB9  F00D         	call	___fldiv	;wreg free
  2475   000C92  C028  F041         	movff	?___fldiv,floorf@x
  2476   000C96  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2477   000C9A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2478   000C9E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2479   000CA2  ECF3  F010         	call	_floorf	;wreg free
  2480   000CA6  C041  F07B         	movff	?_floorf,efgtoa@l
  2481   000CAA  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  2482   000CAE  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  2483   000CB2  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  2484                           
  2485                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  2486   000CB6  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2487   000CBA  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2488   000CBE  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2489   000CC2  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2490   000CC6  EC60  F013         	call	___fltol	;wreg free
  2491   000CCA  C001  F06B         	movff	?___fltol,efgtoa@d
  2492   000CCE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2493   000CD2                     
  2494                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  2495   000CD2  C077  F028         	movff	efgtoa@h,___flsub@b
  2496   000CD6  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  2497   000CDA  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2498   000CDE  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2499   000CE2  C07B  F013         	movff	efgtoa@l,___flmul@a
  2500   000CE6  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  2501   000CEA  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  2502   000CEE  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  2503   000CF2  C088  F00F         	movff	efgtoa@u,___flmul@b
  2504   000CF6  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2505   000CFA  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2506   000CFE  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2507   000D02  ECA4  F00B         	call	___flmul	;wreg free
  2508   000D06  C00F  F02C         	movff	?___flmul,___flsub@a
  2509   000D0A  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2510   000D0E  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2511   000D12  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2512   000D16  EC01  F018         	call	___flsub	;wreg free
  2513   000D1A  C028  F077         	movff	?___flsub,efgtoa@h
  2514   000D1E  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  2515   000D22  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  2516   000D26  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  2517   000D2A                     
  2518                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  2519   000D2A  C088  F028         	movff	efgtoa@u,___fldiv@b
  2520   000D2E  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2521   000D32  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2522   000D36  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2523   000D3A  0E00               	movlw	0
  2524   000D3C  6E2C               	movwf	___fldiv@a^0,c
  2525   000D3E  0E00               	movlw	0
  2526   000D40  6E2D               	movwf	(___fldiv@a+1)^0,c
  2527   000D42  0E20               	movlw	32
  2528   000D44  6E2E               	movwf	(___fldiv@a+2)^0,c
  2529   000D46  0E41               	movlw	65
  2530   000D48  6E2F               	movwf	(___fldiv@a+3)^0,c
  2531   000D4A  ECB9  F00D         	call	___fldiv	;wreg free
  2532   000D4E  C028  F088         	movff	?___fldiv,efgtoa@u
  2533   000D52  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2534   000D56  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2535   000D5A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2536   000D5E                     
  2537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  2538   000D5E  0100               	movlb	0	; () banked
  2539   000D60  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  2540   000D62  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  2541   000D64                     l3271:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2545   000D64  516D               	movf	efgtoa@m& (0+255),w,b
  2546   000D66  5D7F               	subwf	efgtoa@i& (0+255),w,b
  2547   000D68  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  2548   000D6A  0A80               	xorlw	128
  2549   000D6C  6E5C               	movwf	??_efgtoa^0,c
  2550   000D6E  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2551   000D70  0A80               	xorlw	128
  2552   000D72  585C               	subwfb	??_efgtoa^0,w,c
  2553   000D74  A0D8               	btfss	status,0,c
  2554   000D76  EFBF  F006         	goto	u3421
  2555   000D7A  EFC1  F006         	goto	u3420
  2556   000D7E                     u3421:
  2557   000D7E  EF37  F006         	goto	l3263
  2558   000D82                     u3420:
  2559   000D82                     
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  2562   000D82  C088  F00F         	movff	efgtoa@u,___flmul@b
  2563   000D86  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2564   000D8A  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2565   000D8E  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2566   000D92  0E00               	movlw	0
  2567   000D94  6E13               	movwf	___flmul@a^0,c
  2568   000D96  0E00               	movlw	0
  2569   000D98  6E14               	movwf	(___flmul@a+1)^0,c
  2570   000D9A  0EA0               	movlw	160
  2571   000D9C  6E15               	movwf	(___flmul@a+2)^0,c
  2572   000D9E  0E40               	movlw	64
  2573   000DA0  6E16               	movwf	(___flmul@a+3)^0,c
  2574   000DA2  ECA4  F00B         	call	___flmul	;wreg free
  2575   000DA6  C00F  F07B         	movff	?___flmul,efgtoa@l
  2576   000DAA  C010  F07C         	movff	?___flmul+1,efgtoa@l+1
  2577   000DAE  C011  F07D         	movff	?___flmul+2,efgtoa@l+2
  2578   000DB2  C012  F07E         	movff	?___flmul+3,efgtoa@l+3
  2579   000DB6                     
  2580                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  2581   000DB6  C077  F028         	movff	efgtoa@h,___flge@ff1
  2582   000DBA  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2583   000DBE  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2584   000DC2  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2585   000DC6  C07B  F02C         	movff	efgtoa@l,___flge@ff2
  2586   000DCA  C07C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2587   000DCE  C07D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2588   000DD2  C07E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2589   000DD6  ECE3  F013         	call	___flge	;wreg free
  2590   000DDA  B0D8               	btfsc	status,0,c
  2591   000DDC  EFF2  F006         	goto	u3431
  2592   000DE0  EFF4  F006         	goto	u3430
  2593   000DE4                     u3431:
  2594   000DE4  EFFF  F006         	goto	l3279
  2595   000DE8                     u3430:
  2596   000DE8                     
  2597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  2598   000DE8  0E00               	movlw	0
  2599   000DEA  0100               	movlb	0	; () banked
  2600   000DEC  6F7B               	movwf	efgtoa@l& (0+255),b
  2601   000DEE  0E00               	movlw	0
  2602   000DF0  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  2603   000DF2  0E00               	movlw	0
  2604   000DF4  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  2605   000DF6  0E00               	movlw	0
  2606   000DF8  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  2609   000DFA  EF28  F007         	goto	l3285
  2610   000DFE                     l3279:
  2611                           
  2612                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  2613   000DFE  C077  F001         	movff	efgtoa@h,___fleq@ff1
  2614   000E02  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2615   000E06  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2616   000E0A  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2617   000E0E  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  2618   000E12  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2619   000E16  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2620   000E1A  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2621   000E1E  EC15  F016         	call	___fleq	;wreg free
  2622   000E22  A0D8               	btfss	status,0,c
  2623   000E24  EF16  F007         	goto	u3441
  2624   000E28  EF18  F007         	goto	u3440
  2625   000E2C                     u3441:
  2626   000E2C  EF28  F007         	goto	l3285
  2627   000E30                     u3440:
  2628   000E30  0100               	movlb	0	; () banked
  2629   000E32  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2630   000E34  EF1E  F007         	goto	u3451
  2631   000E38  EF20  F007         	goto	u3450
  2632   000E3C                     u3451:
  2633   000E3C  EF28  F007         	goto	l3285
  2634   000E40                     u3450:
  2635   000E40                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  2638   000E40  0E00               	movlw	0
  2639   000E42  6F7B               	movwf	efgtoa@l& (0+255),b
  2640   000E44  0E00               	movlw	0
  2641   000E46  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  2642   000E48  0E00               	movlw	0
  2643   000E4A  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  2644   000E4C  0E00               	movlw	0
  2645   000E4E  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  2646   000E50                     l3285:
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  2649   000E50  C082  F001         	movff	efgtoa@g,___fladd@b
  2650   000E54  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  2651   000E58  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  2652   000E5C  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  2653   000E60  C07B  F005         	movff	efgtoa@l,___fladd@a
  2654   000E64  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  2655   000E68  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  2656   000E6C  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  2657   000E70  EC44  F009         	call	___fladd	;wreg free
  2658   000E74  C001  F077         	movff	?___fladd,efgtoa@h
  2659   000E78  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  2660   000E7C  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  2661   000E80  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  2662   000E84                     
  2663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  2664   000E84  C077  F028         	movff	efgtoa@h,___flge@ff1
  2665   000E88  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2666   000E8C  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2667   000E90  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2668   000E94  0E00               	movlw	0
  2669   000E96  6E13               	movwf	___flmul@a^0,c
  2670   000E98  0E00               	movlw	0
  2671   000E9A  6E14               	movwf	(___flmul@a+1)^0,c
  2672   000E9C  0E20               	movlw	32
  2673   000E9E  6E15               	movwf	(___flmul@a+2)^0,c
  2674   000EA0  0E41               	movlw	65
  2675   000EA2  6E16               	movwf	(___flmul@a+3)^0,c
  2676   000EA4  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2677   000EA8  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2678   000EAC  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2679   000EB0  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2680   000EB4  ECA4  F00B         	call	___flmul	;wreg free
  2681   000EB8  C00F  F02C         	movff	?___flmul,___flge@ff2
  2682   000EBC  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2683   000EC0  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2684   000EC4  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2685   000EC8  ECE3  F013         	call	___flge	;wreg free
  2686   000ECC  A0D8               	btfss	status,0,c
  2687   000ECE  EF6B  F007         	goto	u3461
  2688   000ED2  EF6D  F007         	goto	u3460
  2689   000ED6                     u3461:
  2690   000ED6  EF96  F007         	goto	l3297
  2691   000EDA                     u3460:
  2692   000EDA                     
  2693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  2694   000EDA  0100               	movlb	0	; () banked
  2695   000EDC  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2696   000EDE  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2697   000EE0                     
  2698                           ; BSR set to: 0
  2699                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  2700   000EE0  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2701   000EE4  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2702   000EE8  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2703   000EEC  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2704   000EF0  0E00               	movlw	0
  2705   000EF2  6E13               	movwf	___flmul@a^0,c
  2706   000EF4  0E00               	movlw	0
  2707   000EF6  6E14               	movwf	(___flmul@a+1)^0,c
  2708   000EF8  0E20               	movlw	32
  2709   000EFA  6E15               	movwf	(___flmul@a+2)^0,c
  2710   000EFC  0E41               	movlw	65
  2711   000EFE  6E16               	movwf	(___flmul@a+3)^0,c
  2712   000F00  ECA4  F00B         	call	___flmul	;wreg free
  2713   000F04  C00F  F073         	movff	?___flmul,efgtoa@ou
  2714   000F08  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2715   000F0C  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2716   000F10  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2717   000F14                     
  2718                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  2719   000F14  0E66               	movlw	102
  2720   000F16  0100               	movlb	0	; () banked
  2721   000F18  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2722   000F1A  A4D8               	btfss	status,2,c
  2723   000F1C  EF92  F007         	goto	u3471
  2724   000F20  EF94  F007         	goto	u3470
  2725   000F24                     u3471:
  2726   000F24  EF96  F007         	goto	l3297
  2727   000F28                     u3470:
  2728   000F28                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  2731   000F28  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2732   000F2A  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2733   000F2C                     l3297:
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  2736   000F2C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2737   000F30  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2738   000F34  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2739   000F38  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2740   000F3C                     
  2741                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  2742   000F3C  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2743   000F40  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2744   000F44                     
  2745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  2746   000F44  0E00               	movlw	0
  2747   000F46  0100               	movlb	0	; () banked
  2748   000F48  6F68               	movwf	efgtoa@pp& (0+255),b
  2749   000F4A                     
  2750                           ; BSR set to: 0
  2751                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  2752   000F4A  0E00               	movlw	0
  2753   000F4C  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2754   000F4E  0E00               	movlw	0
  2755   000F50  6F64               	movwf	efgtoa@t& (0+255),b
  2756   000F52                     
  2757                           ; BSR set to: 0
  2758                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  2759   000F52  0E00               	movlw	0
  2760   000F54  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2761   000F56  0E00               	movlw	0
  2762   000F58  6F7F               	movwf	efgtoa@i& (0+255),b
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2765   000F5A  EF94  F008         	goto	l3347
  2766   000F5E                     l3307:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  2770   000F5E  C077  F028         	movff	efgtoa@h,___fldiv@b
  2771   000F62  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2772   000F66  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2773   000F6A  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2774   000F6E  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2775   000F72  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2776   000F76  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2777   000F7A  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2778   000F7E  ECB9  F00D         	call	___fldiv	;wreg free
  2779   000F82  C028  F041         	movff	?___fldiv,floorf@x
  2780   000F86  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2781   000F8A  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2782   000F8E  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2783   000F92  ECF3  F010         	call	_floorf	;wreg free
  2784   000F96  C041  F07B         	movff	?_floorf,efgtoa@l
  2785   000F9A  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  2786   000F9E  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  2787   000FA2  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2790   000FA6  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2791   000FAA  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2792   000FAE  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2793   000FB2  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2794   000FB6  EC60  F013         	call	___fltol	;wreg free
  2795   000FBA  BE02               	btfsc	(?___fltol+1)^0,7,c
  2796   000FBC  EFEB  F007         	goto	u3480
  2797   000FC0  5002               	movf	(?___fltol+1)^0,w,c
  2798   000FC2  E107               	bnz	u3481
  2799   000FC4  0E0A               	movlw	10
  2800   000FC6  5C01               	subwf	?___fltol^0,w,c
  2801   000FC8  B0D8               	btfsc	status,0,c
  2802   000FCA  EFE9  F007         	goto	u3481
  2803   000FCE  EFEB  F007         	goto	u3480
  2804   000FD2                     u3481:
  2805   000FD2  EFFB  F007         	goto	l3311
  2806   000FD6                     u3480:
  2807   000FD6  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2808   000FDA  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2809   000FDE  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2810   000FE2  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2811   000FE6  EC60  F013         	call	___fltol	;wreg free
  2812   000FEA  C001  F06B         	movff	?___fltol,efgtoa@d
  2813   000FEE  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2814   000FF2  EF00  F008         	goto	l907
  2815   000FF6                     l3311:
  2816   000FF6  0E00               	movlw	0
  2817   000FF8  0100               	movlb	0	; () banked
  2818   000FFA  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2819   000FFC  0E09               	movlw	9
  2820   000FFE  6F6B               	movwf	efgtoa@d& (0+255),b
  2821   001000                     l907:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  2824   001000  0100               	movlb	0	; () banked
  2825   001002  5168               	movf	efgtoa@pp& (0+255),w,b
  2826   001004  A4D8               	btfss	status,2,c
  2827   001006  EF07  F008         	goto	u3491
  2828   00100A  EF09  F008         	goto	u3490
  2829   00100E                     u3491:
  2830   00100E  EF31  F008         	goto	l3331
  2831   001012                     u3490:
  2832   001012                     
  2833                           ; BSR set to: 0
  2834   001012  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2835   001014  EF10  F008         	goto	u3500
  2836   001018  EF0E  F008         	goto	u3501
  2837   00101C                     u3501:
  2838   00101C  EF31  F008         	goto	l3331
  2839   001020                     u3500:
  2840   001020                     
  2841                           ; BSR set to: 0
  2842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  2843   001020  0E00               	movlw	low _dbuf
  2844   001022  2586               	addwf	efgtoa@n& (0+255),w,b
  2845   001024  6ED9               	movwf	fsr2l,c
  2846   001026  0E01               	movlw	high _dbuf
  2847   001028  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2848   00102A  6EDA               	movwf	fsr2h,c
  2849   00102C  0E2E               	movlw	46
  2850   00102E  6EDF               	movwf	indf2,c
  2851   001030                     
  2852                           ; BSR set to: 0
  2853   001030  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2854   001032  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2855   001034                     
  2856                           ; BSR set to: 0
  2857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  2858   001034  0771               	decf	efgtoa@w& (0+255),f,b
  2859   001036  A0D8               	btfss	status,0,c
  2860   001038  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2861   00103A                     
  2862                           ; BSR set to: 0
  2863                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  2864   00103A  0E01               	movlw	1
  2865   00103C  6F68               	movwf	efgtoa@pp& (0+255),b
  2866   00103E  EF31  F008         	goto	l3331
  2867   001042                     l3323:
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  2871   001042  0E00               	movlw	low _dbuf
  2872   001044  2586               	addwf	efgtoa@n& (0+255),w,b
  2873   001046  6ED9               	movwf	fsr2l,c
  2874   001048  0E01               	movlw	high _dbuf
  2875   00104A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2876   00104C  6EDA               	movwf	fsr2h,c
  2877   00104E  0E30               	movlw	48
  2878   001050  6EDF               	movwf	indf2,c
  2879   001052                     
  2880                           ; BSR set to: 0
  2881   001052  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2882   001054  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2883   001056                     
  2884                           ; BSR set to: 0
  2885                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  2886   001056  0771               	decf	efgtoa@w& (0+255),f,b
  2887   001058  A0D8               	btfss	status,0,c
  2888   00105A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2889   00105C                     
  2890                           ; BSR set to: 0
  2891                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  2892   00105C  0764               	decf	efgtoa@t& (0+255),f,b
  2893   00105E  A0D8               	btfss	status,0,c
  2894   001060  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2895   001062                     l3331:
  2896                           
  2897                           ; BSR set to: 0
  2898                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  2899   001062  5164               	movf	efgtoa@t& (0+255),w,b
  2900   001064  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2901   001066  A4D8               	btfss	status,2,c
  2902   001068  EF38  F008         	goto	u3511
  2903   00106C  EF3A  F008         	goto	u3510
  2904   001070                     u3511:
  2905   001070  EF21  F008         	goto	l3323
  2906   001074                     u3510:
  2907   001074                     
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2910   001074  0E00               	movlw	low _dbuf
  2911   001076  2586               	addwf	efgtoa@n& (0+255),w,b
  2912   001078  6ED9               	movwf	fsr2l,c
  2913   00107A  0E01               	movlw	high _dbuf
  2914   00107C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2915   00107E  6EDA               	movwf	fsr2h,c
  2916   001080  516B               	movf	efgtoa@d& (0+255),w,b
  2917   001082  0F30               	addlw	48
  2918   001084  6EDF               	movwf	indf2,c
  2919   001086                     
  2920                           ; BSR set to: 0
  2921   001086  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2922   001088  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2923   00108A                     
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  2926   00108A  0771               	decf	efgtoa@w& (0+255),f,b
  2927   00108C  A0D8               	btfss	status,0,c
  2928   00108E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2929   001090                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  2932   001090  C077  F028         	movff	efgtoa@h,___flsub@b
  2933   001094  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  2934   001098  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2935   00109C  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2936   0010A0  C07B  F013         	movff	efgtoa@l,___flmul@a
  2937   0010A4  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  2938   0010A8  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  2939   0010AC  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  2940   0010B0  C088  F00F         	movff	efgtoa@u,___flmul@b
  2941   0010B4  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2942   0010B8  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2943   0010BC  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2944   0010C0  ECA4  F00B         	call	___flmul	;wreg free
  2945   0010C4  C00F  F02C         	movff	?___flmul,___flsub@a
  2946   0010C8  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2947   0010CC  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2948   0010D0  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2949   0010D4  EC01  F018         	call	___flsub	;wreg free
  2950   0010D8  C028  F077         	movff	?___flsub,efgtoa@h
  2951   0010DC  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  2952   0010E0  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  2953   0010E4  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  2954   0010E8                     
  2955                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  2956   0010E8  C088  F028         	movff	efgtoa@u,___fldiv@b
  2957   0010EC  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2958   0010F0  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2959   0010F4  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2960   0010F8  0E00               	movlw	0
  2961   0010FA  6E2C               	movwf	___fldiv@a^0,c
  2962   0010FC  0E00               	movlw	0
  2963   0010FE  6E2D               	movwf	(___fldiv@a+1)^0,c
  2964   001100  0E20               	movlw	32
  2965   001102  6E2E               	movwf	(___fldiv@a+2)^0,c
  2966   001104  0E41               	movlw	65
  2967   001106  6E2F               	movwf	(___fldiv@a+3)^0,c
  2968   001108  ECB9  F00D         	call	___fldiv	;wreg free
  2969   00110C  C028  F088         	movff	?___fldiv,efgtoa@u
  2970   001110  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2971   001114  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2972   001118  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2973   00111C                     
  2974                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  2975   00111C  0100               	movlb	0	; () banked
  2976   00111E  0760               	decf	efgtoa@ne& (0+255),f,b
  2977   001120  A0D8               	btfss	status,0,c
  2978   001122  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2979   001124                     
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  2982   001124  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  2983   001126  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  2984   001128                     l3347:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2988   001128  516D               	movf	efgtoa@m& (0+255),w,b
  2989   00112A  5D7F               	subwf	efgtoa@i& (0+255),w,b
  2990   00112C  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  2991   00112E  0A80               	xorlw	128
  2992   001130  6E5C               	movwf	??_efgtoa^0,c
  2993   001132  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2994   001134  0A80               	xorlw	128
  2995   001136  585C               	subwfb	??_efgtoa^0,w,c
  2996   001138  B0D8               	btfsc	status,0,c
  2997   00113A  EFA1  F008         	goto	u3521
  2998   00113E  EFA3  F008         	goto	u3520
  2999   001142                     u3521:
  3000   001142  EFB1  F008         	goto	l3351
  3001   001146                     u3520:
  3002   001146                     
  3003                           ; BSR set to: 0
  3004   001146  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3005   001148  EFAF  F008         	goto	u3531
  3006   00114C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3007   00114E  E109               	bnz	u3530
  3008   001150  0E4B               	movlw	75
  3009   001152  5D86               	subwf	efgtoa@n& (0+255),w,b
  3010   001154  A0D8               	btfss	status,0,c
  3011   001156  EFAF  F008         	goto	u3531
  3012   00115A  EFB1  F008         	goto	u3530
  3013   00115E                     u3531:
  3014   00115E  EFAF  F007         	goto	l3307
  3015   001162                     u3530:
  3016   001162                     l3351:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  3020   001162  0E00               	movlw	0
  3021   001164  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3022   001166  0E4F               	movlw	79
  3023   001168  6F7F               	movwf	efgtoa@i& (0+255),b
  3024   00116A                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  3027   00116A  0E00               	movlw	low _dbuf
  3028   00116C  257F               	addwf	efgtoa@i& (0+255),w,b
  3029   00116E  6ED9               	movwf	fsr2l,c
  3030   001170  0E01               	movlw	high _dbuf
  3031   001172  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3032   001174  6EDA               	movwf	fsr2h,c
  3033   001176  6ADF               	clrf	indf2,c
  3034   001178                     
  3035                           ; BSR set to: 0
  3036                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3037   001178  0E00               	movlw	low _dbuf
  3038   00117A  6E5C               	movwf	??_efgtoa^0,c
  3039   00117C  0E01               	movlw	high _dbuf
  3040   00117E  6E5D               	movwf	(??_efgtoa+1)^0,c
  3041   001180  5186               	movf	efgtoa@n& (0+255),w,b
  3042   001182  5E5C               	subwf	??_efgtoa^0,f,c
  3043   001184  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3044   001186  5A5D               	subwfb	(??_efgtoa+1)^0,f,c
  3045   001188  517F               	movf	efgtoa@i& (0+255),w,b
  3046   00118A  245C               	addwf	??_efgtoa^0,w,c
  3047   00118C  6E01               	movwf	memcpy@d1^0,c
  3048   00118E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3049   001190  205D               	addwfc	(??_efgtoa+1)^0,w,c
  3050   001192  6E02               	movwf	(memcpy@d1+1)^0,c
  3051   001194  0E00               	movlw	low _dbuf
  3052   001196  6E03               	movwf	memcpy@s1^0,c
  3053   001198  0E01               	movlw	high _dbuf
  3054   00119A  6E04               	movwf	(memcpy@s1+1)^0,c
  3055   00119C  C086  F005         	movff	efgtoa@n,memcpy@n
  3056   0011A0  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3057   0011A4  ECD9  F017         	call	_memcpy	;wreg free
  3058   0011A8                     
  3059                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  3060   0011A8  0100               	movlb	0	; () banked
  3061   0011AA  5186               	movf	efgtoa@n& (0+255),w,b
  3062   0011AC  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3063   0011AE  6F86               	movwf	efgtoa@n& (0+255),b
  3064   0011B0  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3065   0011B2  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3066   0011B4  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3067   0011B6                     
  3068                           ; BSR set to: 0
  3069                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  3070   0011B6  5181               	movf	efgtoa@sign& (0+255),w,b
  3071   0011B8  A4D8               	btfss	status,2,c
  3072   0011BA  EFE1  F008         	goto	u3541
  3073   0011BE  EFE4  F008         	goto	u3540
  3074   0011C2                     u3541:
  3075   0011C2  0E01               	movlw	1
  3076   0011C4  EFE5  F008         	goto	u3550
  3077   0011C8                     u3540:
  3078   0011C8  0E00               	movlw	0
  3079   0011CA                     u3550:
  3080   0011CA  6F7F               	movwf	efgtoa@i& (0+255),b
  3081   0011CC  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  3082   0011CE                     
  3083                           ; BSR set to: 0
  3084                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 797:  if (flags &
      +                           (1 << 1)) {
  3085   0011CE  A3CD               	btfss	_flags& (0+255),1,b
  3086   0011D0  EFEC  F008         	goto	u3561
  3087   0011D4  EFEE  F008         	goto	u3560
  3088   0011D8                     u3561:
  3089   0011D8  EF1C  F009         	goto	l3373
  3090   0011DC                     u3560:
  3091   0011DC  EFFE  F008         	goto	l3369
  3092   0011E0                     l3365:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 799:    dbuf[--n]
      +                           = '0';
  3096   0011E0  0786               	decf	efgtoa@n& (0+255),f,b
  3097   0011E2  A0D8               	btfss	status,0,c
  3098   0011E4  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3099   0011E6  0E00               	movlw	low _dbuf
  3100   0011E8  2586               	addwf	efgtoa@n& (0+255),w,b
  3101   0011EA  6ED9               	movwf	fsr2l,c
  3102   0011EC  0E01               	movlw	high _dbuf
  3103   0011EE  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3104   0011F0  6EDA               	movwf	fsr2h,c
  3105   0011F2  0E30               	movlw	48
  3106   0011F4  6EDF               	movwf	indf2,c
  3107   0011F6                     
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 800:    w--;
  3110   0011F6  0771               	decf	efgtoa@w& (0+255),f,b
  3111   0011F8  A0D8               	btfss	status,0,c
  3112   0011FA  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3113   0011FC                     l3369:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 798:   while (w >
      +                           i && n > i) {
  3117   0011FC  5171               	movf	efgtoa@w& (0+255),w,b
  3118   0011FE  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3119   001200  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3120   001202  0A80               	xorlw	128
  3121   001204  6E5C               	movwf	??_efgtoa^0,c
  3122   001206  5172               	movf	(efgtoa@w+1)& (0+255),w,b
  3123   001208  0A80               	xorlw	128
  3124   00120A  585C               	subwfb	??_efgtoa^0,w,c
  3125   00120C  B0D8               	btfsc	status,0,c
  3126   00120E  EF0B  F009         	goto	u3571
  3127   001212  EF0D  F009         	goto	u3570
  3128   001216                     u3571:
  3129   001216  EF1C  F009         	goto	l3373
  3130   00121A                     u3570:
  3131   00121A                     
  3132                           ; BSR set to: 0
  3133   00121A  5186               	movf	efgtoa@n& (0+255),w,b
  3134   00121C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3135   00121E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3136   001220  0A80               	xorlw	128
  3137   001222  6E5C               	movwf	??_efgtoa^0,c
  3138   001224  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3139   001226  0A80               	xorlw	128
  3140   001228  585C               	subwfb	??_efgtoa^0,w,c
  3141   00122A  A0D8               	btfss	status,0,c
  3142   00122C  EF1A  F009         	goto	u3581
  3143   001230  EF1C  F009         	goto	u3580
  3144   001234                     u3581:
  3145   001234  EFF0  F008         	goto	l3365
  3146   001238                     u3580:
  3147   001238                     l3373:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  3151   001238  5181               	movf	efgtoa@sign& (0+255),w,b
  3152   00123A  B4D8               	btfsc	status,2,c
  3153   00123C  EF22  F009         	goto	u3591
  3154   001240  EF24  F009         	goto	u3590
  3155   001244                     u3591:
  3156   001244  EF2F  F009         	goto	l3377
  3157   001248                     u3590:
  3158   001248                     
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  3161   001248  0786               	decf	efgtoa@n& (0+255),f,b
  3162   00124A  A0D8               	btfss	status,0,c
  3163   00124C  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3164   00124E  0E00               	movlw	low _dbuf
  3165   001250  2586               	addwf	efgtoa@n& (0+255),w,b
  3166   001252  6ED9               	movwf	fsr2l,c
  3167   001254  0E01               	movlw	high _dbuf
  3168   001256  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3169   001258  6EDA               	movwf	fsr2h,c
  3170   00125A  C081  FFDF         	movff	efgtoa@sign,indf2
  3171   00125E                     l3377:
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  3175   00125E  517F               	movf	efgtoa@i& (0+255),w,b
  3176   001260  5F71               	subwf	efgtoa@w& (0+255),f,b
  3177   001262  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3178   001264  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3179   001266                     
  3180                           ; BSR set to: 0
  3181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3182   001266  C055  F011         	movff	efgtoa@fp,pad@fp
  3183   00126A  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3184   00126E  0E00               	movlw	low _dbuf
  3185   001270  2586               	addwf	efgtoa@n& (0+255),w,b
  3186   001272  6E13               	movwf	pad@buf^0,c
  3187   001274  0E01               	movlw	high _dbuf
  3188   001276  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3189   001278  6E14               	movwf	(pad@buf+1)^0,c
  3190   00127A  C071  F015         	movff	efgtoa@w,pad@p
  3191   00127E  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3192   001282  ECEA  F016         	call	_pad	;wreg free
  3193   001286                     l874:
  3194   001286  0012               	return		;funcret
  3195   001288                     __end_of_efgtoa:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _strcpy *****************
  3199 ;; Defined at:
  3200 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3203 ;;		 -> dbuf(80), 
  3204 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3205 ;;		 -> STR_6(4), STR_3(4), 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  d               2    6[COMRAM] PTR unsigned char 
  3208 ;;		 -> dbuf(80), 
  3209 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3210 ;;		 -> STR_6(4), STR_3(4), 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  2    0[COMRAM] PTR unsigned char 
  3213 ;; Registers used:
  3214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3220 ;;      Params:         4       0       0       0       0       0       0       0       0
  3221 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3223 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3224 ;;Total ram usage:        8 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_efgtoa
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text7
  3234   00308C                     __ptext7:
  3235                           	callstack 0
  3236   00308C                     _strcpy:
  3237                           	callstack 26
  3238   00308C  C003  F005         	movff	strcpy@src,strcpy@s
  3239   003090  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3240   003094  C001  F007         	movff	strcpy@dest,strcpy@d
  3241   003098  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3242   00309C                     l3087:
  3243   00309C  C005  FFF6         	movff	strcpy@s,tblptrl
  3244   0030A0  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3245   0030A4  4A05               	infsnz	strcpy@s^0,f,c
  3246   0030A6  2A06               	incf	(strcpy@s+1)^0,f,c
  3247   0030A8                     	if	0	;tblptru may be non-zero
  3248   0030A8                     	endif
  3249   0030A8                     	if	0	;tblptru may be non-zero
  3250   0030A8                     	endif
  3251   0030A8  C007  FFD9         	movff	strcpy@d,fsr2l
  3252   0030AC  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3253   0030B0  4A07               	infsnz	strcpy@d^0,f,c
  3254   0030B2  2A08               	incf	(strcpy@d+1)^0,f,c
  3255   0030B4  0008               	tblrd		*
  3256   0030B6  CFF5 FFDF          	movff	tablat,indf2
  3257   0030BA  50DF               	movf	indf2,w,c
  3258   0030BC  A4D8               	btfss	status,2,c
  3259   0030BE  EF63  F018         	goto	u3081
  3260   0030C2  EF65  F018         	goto	u3080
  3261   0030C6                     u3081:
  3262   0030C6  EF4E  F018         	goto	l3087
  3263   0030CA                     u3080:
  3264   0030CA  0012               	return		;funcret
  3265   0030CC                     __end_of_strcpy:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _pad *****************
  3269 ;; Defined at:
  3270 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3273 ;;		 -> sprintf@f(12), 
  3274 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3275 ;;		 -> dbuf(80), 
  3276 ;;  p               2   20[COMRAM] int 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;  w               2   25[COMRAM] int 
  3279 ;;  i               2   23[COMRAM] int 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3289 ;;      Params:         6       0       0       0       0       0       0       0       0
  3290 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3291 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3292 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3293 ;;Total ram usage:       11 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; Hardware stack levels required when called: 3
  3296 ;; This function calls:
  3297 ;;		_fputc
  3298 ;;		_fputs
  3299 ;; This function is called by:
  3300 ;;		_efgtoa
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text8
  3305   002DD4                     __ptext8:
  3306                           	callstack 0
  3307   002DD4                     _pad:
  3308                           	callstack 23
  3309   002DD4                     
  3310                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3311   002DD4  BE16               	btfsc	(pad@p+1)^0,7,c
  3312   002DD6  EFEF  F016         	goto	u2991
  3313   002DDA  EFF1  F016         	goto	u2990
  3314   002DDE                     u2991:
  3315   002DDE  EFF7  F016         	goto	l3053
  3316   002DE2                     u2990:
  3317   002DE2  C015  F01A         	movff	pad@p,pad@w
  3318   002DE6  C016  F01B         	movff	pad@p+1,pad@w+1
  3319   002DEA  EFFB  F016         	goto	l859
  3320   002DEE                     l3053:
  3321   002DEE  0E00               	movlw	0
  3322   002DF0  6E1B               	movwf	(pad@w+1)^0,c
  3323   002DF2  0E00               	movlw	0
  3324   002DF4  6E1A               	movwf	pad@w^0,c
  3325   002DF6                     l859:
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3328   002DF6  0E00               	movlw	0
  3329   002DF8  6E19               	movwf	(pad@i+1)^0,c
  3330   002DFA  0E00               	movlw	0
  3331   002DFC  6E18               	movwf	pad@i^0,c
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3334   002DFE  EF0D  F017         	goto	l3059
  3335   002E02                     l3055:
  3336                           
  3337                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3338   002E02  0E00               	movlw	0
  3339   002E04  6E02               	movwf	(fputc@c+1)^0,c
  3340   002E06  0E20               	movlw	32
  3341   002E08  6E01               	movwf	fputc@c^0,c
  3342   002E0A  C011  F003         	movff	pad@fp,fputc@fp
  3343   002E0E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3344   002E12  EC4D  F015         	call	_fputc	;wreg free
  3345   002E16                     
  3346                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3347   002E16  4A18               	infsnz	pad@i^0,f,c
  3348   002E18  2A19               	incf	(pad@i+1)^0,f,c
  3349   002E1A                     l3059:
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3352   002E1A  501A               	movf	pad@w^0,w,c
  3353   002E1C  5C18               	subwf	pad@i^0,w,c
  3354   002E1E  5019               	movf	(pad@i+1)^0,w,c
  3355   002E20  0A80               	xorlw	128
  3356   002E22  6E17               	movwf	??_pad^0,c
  3357   002E24  501B               	movf	(pad@w+1)^0,w,c
  3358   002E26  0A80               	xorlw	128
  3359   002E28  5817               	subwfb	??_pad^0,w,c
  3360   002E2A  A0D8               	btfss	status,0,c
  3361   002E2C  EF1A  F017         	goto	u3001
  3362   002E30  EF1C  F017         	goto	u3000
  3363   002E34                     u3001:
  3364   002E34  EF01  F017         	goto	l3055
  3365   002E38                     u3000:
  3366   002E38                     
  3367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3368   002E38  C013  F00A         	movff	pad@buf,fputs@s
  3369   002E3C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3370   002E40  C011  F00C         	movff	pad@fp,fputs@fp
  3371   002E44  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3372   002E48  EC24  F018         	call	_fputs	;wreg free
  3373   002E4C  0012               	return		;funcret
  3374   002E4E                     __end_of_pad:
  3375                           	callstack 0
  3376                           
  3377 ;; *************** function _fputs *****************
  3378 ;; Defined at:
  3379 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3382 ;;		 -> dbuf(80), 
  3383 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3384 ;;		 -> sprintf@f(12), 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  i               2   14[COMRAM] int 
  3387 ;;  c               1   13[COMRAM] unsigned char 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  2    9[COMRAM] int 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3397 ;;      Params:         4       0       0       0       0       0       0       0       0
  3398 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3400 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3401 ;;Total ram usage:        7 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 2
  3404 ;; This function calls:
  3405 ;;		_fputc
  3406 ;; This function is called by:
  3407 ;;		_pad
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text9
  3412   003048                     __ptext9:
  3413                           	callstack 0
  3414   003048                     _fputs:
  3415                           	callstack 23
  3416   003048  0E00               	movlw	0
  3417   00304A  6E10               	movwf	(fputs@i+1)^0,c
  3418   00304C  0E00               	movlw	0
  3419   00304E  6E0F               	movwf	fputs@i^0,c
  3420   003050  EF35  F018         	goto	l2677
  3421   003054                     l2673:
  3422   003054  C00E  F001         	movff	fputs@c,fputc@c
  3423   003058  6A02               	clrf	(fputc@c+1)^0,c
  3424   00305A  C00C  F003         	movff	fputs@fp,fputc@fp
  3425   00305E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3426   003062  EC4D  F015         	call	_fputc	;wreg free
  3427   003066  4A0F               	infsnz	fputs@i^0,f,c
  3428   003068  2A10               	incf	(fputs@i+1)^0,f,c
  3429   00306A                     l2677:
  3430   00306A  500F               	movf	fputs@i^0,w,c
  3431   00306C  240A               	addwf	fputs@s^0,w,c
  3432   00306E  6ED9               	movwf	fsr2l,c
  3433   003070  5010               	movf	(fputs@i+1)^0,w,c
  3434   003072  200B               	addwfc	(fputs@s+1)^0,w,c
  3435   003074  6EDA               	movwf	fsr2h,c
  3436   003076  50DF               	movf	indf2,w,c
  3437   003078  6E0E               	movwf	fputs@c^0,c
  3438   00307A  500E               	movf	fputs@c^0,w,c
  3439   00307C  A4D8               	btfss	status,2,c
  3440   00307E  EF43  F018         	goto	u2401
  3441   003082  EF45  F018         	goto	u2400
  3442   003086                     u2401:
  3443   003086  EF2A  F018         	goto	l2673
  3444   00308A                     u2400:
  3445   00308A  0012               	return		;funcret
  3446   00308C                     __end_of_fputs:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function _fputc *****************
  3450 ;; Defined at:
  3451 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  c               2    0[COMRAM] int 
  3454 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3455 ;;		 -> sprintf@f(12), 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;		None
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  2    0[COMRAM] int 
  3460 ;; Registers used:
  3461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3467 ;;      Params:         4       0       0       0       0       0       0       0       0
  3468 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3469 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3470 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3471 ;;Total ram usage:        9 bytes
  3472 ;; Hardware stack levels used: 1
  3473 ;; Hardware stack levels required when called: 1
  3474 ;; This function calls:
  3475 ;;		_putch
  3476 ;; This function is called by:
  3477 ;;		_pad
  3478 ;;		_vfpfcnvrt
  3479 ;;		_fputs
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text10
  3484   002A9A                     __ptext10:
  3485                           	callstack 0
  3486   002A9A                     _fputc:
  3487                           	callstack 26
  3488   002A9A  5003               	movf	fputc@fp^0,w,c
  3489   002A9C  1004               	iorwf	(fputc@fp+1)^0,w,c
  3490   002A9E  B4D8               	btfsc	status,2,c
  3491   002AA0  EF54  F015         	goto	u1971
  3492   002AA4  EF56  F015         	goto	u1970
  3493   002AA8                     u1971:
  3494   002AA8  EF5F  F015         	goto	l2459
  3495   002AAC                     u1970:
  3496   002AAC  5003               	movf	fputc@fp^0,w,c
  3497   002AAE  1004               	iorwf	(fputc@fp+1)^0,w,c
  3498   002AB0  A4D8               	btfss	status,2,c
  3499   002AB2  EF5D  F015         	goto	u1981
  3500   002AB6  EF5F  F015         	goto	u1980
  3501   002ABA                     u1981:
  3502   002ABA  EF64  F015         	goto	l2461
  3503   002ABE                     u1980:
  3504   002ABE                     l2459:
  3505   002ABE  5001               	movf	fputc@c^0,w,c
  3506   002AC0  ECE2  F018         	call	_putch
  3507   002AC4  EFB1  F015         	goto	l1012
  3508   002AC8                     l2461:
  3509   002AC8  EE20 F00A          	lfsr	2,10
  3510   002ACC  5003               	movf	fputc@fp^0,w,c
  3511   002ACE  26D9               	addwf	fsr2l,f,c
  3512   002AD0  5004               	movf	(fputc@fp+1)^0,w,c
  3513   002AD2  22DA               	addwfc	fsr2h,f,c
  3514   002AD4  50DE               	movf	postinc2,w,c
  3515   002AD6  10DE               	iorwf	postinc2,w,c
  3516   002AD8  B4D8               	btfsc	status,2,c
  3517   002ADA  EF71  F015         	goto	u1991
  3518   002ADE  EF73  F015         	goto	u1990
  3519   002AE2                     u1991:
  3520   002AE2  EF8E  F015         	goto	l2465
  3521   002AE6                     u1990:
  3522   002AE6  EE20 F00A          	lfsr	2,10
  3523   002AEA  5003               	movf	fputc@fp^0,w,c
  3524   002AEC  26D9               	addwf	fsr2l,f,c
  3525   002AEE  5004               	movf	(fputc@fp+1)^0,w,c
  3526   002AF0  22DA               	addwfc	fsr2h,f,c
  3527   002AF2  EE10 F003          	lfsr	1,3
  3528   002AF6  5003               	movf	fputc@fp^0,w,c
  3529   002AF8  26E1               	addwf	fsr1l,f,c
  3530   002AFA  5004               	movf	(fputc@fp+1)^0,w,c
  3531   002AFC  22E2               	addwfc	fsr1h,f,c
  3532   002AFE  50DE               	movf	postinc2,w,c
  3533   002B00  5CE6               	subwf	postinc1,w,c
  3534   002B02  50E6               	movf	postinc1,w,c
  3535   002B04  0A80               	xorlw	128
  3536   002B06  6E09               	movwf	(??_fputc+4)^0,c
  3537   002B08  50DE               	movf	postinc2,w,c
  3538   002B0A  0A80               	xorlw	128
  3539   002B0C  5809               	subwfb	(??_fputc+4)^0,w,c
  3540   002B0E  B0D8               	btfsc	status,0,c
  3541   002B10  EF8C  F015         	goto	u2001
  3542   002B14  EF8E  F015         	goto	u2000
  3543   002B18                     u2001:
  3544   002B18  EFB1  F015         	goto	l1012
  3545   002B1C                     u2000:
  3546   002B1C                     l2465:
  3547   002B1C  EE20 F003          	lfsr	2,3
  3548   002B20  5003               	movf	fputc@fp^0,w,c
  3549   002B22  26D9               	addwf	fsr2l,f,c
  3550   002B24  5004               	movf	(fputc@fp+1)^0,w,c
  3551   002B26  22DA               	addwfc	fsr2h,f,c
  3552   002B28  CFDE F005          	movff	postinc2,??_fputc
  3553   002B2C  CFDD F006          	movff	postdec2,??_fputc+1
  3554   002B30  C003  FFD9         	movff	fputc@fp,fsr2l
  3555   002B34  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3556   002B38  CFDE F007          	movff	postinc2,??_fputc+2
  3557   002B3C  CFDD F008          	movff	postdec2,??_fputc+3
  3558   002B40  5005               	movf	??_fputc^0,w,c
  3559   002B42  2407               	addwf	(??_fputc+2)^0,w,c
  3560   002B44  6ED9               	movwf	fsr2l,c
  3561   002B46  5006               	movf	(??_fputc+1)^0,w,c
  3562   002B48  2008               	addwfc	(??_fputc+3)^0,w,c
  3563   002B4A  6EDA               	movwf	fsr2h,c
  3564   002B4C  C001  FFDF         	movff	fputc@c,indf2
  3565   002B50  EE20 F003          	lfsr	2,3
  3566   002B54  5003               	movf	fputc@fp^0,w,c
  3567   002B56  26D9               	addwf	fsr2l,f,c
  3568   002B58  5004               	movf	(fputc@fp+1)^0,w,c
  3569   002B5A  22DA               	addwfc	fsr2h,f,c
  3570   002B5C  2ADE               	incf	postinc2,f,c
  3571   002B5E  0E00               	movlw	0
  3572   002B60  22DD               	addwfc	postdec2,f,c
  3573   002B62                     l1012:
  3574   002B62  0012               	return		;funcret
  3575   002B64                     __end_of_fputc:
  3576                           	callstack 0
  3577                           
  3578 ;; *************** function _putch *****************
  3579 ;; Defined at:
  3580 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;  c               1    wreg     unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  c               1    0[COMRAM] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used: 1
  3600 ;; This function calls:
  3601 ;;		Nothing
  3602 ;; This function is called by:
  3603 ;;		_fputc
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text11
  3608   0031C4                     __ptext11:
  3609                           	callstack 0
  3610   0031C4                     _putch:
  3611                           	callstack 26
  3612   0031C4  0012               	return		;funcret
  3613   0031C6                     __end_of_putch:
  3614                           	callstack 0
  3615                           
  3616 ;; *************** function _memcpy *****************
  3617 ;; Defined at:
  3618 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  d1              2    0[COMRAM] PTR void 
  3621 ;;		 -> dbuf(80), 
  3622 ;;  s1              2    2[COMRAM] PTR const void 
  3623 ;;		 -> dbuf(80), 
  3624 ;;  n               2    4[COMRAM] unsigned int 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3627 ;;		 -> dbuf(80), 
  3628 ;;  d               2    6[COMRAM] PTR unsigned char 
  3629 ;;		 -> dbuf(80), 
  3630 ;;  tmp             1   10[COMRAM] unsigned char 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  2    0[COMRAM] PTR void 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3640 ;;      Params:         6       0       0       0       0       0       0       0       0
  3641 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3643 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3644 ;;Total ram usage:       11 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_efgtoa
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text12
  3654   002FB2                     __ptext12:
  3655                           	callstack 0
  3656   002FB2                     _memcpy:
  3657                           	callstack 26
  3658   002FB2  C003  F009         	movff	memcpy@s1,memcpy@s
  3659   002FB6  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3660   002FBA  C001  F007         	movff	memcpy@d1,memcpy@d
  3661   002FBE  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3662   002FC2  EFF3  F017         	goto	l3131
  3663   002FC6                     l3123:
  3664   002FC6  C009  FFD9         	movff	memcpy@s,fsr2l
  3665   002FCA  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3666   002FCE  50DF               	movf	indf2,w,c
  3667   002FD0  6E0B               	movwf	memcpy@tmp^0,c
  3668   002FD2  4A09               	infsnz	memcpy@s^0,f,c
  3669   002FD4  2A0A               	incf	(memcpy@s+1)^0,f,c
  3670   002FD6  C007  FFD9         	movff	memcpy@d,fsr2l
  3671   002FDA  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3672   002FDE  C00B  FFDF         	movff	memcpy@tmp,indf2
  3673   002FE2  4A07               	infsnz	memcpy@d^0,f,c
  3674   002FE4  2A08               	incf	(memcpy@d+1)^0,f,c
  3675   002FE6                     l3131:
  3676   002FE6  0605               	decf	memcpy@n^0,f,c
  3677   002FE8  A0D8               	btfss	status,0,c
  3678   002FEA  0606               	decf	(memcpy@n+1)^0,f,c
  3679   002FEC  2805               	incf	memcpy@n^0,w,c
  3680   002FEE  E106               	bnz	u3201
  3681   002FF0  2806               	incf	(memcpy@n+1)^0,w,c
  3682   002FF2  A4D8               	btfss	status,2,c
  3683   002FF4  EFFE  F017         	goto	u3201
  3684   002FF8  EF00  F018         	goto	u3200
  3685   002FFC                     u3201:
  3686   002FFC  EFE3  F017         	goto	l3123
  3687   003000                     u3200:
  3688   003000  0012               	return		;funcret
  3689   003002                     __end_of_memcpy:
  3690                           	callstack 0
  3691                           
  3692 ;; *************** function _labs *****************
  3693 ;; Defined at:
  3694 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;  a               4    0[COMRAM] long 
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  4    0[COMRAM] long 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3708 ;;      Params:         4       0       0       0       0       0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3710 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3711 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3712 ;;Total ram usage:        8 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_efgtoa
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text13
  3722   002E4E                     __ptext13:
  3723                           	callstack 0
  3724   002E4E                     _labs:
  3725                           	callstack 26
  3726   002E4E  BE04               	btfsc	(labs@a+3)^0,7,c
  3727   002E50  EF36  F017         	goto	u3090
  3728   002E54  5004               	movf	(labs@a+3)^0,w,c
  3729   002E56  1003               	iorwf	(labs@a+2)^0,w,c
  3730   002E58  1002               	iorwf	(labs@a+1)^0,w,c
  3731   002E5A  E106               	bnz	u3091
  3732   002E5C  0401               	decf	labs@a^0,w,c
  3733   002E5E  B0D8               	btfsc	status,0,c
  3734   002E60  EF34  F017         	goto	u3091
  3735   002E64  EF36  F017         	goto	u3090
  3736   002E68                     u3091:
  3737   002E68  EF51  F017         	goto	l991
  3738   002E6C                     u3090:
  3739   002E6C  C001  F005         	movff	labs@a,??_labs
  3740   002E70  C002  F006         	movff	labs@a+1,??_labs+1
  3741   002E74  C003  F007         	movff	labs@a+2,??_labs+2
  3742   002E78  C004  F008         	movff	labs@a+3,??_labs+3
  3743   002E7C  1E05               	comf	??_labs^0,f,c
  3744   002E7E  1E06               	comf	(??_labs+1)^0,f,c
  3745   002E80  1E07               	comf	(??_labs+2)^0,f,c
  3746   002E82  1E08               	comf	(??_labs+3)^0,f,c
  3747   002E84  2A05               	incf	??_labs^0,f,c
  3748   002E86  0E00               	movlw	0
  3749   002E88  2206               	addwfc	(??_labs+1)^0,f,c
  3750   002E8A  2207               	addwfc	(??_labs+2)^0,f,c
  3751   002E8C  2208               	addwfc	(??_labs+3)^0,f,c
  3752   002E8E  C005  F001         	movff	??_labs,?_labs
  3753   002E92  C006  F002         	movff	??_labs+1,?_labs+1
  3754   002E96  C007  F003         	movff	??_labs+2,?_labs+2
  3755   002E9A  C008  F004         	movff	??_labs+3,?_labs+3
  3756   002E9E  EF59  F017         	goto	l994
  3757   002EA2                     l991:
  3758   002EA2  C001  F001         	movff	labs@a,?_labs
  3759   002EA6  C002  F002         	movff	labs@a+1,?_labs+1
  3760   002EAA  C003  F003         	movff	labs@a+2,?_labs+2
  3761   002EAE  C004  F004         	movff	labs@a+3,?_labs+3
  3762   002EB2                     l994:
  3763   002EB2  0012               	return		;funcret
  3764   002EB4                     __end_of_labs:
  3765                           	callstack 0
  3766                           
  3767 ;; *************** function _floorf *****************
  3768 ;; Defined at:
  3769 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  x               4   64[COMRAM] float 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  u               4   80[COMRAM] struct .
  3774 ;;  m               4   74[COMRAM] unsigned long 
  3775 ;;  e               2   78[COMRAM] int 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  4   64[COMRAM] float 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3785 ;;      Params:         4       0       0       0       0       0       0       0       0
  3786 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3787 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3788 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3789 ;;Total ram usage:       20 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_efgtoa
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           	psect	text14
  3799   0021E6                     __ptext14:
  3800                           	callstack 0
  3801   0021E6                     _floorf:
  3802                           	callstack 26
  3803   0021E6  C0BB  F051         	movff	floorf@F526,floorf@u
  3804   0021EA  C0BC  F052         	movff	floorf@F526+1,floorf@u+1
  3805   0021EE  C0BD  F053         	movff	floorf@F526+2,floorf@u+2
  3806   0021F2  C0BE  F054         	movff	floorf@F526+3,floorf@u+3
  3807   0021F6  C041  F051         	movff	floorf@x,floorf@u
  3808   0021FA  C042  F052         	movff	floorf@x+1,floorf@u+1
  3809   0021FE  C043  F053         	movff	floorf@x+2,floorf@u+2
  3810   002202  C044  F054         	movff	floorf@x+3,floorf@u+3
  3811   002206  0E81               	movlw	129
  3812   002208  6E45               	movwf	??_floorf^0,c
  3813   00220A  0EFF               	movlw	255
  3814   00220C  6E46               	movwf	(??_floorf+1)^0,c
  3815   00220E  C051  F047         	movff	floorf@u,??_floorf+2
  3816   002212  C052  F048         	movff	floorf@u+1,??_floorf+3
  3817   002216  C053  F049         	movff	floorf@u+2,??_floorf+4
  3818   00221A  C054  F04A         	movff	floorf@u+3,??_floorf+5
  3819   00221E  0E18               	movlw	24
  3820   002220  EF17  F011         	goto	u3100
  3821   002224                     u3105:
  3822   002224  90D8               	bcf	status,0,c
  3823   002226  324A               	rrcf	(??_floorf+5)^0,f,c
  3824   002228  3249               	rrcf	(??_floorf+4)^0,f,c
  3825   00222A  3248               	rrcf	(??_floorf+3)^0,f,c
  3826   00222C  3247               	rrcf	(??_floorf+2)^0,f,c
  3827   00222E                     u3100:
  3828   00222E  2EE8               	decfsz	wreg,f,c
  3829   002230  EF12  F011         	goto	u3105
  3830   002234  5047               	movf	(??_floorf+2)^0,w,c
  3831   002236  2445               	addwf	??_floorf^0,w,c
  3832   002238  6E4F               	movwf	floorf@e^0,c
  3833   00223A  0E00               	movlw	0
  3834   00223C  2046               	addwfc	(??_floorf+1)^0,w,c
  3835   00223E  6E50               	movwf	(floorf@e+1)^0,c
  3836   002240  BE50               	btfsc	(floorf@e+1)^0,7,c
  3837   002242  EF2C  F011         	goto	u3111
  3838   002246  5050               	movf	(floorf@e+1)^0,w,c
  3839   002248  E109               	bnz	u3110
  3840   00224A  0E17               	movlw	23
  3841   00224C  5C4F               	subwf	floorf@e^0,w,c
  3842   00224E  A0D8               	btfss	status,0,c
  3843   002250  EF2C  F011         	goto	u3111
  3844   002254  EF2E  F011         	goto	u3110
  3845   002258                     u3111:
  3846   002258  EF38  F011         	goto	l3099
  3847   00225C                     u3110:
  3848   00225C                     l3097:
  3849   00225C  C041  F041         	movff	floorf@x,?_floorf
  3850   002260  C042  F042         	movff	floorf@x+1,?_floorf+1
  3851   002264  C043  F043         	movff	floorf@x+2,?_floorf+2
  3852   002268  C044  F044         	movff	floorf@x+3,?_floorf+3
  3853   00226C  EFFB  F011         	goto	l980
  3854   002270                     l3099:
  3855   002270  BE50               	btfsc	(floorf@e+1)^0,7,c
  3856   002272  EF3D  F011         	goto	u3121
  3857   002276  EF3F  F011         	goto	u3120
  3858   00227A                     u3121:
  3859   00227A  EFAF  F011         	goto	l3109
  3860   00227E                     u3120:
  3861   00227E  C04F  F045         	movff	floorf@e,??_floorf
  3862   002282  0EFF               	movlw	255
  3863   002284  6E46               	movwf	(??_floorf+1)^0,c
  3864   002286  0EFF               	movlw	255
  3865   002288  6E47               	movwf	(??_floorf+2)^0,c
  3866   00228A  0E7F               	movlw	127
  3867   00228C  6E48               	movwf	(??_floorf+3)^0,c
  3868   00228E  0E00               	movlw	0
  3869   002290  6E49               	movwf	(??_floorf+4)^0,c
  3870   002292                     u3135:
  3871   002292  6645               	tstfsz	??_floorf^0,c
  3872   002294  EF4E  F011         	goto	u3136
  3873   002298  EF56  F011         	goto	u3137
  3874   00229C                     u3136:
  3875   00229C  3449               	rlcf	(??_floorf+4)^0,w,c
  3876   00229E  3249               	rrcf	(??_floorf+4)^0,f,c
  3877   0022A0  3248               	rrcf	(??_floorf+3)^0,f,c
  3878   0022A2  3247               	rrcf	(??_floorf+2)^0,f,c
  3879   0022A4  3246               	rrcf	(??_floorf+1)^0,f,c
  3880   0022A6  2E45               	decfsz	??_floorf^0,f,c
  3881   0022A8  EF49  F011         	goto	u3135
  3882   0022AC                     u3137:
  3883   0022AC  C046  F04B         	movff	??_floorf+1,floorf@m
  3884   0022B0  C047  F04C         	movff	??_floorf+2,floorf@m+1
  3885   0022B4  C048  F04D         	movff	??_floorf+3,floorf@m+2
  3886   0022B8  C049  F04E         	movff	??_floorf+4,floorf@m+3
  3887   0022BC  504B               	movf	floorf@m^0,w,c
  3888   0022BE  1451               	andwf	floorf@u^0,w,c
  3889   0022C0  6E45               	movwf	??_floorf^0,c
  3890   0022C2  504C               	movf	(floorf@m+1)^0,w,c
  3891   0022C4  1452               	andwf	(floorf@u+1)^0,w,c
  3892   0022C6  6E46               	movwf	(??_floorf+1)^0,c
  3893   0022C8  504D               	movf	(floorf@m+2)^0,w,c
  3894   0022CA  1453               	andwf	(floorf@u+2)^0,w,c
  3895   0022CC  6E47               	movwf	(??_floorf+2)^0,c
  3896   0022CE  504E               	movf	(floorf@m+3)^0,w,c
  3897   0022D0  1454               	andwf	(floorf@u+3)^0,w,c
  3898   0022D2  6E48               	movwf	(??_floorf+3)^0,c
  3899   0022D4  5045               	movf	??_floorf^0,w,c
  3900   0022D6  1046               	iorwf	(??_floorf+1)^0,w,c
  3901   0022D8  1047               	iorwf	(??_floorf+2)^0,w,c
  3902   0022DA  1048               	iorwf	(??_floorf+3)^0,w,c
  3903   0022DC  A4D8               	btfss	status,2,c
  3904   0022DE  EF73  F011         	goto	u3141
  3905   0022E2  EF75  F011         	goto	u3140
  3906   0022E6                     u3141:
  3907   0022E6  EF77  F011         	goto	l3105
  3908   0022EA                     u3140:
  3909   0022EA  EF2E  F011         	goto	l3097
  3910   0022EE                     l3105:
  3911   0022EE  C051  F045         	movff	floorf@u,??_floorf
  3912   0022F2  C052  F046         	movff	floorf@u+1,??_floorf+1
  3913   0022F6  C053  F047         	movff	floorf@u+2,??_floorf+2
  3914   0022FA  C054  F048         	movff	floorf@u+3,??_floorf+3
  3915   0022FE  0E20               	movlw	32
  3916   002300  EF87  F011         	goto	u3150
  3917   002304                     u3155:
  3918   002304  90D8               	bcf	status,0,c
  3919   002306  3248               	rrcf	(??_floorf+3)^0,f,c
  3920   002308  3247               	rrcf	(??_floorf+2)^0,f,c
  3921   00230A  3246               	rrcf	(??_floorf+1)^0,f,c
  3922   00230C  3245               	rrcf	??_floorf^0,f,c
  3923   00230E                     u3150:
  3924   00230E  2EE8               	decfsz	wreg,f,c
  3925   002310  EF82  F011         	goto	u3155
  3926   002314  5045               	movf	??_floorf^0,w,c
  3927   002316  1046               	iorwf	(??_floorf+1)^0,w,c
  3928   002318  1047               	iorwf	(??_floorf+2)^0,w,c
  3929   00231A  1048               	iorwf	(??_floorf+3)^0,w,c
  3930   00231C  B4D8               	btfsc	status,2,c
  3931   00231E  EF93  F011         	goto	u3161
  3932   002322  EF95  F011         	goto	u3160
  3933   002326                     u3161:
  3934   002326  EF9D  F011         	goto	l983
  3935   00232A                     u3160:
  3936   00232A  504B               	movf	floorf@m^0,w,c
  3937   00232C  2651               	addwf	floorf@u^0,f,c
  3938   00232E  504C               	movf	(floorf@m+1)^0,w,c
  3939   002330  2252               	addwfc	(floorf@u+1)^0,f,c
  3940   002332  504D               	movf	(floorf@m+2)^0,w,c
  3941   002334  2253               	addwfc	(floorf@u+2)^0,f,c
  3942   002336  504E               	movf	(floorf@m+3)^0,w,c
  3943   002338  2254               	addwfc	(floorf@u+3)^0,f,c
  3944   00233A                     l983:
  3945   00233A  1C4B               	comf	floorf@m^0,w,c
  3946   00233C  6E45               	movwf	??_floorf^0,c
  3947   00233E  1C4C               	comf	(floorf@m+1)^0,w,c
  3948   002340  6E46               	movwf	(??_floorf+1)^0,c
  3949   002342  1C4D               	comf	(floorf@m+2)^0,w,c
  3950   002344  6E47               	movwf	(??_floorf+2)^0,c
  3951   002346  1C4E               	comf	(floorf@m+3)^0,w,c
  3952   002348  6E48               	movwf	(??_floorf+3)^0,c
  3953   00234A  5045               	movf	??_floorf^0,w,c
  3954   00234C  1651               	andwf	floorf@u^0,f,c
  3955   00234E  5046               	movf	(??_floorf+1)^0,w,c
  3956   002350  1652               	andwf	(floorf@u+1)^0,f,c
  3957   002352  5047               	movf	(??_floorf+2)^0,w,c
  3958   002354  1653               	andwf	(floorf@u+2)^0,f,c
  3959   002356  5048               	movf	(??_floorf+3)^0,w,c
  3960   002358  1654               	andwf	(floorf@u+3)^0,f,c
  3961   00235A  EFF3  F011         	goto	l3117
  3962   00235E                     l3109:
  3963   00235E  C051  F045         	movff	floorf@u,??_floorf
  3964   002362  C052  F046         	movff	floorf@u+1,??_floorf+1
  3965   002366  C053  F047         	movff	floorf@u+2,??_floorf+2
  3966   00236A  C054  F048         	movff	floorf@u+3,??_floorf+3
  3967   00236E  0E20               	movlw	32
  3968   002370  EFBF  F011         	goto	u3170
  3969   002374                     u3175:
  3970   002374  90D8               	bcf	status,0,c
  3971   002376  3248               	rrcf	(??_floorf+3)^0,f,c
  3972   002378  3247               	rrcf	(??_floorf+2)^0,f,c
  3973   00237A  3246               	rrcf	(??_floorf+1)^0,f,c
  3974   00237C  3245               	rrcf	??_floorf^0,f,c
  3975   00237E                     u3170:
  3976   00237E  2EE8               	decfsz	wreg,f,c
  3977   002380  EFBA  F011         	goto	u3175
  3978   002384  5045               	movf	??_floorf^0,w,c
  3979   002386  1046               	iorwf	(??_floorf+1)^0,w,c
  3980   002388  1047               	iorwf	(??_floorf+2)^0,w,c
  3981   00238A  1048               	iorwf	(??_floorf+3)^0,w,c
  3982   00238C  A4D8               	btfss	status,2,c
  3983   00238E  EFCB  F011         	goto	u3181
  3984   002392  EFCD  F011         	goto	u3180
  3985   002396                     u3181:
  3986   002396  EFD7  F011         	goto	l3113
  3987   00239A                     u3180:
  3988   00239A  0E00               	movlw	0
  3989   00239C  6E51               	movwf	floorf@u^0,c
  3990   00239E  0E00               	movlw	0
  3991   0023A0  6E52               	movwf	(floorf@u+1)^0,c
  3992   0023A2  0E00               	movlw	0
  3993   0023A4  6E53               	movwf	(floorf@u+2)^0,c
  3994   0023A6  0E00               	movlw	0
  3995   0023A8  6E54               	movwf	(floorf@u+3)^0,c
  3996   0023AA  EFF3  F011         	goto	l3117
  3997   0023AE                     l3113:
  3998   0023AE  90D8               	bcf	status,0,c
  3999   0023B0  3451               	rlcf	floorf@u^0,w,c
  4000   0023B2  6E45               	movwf	??_floorf^0,c
  4001   0023B4  3452               	rlcf	(floorf@u+1)^0,w,c
  4002   0023B6  6E46               	movwf	(??_floorf+1)^0,c
  4003   0023B8  3453               	rlcf	(floorf@u+2)^0,w,c
  4004   0023BA  6E47               	movwf	(??_floorf+2)^0,c
  4005   0023BC  3454               	rlcf	(floorf@u+3)^0,w,c
  4006   0023BE  6E48               	movwf	(??_floorf+3)^0,c
  4007   0023C0  5045               	movf	??_floorf^0,w,c
  4008   0023C2  1046               	iorwf	(??_floorf+1)^0,w,c
  4009   0023C4  1047               	iorwf	(??_floorf+2)^0,w,c
  4010   0023C6  1048               	iorwf	(??_floorf+3)^0,w,c
  4011   0023C8  B4D8               	btfsc	status,2,c
  4012   0023CA  EFE9  F011         	goto	u3191
  4013   0023CE  EFEB  F011         	goto	u3190
  4014   0023D2                     u3191:
  4015   0023D2  EFF3  F011         	goto	l3117
  4016   0023D6                     u3190:
  4017   0023D6  0E00               	movlw	0
  4018   0023D8  6E51               	movwf	floorf@u^0,c
  4019   0023DA  0E00               	movlw	0
  4020   0023DC  6E52               	movwf	(floorf@u+1)^0,c
  4021   0023DE  0E80               	movlw	128
  4022   0023E0  6E53               	movwf	(floorf@u+2)^0,c
  4023   0023E2  0EBF               	movlw	191
  4024   0023E4  6E54               	movwf	(floorf@u+3)^0,c
  4025   0023E6                     l3117:
  4026   0023E6  C051  F041         	movff	floorf@u,?_floorf
  4027   0023EA  C052  F042         	movff	floorf@u+1,?_floorf+1
  4028   0023EE  C053  F043         	movff	floorf@u+2,?_floorf+2
  4029   0023F2  C054  F044         	movff	floorf@u+3,?_floorf+3
  4030   0023F6                     l980:
  4031   0023F6  0012               	return		;funcret
  4032   0023F8                     __end_of_floorf:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function ___fpclassifyf *****************
  4036 ;; Defined at:
  4037 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  x               4    0[COMRAM] float 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  u               4   10[COMRAM] struct .
  4042 ;;  e               2    8[COMRAM] int 
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  2    0[COMRAM] int 
  4045 ;; Registers used:
  4046 ;;		wreg, status,2, status,0
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4052 ;;      Params:         4       0       0       0       0       0       0       0       0
  4053 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4054 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4055 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4056 ;;Total ram usage:       14 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; This function calls:
  4059 ;;		Nothing
  4060 ;; This function is called by:
  4061 ;;		_efgtoa
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           	psect	text15
  4066   0028CA                     __ptext15:
  4067                           	callstack 0
  4068   0028CA                     ___fpclassifyf:
  4069                           	callstack 26
  4070   0028CA  C0BF  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4071   0028CE  C0C0  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4072   0028D2  C0C1  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4073   0028D6  C0C2  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4074   0028DA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4075   0028DE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4076   0028E2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4077   0028E6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4078   0028EA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4079   0028EE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4080   0028F2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4081   0028F6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4082   0028FA  0E18               	movlw	24
  4083   0028FC  EF85  F014         	goto	u3010
  4084   002900                     u3015:
  4085   002900  90D8               	bcf	status,0,c
  4086   002902  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4087   002904  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4088   002906  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4089   002908  3205               	rrcf	??___fpclassifyf^0,f,c
  4090   00290A                     u3010:
  4091   00290A  2EE8               	decfsz	wreg,f,c
  4092   00290C  EF80  F014         	goto	u3015
  4093   002910  5005               	movf	??___fpclassifyf^0,w,c
  4094   002912  6E09               	movwf	___fpclassifyf@e^0,c
  4095   002914  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4096   002916  5009               	movf	___fpclassifyf@e^0,w,c
  4097   002918  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4098   00291A  A4D8               	btfss	status,2,c
  4099   00291C  EF92  F014         	goto	u3021
  4100   002920  EF94  F014         	goto	u3020
  4101   002924                     u3021:
  4102   002924  EFB4  F014         	goto	l3075
  4103   002928                     u3020:
  4104   002928  90D8               	bcf	status,0,c
  4105   00292A  340B               	rlcf	___fpclassifyf@u^0,w,c
  4106   00292C  6E05               	movwf	??___fpclassifyf^0,c
  4107   00292E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4108   002930  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4109   002932  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4110   002934  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4111   002936  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4112   002938  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4113   00293A  5005               	movf	??___fpclassifyf^0,w,c
  4114   00293C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4115   00293E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4116   002940  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4117   002942  A4D8               	btfss	status,2,c
  4118   002944  EFA6  F014         	goto	u3031
  4119   002948  EFA8  F014         	goto	u3030
  4120   00294C                     u3031:
  4121   00294C  EFAE  F014         	goto	l3071
  4122   002950                     u3030:
  4123   002950  0E00               	movlw	0
  4124   002952  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4125   002954  0E02               	movlw	2
  4126   002956  6E01               	movwf	?___fpclassifyf^0,c
  4127   002958  EFE3  F014         	goto	l973
  4128   00295C                     l3071:
  4129   00295C  0E00               	movlw	0
  4130   00295E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4131   002960  0E03               	movlw	3
  4132   002962  6E01               	movwf	?___fpclassifyf^0,c
  4133   002964  EFE3  F014         	goto	l973
  4134   002968                     l3075:
  4135   002968  2809               	incf	___fpclassifyf@e^0,w,c
  4136   00296A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4137   00296C  A4D8               	btfss	status,2,c
  4138   00296E  EFBB  F014         	goto	u3041
  4139   002972  EFBD  F014         	goto	u3040
  4140   002976                     u3041:
  4141   002976  EFDF  F014         	goto	l3081
  4142   00297A                     u3040:
  4143   00297A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4144   00297E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4145   002982  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4146   002986  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4147   00298A  0E09               	movlw	9
  4148   00298C                     u3055:
  4149   00298C  90D8               	bcf	status,0,c
  4150   00298E  3605               	rlcf	??___fpclassifyf^0,f,c
  4151   002990  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4152   002992  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4153   002994  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4154   002996  2EE8               	decfsz	wreg,f,c
  4155   002998  EFC6  F014         	goto	u3055
  4156   00299C  5005               	movf	??___fpclassifyf^0,w,c
  4157   00299E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4158   0029A0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4159   0029A2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4160   0029A4  B4D8               	btfsc	status,2,c
  4161   0029A6  EFD7  F014         	goto	u3061
  4162   0029AA  EFDA  F014         	goto	u3060
  4163   0029AE                     u3061:
  4164   0029AE  0E01               	movlw	1
  4165   0029B0  EFDB  F014         	goto	u3070
  4166   0029B4                     u3060:
  4167   0029B4  0E00               	movlw	0
  4168   0029B6                     u3070:
  4169   0029B6  6E01               	movwf	?___fpclassifyf^0,c
  4170   0029B8  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4171   0029BA  EFE3  F014         	goto	l973
  4172   0029BE                     l3081:
  4173   0029BE  0E00               	movlw	0
  4174   0029C0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4175   0029C2  0E04               	movlw	4
  4176   0029C4  6E01               	movwf	?___fpclassifyf^0,c
  4177   0029C6                     l973:
  4178   0029C6  0012               	return		;funcret
  4179   0029C8                     __end_of___fpclassifyf:
  4180                           	callstack 0
  4181                           
  4182 ;; *************** function ___fltol *****************
  4183 ;; Defined at:
  4184 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  f1              4    0[COMRAM] int 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  exp1            1    9[COMRAM] unsigned char 
  4189 ;;  sign1           1    8[COMRAM] unsigned char 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  4    0[COMRAM] long 
  4192 ;; Registers used:
  4193 ;;		wreg, status,2, status,0
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4199 ;;      Params:         4       0       0       0       0       0       0       0       0
  4200 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4201 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4202 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4203 ;;Total ram usage:       10 bytes
  4204 ;; Hardware stack levels used: 1
  4205 ;; This function calls:
  4206 ;;		Nothing
  4207 ;; This function is called by:
  4208 ;;		_efgtoa
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text16
  4213   0026C0                     __ptext16:
  4214                           	callstack 0
  4215   0026C0                     ___fltol:
  4216                           	callstack 26
  4217   0026C0  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4218   0026C2  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4219   0026C4  6E0A               	movwf	___fltol@exp1^0,c
  4220   0026C6  500A               	movf	___fltol@exp1^0,w,c
  4221   0026C8  A4D8               	btfss	status,2,c
  4222   0026CA  EF69  F013         	goto	u2921
  4223   0026CE  EF6B  F013         	goto	u2920
  4224   0026D2                     u2921:
  4225   0026D2  EF75  F013         	goto	l3011
  4226   0026D6                     u2920:
  4227   0026D6                     l3007:
  4228   0026D6  0E00               	movlw	0
  4229   0026D8  6E01               	movwf	?___fltol^0,c
  4230   0026DA  0E00               	movlw	0
  4231   0026DC  6E02               	movwf	(?___fltol+1)^0,c
  4232   0026DE  0E00               	movlw	0
  4233   0026E0  6E03               	movwf	(?___fltol+2)^0,c
  4234   0026E2  0E00               	movlw	0
  4235   0026E4  6E04               	movwf	(?___fltol+3)^0,c
  4236   0026E6  EFE2  F013         	goto	l448
  4237   0026EA                     l3011:
  4238   0026EA  C001  F005         	movff	___fltol@f1,??___fltol
  4239   0026EE  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4240   0026F2  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4241   0026F6  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4242   0026FA  0E20               	movlw	32
  4243   0026FC  EF85  F013         	goto	u2930
  4244   002700                     u2935:
  4245   002700  90D8               	bcf	status,0,c
  4246   002702  3208               	rrcf	(??___fltol+3)^0,f,c
  4247   002704  3207               	rrcf	(??___fltol+2)^0,f,c
  4248   002706  3206               	rrcf	(??___fltol+1)^0,f,c
  4249   002708  3205               	rrcf	??___fltol^0,f,c
  4250   00270A                     u2930:
  4251   00270A  2EE8               	decfsz	wreg,f,c
  4252   00270C  EF80  F013         	goto	u2935
  4253   002710  5005               	movf	??___fltol^0,w,c
  4254   002712  6E09               	movwf	___fltol@sign1^0,c
  4255   002714  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4256   002716  0EFF               	movlw	255
  4257   002718  1601               	andwf	___fltol@f1^0,f,c
  4258   00271A  0EFF               	movlw	255
  4259   00271C  1602               	andwf	(___fltol@f1+1)^0,f,c
  4260   00271E  0EFF               	movlw	255
  4261   002720  1603               	andwf	(___fltol@f1+2)^0,f,c
  4262   002722  0E00               	movlw	0
  4263   002724  1604               	andwf	(___fltol@f1+3)^0,f,c
  4264   002726  0E96               	movlw	150
  4265   002728  5E0A               	subwf	___fltol@exp1^0,f,c
  4266   00272A  BE0A               	btfsc	___fltol@exp1^0,7,c
  4267   00272C  EF9C  F013         	goto	u2940
  4268   002730  EF9A  F013         	goto	u2941
  4269   002734                     u2941:
  4270   002734  EFB2  F013         	goto	l3031
  4271   002738                     u2940:
  4272   002738  500A               	movf	___fltol@exp1^0,w,c
  4273   00273A  0A80               	xorlw	128
  4274   00273C  0F97               	addlw	151
  4275   00273E  B0D8               	btfsc	status,0,c
  4276   002740  EFA4  F013         	goto	u2951
  4277   002744  EFA6  F013         	goto	u2950
  4278   002748                     u2951:
  4279   002748  EFA8  F013         	goto	l3027
  4280   00274C                     u2950:
  4281   00274C  EF6B  F013         	goto	l3007
  4282   002750                     l3027:
  4283   002750  90D8               	bcf	status,0,c
  4284   002752  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4285   002754  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4286   002756  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4287   002758  3201               	rrcf	___fltol@f1^0,f,c
  4288   00275A  3E0A               	incfsz	___fltol@exp1^0,f,c
  4289   00275C  EFA8  F013         	goto	l3027
  4290   002760  EFCA  F013         	goto	l3041
  4291   002764                     l3031:
  4292   002764  0E1F               	movlw	31
  4293   002766  640A               	cpfsgt	___fltol@exp1^0,c
  4294   002768  EFB8  F013         	goto	u2961
  4295   00276C  EFBA  F013         	goto	u2960
  4296   002770                     u2961:
  4297   002770  EFC2  F013         	goto	l3039
  4298   002774                     u2960:
  4299   002774  EF6B  F013         	goto	l3007
  4300   002778                     l3037:
  4301   002778  90D8               	bcf	status,0,c
  4302   00277A  3601               	rlcf	___fltol@f1^0,f,c
  4303   00277C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4304   00277E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4305   002780  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4306   002782  060A               	decf	___fltol@exp1^0,f,c
  4307   002784                     l3039:
  4308   002784  500A               	movf	___fltol@exp1^0,w,c
  4309   002786  A4D8               	btfss	status,2,c
  4310   002788  EFC8  F013         	goto	u2971
  4311   00278C  EFCA  F013         	goto	u2970
  4312   002790                     u2971:
  4313   002790  EFBC  F013         	goto	l3037
  4314   002794                     u2970:
  4315   002794                     l3041:
  4316   002794  5009               	movf	___fltol@sign1^0,w,c
  4317   002796  B4D8               	btfsc	status,2,c
  4318   002798  EFD0  F013         	goto	u2981
  4319   00279C  EFD2  F013         	goto	u2980
  4320   0027A0                     u2981:
  4321   0027A0  EFDA  F013         	goto	l3045
  4322   0027A4                     u2980:
  4323   0027A4  1E04               	comf	(___fltol@f1+3)^0,f,c
  4324   0027A6  1E03               	comf	(___fltol@f1+2)^0,f,c
  4325   0027A8  1E02               	comf	(___fltol@f1+1)^0,f,c
  4326   0027AA  6C01               	negf	___fltol@f1^0,c
  4327   0027AC  0E00               	movlw	0
  4328   0027AE  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4329   0027B0  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4330   0027B2  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4331   0027B4                     l3045:
  4332   0027B4  C001  F001         	movff	___fltol@f1,?___fltol
  4333   0027B8  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4334   0027BC  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4335   0027C0  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4336   0027C4                     l448:
  4337   0027C4  0012               	return		;funcret
  4338   0027C6                     __end_of___fltol:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function ___flsub *****************
  4342 ;; Defined at:
  4343 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  b               4   39[COMRAM] long 
  4346 ;;  a               4   43[COMRAM] long 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  4   39[COMRAM] long 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4358 ;;      Params:         8       0       0       0       0       0       0       0       0
  4359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4361 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4362 ;;Total ram usage:        8 bytes
  4363 ;; Hardware stack levels used: 1
  4364 ;; Hardware stack levels required when called: 1
  4365 ;; This function calls:
  4366 ;;		___fladd
  4367 ;; This function is called by:
  4368 ;;		_efgtoa
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text17
  4373   003002                     __ptext17:
  4374                           	callstack 0
  4375   003002                     ___flsub:
  4376                           	callstack 25
  4377   003002  0E00               	movlw	0
  4378   003004  1A2C               	xorwf	___flsub@a^0,f,c
  4379   003006  0E00               	movlw	0
  4380   003008  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4381   00300A  0E00               	movlw	0
  4382   00300C  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4383   00300E  0E80               	movlw	128
  4384   003010  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4385   003012  C028  F001         	movff	___flsub@b,___fladd@b
  4386   003016  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4387   00301A  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4388   00301E  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4389   003022  C02C  F005         	movff	___flsub@a,___fladd@a
  4390   003026  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4391   00302A  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4392   00302E  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4393   003032  EC44  F009         	call	___fladd	;wreg free
  4394   003036  C001  F028         	movff	?___fladd,?___flsub
  4395   00303A  C002  F029         	movff	?___fladd+1,?___flsub+1
  4396   00303E  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4397   003042  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4398   003046  0012               	return		;funcret
  4399   003048                     __end_of___flsub:
  4400                           	callstack 0
  4401                           
  4402 ;; *************** function ___fladd *****************
  4403 ;; Defined at:
  4404 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  b               4    0[COMRAM] long 
  4407 ;;  a               4    4[COMRAM] long 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  grs             1   15[COMRAM] unsigned char 
  4410 ;;  bexp            1   14[COMRAM] unsigned char 
  4411 ;;  aexp            1   13[COMRAM] unsigned char 
  4412 ;;  signs           1   12[COMRAM] unsigned char 
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  4    0[COMRAM] unsigned char 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4422 ;;      Params:         8       0       0       0       0       0       0       0       0
  4423 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4424 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4425 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4426 ;;Total ram usage:       16 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		___flsub
  4432 ;;		_efgtoa
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text18
  4437   001288                     __ptext18:
  4438                           	callstack 0
  4439   001288                     ___fladd:
  4440                           	callstack 25
  4441   001288  5004               	movf	(___fladd@b+3)^0,w,c
  4442   00128A  0B80               	andlw	128
  4443   00128C  6E0D               	movwf	___fladd@signs^0,c
  4444   00128E  5004               	movf	(___fladd@b+3)^0,w,c
  4445   001290  2404               	addwf	(___fladd@b+3)^0,w,c
  4446   001292  6E0F               	movwf	___fladd@bexp^0,c
  4447   001294  AE03               	btfss	(___fladd@b+2)^0,7,c
  4448   001296  EF4F  F009         	goto	u2011
  4449   00129A  EF51  F009         	goto	u2010
  4450   00129E                     u2011:
  4451   00129E  EF52  F009         	goto	l2475
  4452   0012A2                     u2010:
  4453   0012A2  800F               	bsf	___fladd@bexp^0,0,c
  4454   0012A4                     l2475:
  4455   0012A4  500F               	movf	___fladd@bexp^0,w,c
  4456   0012A6  B4D8               	btfsc	status,2,c
  4457   0012A8  EF58  F009         	goto	u2021
  4458   0012AC  EF5A  F009         	goto	u2020
  4459   0012B0                     u2021:
  4460   0012B0  EF6F  F009         	goto	l2485
  4461   0012B4                     u2020:
  4462   0012B4  280F               	incf	___fladd@bexp^0,w,c
  4463   0012B6  A4D8               	btfss	status,2,c
  4464   0012B8  EF60  F009         	goto	u2031
  4465   0012BC  EF62  F009         	goto	u2030
  4466   0012C0                     u2031:
  4467   0012C0  EF6A  F009         	goto	l2481
  4468   0012C4                     u2030:
  4469   0012C4  0E00               	movlw	0
  4470   0012C6  6E01               	movwf	___fladd@b^0,c
  4471   0012C8  0E00               	movlw	0
  4472   0012CA  6E02               	movwf	(___fladd@b+1)^0,c
  4473   0012CC  0E00               	movlw	0
  4474   0012CE  6E03               	movwf	(___fladd@b+2)^0,c
  4475   0012D0  0E00               	movlw	0
  4476   0012D2  6E04               	movwf	(___fladd@b+3)^0,c
  4477   0012D4                     l2481:
  4478   0012D4  8E03               	bsf	(___fladd@b+2)^0,7,c
  4479   0012D6  0E00               	movlw	0
  4480   0012D8  6E04               	movwf	(___fladd@b+3)^0,c
  4481   0012DA  EF77  F009         	goto	l2487
  4482   0012DE                     l2485:
  4483   0012DE  0E00               	movlw	0
  4484   0012E0  6E01               	movwf	___fladd@b^0,c
  4485   0012E2  0E00               	movlw	0
  4486   0012E4  6E02               	movwf	(___fladd@b+1)^0,c
  4487   0012E6  0E00               	movlw	0
  4488   0012E8  6E03               	movwf	(___fladd@b+2)^0,c
  4489   0012EA  0E00               	movlw	0
  4490   0012EC  6E04               	movwf	(___fladd@b+3)^0,c
  4491   0012EE                     l2487:
  4492   0012EE  5008               	movf	(___fladd@a+3)^0,w,c
  4493   0012F0  0B80               	andlw	128
  4494   0012F2  6E0E               	movwf	___fladd@aexp^0,c
  4495   0012F4  500D               	movf	___fladd@signs^0,w,c
  4496   0012F6  180E               	xorwf	___fladd@aexp^0,w,c
  4497   0012F8  B4D8               	btfsc	status,2,c
  4498   0012FA  EF81  F009         	goto	u2041
  4499   0012FE  EF83  F009         	goto	u2040
  4500   001302                     u2041:
  4501   001302  EF84  F009         	goto	l2493
  4502   001306                     u2040:
  4503   001306  8C0D               	bsf	___fladd@signs^0,6,c
  4504   001308                     l2493:
  4505   001308  5008               	movf	(___fladd@a+3)^0,w,c
  4506   00130A  2408               	addwf	(___fladd@a+3)^0,w,c
  4507   00130C  6E0E               	movwf	___fladd@aexp^0,c
  4508   00130E  AE07               	btfss	(___fladd@a+2)^0,7,c
  4509   001310  EF8C  F009         	goto	u2051
  4510   001314  EF8E  F009         	goto	u2050
  4511   001318                     u2051:
  4512   001318  EF8F  F009         	goto	l2499
  4513   00131C                     u2050:
  4514   00131C  800E               	bsf	___fladd@aexp^0,0,c
  4515   00131E                     l2499:
  4516   00131E  500E               	movf	___fladd@aexp^0,w,c
  4517   001320  B4D8               	btfsc	status,2,c
  4518   001322  EF95  F009         	goto	u2061
  4519   001326  EF97  F009         	goto	u2060
  4520   00132A                     u2061:
  4521   00132A  EFAC  F009         	goto	l2509
  4522   00132E                     u2060:
  4523   00132E  280E               	incf	___fladd@aexp^0,w,c
  4524   001330  A4D8               	btfss	status,2,c
  4525   001332  EF9D  F009         	goto	u2071
  4526   001336  EF9F  F009         	goto	u2070
  4527   00133A                     u2071:
  4528   00133A  EFA7  F009         	goto	l2505
  4529   00133E                     u2070:
  4530   00133E  0E00               	movlw	0
  4531   001340  6E05               	movwf	___fladd@a^0,c
  4532   001342  0E00               	movlw	0
  4533   001344  6E06               	movwf	(___fladd@a+1)^0,c
  4534   001346  0E00               	movlw	0
  4535   001348  6E07               	movwf	(___fladd@a+2)^0,c
  4536   00134A  0E00               	movlw	0
  4537   00134C  6E08               	movwf	(___fladd@a+3)^0,c
  4538   00134E                     l2505:
  4539   00134E  8E07               	bsf	(___fladd@a+2)^0,7,c
  4540   001350  0E00               	movlw	0
  4541   001352  6E08               	movwf	(___fladd@a+3)^0,c
  4542   001354  EFB4  F009         	goto	l2511
  4543   001358                     l2509:
  4544   001358  0E00               	movlw	0
  4545   00135A  6E05               	movwf	___fladd@a^0,c
  4546   00135C  0E00               	movlw	0
  4547   00135E  6E06               	movwf	(___fladd@a+1)^0,c
  4548   001360  0E00               	movlw	0
  4549   001362  6E07               	movwf	(___fladd@a+2)^0,c
  4550   001364  0E00               	movlw	0
  4551   001366  6E08               	movwf	(___fladd@a+3)^0,c
  4552   001368                     l2511:
  4553   001368  500F               	movf	___fladd@bexp^0,w,c
  4554   00136A  5C0E               	subwf	___fladd@aexp^0,w,c
  4555   00136C  B0D8               	btfsc	status,0,c
  4556   00136E  EFBB  F009         	goto	u2081
  4557   001372  EFBD  F009         	goto	u2080
  4558   001376                     u2081:
  4559   001376  EFE4  F009         	goto	l2547
  4560   00137A                     u2080:
  4561   00137A  AC0D               	btfss	___fladd@signs^0,6,c
  4562   00137C  EFC2  F009         	goto	u2091
  4563   001380  EFC4  F009         	goto	u2090
  4564   001384                     u2091:
  4565   001384  EFC6  F009         	goto	l2517
  4566   001388                     u2090:
  4567   001388  0E80               	movlw	128
  4568   00138A  1A0D               	xorwf	___fladd@signs^0,f,c
  4569   00138C                     l2517:
  4570   00138C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4571   001390  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4572   001394  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4573   001398  C001  F010         	movff	___fladd@b,___fladd@grs
  4574   00139C  C005  F001         	movff	___fladd@a,___fladd@b
  4575   0013A0  C010  F005         	movff	___fladd@grs,___fladd@a
  4576   0013A4  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4577   0013A8  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4578   0013AC  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4579   0013B0  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4580   0013B4  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4581   0013B8  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4582   0013BC  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4583   0013C0  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4584   0013C4  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4585   0013C8                     l2547:
  4586   0013C8  0E00               	movlw	0
  4587   0013CA  6E10               	movwf	___fladd@grs^0,c
  4588   0013CC  500F               	movf	___fladd@bexp^0,w,c
  4589   0013CE  C00E  F009         	movff	___fladd@aexp,??___fladd
  4590   0013D2  6A0A               	clrf	(??___fladd+1)^0,c
  4591   0013D4  5E09               	subwf	??___fladd^0,f,c
  4592   0013D6  0E00               	movlw	0
  4593   0013D8  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4594   0013DA  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4595   0013DC  EFF9  F009         	goto	u2101
  4596   0013E0  500A               	movf	(??___fladd+1)^0,w,c
  4597   0013E2  E109               	bnz	u2100
  4598   0013E4  0E1A               	movlw	26
  4599   0013E6  5C09               	subwf	??___fladd^0,w,c
  4600   0013E8  A0D8               	btfss	status,0,c
  4601   0013EA  EFF9  F009         	goto	u2101
  4602   0013EE  EFFB  F009         	goto	u2100
  4603   0013F2                     u2101:
  4604   0013F2  EF32  F00A         	goto	l680
  4605   0013F6                     u2100:
  4606   0013F6  5001               	movf	___fladd@b^0,w,c
  4607   0013F8  1002               	iorwf	(___fladd@b+1)^0,w,c
  4608   0013FA  1003               	iorwf	(___fladd@b+2)^0,w,c
  4609   0013FC  1004               	iorwf	(___fladd@b+3)^0,w,c
  4610   0013FE  A4D8               	btfss	status,2,c
  4611   001400  EF04  F00A         	goto	u2111
  4612   001404  EF07  F00A         	goto	u2110
  4613   001408                     u2111:
  4614   001408  0E01               	movlw	1
  4615   00140A  EF08  F00A         	goto	u2120
  4616   00140E                     u2110:
  4617   00140E  0E00               	movlw	0
  4618   001410                     u2120:
  4619   001410  6E10               	movwf	___fladd@grs^0,c
  4620   001412  0E00               	movlw	0
  4621   001414  6E01               	movwf	___fladd@b^0,c
  4622   001416  0E00               	movlw	0
  4623   001418  6E02               	movwf	(___fladd@b+1)^0,c
  4624   00141A  0E00               	movlw	0
  4625   00141C  6E03               	movwf	(___fladd@b+2)^0,c
  4626   00141E  0E00               	movlw	0
  4627   001420  6E04               	movwf	(___fladd@b+3)^0,c
  4628   001422  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4629   001426  EF3B  F00A         	goto	l679
  4630   00142A                     l681:
  4631   00142A  A010               	btfss	___fladd@grs^0,0,c
  4632   00142C  EF1A  F00A         	goto	u2131
  4633   001430  EF1C  F00A         	goto	u2130
  4634   001434                     u2131:
  4635   001434  EF22  F00A         	goto	l2559
  4636   001438                     u2130:
  4637   001438  90D8               	bcf	status,0,c
  4638   00143A  3010               	rrcf	___fladd@grs^0,w,c
  4639   00143C  0901               	iorlw	1
  4640   00143E  6E10               	movwf	___fladd@grs^0,c
  4641   001440  EF24  F00A         	goto	l2561
  4642   001444                     l2559:
  4643   001444  90D8               	bcf	status,0,c
  4644   001446  3210               	rrcf	___fladd@grs^0,f,c
  4645   001448                     l2561:
  4646   001448  A001               	btfss	___fladd@b^0,0,c
  4647   00144A  EF29  F00A         	goto	u2141
  4648   00144E  EF2B  F00A         	goto	u2140
  4649   001452                     u2141:
  4650   001452  EF2C  F00A         	goto	l2565
  4651   001456                     u2140:
  4652   001456  8E10               	bsf	___fladd@grs^0,7,c
  4653   001458                     l2565:
  4654   001458  3404               	rlcf	(___fladd@b+3)^0,w,c
  4655   00145A  3204               	rrcf	(___fladd@b+3)^0,f,c
  4656   00145C  3203               	rrcf	(___fladd@b+2)^0,f,c
  4657   00145E  3202               	rrcf	(___fladd@b+1)^0,f,c
  4658   001460  3201               	rrcf	___fladd@b^0,f,c
  4659   001462  2A0F               	incf	___fladd@bexp^0,f,c
  4660   001464                     l680:
  4661   001464  500E               	movf	___fladd@aexp^0,w,c
  4662   001466  5C0F               	subwf	___fladd@bexp^0,w,c
  4663   001468  A0D8               	btfss	status,0,c
  4664   00146A  EF39  F00A         	goto	u2151
  4665   00146E  EF3B  F00A         	goto	u2150
  4666   001472                     u2151:
  4667   001472  EF15  F00A         	goto	l681
  4668   001476                     u2150:
  4669   001476                     l679:
  4670   001476  BC0D               	btfsc	___fladd@signs^0,6,c
  4671   001478  EF40  F00A         	goto	u2161
  4672   00147C  EF42  F00A         	goto	u2160
  4673   001480                     u2161:
  4674   001480  EF82  F00A         	goto	l2593
  4675   001484                     u2160:
  4676   001484  500F               	movf	___fladd@bexp^0,w,c
  4677   001486  A4D8               	btfss	status,2,c
  4678   001488  EF48  F00A         	goto	u2171
  4679   00148C  EF4A  F00A         	goto	u2170
  4680   001490                     u2171:
  4681   001490  EF54  F00A         	goto	l2575
  4682   001494                     u2170:
  4683   001494  0E00               	movlw	0
  4684   001496  6E01               	movwf	?___fladd^0,c
  4685   001498  0E00               	movlw	0
  4686   00149A  6E02               	movwf	(?___fladd+1)^0,c
  4687   00149C  0E00               	movlw	0
  4688   00149E  6E03               	movwf	(?___fladd+2)^0,c
  4689   0014A0  0E00               	movlw	0
  4690   0014A2  6E04               	movwf	(?___fladd+3)^0,c
  4691   0014A4  EFA3  F00B         	goto	l688
  4692   0014A8                     l2575:
  4693   0014A8  5005               	movf	___fladd@a^0,w,c
  4694   0014AA  2601               	addwf	___fladd@b^0,f,c
  4695   0014AC  5006               	movf	(___fladd@a+1)^0,w,c
  4696   0014AE  2202               	addwfc	(___fladd@b+1)^0,f,c
  4697   0014B0  5007               	movf	(___fladd@a+2)^0,w,c
  4698   0014B2  2203               	addwfc	(___fladd@b+2)^0,f,c
  4699   0014B4  5008               	movf	(___fladd@a+3)^0,w,c
  4700   0014B6  2204               	addwfc	(___fladd@b+3)^0,f,c
  4701   0014B8  A004               	btfss	(___fladd@b+3)^0,0,c
  4702   0014BA  EF61  F00A         	goto	u2181
  4703   0014BE  EF63  F00A         	goto	u2180
  4704   0014C2                     u2181:
  4705   0014C2  EF0F  F00B         	goto	l2629
  4706   0014C6                     u2180:
  4707   0014C6  A010               	btfss	___fladd@grs^0,0,c
  4708   0014C8  EF68  F00A         	goto	u2191
  4709   0014CC  EF6A  F00A         	goto	u2190
  4710   0014D0                     u2191:
  4711   0014D0  EF70  F00A         	goto	l2583
  4712   0014D4                     u2190:
  4713   0014D4  90D8               	bcf	status,0,c
  4714   0014D6  3010               	rrcf	___fladd@grs^0,w,c
  4715   0014D8  0901               	iorlw	1
  4716   0014DA  6E10               	movwf	___fladd@grs^0,c
  4717   0014DC  EF72  F00A         	goto	l2585
  4718   0014E0                     l2583:
  4719   0014E0  90D8               	bcf	status,0,c
  4720   0014E2  3210               	rrcf	___fladd@grs^0,f,c
  4721   0014E4                     l2585:
  4722   0014E4  A001               	btfss	___fladd@b^0,0,c
  4723   0014E6  EF77  F00A         	goto	u2201
  4724   0014EA  EF79  F00A         	goto	u2200
  4725   0014EE                     u2201:
  4726   0014EE  EF7A  F00A         	goto	l2589
  4727   0014F2                     u2200:
  4728   0014F2  8E10               	bsf	___fladd@grs^0,7,c
  4729   0014F4                     l2589:
  4730   0014F4  3404               	rlcf	(___fladd@b+3)^0,w,c
  4731   0014F6  3204               	rrcf	(___fladd@b+3)^0,f,c
  4732   0014F8  3203               	rrcf	(___fladd@b+2)^0,f,c
  4733   0014FA  3202               	rrcf	(___fladd@b+1)^0,f,c
  4734   0014FC  3201               	rrcf	___fladd@b^0,f,c
  4735   0014FE  2A0F               	incf	___fladd@bexp^0,f,c
  4736   001500  EF0F  F00B         	goto	l2629
  4737   001504                     l2593:
  4738   001504  5005               	movf	___fladd@a^0,w,c
  4739   001506  5C01               	subwf	___fladd@b^0,w,c
  4740   001508  5006               	movf	(___fladd@a+1)^0,w,c
  4741   00150A  5802               	subwfb	(___fladd@b+1)^0,w,c
  4742   00150C  5007               	movf	(___fladd@a+2)^0,w,c
  4743   00150E  5803               	subwfb	(___fladd@b+2)^0,w,c
  4744   001510  5004               	movf	(___fladd@b+3)^0,w,c
  4745   001512  0A80               	xorlw	128
  4746   001514  6E09               	movwf	??___fladd^0,c
  4747   001516  5008               	movf	(___fladd@a+3)^0,w,c
  4748   001518  0A80               	xorlw	128
  4749   00151A  5809               	subwfb	??___fladd^0,w,c
  4750   00151C  B0D8               	btfsc	status,0,c
  4751   00151E  EF93  F00A         	goto	u2211
  4752   001522  EF95  F00A         	goto	u2210
  4753   001526                     u2211:
  4754   001526  EFC0  F00A         	goto	l2603
  4755   00152A                     u2210:
  4756   00152A  5001               	movf	___fladd@b^0,w,c
  4757   00152C  5C05               	subwf	___fladd@a^0,w,c
  4758   00152E  6E09               	movwf	??___fladd^0,c
  4759   001530  5002               	movf	(___fladd@b+1)^0,w,c
  4760   001532  5806               	subwfb	(___fladd@a+1)^0,w,c
  4761   001534  6E0A               	movwf	(??___fladd+1)^0,c
  4762   001536  5003               	movf	(___fladd@b+2)^0,w,c
  4763   001538  5807               	subwfb	(___fladd@a+2)^0,w,c
  4764   00153A  6E0B               	movwf	(??___fladd+2)^0,c
  4765   00153C  5004               	movf	(___fladd@b+3)^0,w,c
  4766   00153E  5808               	subwfb	(___fladd@a+3)^0,w,c
  4767   001540  6E0C               	movwf	(??___fladd+3)^0,c
  4768   001542  0EFF               	movlw	255
  4769   001544  2409               	addwf	??___fladd^0,w,c
  4770   001546  6E01               	movwf	___fladd@b^0,c
  4771   001548  0EFF               	movlw	255
  4772   00154A  200A               	addwfc	(??___fladd+1)^0,w,c
  4773   00154C  6E02               	movwf	(___fladd@b+1)^0,c
  4774   00154E  0EFF               	movlw	255
  4775   001550  200B               	addwfc	(??___fladd+2)^0,w,c
  4776   001552  6E03               	movwf	(___fladd@b+2)^0,c
  4777   001554  0EFF               	movlw	255
  4778   001556  200C               	addwfc	(??___fladd+3)^0,w,c
  4779   001558  6E04               	movwf	(___fladd@b+3)^0,c
  4780   00155A  0E80               	movlw	128
  4781   00155C  1A0D               	xorwf	___fladd@signs^0,f,c
  4782   00155E  6C10               	negf	___fladd@grs^0,c
  4783   001560  5010               	movf	___fladd@grs^0,w,c
  4784   001562  A4D8               	btfss	status,2,c
  4785   001564  EFB6  F00A         	goto	u2221
  4786   001568  EFB8  F00A         	goto	u2220
  4787   00156C                     u2221:
  4788   00156C  EFC8  F00A         	goto	l696
  4789   001570                     u2220:
  4790   001570  0E01               	movlw	1
  4791   001572  2601               	addwf	___fladd@b^0,f,c
  4792   001574  0E00               	movlw	0
  4793   001576  2202               	addwfc	(___fladd@b+1)^0,f,c
  4794   001578  2203               	addwfc	(___fladd@b+2)^0,f,c
  4795   00157A  2204               	addwfc	(___fladd@b+3)^0,f,c
  4796   00157C  EFC8  F00A         	goto	l696
  4797   001580                     l2603:
  4798   001580  5005               	movf	___fladd@a^0,w,c
  4799   001582  5E01               	subwf	___fladd@b^0,f,c
  4800   001584  5006               	movf	(___fladd@a+1)^0,w,c
  4801   001586  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4802   001588  5007               	movf	(___fladd@a+2)^0,w,c
  4803   00158A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4804   00158C  5008               	movf	(___fladd@a+3)^0,w,c
  4805   00158E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4806   001590                     l696:
  4807   001590  5001               	movf	___fladd@b^0,w,c
  4808   001592  1002               	iorwf	(___fladd@b+1)^0,w,c
  4809   001594  1003               	iorwf	(___fladd@b+2)^0,w,c
  4810   001596  1004               	iorwf	(___fladd@b+3)^0,w,c
  4811   001598  A4D8               	btfss	status,2,c
  4812   00159A  EFD1  F00A         	goto	u2231
  4813   00159E  EFD3  F00A         	goto	u2230
  4814   0015A2                     u2231:
  4815   0015A2  EF08  F00B         	goto	l2627
  4816   0015A6                     u2230:
  4817   0015A6  5010               	movf	___fladd@grs^0,w,c
  4818   0015A8  A4D8               	btfss	status,2,c
  4819   0015AA  EFD9  F00A         	goto	u2241
  4820   0015AE  EFDB  F00A         	goto	u2240
  4821   0015B2                     u2241:
  4822   0015B2  EF08  F00B         	goto	l2627
  4823   0015B6                     u2240:
  4824   0015B6  0E00               	movlw	0
  4825   0015B8  6E01               	movwf	?___fladd^0,c
  4826   0015BA  0E00               	movlw	0
  4827   0015BC  6E02               	movwf	(?___fladd+1)^0,c
  4828   0015BE  0E00               	movlw	0
  4829   0015C0  6E03               	movwf	(?___fladd+2)^0,c
  4830   0015C2  0E00               	movlw	0
  4831   0015C4  6E04               	movwf	(?___fladd+3)^0,c
  4832   0015C6  EFA3  F00B         	goto	l688
  4833   0015CA                     l2611:
  4834   0015CA  90D8               	bcf	status,0,c
  4835   0015CC  3601               	rlcf	___fladd@b^0,f,c
  4836   0015CE  3602               	rlcf	(___fladd@b+1)^0,f,c
  4837   0015D0  3603               	rlcf	(___fladd@b+2)^0,f,c
  4838   0015D2  3604               	rlcf	(___fladd@b+3)^0,f,c
  4839   0015D4  AE10               	btfss	___fladd@grs^0,7,c
  4840   0015D6  EFEF  F00A         	goto	u2251
  4841   0015DA  EFF1  F00A         	goto	u2250
  4842   0015DE                     u2251:
  4843   0015DE  EFF2  F00A         	goto	l2617
  4844   0015E2                     u2250:
  4845   0015E2  8001               	bsf	___fladd@b^0,0,c
  4846   0015E4                     l2617:
  4847   0015E4  A010               	btfss	___fladd@grs^0,0,c
  4848   0015E6  EFF7  F00A         	goto	u2261
  4849   0015EA  EFF9  F00A         	goto	u2260
  4850   0015EE                     u2261:
  4851   0015EE  EFFD  F00A         	goto	l2621
  4852   0015F2                     u2260:
  4853   0015F2  80D8               	bsf	status,0,c
  4854   0015F4  3610               	rlcf	___fladd@grs^0,f,c
  4855   0015F6  EFFF  F00A         	goto	l2623
  4856   0015FA                     l2621:
  4857   0015FA  90D8               	bcf	status,0,c
  4858   0015FC  3610               	rlcf	___fladd@grs^0,f,c
  4859   0015FE                     l2623:
  4860   0015FE  500F               	movf	___fladd@bexp^0,w,c
  4861   001600  B4D8               	btfsc	status,2,c
  4862   001602  EF05  F00B         	goto	u2271
  4863   001606  EF07  F00B         	goto	u2270
  4864   00160A                     u2271:
  4865   00160A  EF08  F00B         	goto	l2627
  4866   00160E                     u2270:
  4867   00160E  060F               	decf	___fladd@bexp^0,f,c
  4868   001610                     l2627:
  4869   001610  AE03               	btfss	(___fladd@b+2)^0,7,c
  4870   001612  EF0D  F00B         	goto	u2281
  4871   001616  EF0F  F00B         	goto	u2280
  4872   00161A                     u2281:
  4873   00161A  EFE5  F00A         	goto	l2611
  4874   00161E                     u2280:
  4875   00161E                     l2629:
  4876   00161E  0E00               	movlw	0
  4877   001620  6E0E               	movwf	___fladd@aexp^0,c
  4878   001622  AE10               	btfss	___fladd@grs^0,7,c
  4879   001624  EF16  F00B         	goto	u2291
  4880   001628  EF18  F00B         	goto	u2290
  4881   00162C                     u2291:
  4882   00162C  EF30  F00B         	goto	l705
  4883   001630                     u2290:
  4884   001630  C010  F009         	movff	___fladd@grs,??___fladd
  4885   001634  0E7F               	movlw	127
  4886   001636  1609               	andwf	??___fladd^0,f,c
  4887   001638  B4D8               	btfsc	status,2,c
  4888   00163A  EF21  F00B         	goto	u2301
  4889   00163E  EF23  F00B         	goto	u2300
  4890   001642                     u2301:
  4891   001642  EF27  F00B         	goto	l706
  4892   001646                     u2300:
  4893   001646                     l2635:
  4894   001646  0E01               	movlw	1
  4895   001648  6E0E               	movwf	___fladd@aexp^0,c
  4896   00164A  EF30  F00B         	goto	l705
  4897   00164E                     l706:
  4898   00164E  A001               	btfss	___fladd@b^0,0,c
  4899   001650  EF2C  F00B         	goto	u2311
  4900   001654  EF2E  F00B         	goto	u2310
  4901   001658                     u2311:
  4902   001658  EF30  F00B         	goto	l705
  4903   00165C                     u2310:
  4904   00165C  EF23  F00B         	goto	l2635
  4905   001660                     l705:
  4906   001660  500E               	movf	___fladd@aexp^0,w,c
  4907   001662  B4D8               	btfsc	status,2,c
  4908   001664  EF36  F00B         	goto	u2321
  4909   001668  EF38  F00B         	goto	u2320
  4910   00166C                     u2321:
  4911   00166C  EF63  F00B         	goto	l2647
  4912   001670                     u2320:
  4913   001670  0E01               	movlw	1
  4914   001672  2601               	addwf	___fladd@b^0,f,c
  4915   001674  0E00               	movlw	0
  4916   001676  2202               	addwfc	(___fladd@b+1)^0,f,c
  4917   001678  2203               	addwfc	(___fladd@b+2)^0,f,c
  4918   00167A  2204               	addwfc	(___fladd@b+3)^0,f,c
  4919   00167C  A004               	btfss	(___fladd@b+3)^0,0,c
  4920   00167E  EF43  F00B         	goto	u2331
  4921   001682  EF45  F00B         	goto	u2330
  4922   001686                     u2331:
  4923   001686  EF63  F00B         	goto	l2647
  4924   00168A                     u2330:
  4925   00168A  C001  F009         	movff	___fladd@b,??___fladd
  4926   00168E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  4927   001692  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  4928   001696  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  4929   00169A  340C               	rlcf	(??___fladd+3)^0,w,c
  4930   00169C  320C               	rrcf	(??___fladd+3)^0,f,c
  4931   00169E  320B               	rrcf	(??___fladd+2)^0,f,c
  4932   0016A0  320A               	rrcf	(??___fladd+1)^0,f,c
  4933   0016A2  3209               	rrcf	??___fladd^0,f,c
  4934   0016A4  C009  F001         	movff	??___fladd,___fladd@b
  4935   0016A8  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  4936   0016AC  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  4937   0016B0  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  4938   0016B4  280F               	incf	___fladd@bexp^0,w,c
  4939   0016B6  B4D8               	btfsc	status,2,c
  4940   0016B8  EF60  F00B         	goto	u2341
  4941   0016BC  EF62  F00B         	goto	u2340
  4942   0016C0                     u2341:
  4943   0016C0  EF63  F00B         	goto	l2647
  4944   0016C4                     u2340:
  4945   0016C4  2A0F               	incf	___fladd@bexp^0,f,c
  4946   0016C6                     l2647:
  4947   0016C6  280F               	incf	___fladd@bexp^0,w,c
  4948   0016C8  B4D8               	btfsc	status,2,c
  4949   0016CA  EF69  F00B         	goto	u2351
  4950   0016CE  EF6B  F00B         	goto	u2350
  4951   0016D2                     u2351:
  4952   0016D2  EF73  F00B         	goto	l2651
  4953   0016D6                     u2350:
  4954   0016D6  500F               	movf	___fladd@bexp^0,w,c
  4955   0016D8  A4D8               	btfss	status,2,c
  4956   0016DA  EF71  F00B         	goto	u2361
  4957   0016DE  EF73  F00B         	goto	u2360
  4958   0016E2                     u2361:
  4959   0016E2  EF85  F00B         	goto	l2655
  4960   0016E6                     u2360:
  4961   0016E6                     l2651:
  4962   0016E6  0E00               	movlw	0
  4963   0016E8  6E01               	movwf	___fladd@b^0,c
  4964   0016EA  0E00               	movlw	0
  4965   0016EC  6E02               	movwf	(___fladd@b+1)^0,c
  4966   0016EE  0E00               	movlw	0
  4967   0016F0  6E03               	movwf	(___fladd@b+2)^0,c
  4968   0016F2  0E00               	movlw	0
  4969   0016F4  6E04               	movwf	(___fladd@b+3)^0,c
  4970   0016F6  500F               	movf	___fladd@bexp^0,w,c
  4971   0016F8  A4D8               	btfss	status,2,c
  4972   0016FA  EF81  F00B         	goto	u2371
  4973   0016FE  EF83  F00B         	goto	u2370
  4974   001702                     u2371:
  4975   001702  EF85  F00B         	goto	l2655
  4976   001706                     u2370:
  4977   001706  0E00               	movlw	0
  4978   001708  6E0D               	movwf	___fladd@signs^0,c
  4979   00170A                     l2655:
  4980   00170A  A00F               	btfss	___fladd@bexp^0,0,c
  4981   00170C  EF8A  F00B         	goto	u2381
  4982   001710  EF8C  F00B         	goto	u2380
  4983   001714                     u2381:
  4984   001714  EF8F  F00B         	goto	l2659
  4985   001718                     u2380:
  4986   001718  8E03               	bsf	(___fladd@b+2)^0,7,c
  4987   00171A  EF90  F00B         	goto	l2661
  4988   00171E                     l2659:
  4989   00171E  9E03               	bcf	(___fladd@b+2)^0,7,c
  4990   001720                     l2661:
  4991   001720  90D8               	bcf	status,0,c
  4992   001722  300F               	rrcf	___fladd@bexp^0,w,c
  4993   001724  6E04               	movwf	(___fladd@b+3)^0,c
  4994   001726  AE0D               	btfss	___fladd@signs^0,7,c
  4995   001728  EF98  F00B         	goto	u2391
  4996   00172C  EF9A  F00B         	goto	u2390
  4997   001730                     u2391:
  4998   001730  EF9B  F00B         	goto	l2667
  4999   001734                     u2390:
  5000   001734  8E04               	bsf	(___fladd@b+3)^0,7,c
  5001   001736                     l2667:
  5002   001736  C001  F001         	movff	___fladd@b,?___fladd
  5003   00173A  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5004   00173E  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5005   001742  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5006   001746                     l688:
  5007   001746  0012               	return		;funcret
  5008   001748                     __end_of___fladd:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function ___flneg *****************
  5012 ;; Defined at:
  5013 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  f1              4    0[COMRAM] unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  4    0[COMRAM] unsigned char 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5027 ;;      Params:         4       0       0       0       0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5030 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5031 ;;Total ram usage:        4 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_efgtoa
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text19
  5041   0030CC                     __ptext19:
  5042                           	callstack 0
  5043   0030CC                     ___flneg:
  5044                           	callstack 26
  5045   0030CC  5001               	movf	___flneg@f1^0,w,c
  5046   0030CE  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5047   0030D0  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5048   0030D2  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5049   0030D4  B4D8               	btfsc	status,2,c
  5050   0030D6  EF6F  F018         	goto	u2911
  5051   0030DA  EF71  F018         	goto	u2910
  5052   0030DE                     u2911:
  5053   0030DE  EF79  F018         	goto	l3001
  5054   0030E2                     u2910:
  5055   0030E2  0E00               	movlw	0
  5056   0030E4  1A01               	xorwf	___flneg@f1^0,f,c
  5057   0030E6  0E00               	movlw	0
  5058   0030E8  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5059   0030EA  0E00               	movlw	0
  5060   0030EC  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5061   0030EE  0E80               	movlw	128
  5062   0030F0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5063   0030F2                     l3001:
  5064   0030F2  C001  F001         	movff	___flneg@f1,?___flneg
  5065   0030F6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5066   0030FA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5067   0030FE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5068   003102  0012               	return		;funcret
  5069   003104                     __end_of___flneg:
  5070                           	callstack 0
  5071                           
  5072 ;; *************** function ___flmul *****************
  5073 ;; Defined at:
  5074 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  b               4   14[COMRAM] unsigned char 
  5077 ;;  a               4   18[COMRAM] unsigned char 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;  prod            4   33[COMRAM] struct .
  5080 ;;  grs             4   27[COMRAM] unsigned long 
  5081 ;;  temp            2   37[COMRAM] struct .
  5082 ;;  bexp            1   32[COMRAM] unsigned char 
  5083 ;;  aexp            1   31[COMRAM] unsigned char 
  5084 ;;  sign            1   26[COMRAM] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  4   14[COMRAM] unsigned char 
  5087 ;; Registers used:
  5088 ;;		wreg, status,2, status,0, prodl, prodh
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5094 ;;      Params:         8       0       0       0       0       0       0       0       0
  5095 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5096 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5097 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5098 ;;Total ram usage:       25 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;;		_efgtoa
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text20
  5109   001748                     __ptext20:
  5110                           	callstack 0
  5111   001748                     ___flmul:
  5112                           	callstack 26
  5113   001748  5012               	movf	(___flmul@b+3)^0,w,c
  5114   00174A  0B80               	andlw	128
  5115   00174C  6E1B               	movwf	___flmul@sign^0,c
  5116   00174E  5012               	movf	(___flmul@b+3)^0,w,c
  5117   001750  2412               	addwf	(___flmul@b+3)^0,w,c
  5118   001752  6E21               	movwf	___flmul@bexp^0,c
  5119   001754  AE11               	btfss	(___flmul@b+2)^0,7,c
  5120   001756  EFAF  F00B         	goto	u2641
  5121   00175A  EFB1  F00B         	goto	u2640
  5122   00175E                     u2641:
  5123   00175E  EFB2  F00B         	goto	l2829
  5124   001762                     u2640:
  5125   001762  8021               	bsf	___flmul@bexp^0,0,c
  5126   001764                     l2829:
  5127   001764  5021               	movf	___flmul@bexp^0,w,c
  5128   001766  B4D8               	btfsc	status,2,c
  5129   001768  EFB8  F00B         	goto	u2651
  5130   00176C  EFBA  F00B         	goto	u2650
  5131   001770                     u2651:
  5132   001770  EFCD  F00B         	goto	l2837
  5133   001774                     u2650:
  5134   001774  2821               	incf	___flmul@bexp^0,w,c
  5135   001776  A4D8               	btfss	status,2,c
  5136   001778  EFC0  F00B         	goto	u2661
  5137   00177C  EFC2  F00B         	goto	u2660
  5138   001780                     u2661:
  5139   001780  EFCA  F00B         	goto	l2835
  5140   001784                     u2660:
  5141   001784  0E00               	movlw	0
  5142   001786  6E0F               	movwf	___flmul@b^0,c
  5143   001788  0E00               	movlw	0
  5144   00178A  6E10               	movwf	(___flmul@b+1)^0,c
  5145   00178C  0E00               	movlw	0
  5146   00178E  6E11               	movwf	(___flmul@b+2)^0,c
  5147   001790  0E00               	movlw	0
  5148   001792  6E12               	movwf	(___flmul@b+3)^0,c
  5149   001794                     l2835:
  5150   001794  8E11               	bsf	(___flmul@b+2)^0,7,c
  5151   001796  EFD5  F00B         	goto	l2839
  5152   00179A                     l2837:
  5153   00179A  0E00               	movlw	0
  5154   00179C  6E0F               	movwf	___flmul@b^0,c
  5155   00179E  0E00               	movlw	0
  5156   0017A0  6E10               	movwf	(___flmul@b+1)^0,c
  5157   0017A2  0E00               	movlw	0
  5158   0017A4  6E11               	movwf	(___flmul@b+2)^0,c
  5159   0017A6  0E00               	movlw	0
  5160   0017A8  6E12               	movwf	(___flmul@b+3)^0,c
  5161   0017AA                     l2839:
  5162   0017AA  5016               	movf	(___flmul@a+3)^0,w,c
  5163   0017AC  0B80               	andlw	128
  5164   0017AE  1A1B               	xorwf	___flmul@sign^0,f,c
  5165   0017B0  5016               	movf	(___flmul@a+3)^0,w,c
  5166   0017B2  2416               	addwf	(___flmul@a+3)^0,w,c
  5167   0017B4  6E20               	movwf	___flmul@aexp^0,c
  5168   0017B6  AE15               	btfss	(___flmul@a+2)^0,7,c
  5169   0017B8  EFE0  F00B         	goto	u2671
  5170   0017BC  EFE2  F00B         	goto	u2670
  5171   0017C0                     u2671:
  5172   0017C0  EFE3  F00B         	goto	l2847
  5173   0017C4                     u2670:
  5174   0017C4  8020               	bsf	___flmul@aexp^0,0,c
  5175   0017C6                     l2847:
  5176   0017C6  5020               	movf	___flmul@aexp^0,w,c
  5177   0017C8  B4D8               	btfsc	status,2,c
  5178   0017CA  EFE9  F00B         	goto	u2681
  5179   0017CE  EFEB  F00B         	goto	u2680
  5180   0017D2                     u2681:
  5181   0017D2  EFFE  F00B         	goto	l2855
  5182   0017D6                     u2680:
  5183   0017D6  2820               	incf	___flmul@aexp^0,w,c
  5184   0017D8  A4D8               	btfss	status,2,c
  5185   0017DA  EFF1  F00B         	goto	u2691
  5186   0017DE  EFF3  F00B         	goto	u2690
  5187   0017E2                     u2691:
  5188   0017E2  EFFB  F00B         	goto	l2853
  5189   0017E6                     u2690:
  5190   0017E6  0E00               	movlw	0
  5191   0017E8  6E13               	movwf	___flmul@a^0,c
  5192   0017EA  0E00               	movlw	0
  5193   0017EC  6E14               	movwf	(___flmul@a+1)^0,c
  5194   0017EE  0E00               	movlw	0
  5195   0017F0  6E15               	movwf	(___flmul@a+2)^0,c
  5196   0017F2  0E00               	movlw	0
  5197   0017F4  6E16               	movwf	(___flmul@a+3)^0,c
  5198   0017F6                     l2853:
  5199   0017F6  8E15               	bsf	(___flmul@a+2)^0,7,c
  5200   0017F8  EF06  F00C         	goto	l765
  5201   0017FC                     l2855:
  5202   0017FC  0E00               	movlw	0
  5203   0017FE  6E13               	movwf	___flmul@a^0,c
  5204   001800  0E00               	movlw	0
  5205   001802  6E14               	movwf	(___flmul@a+1)^0,c
  5206   001804  0E00               	movlw	0
  5207   001806  6E15               	movwf	(___flmul@a+2)^0,c
  5208   001808  0E00               	movlw	0
  5209   00180A  6E16               	movwf	(___flmul@a+3)^0,c
  5210   00180C                     l765:
  5211   00180C  5020               	movf	___flmul@aexp^0,w,c
  5212   00180E  B4D8               	btfsc	status,2,c
  5213   001810  EF0C  F00C         	goto	u2701
  5214   001814  EF0E  F00C         	goto	u2700
  5215   001818                     u2701:
  5216   001818  EF16  F00C         	goto	l2859
  5217   00181C                     u2700:
  5218   00181C  5021               	movf	___flmul@bexp^0,w,c
  5219   00181E  A4D8               	btfss	status,2,c
  5220   001820  EF14  F00C         	goto	u2711
  5221   001824  EF16  F00C         	goto	u2710
  5222   001828                     u2711:
  5223   001828  EF20  F00C         	goto	l2863
  5224   00182C                     u2710:
  5225   00182C                     l2859:
  5226   00182C  0E00               	movlw	0
  5227   00182E  6E0F               	movwf	?___flmul^0,c
  5228   001830  0E00               	movlw	0
  5229   001832  6E10               	movwf	(?___flmul+1)^0,c
  5230   001834  0E00               	movlw	0
  5231   001836  6E11               	movwf	(?___flmul+2)^0,c
  5232   001838  0E00               	movlw	0
  5233   00183A  6E12               	movwf	(?___flmul+3)^0,c
  5234   00183C  EFB8  F00D         	goto	l769
  5235   001840                     l2863:
  5236   001840  5015               	movf	(___flmul@a+2)^0,w,c
  5237   001842  020F               	mulwf	___flmul@b^0,c
  5238   001844  CFF3 F026          	movff	prodl,___flmul@temp
  5239   001848  CFF4 F027          	movff	prodh,___flmul@temp+1
  5240   00184C  5026               	movf	___flmul@temp^0,w,c
  5241   00184E  6E1C               	movwf	___flmul@grs^0,c
  5242   001850  6A1D               	clrf	(___flmul@grs+1)^0,c
  5243   001852  6A1E               	clrf	(___flmul@grs+2)^0,c
  5244   001854  6A1F               	clrf	(___flmul@grs+3)^0,c
  5245   001856  5027               	movf	(___flmul@temp+1)^0,w,c
  5246   001858  6E22               	movwf	___flmul@prod^0,c
  5247   00185A  6A23               	clrf	(___flmul@prod+1)^0,c
  5248   00185C  6A24               	clrf	(___flmul@prod+2)^0,c
  5249   00185E  6A25               	clrf	(___flmul@prod+3)^0,c
  5250   001860  5014               	movf	(___flmul@a+1)^0,w,c
  5251   001862  0210               	mulwf	(___flmul@b+1)^0,c
  5252   001864  CFF3 F026          	movff	prodl,___flmul@temp
  5253   001868  CFF4 F027          	movff	prodh,___flmul@temp+1
  5254   00186C  5026               	movf	___flmul@temp^0,w,c
  5255   00186E  261C               	addwf	___flmul@grs^0,f,c
  5256   001870  0E00               	movlw	0
  5257   001872  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5258   001874  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5259   001876  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5260   001878  5027               	movf	(___flmul@temp+1)^0,w,c
  5261   00187A  2622               	addwf	___flmul@prod^0,f,c
  5262   00187C  0E00               	movlw	0
  5263   00187E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5264   001880  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5265   001882  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5266   001884  5013               	movf	___flmul@a^0,w,c
  5267   001886  0211               	mulwf	(___flmul@b+2)^0,c
  5268   001888  CFF3 F026          	movff	prodl,___flmul@temp
  5269   00188C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5270   001890  5026               	movf	___flmul@temp^0,w,c
  5271   001892  261C               	addwf	___flmul@grs^0,f,c
  5272   001894  0E00               	movlw	0
  5273   001896  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5274   001898  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5275   00189A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5276   00189C  5027               	movf	(___flmul@temp+1)^0,w,c
  5277   00189E  2622               	addwf	___flmul@prod^0,f,c
  5278   0018A0  0E00               	movlw	0
  5279   0018A2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5280   0018A4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5281   0018A6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5282   0018A8  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5283   0018AC  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5284   0018B0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5285   0018B4  6A1C               	clrf	___flmul@grs^0,c
  5286   0018B6  5013               	movf	___flmul@a^0,w,c
  5287   0018B8  0210               	mulwf	(___flmul@b+1)^0,c
  5288   0018BA  CFF3 F026          	movff	prodl,___flmul@temp
  5289   0018BE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5290   0018C2  5026               	movf	___flmul@temp^0,w,c
  5291   0018C4  261C               	addwf	___flmul@grs^0,f,c
  5292   0018C6  5027               	movf	(___flmul@temp+1)^0,w,c
  5293   0018C8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5294   0018CA  0E00               	movlw	0
  5295   0018CC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5296   0018CE  0E00               	movlw	0
  5297   0018D0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5298   0018D2  5014               	movf	(___flmul@a+1)^0,w,c
  5299   0018D4  020F               	mulwf	___flmul@b^0,c
  5300   0018D6  CFF3 F026          	movff	prodl,___flmul@temp
  5301   0018DA  CFF4 F027          	movff	prodh,___flmul@temp+1
  5302   0018DE  5026               	movf	___flmul@temp^0,w,c
  5303   0018E0  261C               	addwf	___flmul@grs^0,f,c
  5304   0018E2  5027               	movf	(___flmul@temp+1)^0,w,c
  5305   0018E4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5306   0018E6  0E00               	movlw	0
  5307   0018E8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5308   0018EA  0E00               	movlw	0
  5309   0018EC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5310   0018EE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5311   0018F2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5312   0018F6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5313   0018FA  6A1C               	clrf	___flmul@grs^0,c
  5314   0018FC  5013               	movf	___flmul@a^0,w,c
  5315   0018FE  020F               	mulwf	___flmul@b^0,c
  5316   001900  CFF3 F026          	movff	prodl,___flmul@temp
  5317   001904  CFF4 F027          	movff	prodh,___flmul@temp+1
  5318   001908  5026               	movf	___flmul@temp^0,w,c
  5319   00190A  261C               	addwf	___flmul@grs^0,f,c
  5320   00190C  5027               	movf	(___flmul@temp+1)^0,w,c
  5321   00190E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5322   001910  0E00               	movlw	0
  5323   001912  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5324   001914  0E00               	movlw	0
  5325   001916  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5326   001918  5015               	movf	(___flmul@a+2)^0,w,c
  5327   00191A  0210               	mulwf	(___flmul@b+1)^0,c
  5328   00191C  CFF3 F026          	movff	prodl,___flmul@temp
  5329   001920  CFF4 F027          	movff	prodh,___flmul@temp+1
  5330   001924  5026               	movf	___flmul@temp^0,w,c
  5331   001926  2622               	addwf	___flmul@prod^0,f,c
  5332   001928  5027               	movf	(___flmul@temp+1)^0,w,c
  5333   00192A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5334   00192C  0E00               	movlw	0
  5335   00192E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5336   001930  0E00               	movlw	0
  5337   001932  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5338   001934  5014               	movf	(___flmul@a+1)^0,w,c
  5339   001936  0211               	mulwf	(___flmul@b+2)^0,c
  5340   001938  CFF3 F026          	movff	prodl,___flmul@temp
  5341   00193C  CFF4 F027          	movff	prodh,___flmul@temp+1
  5342   001940  5026               	movf	___flmul@temp^0,w,c
  5343   001942  2622               	addwf	___flmul@prod^0,f,c
  5344   001944  5027               	movf	(___flmul@temp+1)^0,w,c
  5345   001946  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5346   001948  0E00               	movlw	0
  5347   00194A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5348   00194C  0E00               	movlw	0
  5349   00194E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5350   001950  5015               	movf	(___flmul@a+2)^0,w,c
  5351   001952  0211               	mulwf	(___flmul@b+2)^0,c
  5352   001954  CFF3 F026          	movff	prodl,___flmul@temp
  5353   001958  CFF4 F027          	movff	prodh,___flmul@temp+1
  5354   00195C  5026               	movf	___flmul@temp^0,w,c
  5355   00195E  6E17               	movwf	??___flmul^0,c
  5356   001960  5027               	movf	(___flmul@temp+1)^0,w,c
  5357   001962  6E18               	movwf	(??___flmul+1)^0,c
  5358   001964  6A19               	clrf	(??___flmul+2)^0,c
  5359   001966  6A1A               	clrf	(??___flmul+3)^0,c
  5360   001968  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5361   00196C  C018  F019         	movff	??___flmul+1,??___flmul+2
  5362   001970  C017  F018         	movff	??___flmul,??___flmul+1
  5363   001974  6A17               	clrf	??___flmul^0,c
  5364   001976  5017               	movf	??___flmul^0,w,c
  5365   001978  2622               	addwf	___flmul@prod^0,f,c
  5366   00197A  5018               	movf	(??___flmul+1)^0,w,c
  5367   00197C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5368   00197E  5019               	movf	(??___flmul+2)^0,w,c
  5369   001980  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5370   001982  501A               	movf	(??___flmul+3)^0,w,c
  5371   001984  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5372   001986  C01C  F017         	movff	___flmul@grs,??___flmul
  5373   00198A  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5374   00198E  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5375   001992  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5376   001996  0E19               	movlw	25
  5377   001998  EFD3  F00C         	goto	u2720
  5378   00199C                     u2725:
  5379   00199C  90D8               	bcf	status,0,c
  5380   00199E  321A               	rrcf	(??___flmul+3)^0,f,c
  5381   0019A0  3219               	rrcf	(??___flmul+2)^0,f,c
  5382   0019A2  3218               	rrcf	(??___flmul+1)^0,f,c
  5383   0019A4  3217               	rrcf	??___flmul^0,f,c
  5384   0019A6                     u2720:
  5385   0019A6  2EE8               	decfsz	wreg,f,c
  5386   0019A8  EFCE  F00C         	goto	u2725
  5387   0019AC  5017               	movf	??___flmul^0,w,c
  5388   0019AE  2622               	addwf	___flmul@prod^0,f,c
  5389   0019B0  5018               	movf	(??___flmul+1)^0,w,c
  5390   0019B2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5391   0019B4  5019               	movf	(??___flmul+2)^0,w,c
  5392   0019B6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5393   0019B8  501A               	movf	(??___flmul+3)^0,w,c
  5394   0019BA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5395   0019BC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5396   0019C0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5397   0019C4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5398   0019C8  6A1C               	clrf	___flmul@grs^0,c
  5399   0019CA  5020               	movf	___flmul@aexp^0,w,c
  5400   0019CC  C021  F017         	movff	___flmul@bexp,??___flmul
  5401   0019D0  6A18               	clrf	(??___flmul+1)^0,c
  5402   0019D2  2617               	addwf	??___flmul^0,f,c
  5403   0019D4  0E00               	movlw	0
  5404   0019D6  2218               	addwfc	(??___flmul+1)^0,f,c
  5405   0019D8  0E82               	movlw	130
  5406   0019DA  2417               	addwf	??___flmul^0,w,c
  5407   0019DC  6E26               	movwf	___flmul@temp^0,c
  5408   0019DE  0EFF               	movlw	255
  5409   0019E0  2018               	addwfc	(??___flmul+1)^0,w,c
  5410   0019E2  6E27               	movwf	(___flmul@temp+1)^0,c
  5411   0019E4  EF09  F00D         	goto	l2911
  5412   0019E8                     l2905:
  5413   0019E8  90D8               	bcf	status,0,c
  5414   0019EA  3622               	rlcf	___flmul@prod^0,f,c
  5415   0019EC  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5416   0019EE  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5417   0019F0  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5418   0019F2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5419   0019F4  EFFE  F00C         	goto	u2731
  5420   0019F8  EF00  F00D         	goto	u2730
  5421   0019FC                     u2731:
  5422   0019FC  EF01  F00D         	goto	l772
  5423   001A00                     u2730:
  5424   001A00  8022               	bsf	___flmul@prod^0,0,c
  5425   001A02                     l772:
  5426   001A02  90D8               	bcf	status,0,c
  5427   001A04  361C               	rlcf	___flmul@grs^0,f,c
  5428   001A06  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5429   001A08  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5430   001A0A  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5431   001A0C  0626               	decf	___flmul@temp^0,f,c
  5432   001A0E  A0D8               	btfss	status,0,c
  5433   001A10  0627               	decf	(___flmul@temp+1)^0,f,c
  5434   001A12                     l2911:
  5435   001A12  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5436   001A14  EF0E  F00D         	goto	u2741
  5437   001A18  EF10  F00D         	goto	u2740
  5438   001A1C                     u2741:
  5439   001A1C  EFF4  F00C         	goto	l2905
  5440   001A20                     u2740:
  5441   001A20  0E00               	movlw	0
  5442   001A22  6E20               	movwf	___flmul@aexp^0,c
  5443   001A24  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5444   001A26  EF17  F00D         	goto	u2751
  5445   001A2A  EF19  F00D         	goto	u2750
  5446   001A2E                     u2751:
  5447   001A2E  EF3D  F00D         	goto	l774
  5448   001A32                     u2750:
  5449   001A32  0EFF               	movlw	255
  5450   001A34  141C               	andwf	___flmul@grs^0,w,c
  5451   001A36  6E17               	movwf	??___flmul^0,c
  5452   001A38  0EFF               	movlw	255
  5453   001A3A  141D               	andwf	(___flmul@grs+1)^0,w,c
  5454   001A3C  6E18               	movwf	(??___flmul+1)^0,c
  5455   001A3E  0EFF               	movlw	255
  5456   001A40  141E               	andwf	(___flmul@grs+2)^0,w,c
  5457   001A42  6E19               	movwf	(??___flmul+2)^0,c
  5458   001A44  0E7F               	movlw	127
  5459   001A46  141F               	andwf	(___flmul@grs+3)^0,w,c
  5460   001A48  6E1A               	movwf	(??___flmul+3)^0,c
  5461   001A4A  5017               	movf	??___flmul^0,w,c
  5462   001A4C  1018               	iorwf	(??___flmul+1)^0,w,c
  5463   001A4E  1019               	iorwf	(??___flmul+2)^0,w,c
  5464   001A50  101A               	iorwf	(??___flmul+3)^0,w,c
  5465   001A52  B4D8               	btfsc	status,2,c
  5466   001A54  EF2E  F00D         	goto	u2761
  5467   001A58  EF30  F00D         	goto	u2760
  5468   001A5C                     u2761:
  5469   001A5C  EF34  F00D         	goto	l775
  5470   001A60                     u2760:
  5471   001A60                     l2919:
  5472   001A60  0E01               	movlw	1
  5473   001A62  6E20               	movwf	___flmul@aexp^0,c
  5474   001A64  EF3D  F00D         	goto	l774
  5475   001A68                     l775:
  5476   001A68  A022               	btfss	___flmul@prod^0,0,c
  5477   001A6A  EF39  F00D         	goto	u2771
  5478   001A6E  EF3B  F00D         	goto	u2770
  5479   001A72                     u2771:
  5480   001A72  EF3D  F00D         	goto	l774
  5481   001A76                     u2770:
  5482   001A76  EF30  F00D         	goto	l2919
  5483   001A7A                     l774:
  5484   001A7A  5020               	movf	___flmul@aexp^0,w,c
  5485   001A7C  B4D8               	btfsc	status,2,c
  5486   001A7E  EF43  F00D         	goto	u2781
  5487   001A82  EF45  F00D         	goto	u2780
  5488   001A86                     u2781:
  5489   001A86  EF69  F00D         	goto	l2931
  5490   001A8A                     u2780:
  5491   001A8A  0E01               	movlw	1
  5492   001A8C  2622               	addwf	___flmul@prod^0,f,c
  5493   001A8E  0E00               	movlw	0
  5494   001A90  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5495   001A92  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5496   001A94  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5497   001A96  A025               	btfss	(___flmul@prod+3)^0,0,c
  5498   001A98  EF50  F00D         	goto	u2791
  5499   001A9C  EF52  F00D         	goto	u2790
  5500   001AA0                     u2791:
  5501   001AA0  EF69  F00D         	goto	l2931
  5502   001AA4                     u2790:
  5503   001AA4  C022  F017         	movff	___flmul@prod,??___flmul
  5504   001AA8  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5505   001AAC  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5506   001AB0  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5507   001AB4  341A               	rlcf	(??___flmul+3)^0,w,c
  5508   001AB6  321A               	rrcf	(??___flmul+3)^0,f,c
  5509   001AB8  3219               	rrcf	(??___flmul+2)^0,f,c
  5510   001ABA  3218               	rrcf	(??___flmul+1)^0,f,c
  5511   001ABC  3217               	rrcf	??___flmul^0,f,c
  5512   001ABE  C017  F022         	movff	??___flmul,___flmul@prod
  5513   001AC2  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5514   001AC6  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5515   001ACA  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5516   001ACE  4A26               	infsnz	___flmul@temp^0,f,c
  5517   001AD0  2A27               	incf	(___flmul@temp+1)^0,f,c
  5518   001AD2                     l2931:
  5519   001AD2  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5520   001AD4  EF74  F00D         	goto	u2801
  5521   001AD8  5027               	movf	(___flmul@temp+1)^0,w,c
  5522   001ADA  E108               	bnz	u2800
  5523   001ADC  2826               	incf	___flmul@temp^0,w,c
  5524   001ADE  A0D8               	btfss	status,0,c
  5525   001AE0  EF74  F00D         	goto	u2801
  5526   001AE4  EF76  F00D         	goto	u2800
  5527   001AE8                     u2801:
  5528   001AE8  EF80  F00D         	goto	l2935
  5529   001AEC                     u2800:
  5530   001AEC  0E00               	movlw	0
  5531   001AEE  6E22               	movwf	___flmul@prod^0,c
  5532   001AF0  0E00               	movlw	0
  5533   001AF2  6E23               	movwf	(___flmul@prod+1)^0,c
  5534   001AF4  0E80               	movlw	128
  5535   001AF6  6E24               	movwf	(___flmul@prod+2)^0,c
  5536   001AF8  0E7F               	movlw	127
  5537   001AFA  6E25               	movwf	(___flmul@prod+3)^0,c
  5538   001AFC  EFAE  F00D         	goto	l2947
  5539   001B00                     l2935:
  5540   001B00  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5541   001B02  EF8D  F00D         	goto	u2810
  5542   001B06  5027               	movf	(___flmul@temp+1)^0,w,c
  5543   001B08  E106               	bnz	u2811
  5544   001B0A  0426               	decf	___flmul@temp^0,w,c
  5545   001B0C  B0D8               	btfsc	status,0,c
  5546   001B0E  EF8B  F00D         	goto	u2811
  5547   001B12  EF8D  F00D         	goto	u2810
  5548   001B16                     u2811:
  5549   001B16  EF99  F00D         	goto	l782
  5550   001B1A                     u2810:
  5551   001B1A  0E00               	movlw	0
  5552   001B1C  6E22               	movwf	___flmul@prod^0,c
  5553   001B1E  0E00               	movlw	0
  5554   001B20  6E23               	movwf	(___flmul@prod+1)^0,c
  5555   001B22  0E00               	movlw	0
  5556   001B24  6E24               	movwf	(___flmul@prod+2)^0,c
  5557   001B26  0E00               	movlw	0
  5558   001B28  6E25               	movwf	(___flmul@prod+3)^0,c
  5559   001B2A  0E00               	movlw	0
  5560   001B2C  6E1B               	movwf	___flmul@sign^0,c
  5561   001B2E  EFAE  F00D         	goto	l2947
  5562   001B32                     l782:
  5563   001B32  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5564   001B36  0EFF               	movlw	255
  5565   001B38  1622               	andwf	___flmul@prod^0,f,c
  5566   001B3A  0EFF               	movlw	255
  5567   001B3C  1623               	andwf	(___flmul@prod+1)^0,f,c
  5568   001B3E  0E7F               	movlw	127
  5569   001B40  1624               	andwf	(___flmul@prod+2)^0,f,c
  5570   001B42  0E00               	movlw	0
  5571   001B44  1625               	andwf	(___flmul@prod+3)^0,f,c
  5572   001B46  A021               	btfss	___flmul@bexp^0,0,c
  5573   001B48  EFA8  F00D         	goto	u2821
  5574   001B4C  EFAA  F00D         	goto	u2820
  5575   001B50                     u2821:
  5576   001B50  EFAB  F00D         	goto	l2945
  5577   001B54                     u2820:
  5578   001B54  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5579   001B56                     l2945:
  5580   001B56  90D8               	bcf	status,0,c
  5581   001B58  3021               	rrcf	___flmul@bexp^0,w,c
  5582   001B5A  6E25               	movwf	(___flmul@prod+3)^0,c
  5583   001B5C                     l2947:
  5584   001B5C  501B               	movf	___flmul@sign^0,w,c
  5585   001B5E  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5586   001B60  C022  F00F         	movff	___flmul@prod,?___flmul
  5587   001B64  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5588   001B68  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5589   001B6C  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5590   001B70                     l769:
  5591   001B70  0012               	return		;funcret
  5592   001B72                     __end_of___flmul:
  5593                           	callstack 0
  5594                           
  5595 ;; *************** function ___flge *****************
  5596 ;; Defined at:
  5597 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  ff1             4   39[COMRAM] unsigned char 
  5600 ;;  ff2             4   43[COMRAM] unsigned char 
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;		None               void
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5612 ;;      Params:         8       0       0       0       0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5614 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5615 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5616 ;;Total ram usage:       12 bytes
  5617 ;; Hardware stack levels used: 1
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_efgtoa
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text21
  5626   0027C6                     __ptext21:
  5627                           	callstack 0
  5628   0027C6                     ___flge:
  5629                           	callstack 26
  5630   0027C6  0E00               	movlw	0
  5631   0027C8  1428               	andwf	___flge@ff1^0,w,c
  5632   0027CA  6E30               	movwf	??___flge^0,c
  5633   0027CC  0E00               	movlw	0
  5634   0027CE  1429               	andwf	(___flge@ff1+1)^0,w,c
  5635   0027D0  6E31               	movwf	(??___flge+1)^0,c
  5636   0027D2  0E80               	movlw	128
  5637   0027D4  142A               	andwf	(___flge@ff1+2)^0,w,c
  5638   0027D6  6E32               	movwf	(??___flge+2)^0,c
  5639   0027D8  0E7F               	movlw	127
  5640   0027DA  142B               	andwf	(___flge@ff1+3)^0,w,c
  5641   0027DC  6E33               	movwf	(??___flge+3)^0,c
  5642   0027DE  5030               	movf	??___flge^0,w,c
  5643   0027E0  1031               	iorwf	(??___flge+1)^0,w,c
  5644   0027E2  1032               	iorwf	(??___flge+2)^0,w,c
  5645   0027E4  1033               	iorwf	(??___flge+3)^0,w,c
  5646   0027E6  A4D8               	btfss	status,2,c
  5647   0027E8  EFF8  F013         	goto	u2861
  5648   0027EC  EFFA  F013         	goto	u2860
  5649   0027F0                     u2861:
  5650   0027F0  EF02  F014         	goto	l2979
  5651   0027F4                     u2860:
  5652   0027F4  0E00               	movlw	0
  5653   0027F6  6E28               	movwf	___flge@ff1^0,c
  5654   0027F8  0E00               	movlw	0
  5655   0027FA  6E29               	movwf	(___flge@ff1+1)^0,c
  5656   0027FC  0E00               	movlw	0
  5657   0027FE  6E2A               	movwf	(___flge@ff1+2)^0,c
  5658   002800  0E00               	movlw	0
  5659   002802  6E2B               	movwf	(___flge@ff1+3)^0,c
  5660   002804                     l2979:
  5661   002804  0E00               	movlw	0
  5662   002806  142C               	andwf	___flge@ff2^0,w,c
  5663   002808  6E30               	movwf	??___flge^0,c
  5664   00280A  0E00               	movlw	0
  5665   00280C  142D               	andwf	(___flge@ff2+1)^0,w,c
  5666   00280E  6E31               	movwf	(??___flge+1)^0,c
  5667   002810  0E80               	movlw	128
  5668   002812  142E               	andwf	(___flge@ff2+2)^0,w,c
  5669   002814  6E32               	movwf	(??___flge+2)^0,c
  5670   002816  0E7F               	movlw	127
  5671   002818  142F               	andwf	(___flge@ff2+3)^0,w,c
  5672   00281A  6E33               	movwf	(??___flge+3)^0,c
  5673   00281C  5030               	movf	??___flge^0,w,c
  5674   00281E  1031               	iorwf	(??___flge+1)^0,w,c
  5675   002820  1032               	iorwf	(??___flge+2)^0,w,c
  5676   002822  1033               	iorwf	(??___flge+3)^0,w,c
  5677   002824  A4D8               	btfss	status,2,c
  5678   002826  EF17  F014         	goto	u2871
  5679   00282A  EF19  F014         	goto	u2870
  5680   00282E                     u2871:
  5681   00282E  EF21  F014         	goto	l2983
  5682   002832                     u2870:
  5683   002832  0E00               	movlw	0
  5684   002834  6E2C               	movwf	___flge@ff2^0,c
  5685   002836  0E00               	movlw	0
  5686   002838  6E2D               	movwf	(___flge@ff2+1)^0,c
  5687   00283A  0E00               	movlw	0
  5688   00283C  6E2E               	movwf	(___flge@ff2+2)^0,c
  5689   00283E  0E00               	movlw	0
  5690   002840  6E2F               	movwf	(___flge@ff2+3)^0,c
  5691   002842                     l2983:
  5692   002842  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5693   002844  EF26  F014         	goto	u2881
  5694   002848  EF28  F014         	goto	u2880
  5695   00284C                     u2881:
  5696   00284C  EF31  F014         	goto	l2987
  5697   002850                     u2880:
  5698   002850  6C28               	negf	___flge@ff1^0,c
  5699   002852  1E29               	comf	(___flge@ff1+1)^0,f,c
  5700   002854  B0D8               	btfsc	status,0,c
  5701   002856  2A29               	incf	(___flge@ff1+1)^0,f,c
  5702   002858  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5703   00285A  B0D8               	btfsc	status,0,c
  5704   00285C  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5705   00285E  0E80               	movlw	128
  5706   002860  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5707   002862                     l2987:
  5708   002862  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5709   002864  EF36  F014         	goto	u2891
  5710   002868  EF38  F014         	goto	u2890
  5711   00286C                     u2891:
  5712   00286C  EF41  F014         	goto	l416
  5713   002870                     u2890:
  5714   002870  6C2C               	negf	___flge@ff2^0,c
  5715   002872  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5716   002874  B0D8               	btfsc	status,0,c
  5717   002876  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5718   002878  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5719   00287A  B0D8               	btfsc	status,0,c
  5720   00287C  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5721   00287E  0E80               	movlw	128
  5722   002880  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5723   002882                     l416:
  5724   002882  0E00               	movlw	0
  5725   002884  1A28               	xorwf	___flge@ff1^0,f,c
  5726   002886  0E00               	movlw	0
  5727   002888  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5728   00288A  0E00               	movlw	0
  5729   00288C  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5730   00288E  0E80               	movlw	128
  5731   002890  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5732   002892  0E00               	movlw	0
  5733   002894  1A2C               	xorwf	___flge@ff2^0,f,c
  5734   002896  0E00               	movlw	0
  5735   002898  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5736   00289A  0E00               	movlw	0
  5737   00289C  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5738   00289E  0E80               	movlw	128
  5739   0028A0  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5740   0028A2  502C               	movf	___flge@ff2^0,w,c
  5741   0028A4  5C28               	subwf	___flge@ff1^0,w,c
  5742   0028A6  502D               	movf	(___flge@ff2+1)^0,w,c
  5743   0028A8  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5744   0028AA  502E               	movf	(___flge@ff2+2)^0,w,c
  5745   0028AC  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5746   0028AE  502F               	movf	(___flge@ff2+3)^0,w,c
  5747   0028B0  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5748   0028B2  B0D8               	btfsc	status,0,c
  5749   0028B4  EF5E  F014         	goto	u2901
  5750   0028B8  EF60  F014         	goto	u2900
  5751   0028BC                     u2901:
  5752   0028BC  EF63  F014         	goto	l2993
  5753   0028C0                     u2900:
  5754   0028C0  90D8               	bcf	status,0,c
  5755   0028C2  EF64  F014         	goto	l421
  5756   0028C6                     l2993:
  5757   0028C6  80D8               	bsf	status,0,c
  5758   0028C8                     l421:
  5759   0028C8  0012               	return		;funcret
  5760   0028CA                     __end_of___flge:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function ___fleq *****************
  5764 ;; Defined at:
  5765 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  ff1             4    0[COMRAM] unsigned char 
  5768 ;;  ff2             4    4[COMRAM] unsigned char 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;		None               void
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5780 ;;      Params:         8       0       0       0       0       0       0       0       0
  5781 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5782 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5783 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5784 ;;Total ram usage:       12 bytes
  5785 ;; Hardware stack levels used: 1
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_efgtoa
  5790 ;; This function uses a non-reentrant model
  5791 ;;
  5792                           
  5793                           	psect	text22
  5794   002C2A                     __ptext22:
  5795                           	callstack 0
  5796   002C2A                     ___fleq:
  5797                           	callstack 26
  5798   002C2A  0E00               	movlw	0
  5799   002C2C  1401               	andwf	___fleq@ff1^0,w,c
  5800   002C2E  6E09               	movwf	??___fleq^0,c
  5801   002C30  0E00               	movlw	0
  5802   002C32  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5803   002C34  6E0A               	movwf	(??___fleq+1)^0,c
  5804   002C36  0E80               	movlw	128
  5805   002C38  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5806   002C3A  6E0B               	movwf	(??___fleq+2)^0,c
  5807   002C3C  0E7F               	movlw	127
  5808   002C3E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5809   002C40  6E0C               	movwf	(??___fleq+3)^0,c
  5810   002C42  5009               	movf	??___fleq^0,w,c
  5811   002C44  100A               	iorwf	(??___fleq+1)^0,w,c
  5812   002C46  100B               	iorwf	(??___fleq+2)^0,w,c
  5813   002C48  100C               	iorwf	(??___fleq+3)^0,w,c
  5814   002C4A  A4D8               	btfss	status,2,c
  5815   002C4C  EF2A  F016         	goto	u2831
  5816   002C50  EF2C  F016         	goto	u2830
  5817   002C54                     u2831:
  5818   002C54  EF34  F016         	goto	l2963
  5819   002C58                     u2830:
  5820   002C58  0E00               	movlw	0
  5821   002C5A  6E01               	movwf	___fleq@ff1^0,c
  5822   002C5C  0E00               	movlw	0
  5823   002C5E  6E02               	movwf	(___fleq@ff1+1)^0,c
  5824   002C60  0E00               	movlw	0
  5825   002C62  6E03               	movwf	(___fleq@ff1+2)^0,c
  5826   002C64  0E00               	movlw	0
  5827   002C66  6E04               	movwf	(___fleq@ff1+3)^0,c
  5828   002C68                     l2963:
  5829   002C68  0E00               	movlw	0
  5830   002C6A  1405               	andwf	___fleq@ff2^0,w,c
  5831   002C6C  6E09               	movwf	??___fleq^0,c
  5832   002C6E  0E00               	movlw	0
  5833   002C70  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5834   002C72  6E0A               	movwf	(??___fleq+1)^0,c
  5835   002C74  0E80               	movlw	128
  5836   002C76  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5837   002C78  6E0B               	movwf	(??___fleq+2)^0,c
  5838   002C7A  0E7F               	movlw	127
  5839   002C7C  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5840   002C7E  6E0C               	movwf	(??___fleq+3)^0,c
  5841   002C80  5009               	movf	??___fleq^0,w,c
  5842   002C82  100A               	iorwf	(??___fleq+1)^0,w,c
  5843   002C84  100B               	iorwf	(??___fleq+2)^0,w,c
  5844   002C86  100C               	iorwf	(??___fleq+3)^0,w,c
  5845   002C88  A4D8               	btfss	status,2,c
  5846   002C8A  EF49  F016         	goto	u2841
  5847   002C8E  EF4B  F016         	goto	u2840
  5848   002C92                     u2841:
  5849   002C92  EF53  F016         	goto	l2967
  5850   002C96                     u2840:
  5851   002C96  0E00               	movlw	0
  5852   002C98  6E05               	movwf	___fleq@ff2^0,c
  5853   002C9A  0E00               	movlw	0
  5854   002C9C  6E06               	movwf	(___fleq@ff2+1)^0,c
  5855   002C9E  0E00               	movlw	0
  5856   002CA0  6E07               	movwf	(___fleq@ff2+2)^0,c
  5857   002CA2  0E00               	movlw	0
  5858   002CA4  6E08               	movwf	(___fleq@ff2+3)^0,c
  5859   002CA6                     l2967:
  5860   002CA6  5005               	movf	___fleq@ff2^0,w,c
  5861   002CA8  1801               	xorwf	___fleq@ff1^0,w,c
  5862   002CAA  E10F               	bnz	u2850
  5863   002CAC  5006               	movf	(___fleq@ff2+1)^0,w,c
  5864   002CAE  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5865   002CB0  E10C               	bnz	u2850
  5866   002CB2  5007               	movf	(___fleq@ff2+2)^0,w,c
  5867   002CB4  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5868   002CB6  E109               	bnz	u2850
  5869   002CB8  5008               	movf	(___fleq@ff2+3)^0,w,c
  5870   002CBA  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5871   002CBC  B4D8               	btfsc	status,2,c
  5872   002CBE  EF63  F016         	goto	u2851
  5873   002CC2  EF65  F016         	goto	u2850
  5874   002CC6                     u2851:
  5875   002CC6  EF68  F016         	goto	l2971
  5876   002CCA                     u2850:
  5877   002CCA  90D8               	bcf	status,0,c
  5878   002CCC  EF69  F016         	goto	l410
  5879   002CD0                     l2971:
  5880   002CD0  80D8               	bsf	status,0,c
  5881   002CD2                     l410:
  5882   002CD2  0012               	return		;funcret
  5883   002CD4                     __end_of___fleq:
  5884                           	callstack 0
  5885                           
  5886 ;; *************** function ___fldiv *****************
  5887 ;; Defined at:
  5888 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  b               4   39[COMRAM] unsigned char 
  5891 ;;  a               4   43[COMRAM] unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  grs             4   58[COMRAM] unsigned long 
  5894 ;;  rem             4   51[COMRAM] unsigned long 
  5895 ;;  new_exp         2   56[COMRAM] short 
  5896 ;;  aexp            1   63[COMRAM] unsigned char 
  5897 ;;  bexp            1   62[COMRAM] unsigned char 
  5898 ;;  sign            1   55[COMRAM] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  4   39[COMRAM] unsigned char 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5908 ;;      Params:         8       0       0       0       0       0       0       0       0
  5909 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5910 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5911 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5912 ;;Total ram usage:       25 bytes
  5913 ;; Hardware stack levels used: 1
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_main
  5918 ;;		_efgtoa
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text23
  5923   001B72                     __ptext23:
  5924                           	callstack 0
  5925   001B72                     ___fldiv:
  5926                           	callstack 26
  5927   001B72  502B               	movf	(___fldiv@b+3)^0,w,c
  5928   001B74  0B80               	andlw	128
  5929   001B76  6E38               	movwf	___fldiv@sign^0,c
  5930   001B78  502B               	movf	(___fldiv@b+3)^0,w,c
  5931   001B7A  242B               	addwf	(___fldiv@b+3)^0,w,c
  5932   001B7C  6E3F               	movwf	___fldiv@bexp^0,c
  5933   001B7E  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  5934   001B80  EFC4  F00D         	goto	u2411
  5935   001B84  EFC6  F00D         	goto	u2410
  5936   001B88                     u2411:
  5937   001B88  EFC7  F00D         	goto	l2691
  5938   001B8C                     u2410:
  5939   001B8C  803F               	bsf	___fldiv@bexp^0,0,c
  5940   001B8E                     l2691:
  5941   001B8E  503F               	movf	___fldiv@bexp^0,w,c
  5942   001B90  B4D8               	btfsc	status,2,c
  5943   001B92  EFCD  F00D         	goto	u2421
  5944   001B96  EFCF  F00D         	goto	u2420
  5945   001B9A                     u2421:
  5946   001B9A  EFE4  F00D         	goto	l2701
  5947   001B9E                     u2420:
  5948   001B9E  283F               	incf	___fldiv@bexp^0,w,c
  5949   001BA0  A4D8               	btfss	status,2,c
  5950   001BA2  EFD5  F00D         	goto	u2431
  5951   001BA6  EFD7  F00D         	goto	u2430
  5952   001BAA                     u2431:
  5953   001BAA  EFDF  F00D         	goto	l2697
  5954   001BAE                     u2430:
  5955   001BAE  0E00               	movlw	0
  5956   001BB0  6E28               	movwf	___fldiv@b^0,c
  5957   001BB2  0E00               	movlw	0
  5958   001BB4  6E29               	movwf	(___fldiv@b+1)^0,c
  5959   001BB6  0E00               	movlw	0
  5960   001BB8  6E2A               	movwf	(___fldiv@b+2)^0,c
  5961   001BBA  0E00               	movlw	0
  5962   001BBC  6E2B               	movwf	(___fldiv@b+3)^0,c
  5963   001BBE                     l2697:
  5964   001BBE  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  5965   001BC0  0E00               	movlw	0
  5966   001BC2  6E2B               	movwf	(___fldiv@b+3)^0,c
  5967   001BC4  EFEC  F00D         	goto	l2703
  5968   001BC8                     l2701:
  5969   001BC8  0E00               	movlw	0
  5970   001BCA  6E28               	movwf	___fldiv@b^0,c
  5971   001BCC  0E00               	movlw	0
  5972   001BCE  6E29               	movwf	(___fldiv@b+1)^0,c
  5973   001BD0  0E00               	movlw	0
  5974   001BD2  6E2A               	movwf	(___fldiv@b+2)^0,c
  5975   001BD4  0E00               	movlw	0
  5976   001BD6  6E2B               	movwf	(___fldiv@b+3)^0,c
  5977   001BD8                     l2703:
  5978   001BD8  502F               	movf	(___fldiv@a+3)^0,w,c
  5979   001BDA  0B80               	andlw	128
  5980   001BDC  1A38               	xorwf	___fldiv@sign^0,f,c
  5981   001BDE  502F               	movf	(___fldiv@a+3)^0,w,c
  5982   001BE0  242F               	addwf	(___fldiv@a+3)^0,w,c
  5983   001BE2  6E40               	movwf	___fldiv@aexp^0,c
  5984   001BE4  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  5985   001BE6  EFF7  F00D         	goto	u2441
  5986   001BEA  EFF9  F00D         	goto	u2440
  5987   001BEE                     u2441:
  5988   001BEE  EFFA  F00D         	goto	l2711
  5989   001BF2                     u2440:
  5990   001BF2  8040               	bsf	___fldiv@aexp^0,0,c
  5991   001BF4                     l2711:
  5992   001BF4  5040               	movf	___fldiv@aexp^0,w,c
  5993   001BF6  B4D8               	btfsc	status,2,c
  5994   001BF8  EF00  F00E         	goto	u2451
  5995   001BFC  EF02  F00E         	goto	u2450
  5996   001C00                     u2451:
  5997   001C00  EF17  F00E         	goto	l2721
  5998   001C04                     u2450:
  5999   001C04  2840               	incf	___fldiv@aexp^0,w,c
  6000   001C06  A4D8               	btfss	status,2,c
  6001   001C08  EF08  F00E         	goto	u2461
  6002   001C0C  EF0A  F00E         	goto	u2460
  6003   001C10                     u2461:
  6004   001C10  EF12  F00E         	goto	l2717
  6005   001C14                     u2460:
  6006   001C14  0E00               	movlw	0
  6007   001C16  6E2C               	movwf	___fldiv@a^0,c
  6008   001C18  0E00               	movlw	0
  6009   001C1A  6E2D               	movwf	(___fldiv@a+1)^0,c
  6010   001C1C  0E00               	movlw	0
  6011   001C1E  6E2E               	movwf	(___fldiv@a+2)^0,c
  6012   001C20  0E00               	movlw	0
  6013   001C22  6E2F               	movwf	(___fldiv@a+3)^0,c
  6014   001C24                     l2717:
  6015   001C24  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6016   001C26  0E00               	movlw	0
  6017   001C28  6E2F               	movwf	(___fldiv@a+3)^0,c
  6018   001C2A  EF1F  F00E         	goto	l2723
  6019   001C2E                     l2721:
  6020   001C2E  0E00               	movlw	0
  6021   001C30  6E2C               	movwf	___fldiv@a^0,c
  6022   001C32  0E00               	movlw	0
  6023   001C34  6E2D               	movwf	(___fldiv@a+1)^0,c
  6024   001C36  0E00               	movlw	0
  6025   001C38  6E2E               	movwf	(___fldiv@a+2)^0,c
  6026   001C3A  0E00               	movlw	0
  6027   001C3C  6E2F               	movwf	(___fldiv@a+3)^0,c
  6028   001C3E                     l2723:
  6029   001C3E  502C               	movf	___fldiv@a^0,w,c
  6030   001C40  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6031   001C42  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6032   001C44  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6033   001C46  A4D8               	btfss	status,2,c
  6034   001C48  EF28  F00E         	goto	u2471
  6035   001C4C  EF2A  F00E         	goto	u2470
  6036   001C50                     u2471:
  6037   001C50  EF42  F00E         	goto	l2735
  6038   001C54                     u2470:
  6039   001C54  0E00               	movlw	0
  6040   001C56  6E28               	movwf	___fldiv@b^0,c
  6041   001C58  0E00               	movlw	0
  6042   001C5A  6E29               	movwf	(___fldiv@b+1)^0,c
  6043   001C5C  0E00               	movlw	0
  6044   001C5E  6E2A               	movwf	(___fldiv@b+2)^0,c
  6045   001C60  0E00               	movlw	0
  6046   001C62  6E2B               	movwf	(___fldiv@b+3)^0,c
  6047   001C64  0E80               	movlw	128
  6048   001C66  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6049   001C68  0E7F               	movlw	127
  6050   001C6A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6051   001C6C                     l2729:
  6052   001C6C  5038               	movf	___fldiv@sign^0,w,c
  6053   001C6E  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6054   001C70  C028  F028         	movff	___fldiv@b,?___fldiv
  6055   001C74  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6056   001C78  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6057   001C7C  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6058   001C80  EF85  F00F         	goto	l733
  6059   001C84                     l2735:
  6060   001C84  503F               	movf	___fldiv@bexp^0,w,c
  6061   001C86  A4D8               	btfss	status,2,c
  6062   001C88  EF48  F00E         	goto	u2481
  6063   001C8C  EF4A  F00E         	goto	u2480
  6064   001C90                     u2481:
  6065   001C90  EF54  F00E         	goto	l2743
  6066   001C94                     u2480:
  6067   001C94  0E00               	movlw	0
  6068   001C96  6E28               	movwf	?___fldiv^0,c
  6069   001C98  0E00               	movlw	0
  6070   001C9A  6E29               	movwf	(?___fldiv+1)^0,c
  6071   001C9C  0E00               	movlw	0
  6072   001C9E  6E2A               	movwf	(?___fldiv+2)^0,c
  6073   001CA0  0E00               	movlw	0
  6074   001CA2  6E2B               	movwf	(?___fldiv+3)^0,c
  6075   001CA4  EF85  F00F         	goto	l733
  6076   001CA8                     l2743:
  6077   001CA8  5040               	movf	___fldiv@aexp^0,w,c
  6078   001CAA  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6079   001CAE  6A31               	clrf	(??___fldiv+1)^0,c
  6080   001CB0  5E30               	subwf	??___fldiv^0,f,c
  6081   001CB2  0E00               	movlw	0
  6082   001CB4  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6083   001CB6  0E7F               	movlw	127
  6084   001CB8  2430               	addwf	??___fldiv^0,w,c
  6085   001CBA  6E39               	movwf	___fldiv@new_exp^0,c
  6086   001CBC  0E00               	movlw	0
  6087   001CBE  2031               	addwfc	(??___fldiv+1)^0,w,c
  6088   001CC0  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6089   001CC2  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6090   001CC6  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6091   001CCA  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6092   001CCE  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6093   001CD2  0E00               	movlw	0
  6094   001CD4  6E28               	movwf	___fldiv@b^0,c
  6095   001CD6  0E00               	movlw	0
  6096   001CD8  6E29               	movwf	(___fldiv@b+1)^0,c
  6097   001CDA  0E00               	movlw	0
  6098   001CDC  6E2A               	movwf	(___fldiv@b+2)^0,c
  6099   001CDE  0E00               	movlw	0
  6100   001CE0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6101   001CE2  0E00               	movlw	0
  6102   001CE4  6E3B               	movwf	___fldiv@grs^0,c
  6103   001CE6  0E00               	movlw	0
  6104   001CE8  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6105   001CEA  0E00               	movlw	0
  6106   001CEC  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6107   001CEE  0E00               	movlw	0
  6108   001CF0  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6109   001CF2  0E00               	movlw	0
  6110   001CF4  6E40               	movwf	___fldiv@aexp^0,c
  6111   001CF6  EFB5  F00E         	goto	l735
  6112   001CFA                     l2753:
  6113   001CFA  5040               	movf	___fldiv@aexp^0,w,c
  6114   001CFC  B4D8               	btfsc	status,2,c
  6115   001CFE  EF83  F00E         	goto	u2491
  6116   001D02  EF85  F00E         	goto	u2490
  6117   001D06                     u2491:
  6118   001D06  EF9C  F00E         	goto	l2761
  6119   001D0A                     u2490:
  6120   001D0A  90D8               	bcf	status,0,c
  6121   001D0C  3634               	rlcf	___fldiv@rem^0,f,c
  6122   001D0E  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6123   001D10  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6124   001D12  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6125   001D14  90D8               	bcf	status,0,c
  6126   001D16  3628               	rlcf	___fldiv@b^0,f,c
  6127   001D18  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6128   001D1A  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6129   001D1C  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6130   001D1E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6131   001D20  EF94  F00E         	goto	u2501
  6132   001D24  EF96  F00E         	goto	u2500
  6133   001D28                     u2501:
  6134   001D28  EF97  F00E         	goto	l738
  6135   001D2C                     u2500:
  6136   001D2C  8028               	bsf	___fldiv@b^0,0,c
  6137   001D2E                     l738:
  6138   001D2E  90D8               	bcf	status,0,c
  6139   001D30  363B               	rlcf	___fldiv@grs^0,f,c
  6140   001D32  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6141   001D34  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6142   001D36  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6143   001D38                     l2761:
  6144   001D38  502C               	movf	___fldiv@a^0,w,c
  6145   001D3A  5C34               	subwf	___fldiv@rem^0,w,c
  6146   001D3C  502D               	movf	(___fldiv@a+1)^0,w,c
  6147   001D3E  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6148   001D40  502E               	movf	(___fldiv@a+2)^0,w,c
  6149   001D42  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6150   001D44  502F               	movf	(___fldiv@a+3)^0,w,c
  6151   001D46  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6152   001D48  A0D8               	btfss	status,0,c
  6153   001D4A  EFA9  F00E         	goto	u2511
  6154   001D4E  EFAB  F00E         	goto	u2510
  6155   001D52                     u2511:
  6156   001D52  EFB4  F00E         	goto	l2767
  6157   001D56                     u2510:
  6158   001D56  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6159   001D58  502C               	movf	___fldiv@a^0,w,c
  6160   001D5A  5E34               	subwf	___fldiv@rem^0,f,c
  6161   001D5C  502D               	movf	(___fldiv@a+1)^0,w,c
  6162   001D5E  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6163   001D60  502E               	movf	(___fldiv@a+2)^0,w,c
  6164   001D62  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6165   001D64  502F               	movf	(___fldiv@a+3)^0,w,c
  6166   001D66  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6167   001D68                     l2767:
  6168   001D68  2A40               	incf	___fldiv@aexp^0,f,c
  6169   001D6A                     l735:
  6170   001D6A  0E19               	movlw	25
  6171   001D6C  6440               	cpfsgt	___fldiv@aexp^0,c
  6172   001D6E  EFBB  F00E         	goto	u2521
  6173   001D72  EFBD  F00E         	goto	u2520
  6174   001D76                     u2521:
  6175   001D76  EF7D  F00E         	goto	l2753
  6176   001D7A                     u2520:
  6177   001D7A  5034               	movf	___fldiv@rem^0,w,c
  6178   001D7C  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6179   001D7E  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6180   001D80  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6181   001D82  B4D8               	btfsc	status,2,c
  6182   001D84  EFC6  F00E         	goto	u2531
  6183   001D88  EFC8  F00E         	goto	u2530
  6184   001D8C                     u2531:
  6185   001D8C  EFE0  F00E         	goto	l2779
  6186   001D90                     u2530:
  6187   001D90  803B               	bsf	___fldiv@grs^0,0,c
  6188   001D92  EFE0  F00E         	goto	l2779
  6189   001D96                     l2773:
  6190   001D96  90D8               	bcf	status,0,c
  6191   001D98  3628               	rlcf	___fldiv@b^0,f,c
  6192   001D9A  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6193   001D9C  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6194   001D9E  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6195   001DA0  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6196   001DA2  EFD5  F00E         	goto	u2541
  6197   001DA6  EFD7  F00E         	goto	u2540
  6198   001DAA                     u2541:
  6199   001DAA  EFD8  F00E         	goto	l744
  6200   001DAE                     u2540:
  6201   001DAE  8028               	bsf	___fldiv@b^0,0,c
  6202   001DB0                     l744:
  6203   001DB0  90D8               	bcf	status,0,c
  6204   001DB2  363B               	rlcf	___fldiv@grs^0,f,c
  6205   001DB4  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6206   001DB6  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6207   001DB8  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6208   001DBA  0639               	decf	___fldiv@new_exp^0,f,c
  6209   001DBC  A0D8               	btfss	status,0,c
  6210   001DBE  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6211   001DC0                     l2779:
  6212   001DC0  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6213   001DC2  EFE5  F00E         	goto	u2551
  6214   001DC6  EFE7  F00E         	goto	u2550
  6215   001DCA                     u2551:
  6216   001DCA  EFCB  F00E         	goto	l2773
  6217   001DCE                     u2550:
  6218   001DCE  0E00               	movlw	0
  6219   001DD0  6E40               	movwf	___fldiv@aexp^0,c
  6220   001DD2  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6221   001DD4  EFEE  F00E         	goto	u2561
  6222   001DD8  EFF0  F00E         	goto	u2560
  6223   001DDC                     u2561:
  6224   001DDC  EF14  F00F         	goto	l746
  6225   001DE0                     u2560:
  6226   001DE0  0EFF               	movlw	255
  6227   001DE2  143B               	andwf	___fldiv@grs^0,w,c
  6228   001DE4  6E30               	movwf	??___fldiv^0,c
  6229   001DE6  0EFF               	movlw	255
  6230   001DE8  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6231   001DEA  6E31               	movwf	(??___fldiv+1)^0,c
  6232   001DEC  0EFF               	movlw	255
  6233   001DEE  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6234   001DF0  6E32               	movwf	(??___fldiv+2)^0,c
  6235   001DF2  0E7F               	movlw	127
  6236   001DF4  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6237   001DF6  6E33               	movwf	(??___fldiv+3)^0,c
  6238   001DF8  5030               	movf	??___fldiv^0,w,c
  6239   001DFA  1031               	iorwf	(??___fldiv+1)^0,w,c
  6240   001DFC  1032               	iorwf	(??___fldiv+2)^0,w,c
  6241   001DFE  1033               	iorwf	(??___fldiv+3)^0,w,c
  6242   001E00  B4D8               	btfsc	status,2,c
  6243   001E02  EF05  F00F         	goto	u2571
  6244   001E06  EF07  F00F         	goto	u2570
  6245   001E0A                     u2571:
  6246   001E0A  EF0B  F00F         	goto	l747
  6247   001E0E                     u2570:
  6248   001E0E                     l2787:
  6249   001E0E  0E01               	movlw	1
  6250   001E10  6E40               	movwf	___fldiv@aexp^0,c
  6251   001E12  EF14  F00F         	goto	l746
  6252   001E16                     l747:
  6253   001E16  A028               	btfss	___fldiv@b^0,0,c
  6254   001E18  EF10  F00F         	goto	u2581
  6255   001E1C  EF12  F00F         	goto	u2580
  6256   001E20                     u2581:
  6257   001E20  EF14  F00F         	goto	l746
  6258   001E24                     u2580:
  6259   001E24  EF07  F00F         	goto	l2787
  6260   001E28                     l746:
  6261   001E28  5040               	movf	___fldiv@aexp^0,w,c
  6262   001E2A  B4D8               	btfsc	status,2,c
  6263   001E2C  EF1A  F00F         	goto	u2591
  6264   001E30  EF1C  F00F         	goto	u2590
  6265   001E34                     u2591:
  6266   001E34  EF40  F00F         	goto	l2799
  6267   001E38                     u2590:
  6268   001E38  0E01               	movlw	1
  6269   001E3A  2628               	addwf	___fldiv@b^0,f,c
  6270   001E3C  0E00               	movlw	0
  6271   001E3E  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6272   001E40  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6273   001E42  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6274   001E44  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6275   001E46  EF27  F00F         	goto	u2601
  6276   001E4A  EF29  F00F         	goto	u2600
  6277   001E4E                     u2601:
  6278   001E4E  EF40  F00F         	goto	l2799
  6279   001E52                     u2600:
  6280   001E52  C028  F030         	movff	___fldiv@b,??___fldiv
  6281   001E56  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6282   001E5A  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6283   001E5E  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6284   001E62  3433               	rlcf	(??___fldiv+3)^0,w,c
  6285   001E64  3233               	rrcf	(??___fldiv+3)^0,f,c
  6286   001E66  3232               	rrcf	(??___fldiv+2)^0,f,c
  6287   001E68  3231               	rrcf	(??___fldiv+1)^0,f,c
  6288   001E6A  3230               	rrcf	??___fldiv^0,f,c
  6289   001E6C  C030  F028         	movff	??___fldiv,___fldiv@b
  6290   001E70  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6291   001E74  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6292   001E78  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6293   001E7C  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6294   001E7E  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6295   001E80                     l2799:
  6296   001E80  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6297   001E82  EF4B  F00F         	goto	u2611
  6298   001E86  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6299   001E88  E108               	bnz	u2610
  6300   001E8A  2839               	incf	___fldiv@new_exp^0,w,c
  6301   001E8C  A0D8               	btfss	status,0,c
  6302   001E8E  EF4B  F00F         	goto	u2611
  6303   001E92  EF4D  F00F         	goto	u2610
  6304   001E96                     u2611:
  6305   001E96  EF58  F00F         	goto	l2803
  6306   001E9A                     u2610:
  6307   001E9A  0E00               	movlw	0
  6308   001E9C  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6309   001E9E  6839               	setf	___fldiv@new_exp^0,c
  6310   001EA0  0E00               	movlw	0
  6311   001EA2  6E28               	movwf	___fldiv@b^0,c
  6312   001EA4  0E00               	movlw	0
  6313   001EA6  6E29               	movwf	(___fldiv@b+1)^0,c
  6314   001EA8  0E00               	movlw	0
  6315   001EAA  6E2A               	movwf	(___fldiv@b+2)^0,c
  6316   001EAC  0E00               	movlw	0
  6317   001EAE  6E2B               	movwf	(___fldiv@b+3)^0,c
  6318   001EB0                     l2803:
  6319   001EB0  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6320   001EB2  EF65  F00F         	goto	u2620
  6321   001EB6  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6322   001EB8  E106               	bnz	u2621
  6323   001EBA  0439               	decf	___fldiv@new_exp^0,w,c
  6324   001EBC  B0D8               	btfsc	status,0,c
  6325   001EBE  EF63  F00F         	goto	u2621
  6326   001EC2  EF65  F00F         	goto	u2620
  6327   001EC6                     u2621:
  6328   001EC6  EF73  F00F         	goto	l2807
  6329   001ECA                     u2620:
  6330   001ECA  0E00               	movlw	0
  6331   001ECC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6332   001ECE  0E00               	movlw	0
  6333   001ED0  6E39               	movwf	___fldiv@new_exp^0,c
  6334   001ED2  0E00               	movlw	0
  6335   001ED4  6E28               	movwf	___fldiv@b^0,c
  6336   001ED6  0E00               	movlw	0
  6337   001ED8  6E29               	movwf	(___fldiv@b+1)^0,c
  6338   001EDA  0E00               	movlw	0
  6339   001EDC  6E2A               	movwf	(___fldiv@b+2)^0,c
  6340   001EDE  0E00               	movlw	0
  6341   001EE0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6342   001EE2  0E00               	movlw	0
  6343   001EE4  6E38               	movwf	___fldiv@sign^0,c
  6344   001EE6                     l2807:
  6345   001EE6  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6346   001EEA  A03F               	btfss	___fldiv@bexp^0,0,c
  6347   001EEC  EF7A  F00F         	goto	u2631
  6348   001EF0  EF7C  F00F         	goto	u2630
  6349   001EF4                     u2631:
  6350   001EF4  EF7F  F00F         	goto	l2813
  6351   001EF8                     u2630:
  6352   001EF8  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6353   001EFA  EF80  F00F         	goto	l2815
  6354   001EFE                     l2813:
  6355   001EFE  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6356   001F00                     l2815:
  6357   001F00  90D8               	bcf	status,0,c
  6358   001F02  303F               	rrcf	___fldiv@bexp^0,w,c
  6359   001F04  6E2B               	movwf	(___fldiv@b+3)^0,c
  6360   001F06  EF36  F00E         	goto	l2729
  6361   001F0A                     l733:
  6362   001F0A  0012               	return		;funcret
  6363   001F0C                     __end_of___fldiv:
  6364                           	callstack 0
  6365                           
  6366 ;; *************** function _set_adc *****************
  6367 ;; Defined at:
  6368 ;;		line 100 in file "adc_lcd.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;		None
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;		None
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  1    wreg      void 
  6375 ;; Registers used:
  6376 ;;		wreg, status,2
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6382 ;;      Params:         0       0       0       0       0       0       0       0       0
  6383 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6384 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6385 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6386 ;;Total ram usage:        0 bytes
  6387 ;; Hardware stack levels used: 1
  6388 ;; This function calls:
  6389 ;;		Nothing
  6390 ;; This function is called by:
  6391 ;;		_main
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           	psect	text24
  6396   0031A0                     __ptext24:
  6397                           	callstack 0
  6398   0031A0                     _set_adc:
  6399                           	callstack 30
  6400   0031A0                     
  6401                           ;adc_lcd.c: 101:     ANSELAbits.ANSA0 = 1;
  6402   0031A0  010F               	movlb	15	; () banked
  6403   0031A2  815B               	bsf	91,0,b	;volatile
  6404                           
  6405                           ;adc_lcd.c: 102:     TRISAbits.RA0 = 1;
  6406   0031A4  8092               	bsf	146,0,c	;volatile
  6407   0031A6                     
  6408                           ; BSR set to: 15
  6409                           ;adc_lcd.c: 103:     ADCON0 = 0x00;
  6410   0031A6  0E00               	movlw	0
  6411   0031A8  6EC2               	movwf	194,c	;volatile
  6412                           
  6413                           ;adc_lcd.c: 104:     ADCON1 = 0x00;
  6414   0031AA  0E00               	movlw	0
  6415   0031AC  6EC1               	movwf	193,c	;volatile
  6416                           
  6417                           ;adc_lcd.c: 105:     ADCON2 = 0b10011101;
  6418   0031AE  0E9D               	movlw	157
  6419   0031B0  6EC0               	movwf	192,c	;volatile
  6420   0031B2                     
  6421                           ; BSR set to: 15
  6422                           ;adc_lcd.c: 106:     ADCON0bits.ADON = 1;
  6423   0031B2  80C2               	bsf	194,0,c	;volatile
  6424   0031B4                     
  6425                           ; BSR set to: 15
  6426   0031B4  0012               	return		;funcret
  6427   0031B6                     __end_of_set_adc:
  6428                           	callstack 0
  6429                           
  6430 ;; *************** function ___xxtofl *****************
  6431 ;; Defined at:
  6432 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  sign            1    wreg     unsigned char 
  6435 ;;  val             4    0[COMRAM] long 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;  sign            1    8[COMRAM] unsigned char 
  6438 ;;  arg             4   10[COMRAM] unsigned long 
  6439 ;;  exp             1    9[COMRAM] unsigned char 
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  4    0[COMRAM] unsigned char 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6449 ;;      Params:         4       0       0       0       0       0       0       0       0
  6450 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6451 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6452 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6453 ;;Total ram usage:       14 bytes
  6454 ;; Hardware stack levels used: 1
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_main
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text25
  6463   0023F8                     __ptext25:
  6464                           	callstack 0
  6465   0023F8                     ___xxtofl:
  6466                           	callstack 30
  6467                           
  6468                           ; BSR set to: 15
  6469                           ;incstack = 0
  6470                           ;___xxtofl@sign stored from wreg
  6471   0023F8  6E09               	movwf	___xxtofl@sign^0,c
  6472   0023FA  5009               	movf	___xxtofl@sign^0,w,c
  6473   0023FC  B4D8               	btfsc	status,2,c
  6474   0023FE  EF03  F012         	goto	u3741
  6475   002402  EF05  F012         	goto	u3740
  6476   002406                     u3741:
  6477   002406  EF27  F012         	goto	l806
  6478   00240A                     u3740:
  6479   00240A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6480   00240C  EF0C  F012         	goto	u3750
  6481   002410  EF0A  F012         	goto	u3751
  6482   002414                     u3751:
  6483   002414  EF27  F012         	goto	l806
  6484   002418                     u3750:
  6485   002418  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6486   00241C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6487   002420  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6488   002424  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6489   002428  1E05               	comf	??___xxtofl^0,f,c
  6490   00242A  1E06               	comf	(??___xxtofl+1)^0,f,c
  6491   00242C  1E07               	comf	(??___xxtofl+2)^0,f,c
  6492   00242E  1E08               	comf	(??___xxtofl+3)^0,f,c
  6493   002430  2A05               	incf	??___xxtofl^0,f,c
  6494   002432  0E00               	movlw	0
  6495   002434  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6496   002436  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6497   002438  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6498   00243A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6499   00243E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6500   002442  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6501   002446  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6502   00244A  EF2F  F012         	goto	l3629
  6503   00244E                     l806:
  6504   00244E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6505   002452  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6506   002456  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6507   00245A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6508   00245E                     l3629:
  6509   00245E  5001               	movf	___xxtofl@val^0,w,c
  6510   002460  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6511   002462  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6512   002464  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6513   002466  A4D8               	btfss	status,2,c
  6514   002468  EF38  F012         	goto	u3761
  6515   00246C  EF3A  F012         	goto	u3760
  6516   002470                     u3761:
  6517   002470  EF44  F012         	goto	l3635
  6518   002474                     u3760:
  6519   002474  0E00               	movlw	0
  6520   002476  6E01               	movwf	?___xxtofl^0,c
  6521   002478  0E00               	movlw	0
  6522   00247A  6E02               	movwf	(?___xxtofl+1)^0,c
  6523   00247C  0E00               	movlw	0
  6524   00247E  6E03               	movwf	(?___xxtofl+2)^0,c
  6525   002480  0E00               	movlw	0
  6526   002482  6E04               	movwf	(?___xxtofl+3)^0,c
  6527   002484  EFD5  F012         	goto	l809
  6528   002488                     l3635:
  6529   002488  0E96               	movlw	150
  6530   00248A  6E0A               	movwf	___xxtofl@exp^0,c
  6531   00248C  EF4E  F012         	goto	l3639
  6532   002490                     l3637:
  6533   002490  2A0A               	incf	___xxtofl@exp^0,f,c
  6534   002492  90D8               	bcf	status,0,c
  6535   002494  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6536   002496  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6537   002498  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6538   00249A  320B               	rrcf	___xxtofl@arg^0,f,c
  6539   00249C                     l3639:
  6540   00249C  0E00               	movlw	0
  6541   00249E  140B               	andwf	___xxtofl@arg^0,w,c
  6542   0024A0  6E05               	movwf	??___xxtofl^0,c
  6543   0024A2  0E00               	movlw	0
  6544   0024A4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6545   0024A6  6E06               	movwf	(??___xxtofl+1)^0,c
  6546   0024A8  0E00               	movlw	0
  6547   0024AA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6548   0024AC  6E07               	movwf	(??___xxtofl+2)^0,c
  6549   0024AE  0EFE               	movlw	254
  6550   0024B0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6551   0024B2  6E08               	movwf	(??___xxtofl+3)^0,c
  6552   0024B4  5005               	movf	??___xxtofl^0,w,c
  6553   0024B6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6554   0024B8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6555   0024BA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6556   0024BC  A4D8               	btfss	status,2,c
  6557   0024BE  EF63  F012         	goto	u3771
  6558   0024C2  EF65  F012         	goto	u3770
  6559   0024C6                     u3771:
  6560   0024C6  EF48  F012         	goto	l3637
  6561   0024CA                     u3770:
  6562   0024CA  EF73  F012         	goto	l813
  6563   0024CE                     l3641:
  6564   0024CE  2A0A               	incf	___xxtofl@exp^0,f,c
  6565   0024D0  0E01               	movlw	1
  6566   0024D2  260B               	addwf	___xxtofl@arg^0,f,c
  6567   0024D4  0E00               	movlw	0
  6568   0024D6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6569   0024D8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6570   0024DA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6571   0024DC  90D8               	bcf	status,0,c
  6572   0024DE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6573   0024E0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6574   0024E2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6575   0024E4  320B               	rrcf	___xxtofl@arg^0,f,c
  6576   0024E6                     l813:
  6577   0024E6  0E00               	movlw	0
  6578   0024E8  140B               	andwf	___xxtofl@arg^0,w,c
  6579   0024EA  6E05               	movwf	??___xxtofl^0,c
  6580   0024EC  0E00               	movlw	0
  6581   0024EE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6582   0024F0  6E06               	movwf	(??___xxtofl+1)^0,c
  6583   0024F2  0E00               	movlw	0
  6584   0024F4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6585   0024F6  6E07               	movwf	(??___xxtofl+2)^0,c
  6586   0024F8  0EFF               	movlw	255
  6587   0024FA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6588   0024FC  6E08               	movwf	(??___xxtofl+3)^0,c
  6589   0024FE  5005               	movf	??___xxtofl^0,w,c
  6590   002500  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6591   002502  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6592   002504  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6593   002506  A4D8               	btfss	status,2,c
  6594   002508  EF88  F012         	goto	u3781
  6595   00250C  EF8A  F012         	goto	u3780
  6596   002510                     u3781:
  6597   002510  EF67  F012         	goto	l3641
  6598   002514                     u3780:
  6599   002514  EF92  F012         	goto	l3649
  6600   002518                     l3647:
  6601   002518  060A               	decf	___xxtofl@exp^0,f,c
  6602   00251A  90D8               	bcf	status,0,c
  6603   00251C  360B               	rlcf	___xxtofl@arg^0,f,c
  6604   00251E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6605   002520  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6606   002522  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6607   002524                     l3649:
  6608   002524  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6609   002526  EF97  F012         	goto	u3791
  6610   00252A  EF99  F012         	goto	u3790
  6611   00252E                     u3791:
  6612   00252E  EFA1  F012         	goto	l820
  6613   002532                     u3790:
  6614   002532  0E02               	movlw	2
  6615   002534  600A               	cpfslt	___xxtofl@exp^0,c
  6616   002536  EF9F  F012         	goto	u3801
  6617   00253A  EFA1  F012         	goto	u3800
  6618   00253E                     u3801:
  6619   00253E  EF8C  F012         	goto	l3647
  6620   002542                     u3800:
  6621   002542                     l820:
  6622   002542  B00A               	btfsc	___xxtofl@exp^0,0,c
  6623   002544  EFA6  F012         	goto	u3811
  6624   002548  EFA8  F012         	goto	u3810
  6625   00254C                     u3811:
  6626   00254C  EFA9  F012         	goto	l3655
  6627   002550                     u3810:
  6628   002550  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6629   002552                     l3655:
  6630   002552  90D8               	bcf	status,0,c
  6631   002554  320A               	rrcf	___xxtofl@exp^0,f,c
  6632   002556  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6633   00255A  6A06               	clrf	(??___xxtofl+1)^0,c
  6634   00255C  6A07               	clrf	(??___xxtofl+2)^0,c
  6635   00255E  6A08               	clrf	(??___xxtofl+3)^0,c
  6636   002560  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6637   002564  6A07               	clrf	(??___xxtofl+2)^0,c
  6638   002566  6A06               	clrf	(??___xxtofl+1)^0,c
  6639   002568  6A05               	clrf	??___xxtofl^0,c
  6640   00256A  5005               	movf	??___xxtofl^0,w,c
  6641   00256C  120B               	iorwf	___xxtofl@arg^0,f,c
  6642   00256E  5006               	movf	(??___xxtofl+1)^0,w,c
  6643   002570  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6644   002572  5007               	movf	(??___xxtofl+2)^0,w,c
  6645   002574  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6646   002576  5008               	movf	(??___xxtofl+3)^0,w,c
  6647   002578  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6648   00257A  5009               	movf	___xxtofl@sign^0,w,c
  6649   00257C  B4D8               	btfsc	status,2,c
  6650   00257E  EFC3  F012         	goto	u3821
  6651   002582  EFC5  F012         	goto	u3820
  6652   002586                     u3821:
  6653   002586  EFCD  F012         	goto	l3665
  6654   00258A                     u3820:
  6655   00258A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6656   00258C  EFCC  F012         	goto	u3830
  6657   002590  EFCA  F012         	goto	u3831
  6658   002594                     u3831:
  6659   002594  EFCD  F012         	goto	l3665
  6660   002598                     u3830:
  6661   002598  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6662   00259A                     l3665:
  6663   00259A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6664   00259E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6665   0025A2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6666   0025A6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6667   0025AA                     l809:
  6668   0025AA  0012               	return		;funcret
  6669   0025AC                     __end_of___xxtofl:
  6670                           	callstack 0
  6671                           
  6672 ;; *************** function _Lcd_Write_String *****************
  6673 ;; Defined at:
  6674 ;;		line 104 in file "lcd.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  a               2    4[COMRAM] PTR const unsigned char 
  6677 ;;		 -> buffer(20), STR_1(13), 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;  i               2    8[COMRAM] int 
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6689 ;;      Params:         2       0       0       0       0       0       0       0       0
  6690 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6691 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6692 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6693 ;;Total ram usage:        6 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 2
  6696 ;; This function calls:
  6697 ;;		_Lcd_Write_Char
  6698 ;; This function is called by:
  6699 ;;		_main
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	text26
  6704   002D56                     __ptext26:
  6705                           	callstack 0
  6706   002D56                     _Lcd_Write_String:
  6707                           	callstack 28
  6708   002D56                     
  6709                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  6710   002D56  0E00               	movlw	0
  6711   002D58  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  6712   002D5A  0E00               	movlw	0
  6713   002D5C  6E09               	movwf	Lcd_Write_String@i^0,c
  6714   002D5E  EFCB  F016         	goto	l3603
  6715   002D62                     l3599:
  6716                           
  6717                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  6718   002D62  5009               	movf	Lcd_Write_String@i^0,w,c
  6719   002D64  2405               	addwf	Lcd_Write_String@a^0,w,c
  6720   002D66  6E07               	movwf	??_Lcd_Write_String^0,c
  6721   002D68  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  6722   002D6A  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6723   002D6C  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  6724   002D6E  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  6725   002D72  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  6726   002D76  6AF8               	clrf	tblptru,c
  6727   002D78  0E07               	movlw	(high __ramtop+-1)
  6728   002D7A  64F7               	cpfsgt	tblptrh,c
  6729   002D7C  D003               	bra	u3717
  6730   002D7E  0008               	tblrd		*
  6731   002D80  50F5               	movf	tablat,w,c
  6732   002D82  D005               	bra	u3710
  6733   002D84                     u3717:
  6734   002D84  CFF6 FFE1          	movff	tblptrl,fsr1l
  6735   002D88  CFF7 FFE2          	movff	tblptrh,fsr1h
  6736   002D8C  50E7               	movf	indf1,w,c
  6737   002D8E                     u3710:
  6738   002D8E  EC82  F018         	call	_Lcd_Write_Char
  6739   002D92  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  6740   002D94  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  6741   002D96                     l3603:
  6742   002D96  5009               	movf	Lcd_Write_String@i^0,w,c
  6743   002D98  2405               	addwf	Lcd_Write_String@a^0,w,c
  6744   002D9A  6E07               	movwf	??_Lcd_Write_String^0,c
  6745   002D9C  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  6746   002D9E  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6747   002DA0  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  6748   002DA2  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  6749   002DA6  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  6750   002DAA  6AF8               	clrf	tblptru,c
  6751   002DAC  0E07               	movlw	(high __ramtop+-1)
  6752   002DAE  64F7               	cpfsgt	tblptrh,c
  6753   002DB0  D003               	bra	u3727
  6754   002DB2  0008               	tblrd		*
  6755   002DB4  50F5               	movf	tablat,w,c
  6756   002DB6  D005               	bra	u3720
  6757   002DB8                     u3727:
  6758   002DB8  CFF6 FFE1          	movff	tblptrl,fsr1l
  6759   002DBC  CFF7 FFE2          	movff	tblptrh,fsr1h
  6760   002DC0  50E7               	movf	indf1,w,c
  6761   002DC2                     u3720:
  6762   002DC2  0900               	iorlw	0
  6763   002DC4  A4D8               	btfss	status,2,c
  6764   002DC6  EFE7  F016         	goto	u3731
  6765   002DCA  EFE9  F016         	goto	u3730
  6766   002DCE                     u3731:
  6767   002DCE  EFB1  F016         	goto	l3599
  6768   002DD2                     u3730:
  6769   002DD2  0012               	return		;funcret
  6770   002DD4                     __end_of_Lcd_Write_String:
  6771                           	callstack 0
  6772                           
  6773 ;; *************** function _Lcd_Write_Char *****************
  6774 ;; Defined at:
  6775 ;;		line 88 in file "lcd.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  a               1    wreg     unsigned char 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  a               1    3[COMRAM] unsigned char 
  6780 ;;  y               1    2[COMRAM] unsigned char 
  6781 ;;  temp            1    1[COMRAM] unsigned char 
  6782 ;; Return value:  Size  Location     Type
  6783 ;;                  1    wreg      void 
  6784 ;; Registers used:
  6785 ;;		wreg, status,2, status,0, cstack
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6791 ;;      Params:         0       0       0       0       0       0       0       0       0
  6792 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6793 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6794 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6795 ;;Total ram usage:        3 bytes
  6796 ;; Hardware stack levels used: 1
  6797 ;; Hardware stack levels required when called: 1
  6798 ;; This function calls:
  6799 ;;		_Lcd_Port
  6800 ;; This function is called by:
  6801 ;;		_Lcd_Write_String
  6802 ;;		_Lcd_CGRAM_CreateChar
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text27
  6807   003104                     __ptext27:
  6808                           	callstack 0
  6809   003104                     _Lcd_Write_Char:
  6810                           	callstack 28
  6811                           
  6812                           ;incstack = 0
  6813                           ;Lcd_Write_Char@a stored from wreg
  6814   003104  6E04               	movwf	Lcd_Write_Char@a^0,c
  6815   003106                     
  6816                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  6817   003106  5004               	movf	Lcd_Write_Char@a^0,w,c
  6818   003108  0B0F               	andlw	15
  6819   00310A  6E02               	movwf	Lcd_Write_Char@temp^0,c
  6820                           
  6821                           ;lcd.c: 92:     y = a&0xF0;
  6822   00310C  5004               	movf	Lcd_Write_Char@a^0,w,c
  6823   00310E  0BF0               	andlw	240
  6824   003110  6E03               	movwf	Lcd_Write_Char@y^0,c
  6825   003112                     
  6826                           ;lcd.c: 93:     LATDbits.LD2 = 1;
  6827   003112  848C               	bsf	140,2,c	;volatile
  6828   003114                     
  6829                           ;lcd.c: 94:     Lcd_Port(y>>4);
  6830   003114  3803               	swapf	Lcd_Write_Char@y^0,w,c
  6831   003116  0B0F               	andlw	15
  6832   003118  EC5A  F017         	call	_Lcd_Port
  6833   00311C                     
  6834                           ;lcd.c: 95:     LATDbits.LD3 = 1;
  6835   00311C  868C               	bsf	140,3,c	;volatile
  6836   00311E                     
  6837                           ;lcd.c: 96:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  6838   00311E  0E28               	movlw	40
  6839   003120                     u3947:
  6840   003120  2EE8               	decfsz	wreg,f,c
  6841   003122  D7FE               	bra	u3947
  6842   003124                     
  6843                           ;lcd.c: 97:     LATDbits.LD3 = 0;
  6844   003124  968C               	bcf	140,3,c	;volatile
  6845   003126                     
  6846                           ;lcd.c: 98:     Lcd_Port(temp);
  6847   003126  5002               	movf	Lcd_Write_Char@temp^0,w,c
  6848   003128  EC5A  F017         	call	_Lcd_Port
  6849   00312C                     
  6850                           ;lcd.c: 99:     LATDbits.LD3 = 1;
  6851   00312C  868C               	bsf	140,3,c	;volatile
  6852   00312E                     
  6853                           ;lcd.c: 100:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  6854   00312E  0E28               	movlw	40
  6855   003130                     u3957:
  6856   003130  2EE8               	decfsz	wreg,f,c
  6857   003132  D7FE               	bra	u3957
  6858   003134                     
  6859                           ;lcd.c: 101:     LATDbits.LD3 = 0;
  6860   003134  968C               	bcf	140,3,c	;volatile
  6861   003136  0012               	return		;funcret
  6862   003138                     __end_of_Lcd_Write_Char:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function _Lcd_Set_Cursor *****************
  6866 ;; Defined at:
  6867 ;;		line 26 in file "lcd.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  a               1    wreg     unsigned char 
  6870 ;;  b               1    3[COMRAM] unsigned char 
  6871 ;; Auto vars:     Size  Location     Type
  6872 ;;  a               1    4[COMRAM] unsigned char 
  6873 ;;  temp            1    7[COMRAM] unsigned char 
  6874 ;;  y               1    6[COMRAM] unsigned char 
  6875 ;;  z               1    5[COMRAM] unsigned char 
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      void 
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6885 ;;      Params:         1       0       0       0       0       0       0       0       0
  6886 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6888 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6889 ;;Total ram usage:        5 bytes
  6890 ;; Hardware stack levels used: 1
  6891 ;; Hardware stack levels required when called: 2
  6892 ;; This function calls:
  6893 ;;		_Lcd_Cmd
  6894 ;; This function is called by:
  6895 ;;		_main
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text28
  6900   0029C8                     __ptext28:
  6901                           	callstack 0
  6902   0029C8                     _Lcd_Set_Cursor:
  6903                           	callstack 28
  6904                           
  6905                           ;incstack = 0
  6906                           ;Lcd_Set_Cursor@a stored from wreg
  6907   0029C8  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  6908   0029CA                     
  6909                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  6910   0029CA  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  6911   0029CC  A4D8               	btfss	status,2,c
  6912   0029CE  EFEB  F014         	goto	u3671
  6913   0029D2  EFED  F014         	goto	u3670
  6914   0029D6                     u3671:
  6915   0029D6  EFFE  F014         	goto	l3541
  6916   0029DA                     u3670:
  6917   0029DA                     
  6918                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  6919   0029DA  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  6920   0029DC  0F7F               	addlw	127
  6921   0029DE  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  6922                           
  6923                           ;lcd.c: 32:         z = temp>>4;
  6924   0029E0  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  6925   0029E2  0B0F               	andlw	15
  6926   0029E4  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  6927                           
  6928                           ;lcd.c: 33:         y = temp & 0x0F;
  6929   0029E6  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  6930   0029E8  0B0F               	andlw	15
  6931   0029EA  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  6932   0029EC                     
  6933                           ;lcd.c: 34:         Lcd_Cmd(z);
  6934   0029EC  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  6935   0029EE  ECC0  F018         	call	_Lcd_Cmd
  6936   0029F2                     
  6937                           ;lcd.c: 35:         Lcd_Cmd(y);
  6938   0029F2  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  6939   0029F4  ECC0  F018         	call	_Lcd_Cmd
  6940                           
  6941                           ;lcd.c: 36:     }
  6942   0029F8  EF4C  F015         	goto	l41
  6943   0029FC                     l3541:
  6944   0029FC  0E02               	movlw	2
  6945   0029FE  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  6946   002A00  A4D8               	btfss	status,2,c
  6947   002A02  EF05  F015         	goto	u3681
  6948   002A06  EF07  F015         	goto	u3680
  6949   002A0A                     u3681:
  6950   002A0A  EF18  F015         	goto	l3549
  6951   002A0E                     u3680:
  6952   002A0E                     
  6953                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  6954   002A0E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  6955   002A10  0FBF               	addlw	191
  6956   002A12  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  6957                           
  6958                           ;lcd.c: 40:         z = temp>>4;
  6959   002A14  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  6960   002A16  0B0F               	andlw	15
  6961   002A18  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  6962                           
  6963                           ;lcd.c: 41:         y = temp & 0x0F;
  6964   002A1A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  6965   002A1C  0B0F               	andlw	15
  6966   002A1E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  6967   002A20                     
  6968                           ;lcd.c: 42:         Lcd_Cmd(z);
  6969   002A20  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  6970   002A22  ECC0  F018         	call	_Lcd_Cmd
  6971   002A26                     
  6972                           ;lcd.c: 43:         Lcd_Cmd(y);
  6973   002A26  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  6974   002A28  ECC0  F018         	call	_Lcd_Cmd
  6975                           
  6976                           ;lcd.c: 44:     }
  6977   002A2C  EF4C  F015         	goto	l41
  6978   002A30                     l3549:
  6979   002A30  0E03               	movlw	3
  6980   002A32  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  6981   002A34  A4D8               	btfss	status,2,c
  6982   002A36  EF1F  F015         	goto	u3691
  6983   002A3A  EF21  F015         	goto	u3690
  6984   002A3E                     u3691:
  6985   002A3E  EF32  F015         	goto	l3557
  6986   002A42                     u3690:
  6987   002A42                     
  6988                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  6989   002A42  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  6990   002A44  0F93               	addlw	147
  6991   002A46  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  6992                           
  6993                           ;lcd.c: 48:         z = temp>>4;
  6994   002A48  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  6995   002A4A  0B0F               	andlw	15
  6996   002A4C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  6997                           
  6998                           ;lcd.c: 49:         y = temp & 0x0F;
  6999   002A4E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7000   002A50  0B0F               	andlw	15
  7001   002A52  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7002   002A54                     
  7003                           ;lcd.c: 50:         Lcd_Cmd(z);
  7004   002A54  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7005   002A56  ECC0  F018         	call	_Lcd_Cmd
  7006   002A5A                     
  7007                           ;lcd.c: 51:         Lcd_Cmd(y);
  7008   002A5A  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7009   002A5C  ECC0  F018         	call	_Lcd_Cmd
  7010                           
  7011                           ;lcd.c: 52:     }
  7012   002A60  EF4C  F015         	goto	l41
  7013   002A64                     l3557:
  7014   002A64  0E04               	movlw	4
  7015   002A66  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7016   002A68  A4D8               	btfss	status,2,c
  7017   002A6A  EF39  F015         	goto	u3701
  7018   002A6E  EF3B  F015         	goto	u3700
  7019   002A72                     u3701:
  7020   002A72  EF4C  F015         	goto	l37
  7021   002A76                     u3700:
  7022   002A76                     
  7023                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  7024   002A76  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7025   002A78  0FD3               	addlw	211
  7026   002A7A  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7027                           
  7028                           ;lcd.c: 56:         z = temp>>4;
  7029   002A7C  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7030   002A7E  0B0F               	andlw	15
  7031   002A80  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7032                           
  7033                           ;lcd.c: 57:         y = temp & 0x0F;
  7034   002A82  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7035   002A84  0B0F               	andlw	15
  7036   002A86  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7037   002A88                     
  7038                           ;lcd.c: 58:         Lcd_Cmd(z);
  7039   002A88  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7040   002A8A  ECC0  F018         	call	_Lcd_Cmd
  7041   002A8E                     
  7042                           ;lcd.c: 59:         Lcd_Cmd(y);
  7043   002A8E  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7044   002A90  ECC0  F018         	call	_Lcd_Cmd
  7045   002A94  EF4C  F015         	goto	l41
  7046   002A98                     l37:
  7047   002A98                     l41:
  7048   002A98  0012               	return		;funcret
  7049   002A9A                     __end_of_Lcd_Set_Cursor:
  7050                           	callstack 0
  7051                           
  7052 ;; *************** function _Lcd_Init *****************
  7053 ;; Defined at:
  7054 ;;		line 63 in file "lcd.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;		None
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;		None
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  1    wreg      void 
  7061 ;; Registers used:
  7062 ;;		wreg, status,2, cstack
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7068 ;;      Params:         0       0       0       0       0       0       0       0       0
  7069 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7070 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7071 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7072 ;;Total ram usage:        1 bytes
  7073 ;; Hardware stack levels used: 1
  7074 ;; Hardware stack levels required when called: 3
  7075 ;; This function calls:
  7076 ;;		_Lcd_Clear
  7077 ;;		_Lcd_Cmd
  7078 ;;		_Lcd_Port
  7079 ;; This function is called by:
  7080 ;;		_main
  7081 ;; This function uses a non-reentrant model
  7082 ;;
  7083                           
  7084                           	psect	text29
  7085   002CD4                     __ptext29:
  7086                           	callstack 0
  7087   002CD4                     _Lcd_Init:
  7088                           	callstack 27
  7089   002CD4                     
  7090                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  7091   002CD4  9495               	bcf	149,2,c	;volatile
  7092                           
  7093                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  7094   002CD6  9695               	bcf	149,3,c	;volatile
  7095                           
  7096                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  7097   002CD8  9895               	bcf	149,4,c	;volatile
  7098                           
  7099                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  7100   002CDA  9A95               	bcf	149,5,c	;volatile
  7101                           
  7102                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  7103   002CDC  9C95               	bcf	149,6,c	;volatile
  7104                           
  7105                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  7106   002CDE  9E95               	bcf	149,7,c	;volatile
  7107   002CE0                     
  7108                           ;lcd.c: 71:     Lcd_Port(0x00);
  7109   002CE0  0E00               	movlw	0
  7110   002CE2  EC5A  F017         	call	_Lcd_Port
  7111   002CE6                     
  7112                           ;lcd.c: 72:     _delay((unsigned long)((20)*(12000000/4000.0)));
  7113   002CE6  0E4E               	movlw	78
  7114   002CE8  6E04               	movwf	??_Lcd_Init^0,c
  7115   002CEA  0EEB               	movlw	235
  7116   002CEC                     u3967:
  7117   002CEC  2EE8               	decfsz	wreg,f,c
  7118   002CEE  D7FE               	bra	u3967
  7119   002CF0  2E04               	decfsz	??_Lcd_Init^0,f,c
  7120   002CF2  D7FC               	bra	u3967
  7121   002CF4  F000               	nop	
  7122   002CF6                     
  7123                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  7124   002CF6  0E03               	movlw	3
  7125   002CF8  ECC0  F018         	call	_Lcd_Cmd
  7126   002CFC                     
  7127                           ;lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000.0)));
  7128   002CFC  0E14               	movlw	20
  7129   002CFE  6E04               	movwf	??_Lcd_Init^0,c
  7130   002D00  0E7A               	movlw	122
  7131   002D02                     u3977:
  7132   002D02  2EE8               	decfsz	wreg,f,c
  7133   002D04  D7FE               	bra	u3977
  7134   002D06  2E04               	decfsz	??_Lcd_Init^0,f,c
  7135   002D08  D7FC               	bra	u3977
  7136   002D0A                     
  7137                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  7138   002D0A  0E03               	movlw	3
  7139   002D0C  ECC0  F018         	call	_Lcd_Cmd
  7140   002D10                     
  7141                           ;lcd.c: 76:     _delay((unsigned long)((11)*(12000000/4000.0)));
  7142   002D10  0E2B               	movlw	43
  7143   002D12  6E04               	movwf	??_Lcd_Init^0,c
  7144   002D14  0EDA               	movlw	218
  7145   002D16                     u3987:
  7146   002D16  2EE8               	decfsz	wreg,f,c
  7147   002D18  D7FE               	bra	u3987
  7148   002D1A  2E04               	decfsz	??_Lcd_Init^0,f,c
  7149   002D1C  D7FC               	bra	u3987
  7150   002D1E  D000               	nop2	
  7151   002D20                     
  7152                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  7153   002D20  0E03               	movlw	3
  7154   002D22  ECC0  F018         	call	_Lcd_Cmd
  7155   002D26                     
  7156                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  7157   002D26  0E02               	movlw	2
  7158   002D28  ECC0  F018         	call	_Lcd_Cmd
  7159   002D2C                     
  7160                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  7161   002D2C  0E02               	movlw	2
  7162   002D2E  ECC0  F018         	call	_Lcd_Cmd
  7163   002D32                     
  7164                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  7165   002D32  0E08               	movlw	8
  7166   002D34  ECC0  F018         	call	_Lcd_Cmd
  7167   002D38                     
  7168                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  7169   002D38  0E00               	movlw	0
  7170   002D3A  ECC0  F018         	call	_Lcd_Cmd
  7171   002D3E                     
  7172                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  7173   002D3E  0E0C               	movlw	12
  7174   002D40  ECC0  F018         	call	_Lcd_Cmd
  7175   002D44                     
  7176                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  7177   002D44  0E00               	movlw	0
  7178   002D46  ECC0  F018         	call	_Lcd_Cmd
  7179   002D4A                     
  7180                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  7181   002D4A  0E06               	movlw	6
  7182   002D4C  ECC0  F018         	call	_Lcd_Cmd
  7183   002D50                     
  7184                           ;lcd.c: 85:     Lcd_Clear();
  7185   002D50  ECDB  F018         	call	_Lcd_Clear	;wreg free
  7186   002D54  0012               	return		;funcret
  7187   002D56                     __end_of_Lcd_Init:
  7188                           	callstack 0
  7189                           
  7190 ;; *************** function _Lcd_Clear *****************
  7191 ;; Defined at:
  7192 ;;		line 20 in file "lcd.c"
  7193 ;; Parameters:    Size  Location     Type
  7194 ;;		None
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, status,2, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7206 ;;      Params:         0       0       0       0       0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7208 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7209 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7210 ;;Total ram usage:        0 bytes
  7211 ;; Hardware stack levels used: 1
  7212 ;; Hardware stack levels required when called: 2
  7213 ;; This function calls:
  7214 ;;		_Lcd_Cmd
  7215 ;; This function is called by:
  7216 ;;		_Lcd_Init
  7217 ;;		_main
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text30
  7222   0031B6                     __ptext30:
  7223                           	callstack 0
  7224   0031B6                     _Lcd_Clear:
  7225                           	callstack 27
  7226   0031B6                     
  7227                           ;lcd.c: 22:     Lcd_Cmd(0);
  7228   0031B6  0E00               	movlw	0
  7229   0031B8  ECC0  F018         	call	_Lcd_Cmd
  7230                           
  7231                           ;lcd.c: 23:     Lcd_Cmd(1);
  7232   0031BC  0E01               	movlw	1
  7233   0031BE  ECC0  F018         	call	_Lcd_Cmd
  7234   0031C2  0012               	return		;funcret
  7235   0031C4                     __end_of_Lcd_Clear:
  7236                           	callstack 0
  7237                           
  7238 ;; *************** function _Lcd_Cmd *****************
  7239 ;; Defined at:
  7240 ;;		line 11 in file "lcd.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  a               1    wreg     unsigned char 
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  a               1    2[COMRAM] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0
  7255 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7256 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7257 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7258 ;;Total ram usage:        2 bytes
  7259 ;; Hardware stack levels used: 1
  7260 ;; Hardware stack levels required when called: 1
  7261 ;; This function calls:
  7262 ;;		_Lcd_Port
  7263 ;; This function is called by:
  7264 ;;		_Lcd_Clear
  7265 ;;		_Lcd_Set_Cursor
  7266 ;;		_Lcd_Init
  7267 ;;		_Lcd_Shift_Right
  7268 ;;		_Lcd_Shift_Left
  7269 ;;		_Lcd_Blink
  7270 ;;		_Lcd_NoBlink
  7271 ;;		_Lcd_CGRAM_Init
  7272 ;;		_Lcd_CGRAM_Close
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           	psect	text31
  7277   003180                     __ptext31:
  7278                           	callstack 0
  7279   003180                     _Lcd_Cmd:
  7280                           	callstack 28
  7281                           
  7282                           ;incstack = 0
  7283                           ;Lcd_Cmd@a stored from wreg
  7284   003180  6E03               	movwf	Lcd_Cmd@a^0,c
  7285   003182                     
  7286                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD2 = 0;
  7287   003182  948C               	bcf	140,2,c	;volatile
  7288   003184                     
  7289                           ;lcd.c: 14:     Lcd_Port(a);
  7290   003184  5003               	movf	Lcd_Cmd@a^0,w,c
  7291   003186  EC5A  F017         	call	_Lcd_Port
  7292   00318A                     
  7293                           ;lcd.c: 15:     LATDbits.LD3 = 1;
  7294   00318A  868C               	bsf	140,3,c	;volatile
  7295   00318C                     
  7296                           ;lcd.c: 16:     _delay((unsigned long)((4)*(12000000/4000.0)));
  7297   00318C  0E10               	movlw	16
  7298   00318E  6E02               	movwf	??_Lcd_Cmd^0,c
  7299   003190  0E94               	movlw	148
  7300   003192                     u3997:
  7301   003192  2EE8               	decfsz	wreg,f,c
  7302   003194  D7FE               	bra	u3997
  7303   003196  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7304   003198  D7FC               	bra	u3997
  7305   00319A  D000               	nop2	
  7306   00319C                     
  7307                           ;lcd.c: 17:     LATDbits.LD3 = 0;
  7308   00319C  968C               	bcf	140,3,c	;volatile
  7309   00319E  0012               	return		;funcret
  7310   0031A0                     __end_of_Lcd_Cmd:
  7311                           	callstack 0
  7312                           
  7313 ;; *************** function _Lcd_Port *****************
  7314 ;; Defined at:
  7315 ;;		line 3 in file "lcd.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  a               1    wreg     unsigned char 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;  a               1    0[COMRAM] unsigned char 
  7320 ;; Return value:  Size  Location     Type
  7321 ;;                  1    wreg      void 
  7322 ;; Registers used:
  7323 ;;		wreg
  7324 ;; Tracked objects:
  7325 ;;		On entry : 0/0
  7326 ;;		On exit  : 0/0
  7327 ;;		Unchanged: 0/0
  7328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7329 ;;      Params:         0       0       0       0       0       0       0       0       0
  7330 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7331 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7332 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7333 ;;Total ram usage:        1 bytes
  7334 ;; Hardware stack levels used: 1
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_Lcd_Cmd
  7339 ;;		_Lcd_Init
  7340 ;;		_Lcd_Write_Char
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text32
  7345   002EB4                     __ptext32:
  7346                           	callstack 0
  7347   002EB4                     _Lcd_Port:
  7348                           	callstack 28
  7349                           
  7350                           ;incstack = 0
  7351                           ;Lcd_Port@a stored from wreg
  7352   002EB4  6E01               	movwf	Lcd_Port@a^0,c
  7353   002EB6                     
  7354                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  7355   002EB6  A001               	btfss	Lcd_Port@a^0,0,c
  7356   002EB8  EF60  F017         	goto	u3211
  7357   002EBC  EF62  F017         	goto	u3210
  7358   002EC0                     u3211:
  7359   002EC0  EF65  F017         	goto	l10
  7360   002EC4                     u3210:
  7361   002EC4  888C               	bsf	140,4,c	;volatile
  7362   002EC6  EF66  F017         	goto	l3137
  7363   002ECA                     l10:
  7364   002ECA  988C               	bcf	140,4,c	;volatile
  7365   002ECC                     l3137:
  7366                           
  7367                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  7368   002ECC  A201               	btfss	Lcd_Port@a^0,1,c
  7369   002ECE  EF6B  F017         	goto	u3221
  7370   002ED2  EF6D  F017         	goto	u3220
  7371   002ED6                     u3221:
  7372   002ED6  EF70  F017         	goto	l14
  7373   002EDA                     u3220:
  7374   002EDA  8A8C               	bsf	140,5,c	;volatile
  7375   002EDC  EF71  F017         	goto	l3141
  7376   002EE0                     l14:
  7377   002EE0  9A8C               	bcf	140,5,c	;volatile
  7378   002EE2                     l3141:
  7379                           
  7380                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  7381   002EE2  A401               	btfss	Lcd_Port@a^0,2,c
  7382   002EE4  EF76  F017         	goto	u3231
  7383   002EE8  EF78  F017         	goto	u3230
  7384   002EEC                     u3231:
  7385   002EEC  EF7B  F017         	goto	l18
  7386   002EF0                     u3230:
  7387   002EF0  8C8C               	bsf	140,6,c	;volatile
  7388   002EF2  EF7C  F017         	goto	l3145
  7389   002EF6                     l18:
  7390   002EF6  9C8C               	bcf	140,6,c	;volatile
  7391   002EF8                     l3145:
  7392                           
  7393                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  7394   002EF8  A601               	btfss	Lcd_Port@a^0,3,c
  7395   002EFA  EF81  F017         	goto	u3241
  7396   002EFE  EF83  F017         	goto	u3240
  7397   002F02                     u3241:
  7398   002F02  EF86  F017         	goto	l22
  7399   002F06                     u3240:
  7400   002F06  8E8C               	bsf	140,7,c	;volatile
  7401   002F08  EF87  F017         	goto	l25
  7402   002F0C                     l22:
  7403   002F0C  9E8C               	bcf	140,7,c	;volatile
  7404   002F0E                     l25:
  7405   002F0E  0012               	return		;funcret
  7406   002F10                     __end_of_Lcd_Port:
  7407                           	callstack 0
  7408                           
  7409                           	psect	rparam
  7410   000000                     
  7411                           	psect	config
  7412                           
  7413                           ;Config register CONFIG1L @ 0x300000
  7414                           ;	PLL Selection
  7415                           ;	PLLSEL = PLL4X, 4x clock multiplier
  7416                           ;	PLL Enable Configuration bit
  7417                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  7418                           ;	CPU System Clock Postscaler
  7419                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  7420                           ;	Low Speed USB mode with 48 MHz system clock
  7421                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  7422   300000                     	org	3145728
  7423   300000  00                 	db	0
  7424                           
  7425                           ;Config register CONFIG1H @ 0x300001
  7426                           ;	Oscillator Selection
  7427                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  7428                           ;	Primary Oscillator Shutdown
  7429                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  7430                           ;	Fail-Safe Clock Monitor
  7431                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7432                           ;	Internal/External Oscillator Switchover
  7433                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7434   300001                     	org	3145729
  7435   300001  03                 	db	3
  7436                           
  7437                           ;Config register CONFIG2L @ 0x300002
  7438                           ;	Power-up Timer Enable
  7439                           ;	nPWRTEN = ON, Power up timer enabled
  7440                           ;	Brown-out Reset Enable
  7441                           ;	BOREN = ON, BOR controlled by firmware (SBOREN is enabled)
  7442                           ;	Brown-out Reset Voltage
  7443                           ;	BORV = 190, BOR set to 1.9V nominal
  7444                           ;	Low-Power Brown-out Reset
  7445                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  7446   300002                     	org	3145730
  7447   300002  5A                 	db	90
  7448                           
  7449                           ;Config register CONFIG2H @ 0x300003
  7450                           ;	Watchdog Timer Enable bits
  7451                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  7452                           ;	Watchdog Timer Postscaler
  7453                           ;	WDTPS = 32768, 1:32768
  7454   300003                     	org	3145731
  7455   300003  3C                 	db	60
  7456                           
  7457                           ; Padding undefined space
  7458   300004                     	org	3145732
  7459   300004  FF                 	db	255
  7460                           
  7461                           ;Config register CONFIG3H @ 0x300005
  7462                           ;	CCP2 MUX bit
  7463                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  7464                           ;	PORTB A/D Enable bit
  7465                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  7466                           ;	Timer3 Clock Input MUX bit
  7467                           ;	T3CMX = RC0, T3CKI function is on RC0
  7468                           ;	SDO Output MUX bit
  7469                           ;	SDOMX = RB3, SDO function is on RB3
  7470                           ;	Master Clear Reset Pin Enable
  7471                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  7472   300005                     	org	3145733
  7473   300005  D1                 	db	209
  7474                           
  7475                           ;Config register CONFIG4L @ 0x300006
  7476                           ;	Stack Full/Underflow Reset
  7477                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7478                           ;	Single-Supply ICSP Enable bit
  7479                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  7480                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  7481                           ;	ICPRT = OFF, ICPORT disabled
  7482                           ;	Extended Instruction Set Enable bit
  7483                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  7484                           ;	Background Debugger Enable bit
  7485                           ;	DEBUG = 0x1, unprogrammed default
  7486   300006                     	org	3145734
  7487   300006  85                 	db	133
  7488                           
  7489                           ; Padding undefined space
  7490   300007                     	org	3145735
  7491   300007  FF                 	db	255
  7492                           
  7493                           ;Config register CONFIG5L @ 0x300008
  7494                           ;	Block 0 Code Protect
  7495                           ;	CP0 = OFF, Block 0 is not code-protected
  7496                           ;	Block 1 Code Protect
  7497                           ;	CP1 = OFF, Block 1 is not code-protected
  7498                           ;	Block 2 Code Protect
  7499                           ;	CP2 = OFF, Block 2 is not code-protected
  7500                           ;	Block 3 Code Protect
  7501                           ;	CP3 = OFF, Block 3 is not code-protected
  7502   300008                     	org	3145736
  7503   300008  0F                 	db	15
  7504                           
  7505                           ;Config register CONFIG5H @ 0x300009
  7506                           ;	Boot Block Code Protect
  7507                           ;	CPB = OFF, Boot block is not code-protected
  7508                           ;	Data EEPROM Code Protect
  7509                           ;	CPD = OFF, Data EEPROM is not code-protected
  7510   300009                     	org	3145737
  7511   300009  C0                 	db	192
  7512                           
  7513                           ;Config register CONFIG6L @ 0x30000A
  7514                           ;	Block 0 Write Protect
  7515                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  7516                           ;	Block 1 Write Protect
  7517                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  7518                           ;	Block 2 Write Protect
  7519                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  7520                           ;	Block 3 Write Protect
  7521                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  7522   30000A                     	org	3145738
  7523   30000A  0F                 	db	15
  7524                           
  7525                           ;Config register CONFIG6H @ 0x30000B
  7526                           ;	Configuration Registers Write Protect
  7527                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7528                           ;	Boot Block Write Protect
  7529                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  7530                           ;	Data EEPROM Write Protect
  7531                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7532   30000B                     	org	3145739
  7533   30000B  E0                 	db	224
  7534                           
  7535                           ;Config register CONFIG7L @ 0x30000C
  7536                           ;	Block 0 Table Read Protect
  7537                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  7538                           ;	Block 1 Table Read Protect
  7539                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  7540                           ;	Block 2 Table Read Protect
  7541                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  7542                           ;	Block 3 Table Read Protect
  7543                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  7544   30000C                     	org	3145740
  7545   30000C  0F                 	db	15
  7546                           
  7547                           ;Config register CONFIG7H @ 0x30000D
  7548                           ;	Boot Block Table Read Protect
  7549                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  7550   30000D                     	org	3145741
  7551   30000D  40                 	db	64
  7552                           tosu	equ	0xFFF
  7553                           tosh	equ	0xFFE
  7554                           tosl	equ	0xFFD
  7555                           stkptr	equ	0xFFC
  7556                           pclatu	equ	0xFFB
  7557                           pclath	equ	0xFFA
  7558                           pcl	equ	0xFF9
  7559                           tblptru	equ	0xFF8
  7560                           tblptrh	equ	0xFF7
  7561                           tblptrl	equ	0xFF6
  7562                           tablat	equ	0xFF5
  7563                           prodh	equ	0xFF4
  7564                           prodl	equ	0xFF3
  7565                           indf0	equ	0xFEF
  7566                           postinc0	equ	0xFEE
  7567                           postdec0	equ	0xFED
  7568                           preinc0	equ	0xFEC
  7569                           plusw0	equ	0xFEB
  7570                           fsr0h	equ	0xFEA
  7571                           fsr0l	equ	0xFE9
  7572                           wreg	equ	0xFE8
  7573                           indf1	equ	0xFE7
  7574                           postinc1	equ	0xFE6
  7575                           postdec1	equ	0xFE5
  7576                           preinc1	equ	0xFE4
  7577                           plusw1	equ	0xFE3
  7578                           fsr1h	equ	0xFE2
  7579                           fsr1l	equ	0xFE1
  7580                           bsr	equ	0xFE0
  7581                           indf2	equ	0xFDF
  7582                           postinc2	equ	0xFDE
  7583                           postdec2	equ	0xFDD
  7584                           preinc2	equ	0xFDC
  7585                           plusw2	equ	0xFDB
  7586                           fsr2h	equ	0xFDA
  7587                           fsr2l	equ	0xFD9
  7588                           status	equ	0xFD8

Data Sizes:
    Strings     35
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     91     130
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S856$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S771$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S771$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   28700
                                             89 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _set_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8   21847
                                             67 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   21492
                                             59 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   21130
                                             93 COMRAM     2     2      0
                                             44 BANK0     15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     643
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   18996
                                             84 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _set_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     420
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     802
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _set_adc
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      82       5       81.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       3B      0       0      20        0.0%
BITBIGSFRlh         30      0       0      24        0.0%
BITBIGSFRhhl        2A      0       0      21        0.0%
BITBIGSFRll          8      0       0      25        0.0%
BITBIGSFRhll         5      0       0      23        0.0%
BITBIGSFRhlh         2      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     131      26        0.0%
DATA                 0      0     131       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jul 07 09:50:29 2023

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l10 2ECA                          l22 2F0C                          l14 2EE0  
                        l31 31C2                          l25 2F0E                          l41 2A98  
                        l18 2EF6                          l28 319E                          l44 2D54  
                        l37 2A98                          l53 2DD2                          l47 3136  
       ___wmul@multiplicand 0003                         l142 25AC                         l151 315C  
                       l143 25BA                         l137 31B4                         l410 2CD2  
                       l421 28C8                         l416 2882                         l425 3102  
                       l448 27C4                         l705 1660                         l721 3046  
                       l706 164E                         l820 2542                         l813 24E6  
                       l733 1F0A                         l806 244E                         l735 1D6A  
                       l744 1DB0                         l680 1464                         l809 25AA  
                       l681 142A                         l746 1E28                         l738 1D2E  
                       l747 1E16                         l907 1000                         l772 1A02  
                       l765 180C                         l925 2C20                         l829 2FB0  
                       l782 1B32                         l774 1A7A                         l775 1A68  
                       l679 1476                         l863 2E4C                         l696 1590  
                       l688 1746                         l769 1B70                         l929 2C28  
                       l874 1286                         l859 2DF6                         l963 2F60  
                       l980 23F6                         l956 21E4                         l973 29C6  
                       l877 0BB8                         l983 233A                         l991 2EA2  
                       l879 09FE                         l994 2EB2                         _pad 2DD4  
                       wreg 0FE8                ___flmul@aexp 0020                ___flmul@bexp 0021  
              ___flmul@sign 001B                ___flmul@temp 0026                ___flmul@prod 0022  
              ___fltol@exp1 000A                        l1000 3000                        l1012 2B62  
                      l1020 308A                        l1023 31C4                        l1029 30CA  
                      l3001 30F2                        l3011 26EA                        l3021 2738  
                      l3013 2714                        l3005 26C0                        l3101 227E  
                      l3031 2764                        l3015 2716                        l3007 26D6  
                      l3111 239A                        l3041 2794                        l3017 2726  
                      l3113 23AE                        l3105 22EE                        l3121 2FB2  
                      l3201 0992                        l3043 27A4                        l3027 2750  
                      l3019 272A                        l3115 23D6                        l3107 232A  
                      l3123 2FC6                        l3131 2FE6                        l3051 2DE2  
                      l3211 09C8                        l3141 2EE2                        l3133 2EB6  
                      l2501 132E                        l3045 27B4                        l3037 2778  
                      l3029 275A                        l3117 23E6                        l3109 235E  
                      l3125 2FD2                        l3061 2E38                        l3053 2DEE  
                      l3301 0F44                        l3221 0A86                        l3143 2EF0  
                      l3135 2EC4                        l2511 1368                        l2503 133E  
                      l3039 2784                        l3071 295C                        l3063 28CA  
                      l3127 2FD6                        l3055 2E02                        l3311 0FF6  
                      l3303 0F4A                        l3231 0B46                        l3223 0AB8  
                      l3215 0A0E                        l3151 082C                        l3145 2EF8  
                      l3137 2ECC                        l3401 318C                        l2601 1570  
                      l2521 1394                        l2513 137A                        l2505 134E  
                      l3081 29BE                        l3065 28EA                        l3129 2FE2  
                      l3057 2E16                        l3049 2DD4                        l3321 103A  
                      l3313 1012                        l3305 0F52                        l3241 0BDC  
                      l3225 0AF6                        l3217 0A14                        l3209 09AE  
                      l3161 087C                        l3153 083C                        l3147 2F06  
                      l3139 2EDA                        l3403 319C                        l2611 15CA  
                      l2603 1580                        l2531 13A8                        l2523 1398  
                      l2515 1388                        l2507 1350                        l3067 2928  
                      l3075 2968                        l3091 2E6C                        l3059 2E1A  
                      l3323 1042                        l3315 1020                        l3331 1062  
                      l3307 0F5E                        l3251 0C10                        l3243 0BE4  
                      l3227 0B0A                        l3235 0B86                        l3219 0A48  
                      l3171 08B8                        l3163 0884                        l3155 084A  
                      l3411 1F4C                        l3501 31B6                        l2701 1BC8  
                      l2621 15FA                        l2613 15D4                        l2605 15A6  
                      l2541 13BC                        l2533 13AC                        l2525 139C  
                      l2517 138C                        l2509 1358                        l3077 297A  
                      l3069 2950                        l3093 21E6                        l2461 2AC8  
                      l3085 308C                        l3341 10E8                        l3333 1074  
                      l3325 1052                        l3317 1030                        l3309 0FD6  
                      l3261 0C5A                        l3253 0C28                        l3245 0BEC  
                      l3237 0BC0                        l3229 0B3E                        l3181 08FE  
                      l3165 0894                        l3173 08BC                        l3157 084E  
                      l3149 0826                        l3413 1F50                        l3405 1F0C  
                      l3511 311E                        l3503 3106                        l2711 1BF4  
                      l2703 1BD8                        l2631 1622                        l2623 15FE  
                      l2615 15E2                        l2607 15B6                        l2551 13F6  
                      l2543 13C0                        l2535 13B0                        l2527 13A0  
                      l2519 1390                        l2471 1294                        l3095 2206  
                      l2463 2AE6                        l2455 2A9A                        l3087 309C  
                      l3351 1162                        l3343 111C                        l3335 1086  
                      l3327 1056                        l3319 1034                        l3263 0C6E  
                      l3271 0D64                        l3255 0C3A                        l3247 0BF0  
                      l3239 0BD0                        l3183 0906                        l3175 08E2  
                      l3191 0948                        l3167 08A4                        l3159 0872  
                      l3431 1FF4                        l3423 1F7C                        l3415 1F5C  
                      l3407 1F30                        l3521 3134                        l3513 3124  
                      l3505 3112                        l3601 2D92                        l2801 1E9A  
                      l2713 1C04                        l2721 1C2E                        l2705 1BDE  
                      l2641 167C                        l2633 1630                        l2625 160E  
                      l2617 15E4                        l2561 1448                        l2553 1412  
                      l2545 13C4                        l2537 13B4                        l2529 13A4  
                      l2481 12D4                        l2473 12A2                        l3097 225C  
                      l3089 2E4E                        l2465 2B1C                        l2457 2AAC  
                      l3361 11CE                        l3353 116A                        l3345 1124  
                      l3337 108A                        l3329 105C                        l3281 0E30  
                      l3273 0D82                        l3265 0CD2                        l3249 0C02  
                      l3257 0C42                        l3193 096E                        l3185 091E  
                      l3177 08F4                        l3169 08B0                        l3441 2042  
                      l3433 2010                        l3417 1F5E                        l3425 1FB0  
                      l3409 1F3E                        l3515 3126                        l3507 3114  
                      l3603 2D96                        l2811 1EF8                        l2803 1EB0  
                      l2731 1C70                        l2723 1C3E                        l2715 1C14  
                      l2707 1BE4                        l2651 16E6                        l2643 168A  
                      l2635 1646                        l2619 15F2                        l2627 1610  
                      l2571 1494                        l2563 1456                        l2555 1422  
                      l2539 13B8                        l2547 13C8                        l2491 1306  
                      l2483 12D6                        l2475 12A4                        l3099 2270  
                      l2459 2ABE                        l3371 121A                        l3355 1178  
                      l3339 1090                        l3347 1128                        l3291 0EE0  
                      l3283 0E40                        l3275 0DB6                        l3267 0D2A  
                      l3259 0C4A                        l3195 0980                        l3187 0928  
                      l3179 08F8                        l3451 20D2                        l3435 2020  
                      l3427 1FC2                        l3419 1F70                        l3523 2F10  
                      l3611 2F62                        l3541 29FC                        l3533 29CA  
                      l3517 312C                        l3509 311C                        l3605 31A0  
                      l2813 1EFE                        l2805 1ECA                        l2725 1C54  
                      l2717 1C24                        l2709 1BF2                        l2901 19BC  
                      l2661 1720                        l2653 1706                        l2645 16C4  
                      l2581 14D4                        l2629 161E                        l2565 1458  
                      l2557 1438                        l2549 13CC                        l2493 1308  
                      l2477 12B4                        l2485 12DE                        l2469 1288  
                      l3365 11E0                        l3373 1238                        l3357 11A8  
                      l3349 1146                        l3293 0F14                        l3285 0E50  
                      l3277 0DE8                        l3269 0D5E                        l3197 0984  
                      l3437 2032                        l3445 204A                        l3429 1FE6  
                      l3525 2F1C                        l3613 2F74                        l3551 2A42  
                      l3543 2A0E                        l3535 29DA                        l3519 312E  
                      l3631 2474                        l3623 23FA                        l3607 31A6  
                      l2815 1F00                        l2807 1EE6                        l2751 1CF2  
                      l2743 1CA8                        l2727 1C64                        l2735 1C84  
                      l2719 1C26                        l2911 1A12                        l2903 19CA  
                      l2831 1774                        l2823 1748                        l2663 1726  
                      l2655 170A                        l2639 1670                        l2647 16C6  
                      l2591 14FE                        l2583 14E0                        l2575 14A8  
                      l2567 1462                        l2559 1444                        l2495 130E  
                      l2487 12EE                        l2479 12C4                        l2671 3048  
                      l3375 1248                        l3367 11F6                        l3359 11B6  
                      l3295 0F28                        l3287 0E84                        l3279 0DFE  
                      l3199 098A                        l3391 2BEA                        l3383 2B64  
                      l3455 2106                        l3439 203A                        l3447 207E  
                      l3471 21BC                        l3527 2F3A                        l3615 2F7C  
                      l3561 2A88                        l3553 2A54                        l3545 2A20  
                      l3537 29EC                        l3641 24CE                        l3625 240A  
                      l3609 31B2                        l2809 1EEA                        l2761 1D38  
                      l2753 1CFA                        l2745 1CC2                        l2737 1C94  
                      l2729 1C6C                        l2913 1A20                        l2905 19E8  
                      l2841 17B0                        l2833 1784                        l2825 1754  
                      l2665 1734                        l2657 1718                        l2649 16D6  
                      l2585 14E4                        l2577 14B8                        l2569 1484  
                      l2593 1504                        l2497 131C                        l2489 12F4  
                      l2673 3054                        l3377 125E                        l3369 11FC  
                      l3289 0EDA                        l3297 0F2C                        l2681 3154  
                      l3393 2BF8                        l3385 2B6C                        l3465 217E  
                      l3457 2130                        l3449 209E                        l3529 2F56  
                      l3617 2F84                        l3801 266C                        l3395 3182  
                      l3571 2CF6                        l3563 2A8E                        l3555 2A5A  
                      l3547 2A26                        l3539 29F2                        l3651 2532  
                      l3643 24D0                        l3635 2488                        l3627 2418  
                      l2771 1D90                        l2763 1D56                        l2755 1D0A  
                      l2747 1CD2                        l2739 1C94                        l2691 1B8E  
                      l2923 1A8A                        l2931 1AD2                        l2915 1A24  
                      l2907 19F2                        l2851 17E6                        l2843 17B6  
                      l2835 1794                        l2827 1762                        l2667 1736  
                      l2659 171E                        l2595 152A                        l2587 14F2  
                      l2579 14C6                        l2499 131E                        l2675 3066  
                      l3379 1266                        l3299 0F3C                        l3387 2B90  
                      l3459 2150                        l3467 21AA                        l3619 2FA0  
                      l3803 2692                        l3397 3184                        l3581 2D26  
                      l3573 2CFC                        l3565 2CD4                        l3557 2A64  
                      l3549 2A30                        l3661 258A                        l3653 2550  
                      l3645 24DC                        l3637 2490                        l3629 245E  
                      l2781 1DCE                        l2773 1D96                        l2765 1D58  
                      l2757 1D1E                        l2749 1CE2                        l2693 1B9E  
                      l2685 1B72                        l2941 1B46                        l2933 1AEC  
                      l2925 1A96                        l2917 1A32                        l2909 1A00  
                      l2853 17F6                        l2845 17C4                        l2837 179A  
                      l2829 1764                        l2597 155E                        l2589 14F4  
                      l2677 306A                        l3389 2BCA                        l3805 269E  
                      ?_pad 0011                        l3399 318A                        l3591 2D44  
                      l3583 2D2C                        l3575 2D0A                        l3567 2CE0  
                      l3559 2A76                        l3663 2598                        l3655 2552  
                      l3647 2518                        l3639 249C                        l2791 1E38  
                      l2783 1DD2                        l2775 1DA0                        l2767 1D68  
                      l2759 1D2C                        l2695 1BAE                        l2687 1B7E  
                      l2943 1B54                        l2935 1B00                        l2927 1AA4  
                      l2919 1A60                        l2871 1878                        l2863 1840  
                      l2855 17FC                        l2847 17C6                        l2839 17AA  
                      l2599 1560                        l2679 3138                        l3593 2D4A  
                      l3585 2D32                        l3577 2D10                        l3569 2CE6  
                      l3665 259A                        l3657 2556                        l3649 2524  
                      l2793 1E44                        l2785 1DE0                        l2777 1DAE  
                      l2769 1D7A                        l2697 1BBE                        l2689 1B8C  
                      l2961 2C58                        l2945 1B56                        l2937 1B1A  
                      l2929 1ACE                        l2881 18C2                        l2873 1890  
                      l2865 184C                        l2857 181C                        l2849 17D6  
                      l2953 3002                        l3595 2D50                        l3587 2D38  
                      l3579 2D20                        l3659 257A                        l2795 1E52  
                      l2787 1E0E                        l2779 1DC0                        l2699 1BC0  
                      l2971 2CD0                        l2963 2C68                        l2939 1B36  
                      l2947 1B5C                        l2891 1918                        l2883 18D2  
                      l2875 189C                        l2867 1856                        l2859 182C  
                      l2955 3012                        l3931 211A                        l3589 2D3E  
                      l3597 2D56                        l2797 1E7C                        l2965 2C96  
                      l2981 2832                        l2949 1B60                        l2893 1934  
                      l2885 18DE                        l2877 18A8                        l2869 186C  
                      l3933 219C                        l3599 2D62                        l2799 1E80  
                      l2967 2CA6                        l2959 2C2A                        l2991 28C0  
                      l2983 2842                        l2975 27C6                        l2895 1940  
                      l2887 18EE                        l2879 18B6                        l3927 1FA2  
                      l3791 25C8                        l2969 2CCA                        l2993 28C6  
                      l2985 2850                        l2977 27F4                        l2897 195C  
                      l2889 1908                        l3929 2060                        l3793 25DC  
                      l2987 2862                        l2979 2804                        l2899 1986  
                      l3795 264C                        l3787 25AC                        l2989 2870  
                      l2997 30CC                        l3797 2656                        l3789 25B8  
                      l2999 30E2                        l3799 2662                        STR_1 080F  
                      STR_2 0801                        STR_3 081C                        STR_6 0820  
                      u2000 2B1C                        u2001 2B18                        u2010 12A2  
                      u2011 129E                        u2100 13F6                        u2020 12B4  
                      u2101 13F2                        u2021 12B0                        u2110 140E  
                      u2030 12C4                        u2111 1408                        u2031 12C0  
                      u2200 14F2                        u2120 1410                        u2040 1306  
                      u3000 2E38                        u2201 14EE                        u2041 1302  
                      u3001 2E34                        u2210 152A                        u2130 1438  
                      u2050 131C                        u3010 290A                        u2211 1526  
                      u2131 1434                        u2051 1318                        u2300 1646  
                      u2220 1570                        u2140 1456                        u2060 132E  
                      u3020 2928                        u3100 222E                        u2301 1642  
                      u2221 156C                        u2141 1452                        u2061 132A  
                      u3021 2924                        u2310 165C                        u2230 15A6  
                      u2150 1476                        u2070 133E                        u3030 2950  
                      u3110 225C                        u2311 1658                        u2231 15A2  
                      u2151 1472                        u2071 133A                        u3031 294C  
                      u3015 2900                        u3111 2258                        u2320 1670  
                      u2240 15B6                        u2160 1484                        u2080 137A  
                      u3040 297A                        u3120 227E                        u3200 3000  
                      u2400 308A                        u2321 166C                        u2241 15B2  
                      u2161 1480                        u2081 1376                        u3041 2976  
                      u3121 227A                        u3105 2224                        u3201 2FFC  
                      u2401 3086                        u3210 2EC4                        u2410 1B8C  
                      u2330 168A                        u2250 15E2                        u2170 1494  
                      u2090 1388                        u3211 2EC0                        u2411 1B88  
                      u2331 1686                        u2251 15DE                        u2171 1490  
                      u2091 1384                        u3220 2EDA                        u2500 1D2C  
                      u2420 1B9E                        u2340 16C4                        u2260 15F2  
                      u2180 14C6                        u3060 29B4                        u3140 22EA  
                      u3300 096E                        u3221 2ED6                        u2501 1D28  
                      u2421 1B9A                        u2341 16C0                        u2261 15EE  
                      u2181 14C2                        u3061 29AE                        u3141 22E6  
                      u3301 096A                        u3230 2EF0                        u2510 1D56  
                      u2430 1BAE                        u2350 16D6                        u2270 160E  
                      u2190 14D4                        u3070 29B6                        u3150 230E  
                      u3310 0980                        u3231 2EEC                        u2511 1D52  
                      u2431 1BAA                        u2351 16D2                        u2271 160A  
                      u2191 14D0                        u3055 298C                        u3135 2292  
                      u3311 097C                        u3240 2F06                        u2600 1E52  
                      u2520 1D7A                        u2440 1BF2                        u2360 16E6  
                      u2280 161E                        u3160 232A                        u3136 229C  
                      u3080 30CA                        u3400 0C10                        u3320 09FA  
                      u3241 2F02                        u2601 1E4E                        u2521 1D76  
                      u2441 1BEE                        u2361 16E2                        u2281 161A  
                      u3161 2326                        u3137 22AC                        u3081 30C6  
                      u3401 0C0C                        u3321 09F6                        u2610 1E9A  
                      u2530 1D90                        u2450 1C04                        u2370 1706  
                      u2290 1630                        u3170 237E                        u3090 2E6C  
                      u3410 0C3A                        u3330 0A86                        u3250 084A  
                      u2611 1E96                        u2531 1D8C                        u2451 1C00  
                      u2371 1702                        u2291 162C                        u3155 2304  
                      u3091 2E68                        u3411 0C36                        u3331 0A82  
                      u3251 0846                        u2620 1ECA                        u2540 1DAE  
                      u2460 1C14                        u2700 181C                        u2380 1718  
                      u3180 239A                        u3500 1020                        u3420 0D82  
                      u3340 0AB8                        u3260 0894                        u2621 1EC6  
                      u2541 1DAA                        u2461 1C10                        u2701 1818  
                      u2381 1714                        u3181 2396                        u3501 101C  
                      u3421 0D7E                        u3341 0AB4                        u3261 0890  
                      u2630 1EF8                        u2550 1DCE                        u2470 1C54  
                      u2710 182C                        u2390 1734                        u3190 23D6  
                      u3510 1074                        u3430 0DE8                        u3350 0AF6  
                      u3270 08A4                        u2631 1EF4                        u2551 1DCA  
                      u2471 1C50                        u2711 1828                        u2391 1730  
                      u3191 23D2                        u3175 2374                        u3511 1070  
                      u3431 0DE4                        u3351 0AF2                        u3271 08A0  
                      u2560 1DE0                        u2480 1C94                        u2800 1AEC  
                      u2720 19A6                        u2640 1762                        u3520 1146  
                      u3440 0E30                        u3360 0B82                        u3280 08E2  
                      u3600 2B90                        u2561 1DDC                        u2481 1C90  
                      u2801 1AE8                        u2641 175E                        u3521 1142  
                      u3441 0E2C                        u3361 0B7E                        u3281 08DE  
                      u3601 2B8C                        u2570 1E0E                        u2490 1D0A  
                      u2810 1B1A                        u2730 1A00                        u2650 1774  
                      u3530 1162                        u3450 0E40                        u3370 0BB8  
                      u3290 08F4                        u3610 2C20                        u2571 1E0A  
                      u2491 1D06                        u2811 1B16                        u2731 19FC  
                      u2651 1770                        u3531 115E                        u3451 0E3C  
                      u3371 0BB4                        u3291 08F0                        u3611 2C1C  
                      u3700 2A76                        u2580 1E24                        u2900 28C0  
                      u2820 1B54                        u2740 1A20                        u2660 1784  
                      u3540 11C8                        u3460 0EDA                        u3380 0BD0  
                      u3620 1F30                        u3701 2A72                        u2581 1E20  
                      u2901 28BC                        u2821 1B50                        u2741 1A1C  
                      u2725 199C                        u2661 1780                        u3541 11C2  
                      u3461 0ED6                        u3381 0BCC                        u3621 1F2C  
                      u3710 2D8E                        u2590 1E38                        u2830 2C58  
                      u2750 1A32                        u2670 17C4                        u2910 30E2  
                      u3550 11CA                        u3470 0F28                        u3390 0C02  
                      u3630 1FC2                        u2591 1E34                        u2831 2C54  
                      u2751 1A2E                        u2671 17C0                        u2911 30DE  
                      u3471 0F24                        u3391 0BFE                        u3631 1FBE  
                      u3720 2DC2                        u3800 2542                        u2840 2C96  
                      u2760 1A60                        u2680 17D6                        u2920 26D6  
                      u3560 11DC                        u3480 0FD6                        u3640 1FE6  
                      u3801 253E                        u2841 2C92                        u2761 1A5C  
                      u2681 17D2                        u2921 26D2                        u3561 11D8  
                      u3481 0FD2                        u3641 1FE2                        u3730 2DD2  
                      u3810 2550                        u2850 2CCA                        u2770 1A76  
                      u2690 17E6                        u2930 270A                        u1970 2AAC  
                      u3570 121A                        u3490 1012                        u3650 209A  
                      u3731 2DCE                        u3811 254C                        u2851 2CC6  
                      u2771 1A72                        u2691 17E2                        u1971 2AA8  
                      u3571 1216                        u3491 100E                        u3651 2096  
                      u3820 258A                        u3740 240A                        u2860 27F4  
                      u2780 1A8A                        u2940 2738                        u1980 2ABE  
                      u3580 1238                        u3660 2F56                        u3717 2D84  
                      u3821 2586                        u3741 2406                        u2861 27F0  
                      u2781 1A86                        u2941 2734                        u1981 2ABA  
                      u3581 1234                        u3661 2F52                        u3670 29DA  
                      u3830 2598                        u3750 2418                        u2870 2832  
                      u2790 1AA4                        u2950 274C                        u1990 2AE6  
                      u3590 1248                        u3671 29D6                        u3727 2DB8  
                      u3831 2594                        u3751 2414                        u2871 282E  
                      u2791 1AA0                        u2951 2748                        u2935 2700  
                      u1991 2AE2                        u3591 1244                        u3680 2A0E  
                      u3760 2474                        u2880 2850                        u2960 2774  
                      u3920 25C8                        u3681 2A0A                        u3761 2470  
                      u2881 284C                        u2961 2770                        u3921 25C4  
                      u3690 2A42                        u3770 24CA                        u2890 2870  
                      u2970 2794                        u3691 2A3E                        u3771 24C6  
                      u2891 286C                        u2971 2790                        u3780 2514  
                      u2980 27A4                        u3781 2510                        u2981 27A0  
                      u3790 2532                        u2990 2DE2                        u3791 252E  
                      u2991 2DDE                        u3937 26AA                        u3947 3120  
                      u3957 3130                        u3967 2CEC                        u3977 2D02  
                      u3987 2D16                        u3997 3192           ?_Lcd_Write_String 0005  
                      _dbuf 0100                        _labs 2E4E                        _main 25AC  
                      _prec 00C9                        pad@i 0018                        pad@p 0015  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        pad@w 001A  
                      fsr2l 0FD9                        _volt 00C3               ___fpclassifyf 28CA  
                      prodh 0FF4                        prodl 0FF3                        start 0000  
        ??_Lcd_Write_String 0007             ___fldiv@new_exp 0039             __end_of_Lcd_Cmd 31A0  
              ___param_bank 0000                       ??_pad 0017               ___fltol@sign1 0009  
                     ?_labs 0001             __end_of___fladd 1748                       ?_main 0001  
           __end_of___fldiv 1F0C             __end_of___flneg 3104             __end_of___flmul 1B72  
           __end_of___flsub 3048             __end_of___fltol 27C6                vfpfcnvrt@fmt 008E  
                     _flags 00CD         read_prec_or_width@c 000D         read_prec_or_width@n 000E  
                     _fputc 2A9A                       _v_adc 00CB                       _fputs 3048  
                     labs@a 0001                       pad@fp 0011                       _width 00C7  
                     _putch 31C4             __end_of_set_adc 31B6                       tablat 0FF5  
                     status 0FD8             __end_of_sprintf 2FB2              ?___fpclassifyf 0001  
          __end_of_Lcd_Init 2D56            __end_of_Lcd_Port 2F10             __initialization 315E  
              __end_of_labs 2EB4                __end_of_main 26C0                      ??_labs 0005  
                    ??_main 00B9               __activetblptr 0002  __end_of_read_prec_or_width 2C2A  
                    _ADCON0 0FC2                      _ADCON1 0FC1                      _ADCON2 0FC0  
                    ?_fputc 0001                      ?_fputs 000A                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      ?_putch 0001                   ??_Lcd_Cmd 0002  
             vfpfcnvrt@done 0096            __end_of___xxtofl 25AC                vfprintf@cfmt 00A1  
                    ___flge 27C6                      ___fleq 2C2A                   ??___fladd 0009  
                    ___wmul 3138                   ??___fldiv 0030                   ??___flneg 0005  
                 ??___flmul 0017                   ??___flsub 0030                   ??___fltol 0005  
                    _efgtoa 0826                      _buffer 00CE                      _floorf 21E6  
                    _memcpy 2FB2        read_prec_or_width@ap 0009                      clear_0 3164  
                    clear_1 3170                      isa$std 0001                      pad@buf 0013  
                    _strcpy 308C                      fputc@c 0001                      fputs@c 000E  
                    fputs@i 000F                      fputs@s 000A             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                 ??_set_adc 0001                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                      putch@c 0001            __end_of_vfprintf 2F62  
                 ??_sprintf 0060             Lcd_Set_Cursor@a 0005             Lcd_Set_Cursor@b 0004  
           Lcd_Set_Cursor@y 0007             Lcd_Set_Cursor@z 0006                  ___flge@ff1 0028  
                ___flge@ff2 002C             ??___fpclassifyf 0005                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                  __accesstop 0060     __end_of__initialization 3176  
                ___flneg@f1 0001           __end_of_Lcd_Clear 31C4               ___rparam_used 0001  
                ___fltol@f1 0001              __pcstackCOMRAM 0001               __end_of_fputc 2B64  
             __end_of_fputs 308C               __end_of_putch 31C6              _Lcd_Set_Cursor 29C8  
                 ?_Lcd_Init 0001                   ?_Lcd_Port 0001                     ??_fputc 0005  
                   ??_fputs 000E                     ??_putch 0001                  __pbssBANK0 00BB  
                __pbssBANK1 0100                  _efgtoa$898 0066                     ?___flge 0028  
                   ?___fleq 0001                     ?___wmul 0001                     ?_efgtoa 0055  
                   ?_floorf 0041                     ?_memcpy 0001      __end_of_Lcd_Set_Cursor 2A9A  
                   ?_strcpy 0001                   ?___xxtofl 0001                  ??_Lcd_Init 0004  
                ??_Lcd_Port 0001              _Lcd_Write_Char 3104                     _Lcd_Cmd 3180  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 1288  
                   ___fldiv 1B72                     ___flneg 30CC                     ___flmul 1748  
                   ___flsub 3002                     ___fltol 26C0                   ?_vfprintf 009B  
              __psmallconst 0800                     __pcinit 315E                     __ramtop 0800  
           ?_Lcd_Set_Cursor 0004                     __ptext0 25AC                     __ptext1 2F62  
                   __ptext2 2F10                     __ptext3 1F0C                     __ptext4 2B64  
                   __ptext5 3138                     __ptext6 0826                     __ptext7 308C  
                   __ptext8 2DD4                     __ptext9 3048       read_prec_or_width@fmt 0007  
                ??___xxtofl 0005                     _set_adc 31A0                     efgtoa@c 005B  
                   efgtoa@d 006B                     efgtoa@e 006F                     efgtoa@f 0057  
                   efgtoa@g 0082                     efgtoa@h 0077                     efgtoa@i 007F  
                   efgtoa@l 007B                     efgtoa@m 006D                     efgtoa@n 0086  
                   efgtoa@p 0062                     efgtoa@t 0064                     efgtoa@u 0088  
                   efgtoa@w 0071                     _sprintf 2F62      __end_of_Lcd_Write_Char 3138  
      end_of_initialization 3176                     floorf@e 004F                     floorf@m 004B  
                   floorf@u 0051                     floorf@x 0041                     memcpy@d 0007  
                   memcpy@n 0005                     memcpy@s 0009                     fputc@fp 0003  
             __Lmediumconst 0000                     fputs@fp 000C          _read_prec_or_width 2B64  
         __end_of_vfpfcnvrt 21E6                  efgtoa@mode 0069                  efgtoa@sign 0081  
                   postdec2 0FDD         ?_read_prec_or_width 0007                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0092  
                 Lcd_Port@a 0001                  ??_vfprintf 0060                     strcpy@d 0007  
                   strcpy@s 0005                 ___fladd@grs 0010               ___xxtofl@sign 0009  
                 _TRISAbits 0F92                   _TRISDbits 0F95        ??_read_prec_or_width 000B  
               ___fldiv@grs 003B                 ___fldiv@rem 0034             ?_Lcd_Write_Char 0001  
         Lcd_Write_String@a 0005           Lcd_Write_String@i 0009                 ___flmul@grs 001C  
                 _Lcd_Clear 31B6              __end_of___flge 28CA              __end_of___fleq 2CD4  
               vfpfcnvrt@ap 0090                 vfpfcnvrt@cp 0099                 vfpfcnvrt@fp 008C  
            __end_of___wmul 315E            _Lcd_Write_String 2D56              __end_of_efgtoa 1288  
            __end_of_floorf 23F8              __end_of_memcpy 3002                  floorf@F526 00BB  
            __end_of_strcpy 30CC         start_initialization 315E                 __end_of_pad 2E4E  
     __end_of___fpclassifyf 29C8                 vfprintf@fmt 009D                  ?_Lcd_Clear 0001  
                  ??___flge 0030                    ??___fleq 0009                    ??___wmul 0005  
                  ??_efgtoa 005C                    ??_floorf 0045                    ??_memcpy 0007  
           Lcd_Write_Char@a 0004             Lcd_Write_Char@y 0003                    ??_strcpy 0005  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 002C  
                 ___fldiv@b 0028                   ___flmul@a 0013                   ___flmul@b 000F  
                 ___flsub@a 002C                   ___flsub@b 0028               __pcstackBANK0 0060  
                  ?_Lcd_Cmd 0001            ??_Lcd_Set_Cursor 0005                    ?___fladd 0001  
                  ?___fldiv 0028                    ?___flneg 0001                    ?___flmul 000F  
                  ?___flsub 0028                    ?___fltol 0001                 __smallconst 0800  
                  ?_set_adc 0001                    ?_sprintf 00A3              ___wmul@product 0005  
                  _LATDbits 0F8C                    Lcd_Cmd@a 0003                 ??_Lcd_Clear 0004  
                 _vfpfcnvrt 1F0C                  _ADCON0bits 0FC2           ___wmul@multiplier 0001  
          ??_Lcd_Write_Char 0002                    _Lcd_Init 2CD4                    _Lcd_Port 2EB4  
                vfpfcnvrt@c 0098    __end_of_Lcd_Write_String 2DD4                    __Hrparam 0000  
                 memcpy@tmp 000B                  vfprintf@ap 009F                    __Lrparam 0000  
                vfprintf@fp 009B                  ?_vfpfcnvrt 008C                  _ANSELAbits 0F5B  
        ___fpclassifyf@F465 00BF                  sprintf@fmt 00A5                    ___xxtofl 23F8  
                  __ptext10 2A9A                    __ptext11 31C4                    __ptext20 1748  
                  __ptext12 2FB2                    __ptext21 27C6                    __ptext13 2E4E  
                  __ptext30 31B6                    __ptext22 2C2A                    __ptext14 21E6  
                  __ptext31 3180                    __ptext23 1B72                    __ptext15 28CA  
                  __ptext32 2EB4                    __ptext24 31A0                    __ptext16 26C0  
                  __ptext25 23F8                    __ptext17 3002                    __ptext26 2D56  
                  __ptext18 1288                    __ptext27 3104                    __ptext19 30CC  
                  __ptext28 29C8                    __ptext29 2CD4                  strcpy@dest 0001  
                  efgtoa@fp 0055                    efgtoa@ne 0060                    efgtoa@pp 0068  
                  efgtoa@ou 0073                    isa$xinst 0000                    _vfprintf 2F10  
                  memcpy@d1 0001                    memcpy@s1 0003          Lcd_Write_Char@temp 0002  
                 sprintf@ap 00AB                   strcpy@src 0003                 efgtoa@nmode 006A  
               ??_vfpfcnvrt 005E          Lcd_Set_Cursor@temp 0008                    sprintf@f 00AD  
                  sprintf@s 00A3               ___fladd@signs 000D                ___fladd@aexp 000E  
              ___fladd@bexp 000F  
