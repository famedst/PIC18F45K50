

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jul 19 10:11:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 22/03/2023 GMT
    58                           ; 
    59                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F45K50 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92                           	psect	idataBANK0
    93   00345C                     __pidataBANK0:
    94                           	callstack 0
    95                           
    96                           ;initializer for _t
    97   00345C  8F5C               	dw	36700
    98   00345E  41C2               	dw	16834
    99                           
   100                           ;initializer for _v
   101   003460  03FF               	dw	1023
   102   000000                     _ANSELD	set	3934
   103   000000                     _LATDbits	set	3980
   104   000000                     _TRISEbits	set	3990
   105   000000                     _TRISDbits	set	3989
   106                           
   107                           	psect	smallconst
   108   000800                     __psmallconst:
   109                           	callstack 0
   110   000800  00                 	db	0
   111   000801                     STR_1:
   112                           
   113                           ; BSR set to: 15
   114   000801  54                 	db	84	;'T'
   115   000802  65                 	db	101	;'e'
   116   000803  73                 	db	115	;'s'
   117   000804  74                 	db	116	;'t'
   118   000805  20                 	db	32
   119   000806  4C                 	db	76	;'L'
   120   000807  43                 	db	67	;'C'
   121   000808  44                 	db	68	;'D'
   122   000809  20                 	db	32
   123   00080A  31                 	db	49	;'1'
   124   00080B  36                 	db	54	;'6'
   125   00080C  78                 	db	120	;'x'
   126   00080D  32                 	db	50	;'2'
   127   00080E  00                 	db	0
   128   00080F                     STR_5:
   129                           
   130                           ; BSR set to: 15
   131   00080F  46                 	db	70	;'F'
   132   000810  6C                 	db	108	;'l'
   133   000811  6F                 	db	111	;'o'
   134   000812  61                 	db	97	;'a'
   135   000813  74                 	db	116	;'t'
   136   000814  3A                 	db	58	;':'
   137   000815  20                 	db	32
   138   000816  25                 	db	37
   139   000817  30                 	db	48	;'0'
   140   000818  2E                 	db	46
   141   000819  32                 	db	50	;'2'
   142   00081A  66                 	db	102	;'f'
   143   00081B  00                 	db	0
   144   00081C                     STR_3:
   145                           
   146                           ; BSR set to: 15
   147   00081C  48                 	db	72	;'H'
   148   00081D  6F                 	db	111	;'o'
   149   00081E  6C                 	db	108	;'l'
   150   00081F  61                 	db	97	;'a'
   151   000820  20                 	db	32
   152   000821  61                 	db	97	;'a'
   153   000822  20                 	db	32
   154   000823  74                 	db	116	;'t'
   155   000824  6F                 	db	111	;'o'
   156   000825  64                 	db	100	;'d'
   157   000826  6F                 	db	111	;'o'
   158   000827  73                 	db	115	;'s'
   159   000828  00                 	db	0
   160   000829                     STR_2:
   161                           
   162                           ; BSR set to: 15
   163   000829  50                 	db	80	;'P'
   164   00082A  49                 	db	73	;'I'
   165   00082B  43                 	db	67	;'C'
   166   00082C  31                 	db	49	;'1'
   167   00082D  38                 	db	56	;'8'
   168   00082E  46                 	db	70	;'F'
   169   00082F  34                 	db	52	;'4'
   170   000830  35                 	db	53	;'5'
   171   000831  4B                 	db	75	;'K'
   172   000832  35                 	db	53	;'5'
   173   000833  30                 	db	48	;'0'
   174   000834  00                 	db	0
   175   000835                     STR_4:
   176                           
   177                           ; BSR set to: 15
   178   000835  49                 	db	73	;'I'
   179   000836  6E                 	db	110	;'n'
   180   000837  74                 	db	116	;'t'
   181   000838  3A                 	db	58	;':'
   182   000839  20                 	db	32
   183   00083A  25                 	db	37
   184   00083B  75                 	db	117	;'u'
   185   00083C  00                 	db	0
   186   00083D                     STR_6:
   187                           
   188                           ; BSR set to: 15
   189   00083D  69                 	db	105	;'i'
   190   00083E  6E                 	db	110	;'n'
   191   00083F  66                 	db	102	;'f'
   192   000840  00                 	db	0
   193   000841                     STR_9:
   194                           
   195                           ; BSR set to: 15
   196   000841  6E                 	db	110	;'n'
   197   000842  61                 	db	97	;'a'
   198   000843  6E                 	db	110	;'n'
   199   000844  00                 	db	0
   200   000845  00                 	db	0	; dummy byte at the end
   201   000000                     
   202                           ; #config settings
   203                           
   204                           	psect	cinit
   205   00324A                     __pcinit:
   206                           	callstack 0
   207   00324A                     start_initialization:
   208                           	callstack 0
   209   00324A                     __initialization:
   210                           	callstack 0
   211                           
   212                           ; Initialize objects allocated to BANK0 (6 bytes)
   213                           ; load TBLPTR registers with __pidataBANK0
   214   00324A  0E5C               	movlw	low __pidataBANK0
   215   00324C  6EF6               	movwf	tblptrl,c
   216   00324E  0E34               	movlw	high __pidataBANK0
   217   003250  6EF7               	movwf	tblptrh,c
   218   003252  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   219   003254  6EF8               	movwf	tblptru,c
   220   003256  EE00  F0B8         	lfsr	0,__pdataBANK0
   221   00325A  EE10 F006          	lfsr	1,6
   222   00325E                     copy_data0:
   223   00325E  0009               	tblrd		*+
   224   003260  CFF5 FFEE          	movff	tablat,postinc0
   225   003264  50E5               	movf	postdec1,w,c
   226   003266  50E1               	movf	fsr1l,w,c
   227   003268  E1FA               	bnz	copy_data0
   228                           
   229                           ; Clear objects allocated to BANK1 (80 bytes)
   230   00326A  EE01  F000         	lfsr	0,__pbssBANK1
   231   00326E  0E50               	movlw	80
   232   003270                     clear_0:
   233   003270  6AEE               	clrf	postinc0,c
   234   003272  06E8               	decf	wreg,f,c
   235   003274  E1FD               	bnz	clear_0
   236                           
   237                           ; Clear objects allocated to BANK0 (30 bytes)
   238   003276  EE00  F09A         	lfsr	0,__pbssBANK0
   239   00327A  0E1E               	movlw	30
   240   00327C                     clear_1:
   241   00327C  6AEE               	clrf	postinc0,c
   242   00327E  06E8               	decf	wreg,f,c
   243   003280  E1FD               	bnz	clear_1
   244                           
   245                           ; Clear objects allocated to COMRAM (3 bytes)
   246   003282  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   247   003284  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   248   003286  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   249   003288                     end_of_initialization:
   250                           	callstack 0
   251   003288                     __end_of__initialization:
   252                           	callstack 0
   253   003288  0E00               	movlw	low (__Lmediumconst shr (0+16))
   254   00328A  6EF8               	movwf	tblptru,c
   255   00328C  0100               	movlb	0
   256   00328E  EF5F  F011         	goto	_main	;jump to C main() function
   257                           
   258                           	psect	bssCOMRAM
   259   00005C                     __pbssCOMRAM:
   260                           	callstack 0
   261   00005C                     _prec:
   262                           	callstack 0
   263   00005C                     	ds	2
   264   00005E                     _flags:
   265                           	callstack 0
   266   00005E                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269   00009A                     __pbssBANK0:
   270                           	callstack 0
   271   00009A                     floorf@F526:
   272                           	callstack 0
   273   00009A                     	ds	4
   274   00009E                     ___fpclassifyf@F465:
   275                           	callstack 0
   276   00009E                     	ds	4
   277   0000A2                     _width:
   278                           	callstack 0
   279   0000A2                     	ds	2
   280   0000A4                     _buffer:
   281                           	callstack 0
   282   0000A4                     	ds	20
   283                           
   284                           	psect	dataBANK0
   285   0000B8                     __pdataBANK0:
   286                           	callstack 0
   287   0000B8                     _t:
   288                           	callstack 0
   289   0000B8                     	ds	4
   290   0000BC                     _v:
   291                           	callstack 0
   292   0000BC                     	ds	2
   293                           
   294                           	psect	bssBANK1
   295   000100                     __pbssBANK1:
   296                           	callstack 0
   297   000100                     _dbuf:
   298                           	callstack 0
   299   000100                     	ds	80
   300                           
   301                           	psect	cstackBANK0
   302   000060                     __pcstackBANK0:
   303                           	callstack 0
   304   000060                     efgtoa@ne:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x0
   308   000060                     	ds	2
   309   000062                     efgtoa@p:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x2
   313   000062                     	ds	2
   314   000064                     efgtoa@t:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x4
   318   000064                     	ds	2
   319   000066                     _efgtoa$819:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x6
   323   000066                     	ds	2
   324   000068                     efgtoa@pp:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x8
   328   000068                     	ds	1
   329   000069                     efgtoa@mode:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x9
   333   000069                     	ds	1
   334   00006A                     efgtoa@nmode:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0xA
   338   00006A                     	ds	1
   339   00006B                     efgtoa@d:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0xB
   343   00006B                     	ds	2
   344   00006D                     efgtoa@m:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0xD
   348   00006D                     	ds	2
   349   00006F                     efgtoa@e:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0xF
   353   00006F                     	ds	2
   354   000071                     efgtoa@w:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x11
   358   000071                     	ds	2
   359   000073                     efgtoa@ou:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x13
   363   000073                     	ds	4
   364   000077                     efgtoa@h:
   365                           	callstack 0
   366                           
   367                           ; 4 bytes @ 0x17
   368   000077                     	ds	4
   369   00007B                     efgtoa@l:
   370                           	callstack 0
   371                           
   372                           ; 4 bytes @ 0x1B
   373   00007B                     	ds	4
   374   00007F                     efgtoa@i:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x1F
   378   00007F                     	ds	2
   379   000081                     efgtoa@sign:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x21
   383   000081                     	ds	1
   384   000082                     efgtoa@g:
   385                           	callstack 0
   386                           
   387                           ; 4 bytes @ 0x22
   388   000082                     	ds	4
   389   000086                     efgtoa@n:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x26
   393   000086                     	ds	2
   394   000088                     efgtoa@u:
   395                           	callstack 0
   396                           
   397                           ; 4 bytes @ 0x28
   398   000088                     	ds	4
   399   00008C                     ?_vfprintf:
   400                           	callstack 0
   401   00008C                     vfprintf@fp:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x2C
   405   00008C                     	ds	2
   406   00008E                     vfprintf@fmt:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x2E
   410   00008E                     	ds	2
   411   000090                     vfprintf@ap:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x30
   415   000090                     	ds	2
   416   000092                     ?_sprintf:
   417                           	callstack 0
   418   000092                     sprintf@s:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x32
   422   000092                     	ds	2
   423   000094                     sprintf@fmt:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x34
   427   000094                     	ds	6
   428                           
   429                           	psect	cstackCOMRAM
   430   000001                     __pcstackCOMRAM:
   431                           	callstack 0
   432   000001                     ?___fpclassifyf:
   433                           	callstack 0
   434   000001                     ?___wmul:
   435                           	callstack 0
   436   000001                     ?___lwdiv:
   437                           	callstack 0
   438   000001                     ?___lwmod:
   439                           	callstack 0
   440   000001                     ?___fladd:
   441                           	callstack 0
   442   000001                     ?___fldiv:
   443                           	callstack 0
   444   000001                     ?___flmul:
   445                           	callstack 0
   446   000001                     ?_labs:
   447                           	callstack 0
   448   000001                     ?___flneg:
   449                           	callstack 0
   450   000001                     ?___fltol:
   451                           	callstack 0
   452   000001                     Lcd_Port@a:
   453                           	callstack 0
   454   000001                     ___wmul@multiplier:
   455                           	callstack 0
   456   000001                     ___lwdiv@dividend:
   457                           	callstack 0
   458   000001                     ___lwmod@dividend:
   459                           	callstack 0
   460   000001                     memcpy@d1:
   461                           	callstack 0
   462   000001                     fputc@c:
   463                           	callstack 0
   464   000001                     strcpy@dest:
   465                           	callstack 0
   466   000001                     ___fleq@ff1:
   467                           	callstack 0
   468   000001                     ___flneg@f1:
   469                           	callstack 0
   470   000001                     ___fltol@f1:
   471                           	callstack 0
   472   000001                     ___fladd@b:
   473                           	callstack 0
   474   000001                     ___fldiv@b:
   475                           	callstack 0
   476   000001                     ___flmul@b:
   477                           	callstack 0
   478   000001                     ___fpclassifyf@x:
   479                           	callstack 0
   480   000001                     labs@a:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0x0
   484   000001                     	ds	1
   485   000002                     ??_Lcd_Cmd:
   486   000002                     Lcd_Write_Char@temp:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x1
   490   000002                     	ds	1
   491   000003                     Lcd_Cmd@a:
   492                           	callstack 0
   493   000003                     Lcd_Write_Char@y:
   494                           	callstack 0
   495   000003                     ___wmul@multiplicand:
   496                           	callstack 0
   497   000003                     ___lwdiv@divisor:
   498                           	callstack 0
   499   000003                     ___lwmod@divisor:
   500                           	callstack 0
   501   000003                     memcpy@s1:
   502                           	callstack 0
   503   000003                     fputc@fp:
   504                           	callstack 0
   505   000003                     strcpy@src:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x2
   509   000003                     	ds	1
   510   000004                     ??_Lcd_Init:
   511   000004                     Lcd_Set_Cursor@b:
   512                           	callstack 0
   513   000004                     Lcd_Write_Char@a:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x3
   517   000004                     	ds	1
   518   000005                     ??_fputc:
   519   000005                     ??___fpclassifyf:
   520   000005                     ??_labs:
   521   000005                     ??___fltol:
   522   000005                     Lcd_Set_Cursor@a:
   523                           	callstack 0
   524   000005                     ___lwmod@counter:
   525                           	callstack 0
   526   000005                     Lcd_Write_String@a:
   527                           	callstack 0
   528   000005                     ___wmul@product:
   529                           	callstack 0
   530   000005                     ___lwdiv@quotient:
   531                           	callstack 0
   532   000005                     memcpy@n:
   533                           	callstack 0
   534   000005                     strcpy@s:
   535                           	callstack 0
   536   000005                     ___fleq@ff2:
   537                           	callstack 0
   538   000005                     ___fladd@a:
   539                           	callstack 0
   540   000005                     ___fldiv@a:
   541                           	callstack 0
   542   000005                     ___flmul@a:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x4
   546   000005                     	ds	1
   547   000006                     Lcd_Set_Cursor@z:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x5
   551   000006                     	ds	1
   552   000007                     ??_Lcd_Write_String:
   553   000007                     ?_read_prec_or_width:
   554                           	callstack 0
   555   000007                     Lcd_Set_Cursor@y:
   556                           	callstack 0
   557   000007                     ___lwdiv@counter:
   558                           	callstack 0
   559   000007                     read_prec_or_width@fmt:
   560                           	callstack 0
   561   000007                     memcpy@d:
   562                           	callstack 0
   563   000007                     strcpy@d:
   564                           	callstack 0
   565                           
   566                           ; 2 bytes @ 0x6
   567   000007                     	ds	1
   568   000008                     Lcd_Set_Cursor@temp:
   569                           	callstack 0
   570                           
   571                           ; 1 bytes @ 0x7
   572   000008                     	ds	1
   573   000009                     ??___fladd:
   574   000009                     ??___fldiv:
   575   000009                     ??___flmul:
   576   000009                     ??___fleq:
   577   000009                     ___fltol@sign1:
   578                           	callstack 0
   579   000009                     Lcd_Write_String@i:
   580                           	callstack 0
   581   000009                     read_prec_or_width@ap:
   582                           	callstack 0
   583   000009                     ___fpclassifyf@e:
   584                           	callstack 0
   585   000009                     memcpy@s:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x8
   589   000009                     	ds	1
   590   00000A                     ___fltol@exp1:
   591                           	callstack 0
   592   00000A                     fputs@s:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x9
   596   00000A                     	ds	1
   597   00000B                     ??_read_prec_or_width:
   598   00000B                     memcpy@tmp:
   599                           	callstack 0
   600   00000B                     ___fpclassifyf@u:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0xA
   604   00000B                     	ds	1
   605   00000C                     fputs@fp:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0xB
   609   00000C                     	ds	1
   610   00000D                     ___fladd@signs:
   611                           	callstack 0
   612   00000D                     ___flmul@sign:
   613                           	callstack 0
   614   00000D                     read_prec_or_width@c:
   615                           	callstack 0
   616   00000D                     ___fldiv@rem:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0xC
   620   00000D                     	ds	1
   621   00000E                     ___fladd@aexp:
   622                           	callstack 0
   623   00000E                     fputs@c:
   624                           	callstack 0
   625   00000E                     read_prec_or_width@n:
   626                           	callstack 0
   627   00000E                     ___flmul@grs:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0xD
   631   00000E                     	ds	1
   632   00000F                     ___fladd@bexp:
   633                           	callstack 0
   634   00000F                     fputs@i:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0xE
   638   00000F                     	ds	1
   639   000010                     ___fladd@grs:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0xF
   643   000010                     	ds	1
   644   000011                     ___fldiv@sign:
   645                           	callstack 0
   646   000011                     pad@fp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x10
   650   000011                     	ds	1
   651   000012                     ___flmul@aexp:
   652                           	callstack 0
   653   000012                     ___fldiv@new_exp:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x11
   657   000012                     	ds	1
   658   000013                     ___flmul@bexp:
   659                           	callstack 0
   660   000013                     pad@buf:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x12
   664   000013                     	ds	1
   665   000014                     ___fldiv@grs:
   666                           	callstack 0
   667   000014                     ___flmul@prod:
   668                           	callstack 0
   669                           
   670                           ; 4 bytes @ 0x13
   671   000014                     	ds	1
   672   000015                     pad@p:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x14
   676   000015                     	ds	2
   677   000017                     ??_pad:
   678                           
   679                           ; 1 bytes @ 0x16
   680   000017                     	ds	1
   681   000018                     ___fldiv@bexp:
   682                           	callstack 0
   683   000018                     ___flmul@temp:
   684                           	callstack 0
   685   000018                     pad@i:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x17
   689   000018                     	ds	1
   690   000019                     ___fldiv@aexp:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x18
   694   000019                     	ds	1
   695   00001A                     ?___flsub:
   696                           	callstack 0
   697   00001A                     ?_floorf:
   698                           	callstack 0
   699   00001A                     pad@w:
   700                           	callstack 0
   701   00001A                     ___flge@ff1:
   702                           	callstack 0
   703   00001A                     ___flsub@b:
   704                           	callstack 0
   705   00001A                     floorf@x:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x19
   709   00001A                     	ds	2
   710   00001C                     utoa@fp:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x1B
   714   00001C                     	ds	2
   715   00001E                     ??_floorf:
   716   00001E                     utoa@d:
   717                           	callstack 0
   718   00001E                     ___flge@ff2:
   719                           	callstack 0
   720   00001E                     ___flsub@a:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x1D
   724   00001E                     	ds	2
   725   000020                     utoa@p:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x1F
   729   000020                     	ds	2
   730   000022                     ??___flge:
   731   000022                     utoa@w:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x21
   735   000022                     	ds	2
   736   000024                     utoa@i:
   737                           	callstack 0
   738   000024                     floorf@m:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x23
   742   000024                     	ds	4
   743   000028                     floorf@e:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x27
   747   000028                     	ds	2
   748   00002A                     floorf@u:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x29
   752   00002A                     	ds	4
   753   00002E                     efgtoa@fp:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x2D
   757   00002E                     	ds	2
   758   000030                     efgtoa@f:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x2F
   762   000030                     	ds	4
   763   000034                     efgtoa@c:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x33
   767   000034                     	ds	1
   768   000035                     ??_efgtoa:
   769                           
   770                           ; 1 bytes @ 0x34
   771   000035                     	ds	2
   772   000037                     vfpfcnvrt@fp:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x36
   776   000037                     	ds	2
   777   000039                     vfpfcnvrt@fmt:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x38
   781   000039                     	ds	2
   782   00003B                     vfpfcnvrt@ap:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x3A
   786   00003B                     	ds	2
   787   00003D                     ??_vfpfcnvrt:
   788                           
   789                           ; 1 bytes @ 0x3C
   790   00003D                     	ds	2
   791   00003F                     vfpfcnvrt@done:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x3E
   795   00003F                     	ds	2
   796   000041                     vfpfcnvrt@convarg:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x40
   800   000041                     	ds	4
   801   000045                     vfpfcnvrt@c:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x44
   805   000045                     	ds	1
   806   000046                     vfpfcnvrt@cp:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x45
   810   000046                     	ds	2
   811   000048                     vfprintf@cfmt:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x47
   815   000048                     	ds	2
   816   00004A                     sprintf@ap:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x49
   820   00004A                     	ds	2
   821   00004C                     sprintf@f:
   822                           	callstack 0
   823                           
   824                           ; 12 bytes @ 0x4B
   825   00004C                     	ds	12
   826   000058                     ??_main:
   827                           
   828                           ; 1 bytes @ 0x57
   829   000058                     	ds	2
   830   00005A                     main@i:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x59
   834   00005A                     	ds	1
   835   00005B                     main@i_113:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x5A
   839   00005B                     	ds	1
   840                           
   841 ;;
   842 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   843 ;;
   844 ;; *************** function _main *****************
   845 ;; Defined at:
   846 ;;		line 22 in file "main_lcd.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  i               1   90[COMRAM] unsigned char 
   851 ;;  i               1   89[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         0       0       0       0       0       0       0       0       0
   862 ;;      Locals:         2       0       0       0       0       0       0       0       0
   863 ;;      Temps:          2       0       0       0       0       0       0       0       0
   864 ;;      Totals:         4       0       0       0       0       0       0       0       0
   865 ;;Total ram usage:        4 bytes
   866 ;; Hardware stack levels required when called: 8
   867 ;; This function calls:
   868 ;;		_InitPort
   869 ;;		_Lcd_Blink
   870 ;;		_Lcd_Clear
   871 ;;		_Lcd_Init
   872 ;;		_Lcd_NoBlink
   873 ;;		_Lcd_Set_Cursor
   874 ;;		_Lcd_Shift_Left
   875 ;;		_Lcd_Shift_Right
   876 ;;		_Lcd_Write_String
   877 ;;		_sprintf
   878 ;; This function is called by:
   879 ;;		Startup code after reset
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text0
   884   0022BE                     __ptext0:
   885                           	callstack 0
   886   0022BE                     _main:
   887                           	callstack 23
   888   0022BE                     
   889                           ;main_lcd.c: 23:     InitPort();
   890   0022BE  EC2A  F01A         	call	_InitPort	;wreg free
   891                           
   892                           ;main_lcd.c: 24:     Lcd_Init();
   893   0022C2  EC23  F017         	call	_Lcd_Init	;wreg free
   894                           
   895                           ;main_lcd.c: 25:     Lcd_Clear();
   896   0022C6  EC1C  F01A         	call	_Lcd_Clear	;wreg free
   897   0022CA                     l3995:
   898                           
   899                           ;main_lcd.c: 27:         TRISEbits.RE0 = 0;
   900   0022CA  9096               	bcf	150,0,c	;volatile
   901   0022CC                     
   902                           ;main_lcd.c: 28:         TRISEbits.RE1 = 1;
   903   0022CC  8296               	bsf	150,1,c	;volatile
   904   0022CE                     
   905                           ;main_lcd.c: 29:         TRISEbits.RE2 = 1;
   906   0022CE  8496               	bsf	150,2,c	;volatile
   907   0022D0                     
   908                           ;main_lcd.c: 30:         _delay((unsigned long)((500)*(12000000/4000.0)));
   909   0022D0  0E08               	movlw	8
   910   0022D2  6E59               	movwf	(??_main+1)^0,c
   911   0022D4  0E9D               	movlw	157
   912   0022D6  6E58               	movwf	??_main^0,c
   913   0022D8  0E06               	movlw	6
   914   0022DA                     u4037:
   915   0022DA  2EE8               	decfsz	wreg,f,c
   916   0022DC  D7FE               	bra	u4037
   917   0022DE  2E58               	decfsz	??_main^0,f,c
   918   0022E0  D7FC               	bra	u4037
   919   0022E2  2E59               	decfsz	(??_main+1)^0,f,c
   920   0022E4  D7FA               	bra	u4037
   921   0022E6                     
   922                           ;main_lcd.c: 31:         TRISEbits.RE0 = 1;
   923   0022E6  8096               	bsf	150,0,c	;volatile
   924   0022E8                     
   925                           ;main_lcd.c: 32:         TRISEbits.RE1 = 0;
   926   0022E8  9296               	bcf	150,1,c	;volatile
   927   0022EA                     
   928                           ;main_lcd.c: 33:         TRISEbits.RE2 = 1;
   929   0022EA  8496               	bsf	150,2,c	;volatile
   930   0022EC                     
   931                           ;main_lcd.c: 34:         _delay((unsigned long)((500)*(12000000/4000.0)));
   932   0022EC  0E08               	movlw	8
   933   0022EE  6E59               	movwf	(??_main+1)^0,c
   934   0022F0  0E9D               	movlw	157
   935   0022F2  6E58               	movwf	??_main^0,c
   936   0022F4  0E06               	movlw	6
   937   0022F6                     u4047:
   938   0022F6  2EE8               	decfsz	wreg,f,c
   939   0022F8  D7FE               	bra	u4047
   940   0022FA  2E58               	decfsz	??_main^0,f,c
   941   0022FC  D7FC               	bra	u4047
   942   0022FE  2E59               	decfsz	(??_main+1)^0,f,c
   943   002300  D7FA               	bra	u4047
   944   002302                     
   945                           ;main_lcd.c: 35:         TRISEbits.RE0 = 1;
   946   002302  8096               	bsf	150,0,c	;volatile
   947   002304                     
   948                           ;main_lcd.c: 36:         TRISEbits.RE1 = 1;
   949   002304  8296               	bsf	150,1,c	;volatile
   950   002306                     
   951                           ;main_lcd.c: 37:         TRISEbits.RE2 = 0;
   952   002306  9496               	bcf	150,2,c	;volatile
   953   002308                     
   954                           ;main_lcd.c: 38:         _delay((unsigned long)((500)*(12000000/4000.0)));
   955   002308  0E08               	movlw	8
   956   00230A  6E59               	movwf	(??_main+1)^0,c
   957   00230C  0E9D               	movlw	157
   958   00230E  6E58               	movwf	??_main^0,c
   959   002310  0E06               	movlw	6
   960   002312                     u4057:
   961   002312  2EE8               	decfsz	wreg,f,c
   962   002314  D7FE               	bra	u4057
   963   002316  2E58               	decfsz	??_main^0,f,c
   964   002318  D7FC               	bra	u4057
   965   00231A  2E59               	decfsz	(??_main+1)^0,f,c
   966   00231C  D7FA               	bra	u4057
   967   00231E                     
   968                           ;main_lcd.c: 39:         Lcd_Set_Cursor(1,1);
   969   00231E  0E01               	movlw	1
   970   002320  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   971   002322  0E01               	movlw	1
   972   002324  EC9D  F015         	call	_Lcd_Set_Cursor
   973   002328                     
   974                           ;main_lcd.c: 40:         Lcd_Write_String("Test LCD 16x2");
   975   002328  0E01               	movlw	low STR_1
   976   00232A  6E05               	movwf	Lcd_Write_String@a^0,c
   977   00232C  0E08               	movlw	high STR_1
   978   00232E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   979   002330  EC64  F017         	call	_Lcd_Write_String	;wreg free
   980   002334                     
   981                           ;main_lcd.c: 41:         Lcd_Set_Cursor(2,1);
   982   002334  0E01               	movlw	1
   983   002336  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   984   002338  0E02               	movlw	2
   985   00233A  EC9D  F015         	call	_Lcd_Set_Cursor
   986   00233E                     
   987                           ;main_lcd.c: 42:         Lcd_Write_String("PIC18F45K50");
   988   00233E  0E29               	movlw	low STR_2
   989   002340  6E05               	movwf	Lcd_Write_String@a^0,c
   990   002342  0E08               	movlw	high STR_2
   991   002344  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   992   002346  EC64  F017         	call	_Lcd_Write_String	;wreg free
   993   00234A                     
   994                           ;main_lcd.c: 43:         Lcd_Set_Cursor(2,12);
   995   00234A  0E0C               	movlw	12
   996   00234C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   997   00234E  0E02               	movlw	2
   998   002350  EC9D  F015         	call	_Lcd_Set_Cursor
   999   002354                     
  1000                           ;main_lcd.c: 44:         Lcd_Blink();
  1001   002354  EC23  F01A         	call	_Lcd_Blink	;wreg free
  1002   002358                     
  1003                           ;main_lcd.c: 45:         _delay((unsigned long)((2000)*(12000000/4000.0)));
  1004   002358  0E1F               	movlw	31
  1005   00235A  6E59               	movwf	(??_main+1)^0,c
  1006   00235C  0E71               	movlw	113
  1007   00235E  6E58               	movwf	??_main^0,c
  1008   002360  0E1E               	movlw	30
  1009   002362                     u4067:
  1010   002362  2EE8               	decfsz	wreg,f,c
  1011   002364  D7FE               	bra	u4067
  1012   002366  2E58               	decfsz	??_main^0,f,c
  1013   002368  D7FC               	bra	u4067
  1014   00236A  2E59               	decfsz	(??_main+1)^0,f,c
  1015   00236C  D7FA               	bra	u4067
  1016   00236E  D000               	nop2	
  1017   002370                     
  1018                           ;main_lcd.c: 46:         Lcd_NoBlink();
  1019   002370  EC15  F01A         	call	_Lcd_NoBlink	;wreg free
  1020   002374                     
  1021                           ;main_lcd.c: 47:         Lcd_Clear();
  1022   002374  EC1C  F01A         	call	_Lcd_Clear	;wreg free
  1023   002378                     
  1024                           ;main_lcd.c: 48:         _delay((unsigned long)((400)*(12000000/4000.0)));
  1025   002378  0E07               	movlw	7
  1026   00237A  6E59               	movwf	(??_main+1)^0,c
  1027   00237C  0E17               	movlw	23
  1028   00237E  6E58               	movwf	??_main^0,c
  1029   002380  0E6A               	movlw	106
  1030   002382                     u4077:
  1031   002382  2EE8               	decfsz	wreg,f,c
  1032   002384  D7FE               	bra	u4077
  1033   002386  2E58               	decfsz	??_main^0,f,c
  1034   002388  D7FC               	bra	u4077
  1035   00238A  2E59               	decfsz	(??_main+1)^0,f,c
  1036   00238C  D7FA               	bra	u4077
  1037   00238E  D000               	nop2	
  1038   002390                     
  1039                           ;main_lcd.c: 50:         Lcd_Set_Cursor(1,1);
  1040   002390  0E01               	movlw	1
  1041   002392  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1042   002394  0E01               	movlw	1
  1043   002396  EC9D  F015         	call	_Lcd_Set_Cursor
  1044   00239A                     
  1045                           ;main_lcd.c: 51:         Lcd_Write_String("Hola a todos");
  1046   00239A  0E1C               	movlw	low STR_3
  1047   00239C  6E05               	movwf	Lcd_Write_String@a^0,c
  1048   00239E  0E08               	movlw	high STR_3
  1049   0023A0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1050   0023A2  EC64  F017         	call	_Lcd_Write_String	;wreg free
  1051   0023A6                     
  1052                           ;main_lcd.c: 52:         _delay((unsigned long)((500)*(12000000/4000.0)));
  1053   0023A6  0E08               	movlw	8
  1054   0023A8  6E59               	movwf	(??_main+1)^0,c
  1055   0023AA  0E9D               	movlw	157
  1056   0023AC  6E58               	movwf	??_main^0,c
  1057   0023AE  0E06               	movlw	6
  1058   0023B0                     u4087:
  1059   0023B0  2EE8               	decfsz	wreg,f,c
  1060   0023B2  D7FE               	bra	u4087
  1061   0023B4  2E58               	decfsz	??_main^0,f,c
  1062   0023B6  D7FC               	bra	u4087
  1063   0023B8  2E59               	decfsz	(??_main+1)^0,f,c
  1064   0023BA  D7FA               	bra	u4087
  1065   0023BC                     
  1066                           ;main_lcd.c: 53:         for(char i=0; i<15; i++){
  1067   0023BC  0E00               	movlw	0
  1068   0023BE  6E5A               	movwf	main@i^0,c
  1069   0023C0                     l4051:
  1070                           
  1071                           ;main_lcd.c: 54:             Lcd_Shift_Right();
  1072   0023C0  EC07  F01A         	call	_Lcd_Shift_Right	;wreg free
  1073   0023C4                     
  1074                           ;main_lcd.c: 55:             _delay((unsigned long)((300)*(12000000/4000.0)));
  1075   0023C4  0E05               	movlw	5
  1076   0023C6  6E59               	movwf	(??_main+1)^0,c
  1077   0023C8  0E91               	movlw	145
  1078   0023CA  6E58               	movwf	??_main^0,c
  1079   0023CC  0ED0               	movlw	208
  1080   0023CE                     u4097:
  1081   0023CE  2EE8               	decfsz	wreg,f,c
  1082   0023D0  D7FE               	bra	u4097
  1083   0023D2  2E58               	decfsz	??_main^0,f,c
  1084   0023D4  D7FC               	bra	u4097
  1085   0023D6  2E59               	decfsz	(??_main+1)^0,f,c
  1086   0023D8  D7FA               	bra	u4097
  1087   0023DA                     
  1088                           ;main_lcd.c: 56:         }
  1089   0023DA  2A5A               	incf	main@i^0,f,c
  1090   0023DC  0E0E               	movlw	14
  1091   0023DE  645A               	cpfsgt	main@i^0,c
  1092   0023E0  EFF4  F011         	goto	u3931
  1093   0023E4  EFF6  F011         	goto	u3930
  1094   0023E8                     u3931:
  1095   0023E8  EFE0  F011         	goto	l4051
  1096   0023EC                     u3930:
  1097   0023EC                     
  1098                           ;main_lcd.c: 57:         _delay((unsigned long)((300)*(12000000/4000.0)));
  1099   0023EC  0E05               	movlw	5
  1100   0023EE  6E59               	movwf	(??_main+1)^0,c
  1101   0023F0  0E91               	movlw	145
  1102   0023F2  6E58               	movwf	??_main^0,c
  1103   0023F4  0ED0               	movlw	208
  1104   0023F6                     u4107:
  1105   0023F6  2EE8               	decfsz	wreg,f,c
  1106   0023F8  D7FE               	bra	u4107
  1107   0023FA  2E58               	decfsz	??_main^0,f,c
  1108   0023FC  D7FC               	bra	u4107
  1109   0023FE  2E59               	decfsz	(??_main+1)^0,f,c
  1110   002400  D7FA               	bra	u4107
  1111   002402                     
  1112                           ;main_lcd.c: 58:         for(char i=0; i<15; i++){
  1113   002402  0E00               	movlw	0
  1114   002404  6E5B               	movwf	main@i_113^0,c
  1115   002406                     l4067:
  1116                           
  1117                           ;main_lcd.c: 59:             Lcd_Shift_Left();
  1118   002406  EC0E  F01A         	call	_Lcd_Shift_Left	;wreg free
  1119   00240A                     
  1120                           ;main_lcd.c: 60:             _delay((unsigned long)((300)*(12000000/4000.0)));
  1121   00240A  0E05               	movlw	5
  1122   00240C  6E59               	movwf	(??_main+1)^0,c
  1123   00240E  0E91               	movlw	145
  1124   002410  6E58               	movwf	??_main^0,c
  1125   002412  0ED0               	movlw	208
  1126   002414                     u4117:
  1127   002414  2EE8               	decfsz	wreg,f,c
  1128   002416  D7FE               	bra	u4117
  1129   002418  2E58               	decfsz	??_main^0,f,c
  1130   00241A  D7FC               	bra	u4117
  1131   00241C  2E59               	decfsz	(??_main+1)^0,f,c
  1132   00241E  D7FA               	bra	u4117
  1133   002420                     
  1134                           ;main_lcd.c: 61:         }
  1135   002420  2A5B               	incf	main@i_113^0,f,c
  1136   002422  0E0E               	movlw	14
  1137   002424  645B               	cpfsgt	main@i_113^0,c
  1138   002426  EF17  F012         	goto	u3941
  1139   00242A  EF19  F012         	goto	u3940
  1140   00242E                     u3941:
  1141   00242E  EF03  F012         	goto	l4067
  1142   002432                     u3940:
  1143   002432                     
  1144                           ;main_lcd.c: 62:         Lcd_Clear();
  1145   002432  EC1C  F01A         	call	_Lcd_Clear	;wreg free
  1146   002436                     
  1147                           ;main_lcd.c: 63:         _delay((unsigned long)((400)*(12000000/4000.0)));
  1148   002436  0E07               	movlw	7
  1149   002438  6E59               	movwf	(??_main+1)^0,c
  1150   00243A  0E17               	movlw	23
  1151   00243C  6E58               	movwf	??_main^0,c
  1152   00243E  0E6A               	movlw	106
  1153   002440                     u4127:
  1154   002440  2EE8               	decfsz	wreg,f,c
  1155   002442  D7FE               	bra	u4127
  1156   002444  2E58               	decfsz	??_main^0,f,c
  1157   002446  D7FC               	bra	u4127
  1158   002448  2E59               	decfsz	(??_main+1)^0,f,c
  1159   00244A  D7FA               	bra	u4127
  1160   00244C  D000               	nop2	
  1161   00244E                     
  1162                           ;main_lcd.c: 65:         Lcd_Set_Cursor(1,1);
  1163   00244E  0E01               	movlw	1
  1164   002450  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1165   002452  0E01               	movlw	1
  1166   002454  EC9D  F015         	call	_Lcd_Set_Cursor
  1167   002458                     
  1168                           ;main_lcd.c: 66:         sprintf(buffer, "Int: %u", v);
  1169   002458  0EA4               	movlw	low _buffer
  1170   00245A  0100               	movlb	0	; () banked
  1171   00245C  6F92               	movwf	sprintf@s& (0+255),b
  1172   00245E  0E00               	movlw	high _buffer
  1173   002460  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1174   002462  0E35               	movlw	low STR_4
  1175   002464  6F94               	movwf	sprintf@fmt& (0+255),b
  1176   002466  0E08               	movlw	high STR_4
  1177   002468  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1178   00246A  0E03               	movlw	3
  1179   00246C  6F97               	movwf	(?_sprintf+5)& (0+255),b
  1180   00246E  6996               	setf	(?_sprintf+4)& (0+255),b
  1181   002470  ECAD  F018         	call	_sprintf	;wreg free
  1182   002474                     
  1183                           ;main_lcd.c: 67:         Lcd_Write_String(buffer);
  1184   002474  0EA4               	movlw	low _buffer
  1185   002476  6E05               	movwf	Lcd_Write_String@a^0,c
  1186   002478  0E00               	movlw	high _buffer
  1187   00247A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1188   00247C  EC64  F017         	call	_Lcd_Write_String	;wreg free
  1189   002480                     
  1190                           ;main_lcd.c: 68:         Lcd_Set_Cursor(2,1);
  1191   002480  0E01               	movlw	1
  1192   002482  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1193   002484  0E02               	movlw	2
  1194   002486  EC9D  F015         	call	_Lcd_Set_Cursor
  1195   00248A                     
  1196                           ;main_lcd.c: 69:         sprintf(buffer, "Float: %0.2f", t);
  1197   00248A  0EA4               	movlw	low _buffer
  1198   00248C  0100               	movlb	0	; () banked
  1199   00248E  6F92               	movwf	sprintf@s& (0+255),b
  1200   002490  0E00               	movlw	high _buffer
  1201   002492  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1202   002494  0E0F               	movlw	low STR_5
  1203   002496  6F94               	movwf	sprintf@fmt& (0+255),b
  1204   002498  0E08               	movlw	high STR_5
  1205   00249A  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1206   00249C  0E5C               	movlw	92
  1207   00249E  6F96               	movwf	(?_sprintf+4)& (0+255),b
  1208   0024A0  0E8F               	movlw	143
  1209   0024A2  6F97               	movwf	(?_sprintf+5)& (0+255),b
  1210   0024A4  0EC2               	movlw	194
  1211   0024A6  6F98               	movwf	(?_sprintf+6)& (0+255),b
  1212   0024A8  0E41               	movlw	65
  1213   0024AA  6F99               	movwf	(?_sprintf+7)& (0+255),b
  1214   0024AC  ECAD  F018         	call	_sprintf	;wreg free
  1215   0024B0                     
  1216                           ;main_lcd.c: 70:         Lcd_Write_String(buffer);
  1217   0024B0  0EA4               	movlw	low _buffer
  1218   0024B2  6E05               	movwf	Lcd_Write_String@a^0,c
  1219   0024B4  0E00               	movlw	high _buffer
  1220   0024B6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1221   0024B8  EC64  F017         	call	_Lcd_Write_String	;wreg free
  1222   0024BC                     
  1223                           ;main_lcd.c: 71:         _delay((unsigned long)((1500)*(12000000/4000.0)));
  1224   0024BC  0E17               	movlw	23
  1225   0024BE  6E59               	movwf	(??_main+1)^0,c
  1226   0024C0  0ED5               	movlw	213
  1227   0024C2  6E58               	movwf	??_main^0,c
  1228   0024C4  0E16               	movlw	22
  1229   0024C6                     u4137:
  1230   0024C6  2EE8               	decfsz	wreg,f,c
  1231   0024C8  D7FE               	bra	u4137
  1232   0024CA  2E58               	decfsz	??_main^0,f,c
  1233   0024CC  D7FC               	bra	u4137
  1234   0024CE  2E59               	decfsz	(??_main+1)^0,f,c
  1235   0024D0  D7FA               	bra	u4137
  1236   0024D2  D000               	nop2	
  1237                           
  1238                           ;main_lcd.c: 72:         Lcd_Clear();
  1239   0024D4  EC1C  F01A         	call	_Lcd_Clear	;wreg free
  1240   0024D8                     
  1241                           ;main_lcd.c: 73:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1242   0024D8  0E02               	movlw	2
  1243   0024DA  6E59               	movwf	(??_main+1)^0,c
  1244   0024DC  0E86               	movlw	134
  1245   0024DE  6E58               	movwf	??_main^0,c
  1246   0024E0  0E99               	movlw	153
  1247   0024E2                     u4147:
  1248   0024E2  2EE8               	decfsz	wreg,f,c
  1249   0024E4  D7FE               	bra	u4147
  1250   0024E6  2E58               	decfsz	??_main^0,f,c
  1251   0024E8  D7FC               	bra	u4147
  1252   0024EA  2E59               	decfsz	(??_main+1)^0,f,c
  1253   0024EC  D7FA               	bra	u4147
  1254   0024EE  F000               	nop	
  1255   0024F0  EF65  F011         	goto	l3995
  1256   0024F4  EF00  F000         	goto	start
  1257   0024F8                     __end_of_main:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _sprintf *****************
  1261 ;; Defined at:
  1262 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  s               2   50[BANK0 ] PTR unsigned char 
  1265 ;;		 -> buffer(20), 
  1266 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1267 ;;		 -> STR_5(13), STR_4(8), 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  f              12   75[COMRAM] struct _IO_FILE
  1270 ;;  ap              2   73[COMRAM] PTR void [1]
  1271 ;;		 -> ?_sprintf(2), 
  1272 ;;  ret             2    0        int 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  2   50[BANK0 ] int 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1282 ;;      Params:         0       8       0       0       0       0       0       0       0
  1283 ;;      Locals:        14       0       0       0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1285 ;;      Totals:        14       8       0       0       0       0       0       0       0
  1286 ;;Total ram usage:       22 bytes
  1287 ;; Hardware stack levels used: 1
  1288 ;; Hardware stack levels required when called: 7
  1289 ;; This function calls:
  1290 ;;		_vfprintf
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text1
  1297   00315A                     __ptext1:
  1298                           	callstack 0
  1299   00315A                     _sprintf:
  1300                           	callstack 23
  1301   00315A  0E96               	movlw	low (?_sprintf+4)
  1302   00315C  6E4A               	movwf	sprintf@ap^0,c
  1303   00315E  0E00               	movlw	high (?_sprintf+4)
  1304   003160  6E4B               	movwf	(sprintf@ap+1)^0,c
  1305   003162  C092  F04C         	movff	sprintf@s,sprintf@f
  1306   003166  C093  F04D         	movff	sprintf@s+1,sprintf@f+1
  1307   00316A  0E00               	movlw	0
  1308   00316C  6E50               	movwf	(sprintf@f+4)^0,c
  1309   00316E  0E00               	movlw	0
  1310   003170  6E4F               	movwf	(sprintf@f+3)^0,c
  1311   003172  0E00               	movlw	0
  1312   003174  6E57               	movwf	(sprintf@f+11)^0,c
  1313   003176  0E00               	movlw	0
  1314   003178  6E56               	movwf	(sprintf@f+10)^0,c
  1315   00317A  0E4C               	movlw	low sprintf@f
  1316   00317C  0100               	movlb	0	; () banked
  1317   00317E  6F8C               	movwf	vfprintf@fp& (0+255),b
  1318   003180  0E00               	movlw	high sprintf@f
  1319   003182  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  1320   003184  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  1321   003188  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1322   00318C  0E4A               	movlw	low sprintf@ap
  1323   00318E  6F90               	movwf	vfprintf@ap& (0+255),b
  1324   003190  0E00               	movlw	high sprintf@ap
  1325   003192  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  1326   003194  ECD5  F018         	call	_vfprintf	;wreg free
  1327   003198  504F               	movf	(sprintf@f+3)^0,w,c
  1328   00319A  0100               	movlb	0	; () banked
  1329   00319C  2592               	addwf	sprintf@s& (0+255),w,b
  1330   00319E  6ED9               	movwf	fsr2l,c
  1331   0031A0  5050               	movf	(sprintf@f+4)^0,w,c
  1332   0031A2  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  1333   0031A4  6EDA               	movwf	fsr2h,c
  1334   0031A6  6ADF               	clrf	indf2,c
  1335   0031A8                     
  1336                           ; BSR set to: 0
  1337   0031A8  0012               	return		;funcret
  1338   0031AA                     __end_of_sprintf:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _vfprintf *****************
  1342 ;; Defined at:
  1343 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1346 ;;		 -> sprintf@f(12), 
  1347 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  1348 ;;		 -> STR_5(13), STR_4(8), 
  1349 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1350 ;;		 -> sprintf@ap(2), 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  cfmt            2   71[COMRAM] PTR unsigned char 
  1353 ;;		 -> STR_5(13), STR_4(8), 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  2   44[BANK0 ] int 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1363 ;;      Params:         0       6       0       0       0       0       0       0       0
  1364 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1366 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1367 ;;Total ram usage:        8 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 6
  1370 ;; This function calls:
  1371 ;;		_vfpfcnvrt
  1372 ;; This function is called by:
  1373 ;;		_sprintf
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text2
  1378   0031AA                     __ptext2:
  1379                           	callstack 0
  1380   0031AA                     _vfprintf:
  1381                           	callstack 23
  1382   0031AA                     
  1383                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1384   0031AA  C08E  F048         	movff	vfprintf@fmt,vfprintf@cfmt
  1385   0031AE  C08F  F049         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1388   0031B2  EFE9  F018         	goto	l3893
  1389   0031B6                     l3891:
  1390                           
  1391                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1392   0031B6  C08C  F037         	movff	vfprintf@fp,vfpfcnvrt@fp
  1393   0031BA  C08D  F038         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1394   0031BE  0E48               	movlw	low vfprintf@cfmt
  1395   0031C0  6E39               	movwf	vfpfcnvrt@fmt^0,c
  1396   0031C2  0E00               	movlw	high vfprintf@cfmt
  1397   0031C4  6E3A               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1398   0031C6  C090  F03B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1399   0031CA  C091  F03C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1400   0031CE  EC97  F00F         	call	_vfpfcnvrt	;wreg free
  1401   0031D2                     l3893:
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1404   0031D2  C048  FFF6         	movff	vfprintf@cfmt,tblptrl
  1405   0031D6  C049  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1406   0031DA                     	if	0	;tblptru may be non-zero
  1407   0031DA                     	endif
  1408   0031DA                     	if	0	;tblptru may be non-zero
  1409   0031DA                     	endif
  1410   0031DA  0008               	tblrd		*
  1411   0031DC  50F5               	movf	tablat,w,c
  1412   0031DE  0900               	iorlw	0
  1413   0031E0  A4D8               	btfss	status,2,c
  1414   0031E2  EFF5  F018         	goto	u3851
  1415   0031E6  EFF7  F018         	goto	u3850
  1416   0031EA                     u3851:
  1417   0031EA  EFDB  F018         	goto	l3891
  1418   0031EE                     u3850:
  1419   0031EE                     
  1420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1421   0031EE  0E00               	movlw	0
  1422   0031F0  0100               	movlb	0	; () banked
  1423   0031F2  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1424   0031F4  0E00               	movlw	0
  1425   0031F6  6F8C               	movwf	?_vfprintf& (0+255),b
  1426   0031F8                     
  1427                           ; BSR set to: 0
  1428   0031F8  0012               	return		;funcret
  1429   0031FA                     __end_of_vfprintf:
  1430                           	callstack 0
  1431                           
  1432 ;; *************** function _vfpfcnvrt *****************
  1433 ;; Defined at:
  1434 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  1437 ;;		 -> sprintf@f(12), 
  1438 ;;  fmt             2   56[COMRAM] PTR PTR unsigned char 
  1439 ;;		 -> vfprintf@cfmt(2), 
  1440 ;;  ap              2   58[COMRAM] PTR PTR void 
  1441 ;;		 -> sprintf@ap(2), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  convarg         4   64[COMRAM] struct .
  1444 ;;  cp              2   69[COMRAM] PTR unsigned char 
  1445 ;;		 -> STR_5(13), STR_4(8), 
  1446 ;;  done            2   62[COMRAM] int 
  1447 ;;  i               2    0        int 
  1448 ;;  c               1   68[COMRAM] unsigned char 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1458 ;;      Params:         6       0       0       0       0       0       0       0       0
  1459 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1460 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1461 ;;      Totals:        17       0       0       0       0       0       0       0       0
  1462 ;;Total ram usage:       17 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 5
  1465 ;; This function calls:
  1466 ;;		_efgtoa
  1467 ;;		_fputc
  1468 ;;		_read_prec_or_width
  1469 ;;		_utoa
  1470 ;; This function is called by:
  1471 ;;		_vfprintf
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text3
  1476   001F2E                     __ptext3:
  1477                           	callstack 0
  1478   001F2E                     _vfpfcnvrt:
  1479                           	callstack 23
  1480   001F2E                     
  1481                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1482   001F2E  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1483   001F32  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1484   001F36  CFDE FFF6          	movff	postinc2,tblptrl
  1485   001F3A  CFDD FFF7          	movff	postdec2,tblptrh
  1486   001F3E                     	if	0	;tblptru may be non-zero
  1487   001F3E                     	endif
  1488   001F3E                     	if	0	;tblptru may be non-zero
  1489   001F3E                     	endif
  1490   001F3E  0008               	tblrd		*
  1491   001F40  50F5               	movf	tablat,w,c
  1492   001F42  0A25               	xorlw	37
  1493   001F44  A4D8               	btfss	status,2,c
  1494   001F46  EFA7  F00F         	goto	u3801
  1495   001F4A  EFA9  F00F         	goto	u3800
  1496   001F4E                     u3801:
  1497   001F4E  EF4A  F011         	goto	l3841
  1498   001F52                     u3800:
  1499   001F52                     
  1500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1501   001F52  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1502   001F56  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1503   001F5A  2ADE               	incf	postinc2,f,c
  1504   001F5C  0E00               	movlw	0
  1505   001F5E  22DD               	addwfc	postdec2,f,c
  1506   001F60                     
  1507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1508   001F60  0E00               	movlw	0
  1509   001F62  0100               	movlb	0	; () banked
  1510   001F64  6FA3               	movwf	(_width+1)& (0+255),b
  1511   001F66  0E00               	movlw	0
  1512   001F68  6FA2               	movwf	_width& (0+255),b
  1513   001F6A  C0A2  F05E         	movff	_width,_flags
  1514   001F6E                     
  1515                           ; BSR set to: 0
  1516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1517   001F6E  685C               	setf	_prec^0,c
  1518   001F70  685D               	setf	(_prec+1)^0,c
  1519   001F72                     
  1520                           ; BSR set to: 0
  1521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1522   001F72  0E00               	movlw	0
  1523   001F74  6E40               	movwf	(vfpfcnvrt@done+1)^0,c
  1524   001F76  0E00               	movlw	0
  1525   001F78  6E3F               	movwf	vfpfcnvrt@done^0,c
  1526                           
  1527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1528   001F7A  EFE9  F00F         	goto	l3781
  1529   001F7E                     l3771:
  1530                           
  1531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1532   001F7E  825E               	bsf	_flags^0,1,c
  1533   001F80                     
  1534                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1535   001F80  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1536   001F84  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1537   001F88  2ADE               	incf	postinc2,f,c
  1538   001F8A  0E00               	movlw	0
  1539   001F8C  22DD               	addwfc	postdec2,f,c
  1540                           
  1541                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1542   001F8E  EFE9  F00F         	goto	l3781
  1543   001F92                     l3775:
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1546   001F92  0E00               	movlw	0
  1547   001F94  6E40               	movwf	(vfpfcnvrt@done+1)^0,c
  1548   001F96  0E01               	movlw	1
  1549   001F98  6E3F               	movwf	vfpfcnvrt@done^0,c
  1550                           
  1551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1552   001F9A  EFE9  F00F         	goto	l3781
  1553   001F9E                     l3779:
  1554   001F9E  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1555   001FA2  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1556   001FA6  CFDE FFF6          	movff	postinc2,tblptrl
  1557   001FAA  CFDD FFF7          	movff	postdec2,tblptrh
  1558   001FAE                     	if	0	;tblptru may be non-zero
  1559   001FAE                     	endif
  1560   001FAE                     	if	0	;tblptru may be non-zero
  1561   001FAE                     	endif
  1562   001FAE  0008               	tblrd		*
  1563   001FB0  50F5               	movf	tablat,w,c
  1564   001FB2  6E3D               	movwf	??_vfpfcnvrt^0,c
  1565   001FB4  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1566                           
  1567                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1568                           ; Switch size 1, requested type "simple"
  1569                           ; Number of cases is 1, Range of values is 0 to 0
  1570                           ; switch strategies available:
  1571                           ; Name         Instructions Cycles
  1572                           ; simple_byte            4     3 (average)
  1573                           ;	Chosen strategy is simple_byte
  1574   001FB6  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1575   001FB8  0A00               	xorlw	0	; case 0
  1576   001FBA  B4D8               	btfsc	status,2,c
  1577   001FBC  EFE2  F00F         	goto	l4305
  1578   001FC0  EFC9  F00F         	goto	l3775
  1579   001FC4                     l4305:
  1580                           
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 1, Range of values is 48 to 48
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte            4     3 (average)
  1586                           ;	Chosen strategy is simple_byte
  1587   001FC4  503D               	movf	??_vfpfcnvrt^0,w,c
  1588   001FC6  0A30               	xorlw	48	; case 48
  1589   001FC8  B4D8               	btfsc	status,2,c
  1590   001FCA  EFBF  F00F         	goto	l3771
  1591   001FCE  EFC9  F00F         	goto	l3775
  1592   001FD2                     l3781:
  1593                           
  1594                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1595   001FD2  503F               	movf	vfpfcnvrt@done^0,w,c
  1596   001FD4  1040               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1597   001FD6  B4D8               	btfsc	status,2,c
  1598   001FD8  EFF0  F00F         	goto	u3811
  1599   001FDC  EFF2  F00F         	goto	u3810
  1600   001FE0                     u3811:
  1601   001FE0  EFCF  F00F         	goto	l3779
  1602   001FE4                     u3810:
  1603   001FE4                     
  1604                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  1605   001FE4  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1606   001FE8  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1607   001FEC  CFDE FFF6          	movff	postinc2,tblptrl
  1608   001FF0  CFDD FFF7          	movff	postdec2,tblptrh
  1609   001FF4                     	if	0	;tblptru may be non-zero
  1610   001FF4                     	endif
  1611   001FF4                     	if	0	;tblptru may be non-zero
  1612   001FF4                     	endif
  1613   001FF4  0008               	tblrd		*
  1614   001FF6  50F5               	movf	tablat,w,c
  1615   001FF8  0A2E               	xorlw	46
  1616   001FFA  A4D8               	btfss	status,2,c
  1617   001FFC  EF02  F010         	goto	u3821
  1618   002000  EF04  F010         	goto	u3820
  1619   002004                     u3821:
  1620   002004  EF19  F010         	goto	l3789
  1621   002008                     u3820:
  1622   002008                     
  1623                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  1624   002008  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1625   00200C  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1626   002010  2ADE               	incf	postinc2,f,c
  1627   002012  0E00               	movlw	0
  1628   002014  22DD               	addwfc	postdec2,f,c
  1629   002016                     
  1630                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1631   002016  C039  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1632   00201A  C03A  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1633   00201E  C03B  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1634   002022  C03C  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1635   002026  EC6B  F016         	call	_read_prec_or_width	;wreg free
  1636   00202A  C007  F05C         	movff	?_read_prec_or_width,_prec
  1637   00202E  C008  F05D         	movff	?_read_prec_or_width+1,_prec+1
  1638   002032                     l3789:
  1639                           
  1640                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1265:   if (0
  1641   002032  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1642   002036  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1643   00203A  CFDE F046          	movff	postinc2,vfpfcnvrt@cp
  1644   00203E  CFDD F047          	movff	postdec2,vfpfcnvrt@cp+1
  1645   002042  C046  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1646   002046  C047  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1647   00204A                     	if	0	;tblptru may be non-zero
  1648   00204A                     	endif
  1649   00204A                     	if	0	;tblptru may be non-zero
  1650   00204A                     	endif
  1651   00204A  0008               	tblrd		*
  1652   00204C  50F5               	movf	tablat,w,c
  1653   00204E  0A75               	xorlw	117
  1654   002050  A4D8               	btfss	status,2,c
  1655   002052  EF2D  F010         	goto	u3831
  1656   002056  EF2F  F010         	goto	u3830
  1657   00205A                     u3831:
  1658   00205A  EF75  F010         	goto	l3803
  1659   00205E                     u3830:
  1660   00205E                     
  1661                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1278:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1321:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1662   00205E  C03B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1663   002062  C03C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1664   002066  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  1665   00206A  0E02               	movlw	2
  1666   00206C  26DE               	addwf	postinc2,f,c
  1667   00206E  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  1668   002072  0E00               	movlw	0
  1669   002074  22DD               	addwfc	postdec2,f,c
  1670   002076  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1671   00207A  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1672   00207E  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg
  1673   002082  CFDD F042          	movff	postdec2,vfpfcnvrt@convarg+1
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1323:    *fmt = c
      +                          p+1;
  1676   002086  0E01               	movlw	1
  1677   002088  2446               	addwf	vfpfcnvrt@cp^0,w,c
  1678   00208A  6E3D               	movwf	??_vfpfcnvrt^0,c
  1679   00208C  0E00               	movlw	0
  1680   00208E  2047               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1681   002090  6E3E               	movwf	(??_vfpfcnvrt+1)^0,c
  1682   002092  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1683   002096  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1684   00209A  C03D  FFDE         	movff	??_vfpfcnvrt,postinc2
  1685   00209E  C03E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1324:    switch (
      +                          *cp) {
  1688   0020A2  EF5F  F010         	goto	l3801
  1689   0020A6                     l3795:
  1690                           
  1691                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1331:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  1692   0020A6  C037  F01C         	movff	vfpfcnvrt@fp,utoa@fp
  1693   0020AA  C038  F01D         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1694   0020AE  C041  F01E         	movff	vfpfcnvrt@convarg,utoa@d
  1695   0020B2  C042  F01F         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1696   0020B6  EC85  F013         	call	_utoa	;wreg free
  1697   0020BA  EF5E  F011         	goto	l958
  1698   0020BE                     l3801:
  1699   0020BE  C046  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1700   0020C2  C047  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1701   0020C6                     	if	0	;tblptru may be non-zero
  1702   0020C6                     	endif
  1703   0020C6                     	if	0	;tblptru may be non-zero
  1704   0020C6                     	endif
  1705   0020C6  0008               	tblrd		*
  1706   0020C8  50F5               	movf	tablat,w,c
  1707   0020CA  6E3D               	movwf	??_vfpfcnvrt^0,c
  1708   0020CC  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1709                           
  1710                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1711                           ; Switch size 1, requested type "simple"
  1712                           ; Number of cases is 1, Range of values is 0 to 0
  1713                           ; switch strategies available:
  1714                           ; Name         Instructions Cycles
  1715                           ; simple_byte            4     3 (average)
  1716                           ;	Chosen strategy is simple_byte
  1717   0020CE  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1718   0020D0  0A00               	xorlw	0	; case 0
  1719   0020D2  B4D8               	btfsc	status,2,c
  1720   0020D4  EF6E  F010         	goto	l4307
  1721   0020D8  EF75  F010         	goto	l3803
  1722   0020DC                     l4307:
  1723                           
  1724                           ; Switch size 1, requested type "simple"
  1725                           ; Number of cases is 1, Range of values is 117 to 117
  1726                           ; switch strategies available:
  1727                           ; Name         Instructions Cycles
  1728                           ; simple_byte            4     3 (average)
  1729                           ;	Chosen strategy is simple_byte
  1730   0020DC  503D               	movf	??_vfpfcnvrt^0,w,c
  1731   0020DE  0A75               	xorlw	117	; case 117
  1732   0020E0  B4D8               	btfsc	status,2,c
  1733   0020E2  EF53  F010         	goto	l3795
  1734   0020E6  EF75  F010         	goto	l3803
  1735   0020EA                     l3803:
  1736                           
  1737                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  1738   0020EA  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1739   0020EE  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1740   0020F2  CFDE F046          	movff	postinc2,vfpfcnvrt@cp
  1741   0020F6  CFDD F047          	movff	postdec2,vfpfcnvrt@cp+1
  1742   0020FA                     
  1743                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  1744   0020FA  C046  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1745   0020FE  C047  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1746   002102                     	if	0	;tblptru may be non-zero
  1747   002102                     	endif
  1748   002102                     	if	0	;tblptru may be non-zero
  1749   002102                     	endif
  1750   002102  0008               	tblrd		*
  1751   002104  CFF5 F045          	movff	tablat,vfpfcnvrt@c
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  1754   002108  EF92  F010         	goto	l3815
  1755   00210C                     l3807:
  1756                           
  1757                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  1758   00210C  4A46               	infsnz	vfpfcnvrt@cp^0,f,c
  1759   00210E  2A47               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  1762   002110  EFAB  F010         	goto	l3817
  1763   002114                     l3809:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  1766   002114  0E6C               	movlw	108
  1767   002116  6E45               	movwf	vfpfcnvrt@c^0,c
  1768                           
  1769                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  1770   002118  EFAB  F010         	goto	l3817
  1771   00211C                     l3811:
  1772                           
  1773                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  1774   00211C  0E00               	movlw	0
  1775   00211E  6E45               	movwf	vfpfcnvrt@c^0,c
  1776                           
  1777                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  1778   002120  EFAB  F010         	goto	l3817
  1779   002124                     l3815:
  1780   002124  5045               	movf	vfpfcnvrt@c^0,w,c
  1781   002126  6E3D               	movwf	??_vfpfcnvrt^0,c
  1782   002128  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1783                           
  1784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1785                           ; Switch size 1, requested type "simple"
  1786                           ; Number of cases is 1, Range of values is 0 to 0
  1787                           ; switch strategies available:
  1788                           ; Name         Instructions Cycles
  1789                           ; simple_byte            4     3 (average)
  1790                           ;	Chosen strategy is simple_byte
  1791   00212A  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1792   00212C  0A00               	xorlw	0	; case 0
  1793   00212E  B4D8               	btfsc	status,2,c
  1794   002130  EF9C  F010         	goto	l4309
  1795   002134  EF8E  F010         	goto	l3811
  1796   002138                     l4309:
  1797                           
  1798                           ; Switch size 1, requested type "simple"
  1799                           ; Number of cases is 3, Range of values is 76 to 108
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte           10     6 (average)
  1803                           ;	Chosen strategy is simple_byte
  1804   002138  503D               	movf	??_vfpfcnvrt^0,w,c
  1805   00213A  0A4C               	xorlw	76	; case 76
  1806   00213C  B4D8               	btfsc	status,2,c
  1807   00213E  EF86  F010         	goto	l3807
  1808   002142  0A2A               	xorlw	42	; case 102
  1809   002144  B4D8               	btfsc	status,2,c
  1810   002146  EF8A  F010         	goto	l3809
  1811   00214A  0A0A               	xorlw	10	; case 108
  1812   00214C  B4D8               	btfsc	status,2,c
  1813   00214E  EF86  F010         	goto	l3807
  1814   002152  EF8E  F010         	goto	l3811
  1815   002156                     l3817:
  1816   002156  C046  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1817   00215A  C047  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1818   00215E                     	if	0	;tblptru may be non-zero
  1819   00215E                     	endif
  1820   00215E                     	if	0	;tblptru may be non-zero
  1821   00215E                     	endif
  1822   00215E  0008               	tblrd		*
  1823   002160  50F5               	movf	tablat,w,c
  1824   002162  0A66               	xorlw	102
  1825   002164  A4D8               	btfss	status,2,c
  1826   002166  EFB7  F010         	goto	u3841
  1827   00216A  EFB9  F010         	goto	u3840
  1828   00216E                     u3841:
  1829   00216E  EF41  F011         	goto	l3837
  1830   002172                     u3840:
  1831   002172  EFEF  F010         	goto	l3825
  1832   002176                     l3819:
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1835   002176  C03B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1836   00217A  C03C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1837   00217E  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  1838   002182  0E04               	movlw	4
  1839   002184  26DE               	addwf	postinc2,f,c
  1840   002186  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  1841   00218A  0E00               	movlw	0
  1842   00218C  22DD               	addwfc	postdec2,f,c
  1843   00218E  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1844   002192  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1845   002196  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg
  1846   00219A  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+1
  1847   00219E  CFDE F043          	movff	postinc2,vfpfcnvrt@convarg+2
  1848   0021A2  CFDE F044          	movff	postinc2,vfpfcnvrt@convarg+3
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  1851   0021A6  EF04  F011         	goto	l3827
  1852   0021AA                     l3821:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1855   0021AA  C03B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1856   0021AE  C03C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1857   0021B2  CFDF F03D          	movff	indf2,??_vfpfcnvrt
  1858   0021B6  0E04               	movlw	4
  1859   0021B8  26DE               	addwf	postinc2,f,c
  1860   0021BA  CFDF F03E          	movff	indf2,??_vfpfcnvrt+1
  1861   0021BE  0E00               	movlw	0
  1862   0021C0  22DD               	addwfc	postdec2,f,c
  1863   0021C2  C03D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1864   0021C6  C03E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1865   0021CA  CFDE F041          	movff	postinc2,vfpfcnvrt@convarg
  1866   0021CE  CFDE F042          	movff	postinc2,vfpfcnvrt@convarg+1
  1867   0021D2  CFDE F043          	movff	postinc2,vfpfcnvrt@convarg+2
  1868   0021D6  CFDE F044          	movff	postinc2,vfpfcnvrt@convarg+3
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  1871   0021DA  EF04  F011         	goto	l3827
  1872   0021DE                     l3825:
  1873   0021DE  5045               	movf	vfpfcnvrt@c^0,w,c
  1874   0021E0  6E3D               	movwf	??_vfpfcnvrt^0,c
  1875   0021E2  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1876                           
  1877                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1878                           ; Switch size 1, requested type "simple"
  1879                           ; Number of cases is 1, Range of values is 0 to 0
  1880                           ; switch strategies available:
  1881                           ; Name         Instructions Cycles
  1882                           ; simple_byte            4     3 (average)
  1883                           ;	Chosen strategy is simple_byte
  1884   0021E4  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1885   0021E6  0A00               	xorlw	0	; case 0
  1886   0021E8  B4D8               	btfsc	status,2,c
  1887   0021EA  EFF9  F010         	goto	l4311
  1888   0021EE  EF04  F011         	goto	l3827
  1889   0021F2                     l4311:
  1890                           
  1891                           ; Switch size 1, requested type "simple"
  1892                           ; Number of cases is 2, Range of values is 76 to 108
  1893                           ; switch strategies available:
  1894                           ; Name         Instructions Cycles
  1895                           ; simple_byte            7     4 (average)
  1896                           ;	Chosen strategy is simple_byte
  1897   0021F2  503D               	movf	??_vfpfcnvrt^0,w,c
  1898   0021F4  0A4C               	xorlw	76	; case 76
  1899   0021F6  B4D8               	btfsc	status,2,c
  1900   0021F8  EFD5  F010         	goto	l3821
  1901   0021FC  0A20               	xorlw	32	; case 108
  1902   0021FE  B4D8               	btfsc	status,2,c
  1903   002200  EFBB  F010         	goto	l3819
  1904   002204  EF04  F011         	goto	l3827
  1905   002208                     l3827:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  1908   002208  0E01               	movlw	1
  1909   00220A  2446               	addwf	vfpfcnvrt@cp^0,w,c
  1910   00220C  6E3D               	movwf	??_vfpfcnvrt^0,c
  1911   00220E  0E00               	movlw	0
  1912   002210  2047               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1913   002212  6E3E               	movwf	(??_vfpfcnvrt+1)^0,c
  1914   002214  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1915   002218  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1916   00221C  C03D  FFDE         	movff	??_vfpfcnvrt,postinc2
  1917   002220  C03E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  1920   002224  EF2B  F011         	goto	l3835
  1921   002228                     l3829:
  1922                           
  1923                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1924   002228  C037  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1925   00222C  C038  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1926   002230  C041  F030         	movff	vfpfcnvrt@convarg,efgtoa@f
  1927   002234  C042  F031         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1928   002238  C043  F032         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1929   00223C  C044  F033         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1930   002240  C046  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1931   002244  C047  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1932   002248                     	if	0	;tblptru may be non-zero
  1933   002248                     	endif
  1934   002248                     	if	0	;tblptru may be non-zero
  1935   002248                     	endif
  1936   002248  0008               	tblrd		*
  1937   00224A  CFF5 F034          	movff	tablat,efgtoa@c
  1938   00224E  EC23  F004         	call	_efgtoa	;wreg free
  1939   002252  EF5E  F011         	goto	l958
  1940   002256                     l3835:
  1941   002256  C046  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1942   00225A  C047  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1943   00225E                     	if	0	;tblptru may be non-zero
  1944   00225E                     	endif
  1945   00225E                     	if	0	;tblptru may be non-zero
  1946   00225E                     	endif
  1947   00225E  0008               	tblrd		*
  1948   002260  50F5               	movf	tablat,w,c
  1949   002262  6E3D               	movwf	??_vfpfcnvrt^0,c
  1950   002264  6A3E               	clrf	(??_vfpfcnvrt+1)^0,c
  1951                           
  1952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1953                           ; Switch size 1, requested type "simple"
  1954                           ; Number of cases is 1, Range of values is 0 to 0
  1955                           ; switch strategies available:
  1956                           ; Name         Instructions Cycles
  1957                           ; simple_byte            4     3 (average)
  1958                           ;	Chosen strategy is simple_byte
  1959   002266  503E               	movf	(??_vfpfcnvrt+1)^0,w,c
  1960   002268  0A00               	xorlw	0	; case 0
  1961   00226A  B4D8               	btfsc	status,2,c
  1962   00226C  EF3A  F011         	goto	l4313
  1963   002270  EF41  F011         	goto	l3837
  1964   002274                     l4313:
  1965                           
  1966                           ; Switch size 1, requested type "simple"
  1967                           ; Number of cases is 1, Range of values is 102 to 102
  1968                           ; switch strategies available:
  1969                           ; Name         Instructions Cycles
  1970                           ; simple_byte            4     3 (average)
  1971                           ;	Chosen strategy is simple_byte
  1972   002274  503D               	movf	??_vfpfcnvrt^0,w,c
  1973   002276  0A66               	xorlw	102	; case 102
  1974   002278  B4D8               	btfsc	status,2,c
  1975   00227A  EF14  F011         	goto	l3829
  1976   00227E  EF41  F011         	goto	l3837
  1977   002282                     l3837:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1980   002282  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1981   002286  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1982   00228A  2ADE               	incf	postinc2,f,c
  1983   00228C  0E00               	movlw	0
  1984   00228E  22DD               	addwfc	postdec2,f,c
  1985   002290  EF5E  F011         	goto	l958
  1986   002294                     l3841:
  1987                           
  1988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1989   002294  C039  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1990   002298  C03A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1991   00229C  CFDE FFF6          	movff	postinc2,tblptrl
  1992   0022A0  CFDD FFF7          	movff	postdec2,tblptrh
  1993   0022A4                     	if	0	;tblptru may be non-zero
  1994   0022A4                     	endif
  1995   0022A4                     	if	0	;tblptru may be non-zero
  1996   0022A4                     	endif
  1997   0022A4  0008               	tblrd		*
  1998   0022A6  50F5               	movf	tablat,w,c
  1999   0022A8  6E01               	movwf	fputc@c^0,c
  2000   0022AA  6A02               	clrf	(fputc@c+1)^0,c
  2001   0022AC  C037  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2002   0022B0  C038  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2003   0022B4  EC06  F016         	call	_fputc	;wreg free
  2004   0022B8  EF41  F011         	goto	l3837
  2005   0022BC                     l958:
  2006   0022BC  0012               	return		;funcret
  2007   0022BE                     __end_of_vfpfcnvrt:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _utoa *****************
  2011 ;; Defined at:
  2012 ;;		line 917 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2015 ;;		 -> sprintf@f(12), 
  2016 ;;  d               2   29[COMRAM] unsigned int 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  i               2   35[COMRAM] int 
  2019 ;;  w               2   33[COMRAM] int 
  2020 ;;  p               2   31[COMRAM] int 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2030 ;;      Params:         4       0       0       0       0       0       0       0       0
  2031 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2032 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2033 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2034 ;;Total ram usage:       10 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 4
  2037 ;; This function calls:
  2038 ;;		___lwdiv
  2039 ;;		___lwmod
  2040 ;;		_pad
  2041 ;; This function is called by:
  2042 ;;		_vfpfcnvrt
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text4
  2047   00270A                     __ptext4:
  2048                           	callstack 0
  2049   00270A                     _utoa:
  2050                           	callstack 23
  2051   00270A                     
  2052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 917: static void 
      +                          utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 918: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           919:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprn
      +                          t.c: 923:     if (!(prec < 0)) {
  2053   00270A  BE5D               	btfsc	(_prec+1)^0,7,c
  2054   00270C  EF8A  F013         	goto	u3711
  2055   002710  EF8C  F013         	goto	u3710
  2056   002714                     u3711:
  2057   002714  EF8D  F013         	goto	l3707
  2058   002718                     u3710:
  2059   002718                     
  2060                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 924:         flag
      +                          s &= ~(1 << 1);
  2061   002718  925E               	bcf	_flags^0,1,c
  2062   00271A                     l3707:
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 927:     p = (0 <
      +                          = prec) ? prec : 1;
  2065   00271A  BE5D               	btfsc	(_prec+1)^0,7,c
  2066   00271C  EF94  F013         	goto	u3720
  2067   002720  EF92  F013         	goto	u3721
  2068   002724                     u3721:
  2069   002724  EF9A  F013         	goto	l923
  2070   002728                     u3720:
  2071   002728  0E00               	movlw	0
  2072   00272A  6E21               	movwf	(utoa@p+1)^0,c
  2073   00272C  0E01               	movlw	1
  2074   00272E  6E20               	movwf	utoa@p^0,c
  2075   002730  EF9E  F013         	goto	l925
  2076   002734                     l923:
  2077   002734  C05C  F020         	movff	_prec,utoa@p
  2078   002738  C05D  F021         	movff	_prec+1,utoa@p+1
  2079   00273C                     l925:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 928:     w = widt
      +                          h;
  2082   00273C  C0A2  F022         	movff	_width,utoa@w
  2083   002740  C0A3  F023         	movff	_width+1,utoa@w+1
  2084   002744                     
  2085                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 931:     i = size
      +                          of(dbuf) - 1;
  2086   002744  0E00               	movlw	0
  2087   002746  6E25               	movwf	(utoa@i+1)^0,c
  2088   002748  0E4F               	movlw	79
  2089   00274A  6E24               	movwf	utoa@i^0,c
  2090   00274C                     
  2091                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 932:     dbuf[i] 
      +                          = '\0';
  2092   00274C  0E00               	movlw	0
  2093   00274E  0101               	movlb	1	; () banked
  2094   002750  6F4F               	movwf	(_dbuf+79)& (0+255),b
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  2097   002752  EFD5  F013         	goto	l3725
  2098   002756                     l3715:
  2099                           
  2100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 937:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 938:         --i;
  2101   002756  0624               	decf	utoa@i^0,f,c
  2102   002758  A0D8               	btfss	status,0,c
  2103   00275A  0625               	decf	(utoa@i+1)^0,f,c
  2104   00275C                     
  2105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 939:         dbuf
      +                          [i] = '0' + (d % 10);
  2106   00275C  0E00               	movlw	low _dbuf
  2107   00275E  2424               	addwf	utoa@i^0,w,c
  2108   002760  6ED9               	movwf	fsr2l,c
  2109   002762  0E01               	movlw	high _dbuf
  2110   002764  2025               	addwfc	(utoa@i+1)^0,w,c
  2111   002766  6EDA               	movwf	fsr2h,c
  2112   002768  C01E  F001         	movff	utoa@d,___lwmod@dividend
  2113   00276C  C01F  F002         	movff	utoa@d+1,___lwmod@dividend+1
  2114   002770  0E00               	movlw	0
  2115   002772  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2116   002774  0E0A               	movlw	10
  2117   002776  6E03               	movwf	___lwmod@divisor^0,c
  2118   002778  EC4D  F018         	call	___lwmod	;wreg free
  2119   00277C  5001               	movf	?___lwmod^0,w,c
  2120   00277E  0F30               	addlw	48
  2121   002780  6EDF               	movwf	indf2,c
  2122   002782                     
  2123                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 940:         --p;
  2124   002782  0620               	decf	utoa@p^0,f,c
  2125   002784  A0D8               	btfss	status,0,c
  2126   002786  0621               	decf	(utoa@p+1)^0,f,c
  2127   002788                     
  2128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 941:         --w;
  2129   002788  0622               	decf	utoa@w^0,f,c
  2130   00278A  A0D8               	btfss	status,0,c
  2131   00278C  0623               	decf	(utoa@w+1)^0,f,c
  2132   00278E                     
  2133                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 942:         d = 
      +                          d / 10;
  2134   00278E  C01E  F001         	movff	utoa@d,___lwdiv@dividend
  2135   002792  C01F  F002         	movff	utoa@d+1,___lwdiv@dividend+1
  2136   002796  0E00               	movlw	0
  2137   002798  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2138   00279A  0E0A               	movlw	10
  2139   00279C  6E03               	movwf	___lwdiv@divisor^0,c
  2140   00279E  ECE0  F017         	call	___lwdiv	;wreg free
  2141   0027A2  C001  F01E         	movff	?___lwdiv,utoa@d
  2142   0027A6  C002  F01F         	movff	?___lwdiv+1,utoa@d+1
  2143   0027AA                     l3725:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 933:     while (i
      +                           && (d || (0 < p)
  2146   0027AA  5024               	movf	utoa@i^0,w,c
  2147   0027AC  1025               	iorwf	(utoa@i+1)^0,w,c
  2148   0027AE  B4D8               	btfsc	status,2,c
  2149   0027B0  EFDC  F013         	goto	u3731
  2150   0027B4  EFDE  F013         	goto	u3730
  2151   0027B8                     u3731:
  2152   0027B8  EF08  F014         	goto	l3735
  2153   0027BC                     u3730:
  2154   0027BC  501E               	movf	utoa@d^0,w,c
  2155   0027BE  101F               	iorwf	(utoa@d+1)^0,w,c
  2156   0027C0  A4D8               	btfss	status,2,c
  2157   0027C2  EFE5  F013         	goto	u3741
  2158   0027C6  EFE7  F013         	goto	u3740
  2159   0027CA                     u3741:
  2160   0027CA  EFAB  F013         	goto	l3715
  2161   0027CE                     u3740:
  2162   0027CE  BE21               	btfsc	(utoa@p+1)^0,7,c
  2163   0027D0  EFF4  F013         	goto	u3750
  2164   0027D4  5021               	movf	(utoa@p+1)^0,w,c
  2165   0027D6  E106               	bnz	u3751
  2166   0027D8  0420               	decf	utoa@p^0,w,c
  2167   0027DA  B0D8               	btfsc	status,0,c
  2168   0027DC  EFF2  F013         	goto	u3751
  2169   0027E0  EFF4  F013         	goto	u3750
  2170   0027E4                     u3751:
  2171   0027E4  EFAB  F013         	goto	l3715
  2172   0027E8                     u3750:
  2173   0027E8  BE23               	btfsc	(utoa@w+1)^0,7,c
  2174   0027EA  EFFF  F013         	goto	u3761
  2175   0027EE  5023               	movf	(utoa@w+1)^0,w,c
  2176   0027F0  E108               	bnz	u3760
  2177   0027F2  0422               	decf	utoa@w^0,w,c
  2178   0027F4  A0D8               	btfss	status,0,c
  2179   0027F6  EFFF  F013         	goto	u3761
  2180   0027FA  EF01  F014         	goto	u3760
  2181   0027FE                     u3761:
  2182   0027FE  EF08  F014         	goto	l3735
  2183   002802                     u3760:
  2184   002802  B25E               	btfsc	_flags^0,1,c
  2185   002804  EF06  F014         	goto	u3771
  2186   002808  EF08  F014         	goto	u3770
  2187   00280C                     u3771:
  2188   00280C  EFAB  F013         	goto	l3715
  2189   002810                     u3770:
  2190   002810                     l3735:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 946:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2193   002810  C01C  F011         	movff	utoa@fp,pad@fp
  2194   002814  C01D  F012         	movff	utoa@fp+1,pad@fp+1
  2195   002818  0E00               	movlw	low _dbuf
  2196   00281A  2424               	addwf	utoa@i^0,w,c
  2197   00281C  6E13               	movwf	pad@buf^0,c
  2198   00281E  0E01               	movlw	high _dbuf
  2199   002820  2025               	addwfc	(utoa@i+1)^0,w,c
  2200   002822  6E14               	movwf	(pad@buf+1)^0,c
  2201   002824  C022  F015         	movff	utoa@w,pad@p
  2202   002828  C023  F016         	movff	utoa@w+1,pad@p+1
  2203   00282C  ECA3  F017         	call	_pad	;wreg free
  2204   002830  0012               	return		;funcret
  2205   002832                     __end_of_utoa:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function ___lwmod *****************
  2209 ;; Defined at:
  2210 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  dividend        2    0[COMRAM] unsigned int 
  2213 ;;  divisor         2    2[COMRAM] unsigned int 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  counter         1    4[COMRAM] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2    0[COMRAM] unsigned int 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         4       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        5 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_utoa
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text5
  2239   00309A                     __ptext5:
  2240                           	callstack 0
  2241   00309A                     ___lwmod:
  2242                           	callstack 26
  2243   00309A  5003               	movf	___lwmod@divisor^0,w,c
  2244   00309C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2245   00309E  B4D8               	btfsc	status,2,c
  2246   0030A0  EF54  F018         	goto	u3071
  2247   0030A4  EF56  F018         	goto	u3070
  2248   0030A8                     u3071:
  2249   0030A8  EF7A  F018         	goto	l649
  2250   0030AC                     u3070:
  2251   0030AC  0E01               	movlw	1
  2252   0030AE  6E05               	movwf	___lwmod@counter^0,c
  2253   0030B0  EF5E  F018         	goto	l3359
  2254   0030B4                     l3357:
  2255   0030B4  90D8               	bcf	status,0,c
  2256   0030B6  3603               	rlcf	___lwmod@divisor^0,f,c
  2257   0030B8  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2258   0030BA  2A05               	incf	___lwmod@counter^0,f,c
  2259   0030BC                     l3359:
  2260   0030BC  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2261   0030BE  EF63  F018         	goto	u3081
  2262   0030C2  EF65  F018         	goto	u3080
  2263   0030C6                     u3081:
  2264   0030C6  EF5A  F018         	goto	l3357
  2265   0030CA                     u3080:
  2266   0030CA                     l3361:
  2267   0030CA  5003               	movf	___lwmod@divisor^0,w,c
  2268   0030CC  5C01               	subwf	___lwmod@dividend^0,w,c
  2269   0030CE  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2270   0030D0  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2271   0030D2  A0D8               	btfss	status,0,c
  2272   0030D4  EF6E  F018         	goto	u3091
  2273   0030D8  EF70  F018         	goto	u3090
  2274   0030DC                     u3091:
  2275   0030DC  EF74  F018         	goto	l3365
  2276   0030E0                     u3090:
  2277   0030E0  5003               	movf	___lwmod@divisor^0,w,c
  2278   0030E2  5E01               	subwf	___lwmod@dividend^0,f,c
  2279   0030E4  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2280   0030E6  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2281   0030E8                     l3365:
  2282   0030E8  90D8               	bcf	status,0,c
  2283   0030EA  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2284   0030EC  3203               	rrcf	___lwmod@divisor^0,f,c
  2285   0030EE  2E05               	decfsz	___lwmod@counter^0,f,c
  2286   0030F0  EF65  F018         	goto	l3361
  2287   0030F4                     l649:
  2288   0030F4  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2289   0030F8  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2290   0030FC  0012               	return		;funcret
  2291   0030FE                     __end_of___lwmod:
  2292                           	callstack 0
  2293                           
  2294 ;; *************** function ___lwdiv *****************
  2295 ;; Defined at:
  2296 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  dividend        2    0[COMRAM] unsigned int 
  2299 ;;  divisor         2    2[COMRAM] unsigned int 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  quotient        2    4[COMRAM] unsigned int 
  2302 ;;  counter         1    6[COMRAM] unsigned char 
  2303 ;; Return value:  Size  Location     Type
  2304 ;;                  2    0[COMRAM] unsigned int 
  2305 ;; Registers used:
  2306 ;;		wreg, status,2, status,0
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2312 ;;      Params:         4       0       0       0       0       0       0       0       0
  2313 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2315 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2316 ;;Total ram usage:        7 bytes
  2317 ;; Hardware stack levels used: 1
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_utoa
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text6
  2326   002FC0                     __ptext6:
  2327                           	callstack 0
  2328   002FC0                     ___lwdiv:
  2329                           	callstack 26
  2330   002FC0  0E00               	movlw	0
  2331   002FC2  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2332   002FC4  0E00               	movlw	0
  2333   002FC6  6E05               	movwf	___lwdiv@quotient^0,c
  2334   002FC8  5003               	movf	___lwdiv@divisor^0,w,c
  2335   002FCA  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2336   002FCC  B4D8               	btfsc	status,2,c
  2337   002FCE  EFEB  F017         	goto	u3041
  2338   002FD2  EFED  F017         	goto	u3040
  2339   002FD6                     u3041:
  2340   002FD6  EF15  F018         	goto	l639
  2341   002FDA                     u3040:
  2342   002FDA  0E01               	movlw	1
  2343   002FDC  6E07               	movwf	___lwdiv@counter^0,c
  2344   002FDE  EFF5  F017         	goto	l3339
  2345   002FE2                     l3337:
  2346   002FE2  90D8               	bcf	status,0,c
  2347   002FE4  3603               	rlcf	___lwdiv@divisor^0,f,c
  2348   002FE6  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2349   002FE8  2A07               	incf	___lwdiv@counter^0,f,c
  2350   002FEA                     l3339:
  2351   002FEA  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2352   002FEC  EFFA  F017         	goto	u3051
  2353   002FF0  EFFC  F017         	goto	u3050
  2354   002FF4                     u3051:
  2355   002FF4  EFF1  F017         	goto	l3337
  2356   002FF8                     u3050:
  2357   002FF8                     l3341:
  2358   002FF8  90D8               	bcf	status,0,c
  2359   002FFA  3605               	rlcf	___lwdiv@quotient^0,f,c
  2360   002FFC  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2361   002FFE  5003               	movf	___lwdiv@divisor^0,w,c
  2362   003000  5C01               	subwf	___lwdiv@dividend^0,w,c
  2363   003002  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2364   003004  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2365   003006  A0D8               	btfss	status,0,c
  2366   003008  EF08  F018         	goto	u3061
  2367   00300C  EF0A  F018         	goto	u3060
  2368   003010                     u3061:
  2369   003010  EF0F  F018         	goto	l3349
  2370   003014                     u3060:
  2371   003014  5003               	movf	___lwdiv@divisor^0,w,c
  2372   003016  5E01               	subwf	___lwdiv@dividend^0,f,c
  2373   003018  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2374   00301A  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2375   00301C  8005               	bsf	___lwdiv@quotient^0,0,c
  2376   00301E                     l3349:
  2377   00301E  90D8               	bcf	status,0,c
  2378   003020  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2379   003022  3203               	rrcf	___lwdiv@divisor^0,f,c
  2380   003024  2E07               	decfsz	___lwdiv@counter^0,f,c
  2381   003026  EFFC  F017         	goto	l3341
  2382   00302A                     l639:
  2383   00302A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2384   00302E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2385   003032  0012               	return		;funcret
  2386   003034                     __end_of___lwdiv:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _read_prec_or_width *****************
  2390 ;; Defined at:
  2391 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  2394 ;;		 -> vfprintf@cfmt(2), 
  2395 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  2396 ;;		 -> sprintf@ap(2), 
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;  c               1   12[COMRAM] unsigned char 
  2399 ;;  n               2   13[COMRAM] int 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  2    6[COMRAM] int 
  2402 ;; Registers used:
  2403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2409 ;;      Params:         4       0       0       0       0       0       0       0       0
  2410 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2411 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2412 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2413 ;;Total ram usage:        9 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 1
  2416 ;; This function calls:
  2417 ;;		___wmul
  2418 ;; This function is called by:
  2419 ;;		_vfpfcnvrt
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text7
  2424   002CD6                     __ptext7:
  2425                           	callstack 0
  2426   002CD6                     _read_prec_or_width:
  2427                           	callstack 26
  2428   002CD6                     
  2429                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2430   002CD6  0E00               	movlw	0
  2431   002CD8  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2432   002CDA  0E00               	movlw	0
  2433   002CDC  6E0E               	movwf	read_prec_or_width@n^0,c
  2434   002CDE                     
  2435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2436   002CDE  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2437   002CE2  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2438   002CE6  CFDE FFF6          	movff	postinc2,tblptrl
  2439   002CEA  CFDD FFF7          	movff	postdec2,tblptrh
  2440   002CEE                     	if	0	;tblptru may be non-zero
  2441   002CEE                     	endif
  2442   002CEE                     	if	0	;tblptru may be non-zero
  2443   002CEE                     	endif
  2444   002CEE  0008               	tblrd		*
  2445   002CF0  50F5               	movf	tablat,w,c
  2446   002CF2  0A2A               	xorlw	42
  2447   002CF4  A4D8               	btfss	status,2,c
  2448   002CF6  EF7F  F016         	goto	u3781
  2449   002CFA  EF81  F016         	goto	u3780
  2450   002CFE                     u3781:
  2451   002CFE  EFB5  F016         	goto	l3749
  2452   002D02                     u3780:
  2453   002D02                     
  2454                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2455   002D02  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2456   002D06  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2457   002D0A  2ADE               	incf	postinc2,f,c
  2458   002D0C  0E00               	movlw	0
  2459   002D0E  22DD               	addwfc	postdec2,f,c
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2462   002D10  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2463   002D14  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2464   002D18  CFDF F00B          	movff	indf2,??_read_prec_or_width
  2465   002D1C  0E02               	movlw	2
  2466   002D1E  26DE               	addwf	postinc2,f,c
  2467   002D20  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  2468   002D24  0E00               	movlw	0
  2469   002D26  22DD               	addwfc	postdec2,f,c
  2470   002D28  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  2471   002D2C  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  2472   002D30  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  2473   002D34  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  2474                           
  2475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2476   002D38  EFC9  F016         	goto	l937
  2477   002D3C                     l3745:
  2478                           
  2479                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2480   002D3C  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2481   002D40  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2482   002D44  0E00               	movlw	0
  2483   002D46  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2484   002D48  0E0A               	movlw	10
  2485   002D4A  6E03               	movwf	___wmul@multiplicand^0,c
  2486   002D4C  ECE4  F019         	call	___wmul	;wreg free
  2487   002D50  500D               	movf	read_prec_or_width@c^0,w,c
  2488   002D52  2401               	addwf	?___wmul^0,w,c
  2489   002D54  6E0E               	movwf	read_prec_or_width@n^0,c
  2490   002D56  0E00               	movlw	0
  2491   002D58  2002               	addwfc	(?___wmul+1)^0,w,c
  2492   002D5A  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2493   002D5C                     
  2494                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2495   002D5C  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2496   002D60  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2497   002D64  2ADE               	incf	postinc2,f,c
  2498   002D66  0E00               	movlw	0
  2499   002D68  22DD               	addwfc	postdec2,f,c
  2500   002D6A                     l3749:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2503   002D6A  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2504   002D6E  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2505   002D72  CFDE FFF6          	movff	postinc2,tblptrl
  2506   002D76  CFDD FFF7          	movff	postdec2,tblptrh
  2507   002D7A                     	if	0	;tblptru may be non-zero
  2508   002D7A                     	endif
  2509   002D7A                     	if	0	;tblptru may be non-zero
  2510   002D7A                     	endif
  2511   002D7A  0008               	tblrd		*
  2512   002D7C  50F5               	movf	tablat,w,c
  2513   002D7E  0FD0               	addlw	208
  2514   002D80  6E0D               	movwf	read_prec_or_width@c^0,c
  2515   002D82  0E09               	movlw	9
  2516   002D84  640D               	cpfsgt	read_prec_or_width@c^0,c
  2517   002D86  EFC7  F016         	goto	u3791
  2518   002D8A  EFC9  F016         	goto	u3790
  2519   002D8E                     u3791:
  2520   002D8E  EF9E  F016         	goto	l3745
  2521   002D92                     u3790:
  2522   002D92                     l937:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2525   002D92  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2526   002D96  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2527   002D9A  0012               	return		;funcret
  2528   002D9C                     __end_of_read_prec_or_width:
  2529                           	callstack 0
  2530                           
  2531 ;; *************** function ___wmul *****************
  2532 ;; Defined at:
  2533 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  multiplier      2    0[COMRAM] unsigned int 
  2536 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  product         2    4[COMRAM] unsigned int 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  2    0[COMRAM] unsigned int 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0, prodl, prodh
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2548 ;;      Params:         4       0       0       0       0       0       0       0       0
  2549 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2551 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2552 ;;Total ram usage:        6 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_read_prec_or_width
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text8
  2562   0033C8                     __ptext8:
  2563                           	callstack 0
  2564   0033C8                     ___wmul:
  2565                           	callstack 26
  2566   0033C8  5001               	movf	___wmul@multiplier^0,w,c
  2567   0033CA  0203               	mulwf	___wmul@multiplicand^0,c
  2568   0033CC  CFF3 F005          	movff	prodl,___wmul@product
  2569   0033D0  CFF4 F006          	movff	prodh,___wmul@product+1
  2570   0033D4  5001               	movf	___wmul@multiplier^0,w,c
  2571   0033D6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2572   0033D8  50F3               	movf	243,w,c
  2573   0033DA  2606               	addwf	(___wmul@product+1)^0,f,c
  2574   0033DC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2575   0033DE  0203               	mulwf	___wmul@multiplicand^0,c
  2576   0033E0  50F3               	movf	243,w,c
  2577   0033E2  2606               	addwf	(___wmul@product+1)^0,f,c
  2578   0033E4  C005  F001         	movff	___wmul@product,?___wmul
  2579   0033E8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2580   0033EC  0012               	return		;funcret
  2581   0033EE                     __end_of___wmul:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _efgtoa *****************
  2585 ;; Defined at:
  2586 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  2589 ;;		 -> sprintf@f(12), 
  2590 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  2591 ;;  c               1   51[COMRAM] unsigned char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  u               4   40[BANK0 ] struct flui
  2594 ;;  g               4   34[BANK0 ] struct flui
  2595 ;;  l               4   27[BANK0 ] struct flui
  2596 ;;  h               4   23[BANK0 ] struct flui
  2597 ;;  ou              4   19[BANK0 ] struct flui
  2598 ;;  n               2   38[BANK0 ] int 
  2599 ;;  i               2   31[BANK0 ] int 
  2600 ;;  w               2   17[BANK0 ] int 
  2601 ;;  e               2   15[BANK0 ] int 
  2602 ;;  m               2   13[BANK0 ] int 
  2603 ;;  d               2   11[BANK0 ] int 
  2604 ;;  t               2    4[BANK0 ] int 
  2605 ;;  p               2    2[BANK0 ] int 
  2606 ;;  ne              2    0[BANK0 ] int 
  2607 ;;  sign            1   33[BANK0 ] unsigned char 
  2608 ;;  nmode           1   10[BANK0 ] unsigned char 
  2609 ;;  mode            1    9[BANK0 ] unsigned char 
  2610 ;;  pp              1    8[BANK0 ] unsigned char 
  2611 ;;  esign           1    0        unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2621 ;;      Params:         7       0       0       0       0       0       0       0       0
  2622 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2623 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2624 ;;      Totals:         9      44       0       0       0       0       0       0       0
  2625 ;;Total ram usage:       53 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 4
  2628 ;; This function calls:
  2629 ;;		___fladd
  2630 ;;		___fldiv
  2631 ;;		___fleq
  2632 ;;		___flge
  2633 ;;		___flmul
  2634 ;;		___flneg
  2635 ;;		___flsub
  2636 ;;		___fltol
  2637 ;;		___fpclassifyf
  2638 ;;		_floorf
  2639 ;;		_labs
  2640 ;;		_memcpy
  2641 ;;		_pad
  2642 ;;		_strcpy
  2643 ;; This function is called by:
  2644 ;;		_vfpfcnvrt
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text9
  2649   000846                     __ptext9:
  2650                           	callstack 0
  2651   000846                     _efgtoa:
  2652                           	callstack 23
  2653   000846                     
  2654                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  2655   000846  0E00               	movlw	0
  2656   000848  0100               	movlb	0	; () banked
  2657   00084A  6F81               	movwf	efgtoa@sign& (0+255),b
  2658   00084C                     
  2659                           ; BSR set to: 0
  2660                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  2661   00084C  C030  F082         	movff	efgtoa@f,efgtoa@g
  2662   000850  C031  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2663   000854  C032  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2664   000858  C033  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2665   00085C                     
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  2668   00085C  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2669   00085E  EF35  F004         	goto	u3360
  2670   000862  EF33  F004         	goto	u3361
  2671   000866                     u3361:
  2672   000866  EF49  F004         	goto	l3479
  2673   00086A                     u3360:
  2674   00086A                     
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  2677   00086A  0E01               	movlw	1
  2678   00086C  6F81               	movwf	efgtoa@sign& (0+255),b
  2679   00086E                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  2682   00086E  C082  F001         	movff	efgtoa@g,___flneg@f1
  2683   000872  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2684   000876  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2685   00087A  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2686   00087E  ECAE  F019         	call	___flneg	;wreg free
  2687   000882  C001  F082         	movff	?___flneg,efgtoa@g
  2688   000886  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2689   00088A  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2690   00088E  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2691   000892                     l3479:
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  2694   000892  0E00               	movlw	0
  2695   000894  0100               	movlb	0	; () banked
  2696   000896  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2697   000898  0E00               	movlw	0
  2698   00089A  6F86               	movwf	efgtoa@n& (0+255),b
  2699   00089C                     
  2700                           ; BSR set to: 0
  2701                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  2702   00089C  C0A2  F071         	movff	_width,efgtoa@w
  2703   0008A0  C0A3  F072         	movff	_width+1,efgtoa@w+1
  2704   0008A4                     
  2705                           ; BSR set to: 0
  2706                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  2707   0008A4  5181               	movf	efgtoa@sign& (0+255),w,b
  2708   0008A6  B4D8               	btfsc	status,2,c
  2709   0008A8  EF58  F004         	goto	u3371
  2710   0008AC  EF5A  F004         	goto	u3370
  2711   0008B0                     u3371:
  2712   0008B0  EF6E  F004         	goto	l3493
  2713   0008B4                     u3370:
  2714   0008B4                     
  2715                           ; BSR set to: 0
  2716                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  2717   0008B4  5181               	movf	efgtoa@sign& (0+255),w,b
  2718   0008B6  A4D8               	btfss	status,2,c
  2719   0008B8  EF60  F004         	goto	u3381
  2720   0008BC  EF62  F004         	goto	u3380
  2721   0008C0                     u3381:
  2722   0008C0  EF68  F004         	goto	l3489
  2723   0008C4                     u3380:
  2724   0008C4                     
  2725                           ; BSR set to: 0
  2726   0008C4  0E00               	movlw	0
  2727   0008C6  6F67               	movwf	(_efgtoa$819+1)& (0+255),b
  2728   0008C8  0E2B               	movlw	43
  2729   0008CA  6F66               	movwf	_efgtoa$819& (0+255),b
  2730   0008CC  EF6C  F004         	goto	l3491
  2731   0008D0                     l3489:
  2732                           
  2733                           ; BSR set to: 0
  2734   0008D0  0E00               	movlw	0
  2735   0008D2  6F67               	movwf	(_efgtoa$819+1)& (0+255),b
  2736   0008D4  0E2D               	movlw	45
  2737   0008D6  6F66               	movwf	_efgtoa$819& (0+255),b
  2738   0008D8                     l3491:
  2739                           
  2740                           ; BSR set to: 0
  2741   0008D8  C066  F081         	movff	_efgtoa$819,efgtoa@sign
  2742   0008DC                     l3493:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2746   0008DC  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2747   0008E0  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2748   0008E4  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2749   0008E8  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2750   0008EC  EC1E  F015         	call	___fpclassifyf	;wreg free
  2751   0008F0  0401               	decf	?___fpclassifyf^0,w,c
  2752   0008F2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2753   0008F4  A4D8               	btfss	status,2,c
  2754   0008F6  EF7F  F004         	goto	u3391
  2755   0008FA  EF81  F004         	goto	u3390
  2756   0008FE                     u3391:
  2757   0008FE  EFB4  F004         	goto	l3511
  2758   000902                     u3390:
  2759   000902                     
  2760                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  2761   000902  0100               	movlb	0	; () banked
  2762   000904  5181               	movf	efgtoa@sign& (0+255),w,b
  2763   000906  B4D8               	btfsc	status,2,c
  2764   000908  EF88  F004         	goto	u3401
  2765   00090C  EF8A  F004         	goto	u3400
  2766   000910                     u3401:
  2767   000910  EF93  F004         	goto	l3503
  2768   000914                     u3400:
  2769   000914                     
  2770                           ; BSR set to: 0
  2771                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  2772   000914  C081  F100         	movff	efgtoa@sign,_dbuf
  2773   000918                     
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  2776   000918  0771               	decf	efgtoa@w& (0+255),f,b
  2777   00091A  A0D8               	btfss	status,0,c
  2778   00091C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2779   00091E                     
  2780                           ; BSR set to: 0
  2781                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  2782   00091E  0E00               	movlw	0
  2783   000920  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2784   000922  0E01               	movlw	1
  2785   000924  6F86               	movwf	efgtoa@n& (0+255),b
  2786   000926                     l3503:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  2790   000926  0E00               	movlw	low _dbuf
  2791   000928  2586               	addwf	efgtoa@n& (0+255),w,b
  2792   00092A  6E01               	movwf	strcpy@dest^0,c
  2793   00092C  0E01               	movlw	high _dbuf
  2794   00092E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2795   000930  6E02               	movwf	(strcpy@dest+1)^0,c
  2796   000932  0E3D               	movlw	low STR_6
  2797   000934  6E03               	movwf	strcpy@src^0,c
  2798   000936  0E08               	movlw	high STR_6
  2799   000938  6E04               	movwf	(strcpy@src+1)^0,c
  2800   00093A  EC8E  F019         	call	_strcpy	;wreg free
  2801   00093E                     l3505:
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2804   00093E  0100               	movlb	0	; () banked
  2805   000940  0EFD               	movlw	253
  2806   000942  2771               	addwf	efgtoa@w& (0+255),f,b
  2807   000944  0EFF               	movlw	255
  2808   000946  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2809   000948                     
  2810                           ; BSR set to: 0
  2811                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2812   000948  C02E  F011         	movff	efgtoa@fp,pad@fp
  2813   00094C  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2814   000950  0E00               	movlw	low _dbuf
  2815   000952  6E13               	movwf	pad@buf^0,c
  2816   000954  0E01               	movlw	high _dbuf
  2817   000956  6E14               	movwf	(pad@buf+1)^0,c
  2818   000958  C071  F015         	movff	efgtoa@w,pad@p
  2819   00095C  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2820   000960  ECA3  F017         	call	_pad	;wreg free
  2821   000964  EF54  F009         	goto	l871
  2822   000968                     l3511:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2825   000968  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2826   00096C  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2827   000970  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2828   000974  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2829   000978  EC1E  F015         	call	___fpclassifyf	;wreg free
  2830   00097C  5001               	movf	?___fpclassifyf^0,w,c
  2831   00097E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2832   000980  A4D8               	btfss	status,2,c
  2833   000982  EFC5  F004         	goto	u3411
  2834   000986  EFC7  F004         	goto	u3410
  2835   00098A                     u3411:
  2836   00098A  EFE7  F004         	goto	l3529
  2837   00098E                     u3410:
  2838   00098E                     
  2839                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  2840   00098E  0100               	movlb	0	; () banked
  2841   000990  5181               	movf	efgtoa@sign& (0+255),w,b
  2842   000992  B4D8               	btfsc	status,2,c
  2843   000994  EFCE  F004         	goto	u3421
  2844   000998  EFD0  F004         	goto	u3420
  2845   00099C                     u3421:
  2846   00099C  EFD9  F004         	goto	l3521
  2847   0009A0                     u3420:
  2848   0009A0                     
  2849                           ; BSR set to: 0
  2850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  2851   0009A0  C081  F100         	movff	efgtoa@sign,_dbuf
  2852   0009A4                     
  2853                           ; BSR set to: 0
  2854                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  2855   0009A4  0771               	decf	efgtoa@w& (0+255),f,b
  2856   0009A6  A0D8               	btfss	status,0,c
  2857   0009A8  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2858   0009AA                     
  2859                           ; BSR set to: 0
  2860                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  2861   0009AA  0E00               	movlw	0
  2862   0009AC  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2863   0009AE  0E01               	movlw	1
  2864   0009B0  6F86               	movwf	efgtoa@n& (0+255),b
  2865   0009B2                     l3521:
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  2869   0009B2  0E00               	movlw	low _dbuf
  2870   0009B4  2586               	addwf	efgtoa@n& (0+255),w,b
  2871   0009B6  6E01               	movwf	strcpy@dest^0,c
  2872   0009B8  0E01               	movlw	high _dbuf
  2873   0009BA  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2874   0009BC  6E02               	movwf	(strcpy@dest+1)^0,c
  2875   0009BE  0E41               	movlw	low STR_9
  2876   0009C0  6E03               	movwf	strcpy@src^0,c
  2877   0009C2  0E08               	movlw	high STR_9
  2878   0009C4  6E04               	movwf	(strcpy@src+1)^0,c
  2879   0009C6  EC8E  F019         	call	_strcpy	;wreg free
  2880   0009CA  EF9F  F004         	goto	l3505
  2881   0009CE                     l3529:
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  2884   0009CE  0E00               	movlw	0
  2885   0009D0  0100               	movlb	0	; () banked
  2886   0009D2  6F88               	movwf	efgtoa@u& (0+255),b
  2887   0009D4  0E00               	movlw	0
  2888   0009D6  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2889   0009D8  0E80               	movlw	128
  2890   0009DA  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2891   0009DC  0E3F               	movlw	63
  2892   0009DE  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  2895   0009E0  0E00               	movlw	0
  2896   0009E2  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2897   0009E4  0E00               	movlw	0
  2898   0009E6  6F6F               	movwf	efgtoa@e& (0+255),b
  2899   0009E8                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  2902   0009E8  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2903   0009EC  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2904   0009F0  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2905   0009F4  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2906   0009F8  0E00               	movlw	0
  2907   0009FA  6E05               	movwf	___fleq@ff2^0,c
  2908   0009FC  0E00               	movlw	0
  2909   0009FE  6E06               	movwf	(___fleq@ff2+1)^0,c
  2910   000A00  0E00               	movlw	0
  2911   000A02  6E07               	movwf	(___fleq@ff2+2)^0,c
  2912   000A04  0E00               	movlw	0
  2913   000A06  6E08               	movwf	(___fleq@ff2+3)^0,c
  2914   000A08  ECCE  F016         	call	___fleq	;wreg free
  2915   000A0C  B0D8               	btfsc	status,0,c
  2916   000A0E  EF0B  F005         	goto	u3431
  2917   000A12  EF0D  F005         	goto	u3430
  2918   000A16                     u3431:
  2919   000A16  EFEC  F005         	goto	l874
  2920   000A1A                     u3430:
  2921   000A1A  EF1A  F005         	goto	l3537
  2922   000A1E                     l876:
  2923                           
  2924                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  2925   000A1E  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2926   000A22  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2927   000A26  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2928   000A2A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2929   000A2E                     
  2930                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  2931   000A2E  0100               	movlb	0	; () banked
  2932   000A30  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2933   000A32  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2934   000A34                     l3537:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2937   000A34  C088  F001         	movff	efgtoa@u,___flmul@b
  2938   000A38  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  2939   000A3C  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  2940   000A40  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  2941   000A44  0E00               	movlw	0
  2942   000A46  6E05               	movwf	___flmul@a^0,c
  2943   000A48  0E00               	movlw	0
  2944   000A4A  6E06               	movwf	(___flmul@a+1)^0,c
  2945   000A4C  0E20               	movlw	32
  2946   000A4E  6E07               	movwf	(___flmul@a+2)^0,c
  2947   000A50  0E41               	movlw	65
  2948   000A52  6E08               	movwf	(___flmul@a+3)^0,c
  2949   000A54  ECB5  F00B         	call	___flmul	;wreg free
  2950   000A58  C001  F073         	movff	?___flmul,efgtoa@ou
  2951   000A5C  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  2952   000A60  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  2953   000A64  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  2954   000A68  0100               	movlb	0	; () banked
  2955   000A6A  5173               	movf	efgtoa@ou& (0+255),w,b
  2956   000A6C  5D82               	subwf	efgtoa@g& (0+255),w,b
  2957   000A6E  6E01               	movwf	labs@a^0,c
  2958   000A70  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2959   000A72  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2960   000A74  6E02               	movwf	(labs@a+1)^0,c
  2961   000A76  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2962   000A78  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2963   000A7A  6E03               	movwf	(labs@a+2)^0,c
  2964   000A7C  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2965   000A7E  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2966   000A80  6E04               	movwf	(labs@a+3)^0,c
  2967   000A82  EC1A  F018         	call	_labs	;wreg free
  2968   000A86  BE04               	btfsc	(?_labs+3)^0,7,c
  2969   000A88  EF51  F005         	goto	u3441
  2970   000A8C  5004               	movf	(?_labs+3)^0,w,c
  2971   000A8E  1003               	iorwf	(?_labs+2)^0,w,c
  2972   000A90  1002               	iorwf	(?_labs+1)^0,w,c
  2973   000A92  E109               	bnz	u3440
  2974   000A94  0E02               	movlw	2
  2975   000A96  5C01               	subwf	?_labs^0,w,c
  2976   000A98  A0D8               	btfss	status,0,c
  2977   000A9A  EF51  F005         	goto	u3441
  2978   000A9E  EF53  F005         	goto	u3440
  2979   000AA2                     u3441:
  2980   000AA2  EF0F  F005         	goto	l876
  2981   000AA6                     u3440:
  2982   000AA6  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  2983   000AAA  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  2984   000AAE  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  2985   000AB2  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  2986   000AB6  C082  F01E         	movff	efgtoa@g,___flge@ff2
  2987   000ABA  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  2988   000ABE  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  2989   000AC2  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  2990   000AC6  EC9C  F014         	call	___flge	;wreg free
  2991   000ACA  A0D8               	btfss	status,0,c
  2992   000ACC  EF6A  F005         	goto	u3451
  2993   000AD0  EF6C  F005         	goto	u3450
  2994   000AD4                     u3451:
  2995   000AD4  EF0F  F005         	goto	l876
  2996   000AD8                     u3450:
  2997   000AD8                     
  2998                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2999   000AD8  0100               	movlb	0	; () banked
  3000   000ADA  5188               	movf	efgtoa@u& (0+255),w,b
  3001   000ADC  5D82               	subwf	efgtoa@g& (0+255),w,b
  3002   000ADE  6E01               	movwf	labs@a^0,c
  3003   000AE0  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3004   000AE2  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3005   000AE4  6E02               	movwf	(labs@a+1)^0,c
  3006   000AE6  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3007   000AE8  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3008   000AEA  6E03               	movwf	(labs@a+2)^0,c
  3009   000AEC  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3010   000AEE  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3011   000AF0  6E04               	movwf	(labs@a+3)^0,c
  3012   000AF2  EC1A  F018         	call	_labs	;wreg free
  3013   000AF6  BE04               	btfsc	(?_labs+3)^0,7,c
  3014   000AF8  EF8B  F005         	goto	u3460
  3015   000AFC  5004               	movf	(?_labs+3)^0,w,c
  3016   000AFE  1003               	iorwf	(?_labs+2)^0,w,c
  3017   000B00  1002               	iorwf	(?_labs+1)^0,w,c
  3018   000B02  E107               	bnz	u3461
  3019   000B04  0E02               	movlw	2
  3020   000B06  5C01               	subwf	?_labs^0,w,c
  3021   000B08  B0D8               	btfsc	status,0,c
  3022   000B0A  EF89  F005         	goto	u3461
  3023   000B0E  EF8B  F005         	goto	u3460
  3024   000B12                     u3461:
  3025   000B12  EFD3  F005         	goto	l3555
  3026   000B16                     u3460:
  3027   000B16                     l3545:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  3030   000B16  C088  F082         	movff	efgtoa@u,efgtoa@g
  3031   000B1A  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  3032   000B1E  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  3033   000B22  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  3036   000B26  EFEC  F005         	goto	l874
  3037   000B2A                     l3547:
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  3040   000B2A  C088  F001         	movff	efgtoa@u,___fldiv@b
  3041   000B2E  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3042   000B32  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3043   000B36  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3044   000B3A  0E00               	movlw	0
  3045   000B3C  6E05               	movwf	___fldiv@a^0,c
  3046   000B3E  0E00               	movlw	0
  3047   000B40  6E06               	movwf	(___fldiv@a+1)^0,c
  3048   000B42  0E20               	movlw	32
  3049   000B44  6E07               	movwf	(___fldiv@a+2)^0,c
  3050   000B46  0E41               	movlw	65
  3051   000B48  6E08               	movwf	(___fldiv@a+3)^0,c
  3052   000B4A  ECCA  F00D         	call	___fldiv	;wreg free
  3053   000B4E  C001  F088         	movff	?___fldiv,efgtoa@u
  3054   000B52  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3055   000B56  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3056   000B5A  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3057   000B5E                     
  3058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  3059   000B5E  0100               	movlb	0	; () banked
  3060   000B60  076F               	decf	efgtoa@e& (0+255),f,b
  3061   000B62  A0D8               	btfss	status,0,c
  3062   000B64  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3063   000B66                     
  3064                           ; BSR set to: 0
  3065                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3066   000B66  5188               	movf	efgtoa@u& (0+255),w,b
  3067   000B68  5D82               	subwf	efgtoa@g& (0+255),w,b
  3068   000B6A  6E01               	movwf	labs@a^0,c
  3069   000B6C  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3070   000B6E  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3071   000B70  6E02               	movwf	(labs@a+1)^0,c
  3072   000B72  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3073   000B74  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3074   000B76  6E03               	movwf	(labs@a+2)^0,c
  3075   000B78  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3076   000B7A  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3077   000B7C  6E04               	movwf	(labs@a+3)^0,c
  3078   000B7E  EC1A  F018         	call	_labs	;wreg free
  3079   000B82  BE04               	btfsc	(?_labs+3)^0,7,c
  3080   000B84  EFD1  F005         	goto	u3470
  3081   000B88  5004               	movf	(?_labs+3)^0,w,c
  3082   000B8A  1003               	iorwf	(?_labs+2)^0,w,c
  3083   000B8C  1002               	iorwf	(?_labs+1)^0,w,c
  3084   000B8E  E107               	bnz	u3471
  3085   000B90  0E02               	movlw	2
  3086   000B92  5C01               	subwf	?_labs^0,w,c
  3087   000B94  B0D8               	btfsc	status,0,c
  3088   000B96  EFCF  F005         	goto	u3471
  3089   000B9A  EFD1  F005         	goto	u3470
  3090   000B9E                     u3471:
  3091   000B9E  EFD3  F005         	goto	l3555
  3092   000BA2                     u3470:
  3093   000BA2  EF8B  F005         	goto	l3545
  3094   000BA6                     l3555:
  3095                           
  3096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  3097   000BA6  C082  F01A         	movff	efgtoa@g,___flge@ff1
  3098   000BAA  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3099   000BAE  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3100   000BB2  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3101   000BB6  C088  F01E         	movff	efgtoa@u,___flge@ff2
  3102   000BBA  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3103   000BBE  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3104   000BC2  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3105   000BC6  EC9C  F014         	call	___flge	;wreg free
  3106   000BCA  A0D8               	btfss	status,0,c
  3107   000BCC  EFEA  F005         	goto	u3481
  3108   000BD0  EFEC  F005         	goto	u3480
  3109   000BD4                     u3481:
  3110   000BD4  EF95  F005         	goto	l3547
  3111   000BD8                     u3480:
  3112   000BD8                     l874:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  3115   000BD8  C034  F069         	movff	efgtoa@c,efgtoa@mode
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  3118   000BDC  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3119   000BE0                     
  3120                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  3121   000BE0  BE5D               	btfsc	(_prec+1)^0,7,c
  3122   000BE2  EFF5  F005         	goto	u3491
  3123   000BE6  EFF7  F005         	goto	u3490
  3124   000BEA                     u3491:
  3125   000BEA  EFFD  F005         	goto	l3561
  3126   000BEE                     u3490:
  3127   000BEE  C05C  F062         	movff	_prec,efgtoa@p
  3128   000BF2  C05D  F063         	movff	_prec+1,efgtoa@p+1
  3129   000BF6  EF02  F006         	goto	l3563
  3130   000BFA                     l3561:
  3131   000BFA  0E00               	movlw	0
  3132   000BFC  0100               	movlb	0	; () banked
  3133   000BFE  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3134   000C00  0E06               	movlw	6
  3135   000C02  6F62               	movwf	efgtoa@p& (0+255),b
  3136   000C04                     l3563:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  3139   000C04  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3140   000C08  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3141   000C0C                     
  3142                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  3143   000C0C  0100               	movlb	0	; () banked
  3144   000C0E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3145   000C10  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3146   000C12                     
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  3149   000C12  0E66               	movlw	102
  3150   000C14  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3151   000C16  A4D8               	btfss	status,2,c
  3152   000C18  EF10  F006         	goto	u3501
  3153   000C1C  EF12  F006         	goto	u3500
  3154   000C20                     u3501:
  3155   000C20  EF32  F006         	goto	l3577
  3156   000C24                     u3500:
  3157   000C24                     
  3158                           ; BSR set to: 0
  3159                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  3160   000C24  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3161   000C26  EF19  F006         	goto	u3510
  3162   000C2A  EF17  F006         	goto	u3511
  3163   000C2E                     u3511:
  3164   000C2E  EF25  F006         	goto	l3573
  3165   000C32                     u3510:
  3166   000C32                     
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  3169   000C32  0E00               	movlw	0
  3170   000C34  6F88               	movwf	efgtoa@u& (0+255),b
  3171   000C36  0E00               	movlw	0
  3172   000C38  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3173   000C3A  0E80               	movlw	128
  3174   000C3C  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3175   000C3E  0E3F               	movlw	63
  3176   000C40  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  3179   000C42  0E00               	movlw	0
  3180   000C44  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3181   000C46  0E00               	movlw	0
  3182   000C48  6F6F               	movwf	efgtoa@e& (0+255),b
  3183   000C4A                     l3573:
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  3187   000C4A  0E67               	movlw	103
  3188   000C4C  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3189   000C4E  B4D8               	btfsc	status,2,c
  3190   000C50  EF2C  F006         	goto	u3521
  3191   000C54  EF2E  F006         	goto	u3520
  3192   000C58                     u3521:
  3193   000C58  EF32  F006         	goto	l3577
  3194   000C5C                     u3520:
  3195   000C5C                     
  3196                           ; BSR set to: 0
  3197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  3198   000C5C  516F               	movf	efgtoa@e& (0+255),w,b
  3199   000C5E  276D               	addwf	efgtoa@m& (0+255),f,b
  3200   000C60  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3201   000C62  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3202   000C64                     l3577:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  3206   000C64  0E00               	movlw	0
  3207   000C66  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3208   000C68  0E00               	movlw	0
  3209   000C6A  6F7F               	movwf	efgtoa@i& (0+255),b
  3210   000C6C                     
  3211                           ; BSR set to: 0
  3212                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  3213   000C6C  C082  F077         	movff	efgtoa@g,efgtoa@h
  3214   000C70  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  3215   000C74  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  3216   000C78  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  3217   000C7C                     
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  3220   000C7C  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3221   000C80  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3222   000C84  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3223   000C88  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  3226   000C8C  EFC3  F006         	goto	l3591
  3227   000C90                     l3583:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  3231   000C90  C077  F001         	movff	efgtoa@h,___fldiv@b
  3232   000C94  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3233   000C98  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3234   000C9C  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3235   000CA0  C088  F005         	movff	efgtoa@u,___fldiv@a
  3236   000CA4  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3237   000CA8  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3238   000CAC  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3239   000CB0  ECCA  F00D         	call	___fldiv	;wreg free
  3240   000CB4  C001  F01A         	movff	?___fldiv,floorf@x
  3241   000CB8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3242   000CBC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3243   000CC0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3244   000CC4  EC7C  F012         	call	_floorf	;wreg free
  3245   000CC8  C01A  F07B         	movff	?_floorf,efgtoa@l
  3246   000CCC  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  3247   000CD0  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  3248   000CD4  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  3249                           
  3250                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  3251   000CD8  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3252   000CDC  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3253   000CE0  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3254   000CE4  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3255   000CE8  EC19  F014         	call	___fltol	;wreg free
  3256   000CEC  C001  F06B         	movff	?___fltol,efgtoa@d
  3257   000CF0  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3258   000CF4                     
  3259                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  3260   000CF4  C077  F01A         	movff	efgtoa@h,___flsub@b
  3261   000CF8  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3262   000CFC  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3263   000D00  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3264   000D04  C07B  F005         	movff	efgtoa@l,___flmul@a
  3265   000D08  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  3266   000D0C  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  3267   000D10  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  3268   000D14  C088  F001         	movff	efgtoa@u,___flmul@b
  3269   000D18  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3270   000D1C  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3271   000D20  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3272   000D24  ECB5  F00B         	call	___flmul	;wreg free
  3273   000D28  C001  F01E         	movff	?___flmul,___flsub@a
  3274   000D2C  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3275   000D30  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3276   000D34  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3277   000D38  EC49  F019         	call	___flsub	;wreg free
  3278   000D3C  C01A  F077         	movff	?___flsub,efgtoa@h
  3279   000D40  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  3280   000D44  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  3281   000D48  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  3282   000D4C                     
  3283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  3284   000D4C  C088  F001         	movff	efgtoa@u,___fldiv@b
  3285   000D50  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3286   000D54  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3287   000D58  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3288   000D5C  0E00               	movlw	0
  3289   000D5E  6E05               	movwf	___fldiv@a^0,c
  3290   000D60  0E00               	movlw	0
  3291   000D62  6E06               	movwf	(___fldiv@a+1)^0,c
  3292   000D64  0E20               	movlw	32
  3293   000D66  6E07               	movwf	(___fldiv@a+2)^0,c
  3294   000D68  0E41               	movlw	65
  3295   000D6A  6E08               	movwf	(___fldiv@a+3)^0,c
  3296   000D6C  ECCA  F00D         	call	___fldiv	;wreg free
  3297   000D70  C001  F088         	movff	?___fldiv,efgtoa@u
  3298   000D74  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3299   000D78  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3300   000D7C  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3301   000D80                     
  3302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  3303   000D80  0100               	movlb	0	; () banked
  3304   000D82  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3305   000D84  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3306   000D86                     l3591:
  3307                           
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  3310   000D86  516D               	movf	efgtoa@m& (0+255),w,b
  3311   000D88  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3312   000D8A  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3313   000D8C  0A80               	xorlw	128
  3314   000D8E  6E35               	movwf	??_efgtoa^0,c
  3315   000D90  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3316   000D92  0A80               	xorlw	128
  3317   000D94  5835               	subwfb	??_efgtoa^0,w,c
  3318   000D96  A0D8               	btfss	status,0,c
  3319   000D98  EFD0  F006         	goto	u3531
  3320   000D9C  EFD2  F006         	goto	u3530
  3321   000DA0                     u3531:
  3322   000DA0  EF48  F006         	goto	l3583
  3323   000DA4                     u3530:
  3324   000DA4                     
  3325                           ; BSR set to: 0
  3326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  3327   000DA4  C088  F001         	movff	efgtoa@u,___flmul@b
  3328   000DA8  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3329   000DAC  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3330   000DB0  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3331   000DB4  0E00               	movlw	0
  3332   000DB6  6E05               	movwf	___flmul@a^0,c
  3333   000DB8  0E00               	movlw	0
  3334   000DBA  6E06               	movwf	(___flmul@a+1)^0,c
  3335   000DBC  0EA0               	movlw	160
  3336   000DBE  6E07               	movwf	(___flmul@a+2)^0,c
  3337   000DC0  0E40               	movlw	64
  3338   000DC2  6E08               	movwf	(___flmul@a+3)^0,c
  3339   000DC4  ECB5  F00B         	call	___flmul	;wreg free
  3340   000DC8  C001  F07B         	movff	?___flmul,efgtoa@l
  3341   000DCC  C002  F07C         	movff	?___flmul+1,efgtoa@l+1
  3342   000DD0  C003  F07D         	movff	?___flmul+2,efgtoa@l+2
  3343   000DD4  C004  F07E         	movff	?___flmul+3,efgtoa@l+3
  3344   000DD8                     
  3345                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  3346   000DD8  C077  F01A         	movff	efgtoa@h,___flge@ff1
  3347   000DDC  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3348   000DE0  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3349   000DE4  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3350   000DE8  C07B  F01E         	movff	efgtoa@l,___flge@ff2
  3351   000DEC  C07C  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3352   000DF0  C07D  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3353   000DF4  C07E  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3354   000DF8  EC9C  F014         	call	___flge	;wreg free
  3355   000DFC  B0D8               	btfsc	status,0,c
  3356   000DFE  EF03  F007         	goto	u3541
  3357   000E02  EF05  F007         	goto	u3540
  3358   000E06                     u3541:
  3359   000E06  EF10  F007         	goto	l3599
  3360   000E0A                     u3540:
  3361   000E0A                     
  3362                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  3363   000E0A  0E00               	movlw	0
  3364   000E0C  0100               	movlb	0	; () banked
  3365   000E0E  6F7B               	movwf	efgtoa@l& (0+255),b
  3366   000E10  0E00               	movlw	0
  3367   000E12  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3368   000E14  0E00               	movlw	0
  3369   000E16  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3370   000E18  0E00               	movlw	0
  3371   000E1A  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  3374   000E1C  EF39  F007         	goto	l3605
  3375   000E20                     l3599:
  3376                           
  3377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  3378   000E20  C077  F001         	movff	efgtoa@h,___fleq@ff1
  3379   000E24  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3380   000E28  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3381   000E2C  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3382   000E30  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  3383   000E34  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3384   000E38  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3385   000E3C  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3386   000E40  ECCE  F016         	call	___fleq	;wreg free
  3387   000E44  A0D8               	btfss	status,0,c
  3388   000E46  EF27  F007         	goto	u3551
  3389   000E4A  EF29  F007         	goto	u3550
  3390   000E4E                     u3551:
  3391   000E4E  EF39  F007         	goto	l3605
  3392   000E52                     u3550:
  3393   000E52  0100               	movlb	0	; () banked
  3394   000E54  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3395   000E56  EF2F  F007         	goto	u3561
  3396   000E5A  EF31  F007         	goto	u3560
  3397   000E5E                     u3561:
  3398   000E5E  EF39  F007         	goto	l3605
  3399   000E62                     u3560:
  3400   000E62                     
  3401                           ; BSR set to: 0
  3402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  3403   000E62  0E00               	movlw	0
  3404   000E64  6F7B               	movwf	efgtoa@l& (0+255),b
  3405   000E66  0E00               	movlw	0
  3406   000E68  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3407   000E6A  0E00               	movlw	0
  3408   000E6C  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3409   000E6E  0E00               	movlw	0
  3410   000E70  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3411   000E72                     l3605:
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  3414   000E72  C082  F001         	movff	efgtoa@g,___fladd@b
  3415   000E76  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  3416   000E7A  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  3417   000E7E  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  3418   000E82  C07B  F005         	movff	efgtoa@l,___fladd@a
  3419   000E86  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3420   000E8A  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3421   000E8E  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3422   000E92  EC55  F009         	call	___fladd	;wreg free
  3423   000E96  C001  F077         	movff	?___fladd,efgtoa@h
  3424   000E9A  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  3425   000E9E  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  3426   000EA2  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  3427   000EA6                     
  3428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  3429   000EA6  C077  F01A         	movff	efgtoa@h,___flge@ff1
  3430   000EAA  C078  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3431   000EAE  C079  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3432   000EB2  C07A  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3433   000EB6  0E00               	movlw	0
  3434   000EB8  6E05               	movwf	___flmul@a^0,c
  3435   000EBA  0E00               	movlw	0
  3436   000EBC  6E06               	movwf	(___flmul@a+1)^0,c
  3437   000EBE  0E20               	movlw	32
  3438   000EC0  6E07               	movwf	(___flmul@a+2)^0,c
  3439   000EC2  0E41               	movlw	65
  3440   000EC4  6E08               	movwf	(___flmul@a+3)^0,c
  3441   000EC6  C073  F001         	movff	efgtoa@ou,___flmul@b
  3442   000ECA  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3443   000ECE  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3444   000ED2  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3445   000ED6  ECB5  F00B         	call	___flmul	;wreg free
  3446   000EDA  C001  F01E         	movff	?___flmul,___flge@ff2
  3447   000EDE  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  3448   000EE2  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  3449   000EE6  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  3450   000EEA  EC9C  F014         	call	___flge	;wreg free
  3451   000EEE  A0D8               	btfss	status,0,c
  3452   000EF0  EF7C  F007         	goto	u3571
  3453   000EF4  EF7E  F007         	goto	u3570
  3454   000EF8                     u3571:
  3455   000EF8  EFA7  F007         	goto	l3617
  3456   000EFC                     u3570:
  3457   000EFC                     
  3458                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  3459   000EFC  0100               	movlb	0	; () banked
  3460   000EFE  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3461   000F00  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3462   000F02                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  3465   000F02  C073  F001         	movff	efgtoa@ou,___flmul@b
  3466   000F06  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  3467   000F0A  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  3468   000F0E  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  3469   000F12  0E00               	movlw	0
  3470   000F14  6E05               	movwf	___flmul@a^0,c
  3471   000F16  0E00               	movlw	0
  3472   000F18  6E06               	movwf	(___flmul@a+1)^0,c
  3473   000F1A  0E20               	movlw	32
  3474   000F1C  6E07               	movwf	(___flmul@a+2)^0,c
  3475   000F1E  0E41               	movlw	65
  3476   000F20  6E08               	movwf	(___flmul@a+3)^0,c
  3477   000F22  ECB5  F00B         	call	___flmul	;wreg free
  3478   000F26  C001  F073         	movff	?___flmul,efgtoa@ou
  3479   000F2A  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  3480   000F2E  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  3481   000F32  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  3482   000F36                     
  3483                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  3484   000F36  0E66               	movlw	102
  3485   000F38  0100               	movlb	0	; () banked
  3486   000F3A  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3487   000F3C  A4D8               	btfss	status,2,c
  3488   000F3E  EFA3  F007         	goto	u3581
  3489   000F42  EFA5  F007         	goto	u3580
  3490   000F46                     u3581:
  3491   000F46  EFA7  F007         	goto	l3617
  3492   000F4A                     u3580:
  3493   000F4A                     
  3494                           ; BSR set to: 0
  3495                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  3496   000F4A  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3497   000F4C  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3498   000F4E                     l3617:
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  3501   000F4E  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3502   000F52  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3503   000F56  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3504   000F5A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3505   000F5E                     
  3506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  3507   000F5E  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3508   000F62  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3509   000F66                     
  3510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  3511   000F66  0E00               	movlw	0
  3512   000F68  0100               	movlb	0	; () banked
  3513   000F6A  6F68               	movwf	efgtoa@pp& (0+255),b
  3514   000F6C                     
  3515                           ; BSR set to: 0
  3516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  3517   000F6C  0E00               	movlw	0
  3518   000F6E  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3519   000F70  0E00               	movlw	0
  3520   000F72  6F64               	movwf	efgtoa@t& (0+255),b
  3521   000F74                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  3524   000F74  0E00               	movlw	0
  3525   000F76  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3526   000F78  0E00               	movlw	0
  3527   000F7A  6F7F               	movwf	efgtoa@i& (0+255),b
  3528                           
  3529                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3530   000F7C  EFA5  F008         	goto	l3667
  3531   000F80                     l3627:
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  3535   000F80  C077  F001         	movff	efgtoa@h,___fldiv@b
  3536   000F84  C078  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3537   000F88  C079  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3538   000F8C  C07A  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3539   000F90  C088  F005         	movff	efgtoa@u,___fldiv@a
  3540   000F94  C089  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3541   000F98  C08A  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3542   000F9C  C08B  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3543   000FA0  ECCA  F00D         	call	___fldiv	;wreg free
  3544   000FA4  C001  F01A         	movff	?___fldiv,floorf@x
  3545   000FA8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3546   000FAC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3547   000FB0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3548   000FB4  EC7C  F012         	call	_floorf	;wreg free
  3549   000FB8  C01A  F07B         	movff	?_floorf,efgtoa@l
  3550   000FBC  C01B  F07C         	movff	?_floorf+1,efgtoa@l+1
  3551   000FC0  C01C  F07D         	movff	?_floorf+2,efgtoa@l+2
  3552   000FC4  C01D  F07E         	movff	?_floorf+3,efgtoa@l+3
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3555   000FC8  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3556   000FCC  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3557   000FD0  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3558   000FD4  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3559   000FD8  EC19  F014         	call	___fltol	;wreg free
  3560   000FDC  BE02               	btfsc	(?___fltol+1)^0,7,c
  3561   000FDE  EFFC  F007         	goto	u3590
  3562   000FE2  5002               	movf	(?___fltol+1)^0,w,c
  3563   000FE4  E107               	bnz	u3591
  3564   000FE6  0E0A               	movlw	10
  3565   000FE8  5C01               	subwf	?___fltol^0,w,c
  3566   000FEA  B0D8               	btfsc	status,0,c
  3567   000FEC  EFFA  F007         	goto	u3591
  3568   000FF0  EFFC  F007         	goto	u3590
  3569   000FF4                     u3591:
  3570   000FF4  EF0C  F008         	goto	l3631
  3571   000FF8                     u3590:
  3572   000FF8  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3573   000FFC  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3574   001000  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3575   001004  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3576   001008  EC19  F014         	call	___fltol	;wreg free
  3577   00100C  C001  F06B         	movff	?___fltol,efgtoa@d
  3578   001010  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3579   001014  EF11  F008         	goto	l904
  3580   001018                     l3631:
  3581   001018  0E00               	movlw	0
  3582   00101A  0100               	movlb	0	; () banked
  3583   00101C  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3584   00101E  0E09               	movlw	9
  3585   001020  6F6B               	movwf	efgtoa@d& (0+255),b
  3586   001022                     l904:
  3587                           
  3588                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  3589   001022  0100               	movlb	0	; () banked
  3590   001024  5168               	movf	efgtoa@pp& (0+255),w,b
  3591   001026  A4D8               	btfss	status,2,c
  3592   001028  EF18  F008         	goto	u3601
  3593   00102C  EF1A  F008         	goto	u3600
  3594   001030                     u3601:
  3595   001030  EF42  F008         	goto	l3651
  3596   001034                     u3600:
  3597   001034                     
  3598                           ; BSR set to: 0
  3599   001034  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3600   001036  EF21  F008         	goto	u3610
  3601   00103A  EF1F  F008         	goto	u3611
  3602   00103E                     u3611:
  3603   00103E  EF42  F008         	goto	l3651
  3604   001042                     u3610:
  3605   001042                     
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  3608   001042  0E00               	movlw	low _dbuf
  3609   001044  2586               	addwf	efgtoa@n& (0+255),w,b
  3610   001046  6ED9               	movwf	fsr2l,c
  3611   001048  0E01               	movlw	high _dbuf
  3612   00104A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3613   00104C  6EDA               	movwf	fsr2h,c
  3614   00104E  0E2E               	movlw	46
  3615   001050  6EDF               	movwf	indf2,c
  3616   001052                     
  3617                           ; BSR set to: 0
  3618   001052  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3619   001054  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3620   001056                     
  3621                           ; BSR set to: 0
  3622                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  3623   001056  0771               	decf	efgtoa@w& (0+255),f,b
  3624   001058  A0D8               	btfss	status,0,c
  3625   00105A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3626   00105C                     
  3627                           ; BSR set to: 0
  3628                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  3629   00105C  0E01               	movlw	1
  3630   00105E  6F68               	movwf	efgtoa@pp& (0+255),b
  3631   001060  EF42  F008         	goto	l3651
  3632   001064                     l3643:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  3636   001064  0E00               	movlw	low _dbuf
  3637   001066  2586               	addwf	efgtoa@n& (0+255),w,b
  3638   001068  6ED9               	movwf	fsr2l,c
  3639   00106A  0E01               	movlw	high _dbuf
  3640   00106C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3641   00106E  6EDA               	movwf	fsr2h,c
  3642   001070  0E30               	movlw	48
  3643   001072  6EDF               	movwf	indf2,c
  3644   001074                     
  3645                           ; BSR set to: 0
  3646   001074  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3647   001076  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3648   001078                     
  3649                           ; BSR set to: 0
  3650                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  3651   001078  0771               	decf	efgtoa@w& (0+255),f,b
  3652   00107A  A0D8               	btfss	status,0,c
  3653   00107C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3654   00107E                     
  3655                           ; BSR set to: 0
  3656                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  3657   00107E  0764               	decf	efgtoa@t& (0+255),f,b
  3658   001080  A0D8               	btfss	status,0,c
  3659   001082  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3660   001084                     l3651:
  3661                           
  3662                           ; BSR set to: 0
  3663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  3664   001084  5164               	movf	efgtoa@t& (0+255),w,b
  3665   001086  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3666   001088  A4D8               	btfss	status,2,c
  3667   00108A  EF49  F008         	goto	u3621
  3668   00108E  EF4B  F008         	goto	u3620
  3669   001092                     u3621:
  3670   001092  EF32  F008         	goto	l3643
  3671   001096                     u3620:
  3672   001096                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3675   001096  0E00               	movlw	low _dbuf
  3676   001098  2586               	addwf	efgtoa@n& (0+255),w,b
  3677   00109A  6ED9               	movwf	fsr2l,c
  3678   00109C  0E01               	movlw	high _dbuf
  3679   00109E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3680   0010A0  6EDA               	movwf	fsr2h,c
  3681   0010A2  516B               	movf	efgtoa@d& (0+255),w,b
  3682   0010A4  0F30               	addlw	48
  3683   0010A6  6EDF               	movwf	indf2,c
  3684   0010A8                     
  3685                           ; BSR set to: 0
  3686   0010A8  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3687   0010AA  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3688   0010AC                     
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  3691   0010AC  0771               	decf	efgtoa@w& (0+255),f,b
  3692   0010AE  A0D8               	btfss	status,0,c
  3693   0010B0  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3694   0010B2                     
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  3697   0010B2  C077  F01A         	movff	efgtoa@h,___flsub@b
  3698   0010B6  C078  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3699   0010BA  C079  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3700   0010BE  C07A  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3701   0010C2  C07B  F005         	movff	efgtoa@l,___flmul@a
  3702   0010C6  C07C  F006         	movff	efgtoa@l+1,___flmul@a+1
  3703   0010CA  C07D  F007         	movff	efgtoa@l+2,___flmul@a+2
  3704   0010CE  C07E  F008         	movff	efgtoa@l+3,___flmul@a+3
  3705   0010D2  C088  F001         	movff	efgtoa@u,___flmul@b
  3706   0010D6  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3707   0010DA  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3708   0010DE  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3709   0010E2  ECB5  F00B         	call	___flmul	;wreg free
  3710   0010E6  C001  F01E         	movff	?___flmul,___flsub@a
  3711   0010EA  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3712   0010EE  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3713   0010F2  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3714   0010F6  EC49  F019         	call	___flsub	;wreg free
  3715   0010FA  C01A  F077         	movff	?___flsub,efgtoa@h
  3716   0010FE  C01B  F078         	movff	?___flsub+1,efgtoa@h+1
  3717   001102  C01C  F079         	movff	?___flsub+2,efgtoa@h+2
  3718   001106  C01D  F07A         	movff	?___flsub+3,efgtoa@h+3
  3719   00110A                     
  3720                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  3721   00110A  C088  F001         	movff	efgtoa@u,___fldiv@b
  3722   00110E  C089  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3723   001112  C08A  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3724   001116  C08B  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3725   00111A  0E00               	movlw	0
  3726   00111C  6E05               	movwf	___fldiv@a^0,c
  3727   00111E  0E00               	movlw	0
  3728   001120  6E06               	movwf	(___fldiv@a+1)^0,c
  3729   001122  0E20               	movlw	32
  3730   001124  6E07               	movwf	(___fldiv@a+2)^0,c
  3731   001126  0E41               	movlw	65
  3732   001128  6E08               	movwf	(___fldiv@a+3)^0,c
  3733   00112A  ECCA  F00D         	call	___fldiv	;wreg free
  3734   00112E  C001  F088         	movff	?___fldiv,efgtoa@u
  3735   001132  C002  F089         	movff	?___fldiv+1,efgtoa@u+1
  3736   001136  C003  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3737   00113A  C004  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3738   00113E                     
  3739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  3740   00113E  0100               	movlb	0	; () banked
  3741   001140  0760               	decf	efgtoa@ne& (0+255),f,b
  3742   001142  A0D8               	btfss	status,0,c
  3743   001144  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3744   001146                     
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  3747   001146  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3748   001148  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3749   00114A                     l3667:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3753   00114A  516D               	movf	efgtoa@m& (0+255),w,b
  3754   00114C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3755   00114E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3756   001150  0A80               	xorlw	128
  3757   001152  6E35               	movwf	??_efgtoa^0,c
  3758   001154  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3759   001156  0A80               	xorlw	128
  3760   001158  5835               	subwfb	??_efgtoa^0,w,c
  3761   00115A  B0D8               	btfsc	status,0,c
  3762   00115C  EFB2  F008         	goto	u3631
  3763   001160  EFB4  F008         	goto	u3630
  3764   001164                     u3631:
  3765   001164  EFC2  F008         	goto	l3671
  3766   001168                     u3630:
  3767   001168                     
  3768                           ; BSR set to: 0
  3769   001168  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3770   00116A  EFC0  F008         	goto	u3641
  3771   00116E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3772   001170  E109               	bnz	u3640
  3773   001172  0E4B               	movlw	75
  3774   001174  5D86               	subwf	efgtoa@n& (0+255),w,b
  3775   001176  A0D8               	btfss	status,0,c
  3776   001178  EFC0  F008         	goto	u3641
  3777   00117C  EFC2  F008         	goto	u3640
  3778   001180                     u3641:
  3779   001180  EFC0  F007         	goto	l3627
  3780   001184                     u3640:
  3781   001184                     l3671:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  3785   001184  0E00               	movlw	0
  3786   001186  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3787   001188  0E4F               	movlw	79
  3788   00118A  6F7F               	movwf	efgtoa@i& (0+255),b
  3789   00118C                     
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  3792   00118C  0E00               	movlw	low _dbuf
  3793   00118E  257F               	addwf	efgtoa@i& (0+255),w,b
  3794   001190  6ED9               	movwf	fsr2l,c
  3795   001192  0E01               	movlw	high _dbuf
  3796   001194  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3797   001196  6EDA               	movwf	fsr2h,c
  3798   001198  6ADF               	clrf	indf2,c
  3799   00119A                     
  3800                           ; BSR set to: 0
  3801                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3802   00119A  0E00               	movlw	low _dbuf
  3803   00119C  6E35               	movwf	??_efgtoa^0,c
  3804   00119E  0E01               	movlw	high _dbuf
  3805   0011A0  6E36               	movwf	(??_efgtoa+1)^0,c
  3806   0011A2  5186               	movf	efgtoa@n& (0+255),w,b
  3807   0011A4  5E35               	subwf	??_efgtoa^0,f,c
  3808   0011A6  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3809   0011A8  5A36               	subwfb	(??_efgtoa+1)^0,f,c
  3810   0011AA  517F               	movf	efgtoa@i& (0+255),w,b
  3811   0011AC  2435               	addwf	??_efgtoa^0,w,c
  3812   0011AE  6E01               	movwf	memcpy@d1^0,c
  3813   0011B0  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3814   0011B2  2036               	addwfc	(??_efgtoa+1)^0,w,c
  3815   0011B4  6E02               	movwf	(memcpy@d1+1)^0,c
  3816   0011B6  0E00               	movlw	low _dbuf
  3817   0011B8  6E03               	movwf	memcpy@s1^0,c
  3818   0011BA  0E01               	movlw	high _dbuf
  3819   0011BC  6E04               	movwf	(memcpy@s1+1)^0,c
  3820   0011BE  C086  F005         	movff	efgtoa@n,memcpy@n
  3821   0011C2  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3822   0011C6  ECFD  F018         	call	_memcpy	;wreg free
  3823   0011CA                     
  3824                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  3825   0011CA  0100               	movlb	0	; () banked
  3826   0011CC  5186               	movf	efgtoa@n& (0+255),w,b
  3827   0011CE  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3828   0011D0  6F86               	movwf	efgtoa@n& (0+255),b
  3829   0011D2  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3830   0011D4  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3831   0011D6  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3832   0011D8                     
  3833                           ; BSR set to: 0
  3834                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  3835   0011D8  5181               	movf	efgtoa@sign& (0+255),w,b
  3836   0011DA  A4D8               	btfss	status,2,c
  3837   0011DC  EFF2  F008         	goto	u3651
  3838   0011E0  EFF5  F008         	goto	u3650
  3839   0011E4                     u3651:
  3840   0011E4  0E01               	movlw	1
  3841   0011E6  EFF6  F008         	goto	u3660
  3842   0011EA                     u3650:
  3843   0011EA  0E00               	movlw	0
  3844   0011EC                     u3660:
  3845   0011EC  6F7F               	movwf	efgtoa@i& (0+255),b
  3846   0011EE  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  3847   0011F0                     
  3848                           ; BSR set to: 0
  3849                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 797:  if (flags &
      +                           (1 << 1)) {
  3850   0011F0  A25E               	btfss	_flags^0,1,c
  3851   0011F2  EFFD  F008         	goto	u3671
  3852   0011F6  EFFF  F008         	goto	u3670
  3853   0011FA                     u3671:
  3854   0011FA  EF2D  F009         	goto	l3693
  3855   0011FE                     u3670:
  3856   0011FE  EF0F  F009         	goto	l3689
  3857   001202                     l3685:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 799:    dbuf[--n]
      +                           = '0';
  3861   001202  0786               	decf	efgtoa@n& (0+255),f,b
  3862   001204  A0D8               	btfss	status,0,c
  3863   001206  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3864   001208  0E00               	movlw	low _dbuf
  3865   00120A  2586               	addwf	efgtoa@n& (0+255),w,b
  3866   00120C  6ED9               	movwf	fsr2l,c
  3867   00120E  0E01               	movlw	high _dbuf
  3868   001210  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3869   001212  6EDA               	movwf	fsr2h,c
  3870   001214  0E30               	movlw	48
  3871   001216  6EDF               	movwf	indf2,c
  3872   001218                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 800:    w--;
  3875   001218  0771               	decf	efgtoa@w& (0+255),f,b
  3876   00121A  A0D8               	btfss	status,0,c
  3877   00121C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3878   00121E                     l3689:
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 798:   while (w >
      +                           i && n > i) {
  3882   00121E  5171               	movf	efgtoa@w& (0+255),w,b
  3883   001220  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3884   001222  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3885   001224  0A80               	xorlw	128
  3886   001226  6E35               	movwf	??_efgtoa^0,c
  3887   001228  5172               	movf	(efgtoa@w+1)& (0+255),w,b
  3888   00122A  0A80               	xorlw	128
  3889   00122C  5835               	subwfb	??_efgtoa^0,w,c
  3890   00122E  B0D8               	btfsc	status,0,c
  3891   001230  EF1C  F009         	goto	u3681
  3892   001234  EF1E  F009         	goto	u3680
  3893   001238                     u3681:
  3894   001238  EF2D  F009         	goto	l3693
  3895   00123C                     u3680:
  3896   00123C                     
  3897                           ; BSR set to: 0
  3898   00123C  5186               	movf	efgtoa@n& (0+255),w,b
  3899   00123E  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3900   001240  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3901   001242  0A80               	xorlw	128
  3902   001244  6E35               	movwf	??_efgtoa^0,c
  3903   001246  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3904   001248  0A80               	xorlw	128
  3905   00124A  5835               	subwfb	??_efgtoa^0,w,c
  3906   00124C  A0D8               	btfss	status,0,c
  3907   00124E  EF2B  F009         	goto	u3691
  3908   001252  EF2D  F009         	goto	u3690
  3909   001256                     u3691:
  3910   001256  EF01  F009         	goto	l3685
  3911   00125A                     u3690:
  3912   00125A                     l3693:
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  3916   00125A  5181               	movf	efgtoa@sign& (0+255),w,b
  3917   00125C  B4D8               	btfsc	status,2,c
  3918   00125E  EF33  F009         	goto	u3701
  3919   001262  EF35  F009         	goto	u3700
  3920   001266                     u3701:
  3921   001266  EF40  F009         	goto	l3697
  3922   00126A                     u3700:
  3923   00126A                     
  3924                           ; BSR set to: 0
  3925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  3926   00126A  0786               	decf	efgtoa@n& (0+255),f,b
  3927   00126C  A0D8               	btfss	status,0,c
  3928   00126E  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3929   001270  0E00               	movlw	low _dbuf
  3930   001272  2586               	addwf	efgtoa@n& (0+255),w,b
  3931   001274  6ED9               	movwf	fsr2l,c
  3932   001276  0E01               	movlw	high _dbuf
  3933   001278  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3934   00127A  6EDA               	movwf	fsr2h,c
  3935   00127C  C081  FFDF         	movff	efgtoa@sign,indf2
  3936   001280                     l3697:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  3940   001280  517F               	movf	efgtoa@i& (0+255),w,b
  3941   001282  5F71               	subwf	efgtoa@w& (0+255),f,b
  3942   001284  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3943   001286  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3944   001288                     
  3945                           ; BSR set to: 0
  3946                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3947   001288  C02E  F011         	movff	efgtoa@fp,pad@fp
  3948   00128C  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  3949   001290  0E00               	movlw	low _dbuf
  3950   001292  2586               	addwf	efgtoa@n& (0+255),w,b
  3951   001294  6E13               	movwf	pad@buf^0,c
  3952   001296  0E01               	movlw	high _dbuf
  3953   001298  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3954   00129A  6E14               	movwf	(pad@buf+1)^0,c
  3955   00129C  C071  F015         	movff	efgtoa@w,pad@p
  3956   0012A0  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3957   0012A4  ECA3  F017         	call	_pad	;wreg free
  3958   0012A8                     l871:
  3959   0012A8  0012               	return		;funcret
  3960   0012AA                     __end_of_efgtoa:
  3961                           	callstack 0
  3962                           
  3963 ;; *************** function _strcpy *****************
  3964 ;; Defined at:
  3965 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3968 ;;		 -> dbuf(80), 
  3969 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3970 ;;		 -> STR_9(4), STR_6(4), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  d               2    6[COMRAM] PTR unsigned char 
  3973 ;;		 -> dbuf(80), 
  3974 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3975 ;;		 -> STR_9(4), STR_6(4), 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  2    0[COMRAM] PTR unsigned char 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3985 ;;      Params:         4       0       0       0       0       0       0       0       0
  3986 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3988 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3989 ;;Total ram usage:        8 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_efgtoa
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text10
  3999   00331C                     __ptext10:
  4000                           	callstack 0
  4001   00331C                     _strcpy:
  4002                           	callstack 26
  4003   00331C  C003  F005         	movff	strcpy@src,strcpy@s
  4004   003320  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4005   003324  C001  F007         	movff	strcpy@dest,strcpy@d
  4006   003328  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4007   00332C                     l3407:
  4008   00332C  C005  FFF6         	movff	strcpy@s,tblptrl
  4009   003330  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4010   003334  4A05               	infsnz	strcpy@s^0,f,c
  4011   003336  2A06               	incf	(strcpy@s+1)^0,f,c
  4012   003338                     	if	0	;tblptru may be non-zero
  4013   003338                     	endif
  4014   003338                     	if	0	;tblptru may be non-zero
  4015   003338                     	endif
  4016   003338  C007  FFD9         	movff	strcpy@d,fsr2l
  4017   00333C  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4018   003340  4A07               	infsnz	strcpy@d^0,f,c
  4019   003342  2A08               	incf	(strcpy@d+1)^0,f,c
  4020   003344  0008               	tblrd		*
  4021   003346  CFF5 FFDF          	movff	tablat,indf2
  4022   00334A  50DF               	movf	indf2,w,c
  4023   00334C  A4D8               	btfss	status,2,c
  4024   00334E  EFAB  F019         	goto	u3191
  4025   003352  EFAD  F019         	goto	u3190
  4026   003356                     u3191:
  4027   003356  EF96  F019         	goto	l3407
  4028   00335A                     u3190:
  4029   00335A  0012               	return		;funcret
  4030   00335C                     __end_of_strcpy:
  4031                           	callstack 0
  4032                           
  4033 ;; *************** function _pad *****************
  4034 ;; Defined at:
  4035 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4038 ;;		 -> sprintf@f(12), 
  4039 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4040 ;;		 -> dbuf(80), 
  4041 ;;  p               2   20[COMRAM] int 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  w               2   25[COMRAM] int 
  4044 ;;  i               2   23[COMRAM] int 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4054 ;;      Params:         6       0       0       0       0       0       0       0       0
  4055 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4056 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4057 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4058 ;;Total ram usage:       11 bytes
  4059 ;; Hardware stack levels used: 1
  4060 ;; Hardware stack levels required when called: 3
  4061 ;; This function calls:
  4062 ;;		_fputc
  4063 ;;		_fputs
  4064 ;; This function is called by:
  4065 ;;		_efgtoa
  4066 ;;		_utoa
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text11
  4071   002F46                     __ptext11:
  4072                           	callstack 0
  4073   002F46                     _pad:
  4074                           	callstack 23
  4075   002F46                     
  4076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  4077   002F46  BE16               	btfsc	(pad@p+1)^0,7,c
  4078   002F48  EFA8  F017         	goto	u3101
  4079   002F4C  EFAA  F017         	goto	u3100
  4080   002F50                     u3101:
  4081   002F50  EFB0  F017         	goto	l3373
  4082   002F54                     u3100:
  4083   002F54  C015  F01A         	movff	pad@p,pad@w
  4084   002F58  C016  F01B         	movff	pad@p+1,pad@w+1
  4085   002F5C  EFB4  F017         	goto	l856
  4086   002F60                     l3373:
  4087   002F60  0E00               	movlw	0
  4088   002F62  6E1B               	movwf	(pad@w+1)^0,c
  4089   002F64  0E00               	movlw	0
  4090   002F66  6E1A               	movwf	pad@w^0,c
  4091   002F68                     l856:
  4092                           
  4093                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  4094   002F68  0E00               	movlw	0
  4095   002F6A  6E19               	movwf	(pad@i+1)^0,c
  4096   002F6C  0E00               	movlw	0
  4097   002F6E  6E18               	movwf	pad@i^0,c
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  4100   002F70  EFC6  F017         	goto	l3379
  4101   002F74                     l3375:
  4102                           
  4103                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  4104   002F74  0E00               	movlw	0
  4105   002F76  6E02               	movwf	(fputc@c+1)^0,c
  4106   002F78  0E20               	movlw	32
  4107   002F7A  6E01               	movwf	fputc@c^0,c
  4108   002F7C  C011  F003         	movff	pad@fp,fputc@fp
  4109   002F80  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4110   002F84  EC06  F016         	call	_fputc	;wreg free
  4111   002F88                     
  4112                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  4113   002F88  4A18               	infsnz	pad@i^0,f,c
  4114   002F8A  2A19               	incf	(pad@i+1)^0,f,c
  4115   002F8C                     l3379:
  4116                           
  4117                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  4118   002F8C  501A               	movf	pad@w^0,w,c
  4119   002F8E  5C18               	subwf	pad@i^0,w,c
  4120   002F90  5019               	movf	(pad@i+1)^0,w,c
  4121   002F92  0A80               	xorlw	128
  4122   002F94  6E17               	movwf	??_pad^0,c
  4123   002F96  501B               	movf	(pad@w+1)^0,w,c
  4124   002F98  0A80               	xorlw	128
  4125   002F9A  5817               	subwfb	??_pad^0,w,c
  4126   002F9C  A0D8               	btfss	status,0,c
  4127   002F9E  EFD3  F017         	goto	u3111
  4128   002FA2  EFD5  F017         	goto	u3110
  4129   002FA6                     u3111:
  4130   002FA6  EFBA  F017         	goto	l3375
  4131   002FAA                     u3110:
  4132   002FAA                     
  4133                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  4134   002FAA  C013  F00A         	movff	pad@buf,fputs@s
  4135   002FAE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4136   002FB2  C011  F00C         	movff	pad@fp,fputs@fp
  4137   002FB6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4138   002FBA  EC6C  F019         	call	_fputs	;wreg free
  4139   002FBE  0012               	return		;funcret
  4140   002FC0                     __end_of_pad:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _fputs *****************
  4144 ;; Defined at:
  4145 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4148 ;;		 -> dbuf(80), 
  4149 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4150 ;;		 -> sprintf@f(12), 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  i               2   14[COMRAM] int 
  4153 ;;  c               1   13[COMRAM] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  2    9[COMRAM] int 
  4156 ;; Registers used:
  4157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4163 ;;      Params:         4       0       0       0       0       0       0       0       0
  4164 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4166 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4167 ;;Total ram usage:        7 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; Hardware stack levels required when called: 2
  4170 ;; This function calls:
  4171 ;;		_fputc
  4172 ;; This function is called by:
  4173 ;;		_pad
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	text12
  4178   0032D8                     __ptext12:
  4179                           	callstack 0
  4180   0032D8                     _fputs:
  4181                           	callstack 23
  4182   0032D8  0E00               	movlw	0
  4183   0032DA  6E10               	movwf	(fputs@i+1)^0,c
  4184   0032DC  0E00               	movlw	0
  4185   0032DE  6E0F               	movwf	fputs@i^0,c
  4186   0032E0  EF7D  F019         	goto	l2959
  4187   0032E4                     l2955:
  4188   0032E4  C00E  F001         	movff	fputs@c,fputc@c
  4189   0032E8  6A02               	clrf	(fputc@c+1)^0,c
  4190   0032EA  C00C  F003         	movff	fputs@fp,fputc@fp
  4191   0032EE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4192   0032F2  EC06  F016         	call	_fputc	;wreg free
  4193   0032F6  4A0F               	infsnz	fputs@i^0,f,c
  4194   0032F8  2A10               	incf	(fputs@i+1)^0,f,c
  4195   0032FA                     l2959:
  4196   0032FA  500F               	movf	fputs@i^0,w,c
  4197   0032FC  240A               	addwf	fputs@s^0,w,c
  4198   0032FE  6ED9               	movwf	fsr2l,c
  4199   003300  5010               	movf	(fputs@i+1)^0,w,c
  4200   003302  200B               	addwfc	(fputs@s+1)^0,w,c
  4201   003304  6EDA               	movwf	fsr2h,c
  4202   003306  50DF               	movf	indf2,w,c
  4203   003308  6E0E               	movwf	fputs@c^0,c
  4204   00330A  500E               	movf	fputs@c^0,w,c
  4205   00330C  A4D8               	btfss	status,2,c
  4206   00330E  EF8B  F019         	goto	u2451
  4207   003312  EF8D  F019         	goto	u2450
  4208   003316                     u2451:
  4209   003316  EF72  F019         	goto	l2955
  4210   00331A                     u2450:
  4211   00331A  0012               	return		;funcret
  4212   00331C                     __end_of_fputs:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function _fputc *****************
  4216 ;; Defined at:
  4217 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  c               2    0[COMRAM] int 
  4220 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4221 ;;		 -> sprintf@f(12), 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  2    0[COMRAM] int 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4233 ;;      Params:         4       0       0       0       0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4235 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4236 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4237 ;;Total ram usage:        9 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 1
  4240 ;; This function calls:
  4241 ;;		_putch
  4242 ;; This function is called by:
  4243 ;;		_pad
  4244 ;;		_vfpfcnvrt
  4245 ;;		_fputs
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           	psect	text13
  4250   002C0C                     __ptext13:
  4251                           	callstack 0
  4252   002C0C                     _fputc:
  4253                           	callstack 23
  4254   002C0C  5003               	movf	fputc@fp^0,w,c
  4255   002C0E  1004               	iorwf	(fputc@fp+1)^0,w,c
  4256   002C10  B4D8               	btfsc	status,2,c
  4257   002C12  EF0D  F016         	goto	u2021
  4258   002C16  EF0F  F016         	goto	u2020
  4259   002C1A                     u2021:
  4260   002C1A  EF18  F016         	goto	l2741
  4261   002C1E                     u2020:
  4262   002C1E  5003               	movf	fputc@fp^0,w,c
  4263   002C20  1004               	iorwf	(fputc@fp+1)^0,w,c
  4264   002C22  A4D8               	btfss	status,2,c
  4265   002C24  EF16  F016         	goto	u2031
  4266   002C28  EF18  F016         	goto	u2030
  4267   002C2C                     u2031:
  4268   002C2C  EF1D  F016         	goto	l2743
  4269   002C30                     u2030:
  4270   002C30                     l2741:
  4271   002C30  5001               	movf	fputc@c^0,w,c
  4272   002C32  EC31  F01A         	call	_putch
  4273   002C36  EF6A  F016         	goto	l1030
  4274   002C3A                     l2743:
  4275   002C3A  EE20 F00A          	lfsr	2,10
  4276   002C3E  5003               	movf	fputc@fp^0,w,c
  4277   002C40  26D9               	addwf	fsr2l,f,c
  4278   002C42  5004               	movf	(fputc@fp+1)^0,w,c
  4279   002C44  22DA               	addwfc	fsr2h,f,c
  4280   002C46  50DE               	movf	postinc2,w,c
  4281   002C48  10DE               	iorwf	postinc2,w,c
  4282   002C4A  B4D8               	btfsc	status,2,c
  4283   002C4C  EF2A  F016         	goto	u2041
  4284   002C50  EF2C  F016         	goto	u2040
  4285   002C54                     u2041:
  4286   002C54  EF47  F016         	goto	l2747
  4287   002C58                     u2040:
  4288   002C58  EE20 F00A          	lfsr	2,10
  4289   002C5C  5003               	movf	fputc@fp^0,w,c
  4290   002C5E  26D9               	addwf	fsr2l,f,c
  4291   002C60  5004               	movf	(fputc@fp+1)^0,w,c
  4292   002C62  22DA               	addwfc	fsr2h,f,c
  4293   002C64  EE10 F003          	lfsr	1,3
  4294   002C68  5003               	movf	fputc@fp^0,w,c
  4295   002C6A  26E1               	addwf	fsr1l,f,c
  4296   002C6C  5004               	movf	(fputc@fp+1)^0,w,c
  4297   002C6E  22E2               	addwfc	fsr1h,f,c
  4298   002C70  50DE               	movf	postinc2,w,c
  4299   002C72  5CE6               	subwf	postinc1,w,c
  4300   002C74  50E6               	movf	postinc1,w,c
  4301   002C76  0A80               	xorlw	128
  4302   002C78  6E09               	movwf	(??_fputc+4)^0,c
  4303   002C7A  50DE               	movf	postinc2,w,c
  4304   002C7C  0A80               	xorlw	128
  4305   002C7E  5809               	subwfb	(??_fputc+4)^0,w,c
  4306   002C80  B0D8               	btfsc	status,0,c
  4307   002C82  EF45  F016         	goto	u2051
  4308   002C86  EF47  F016         	goto	u2050
  4309   002C8A                     u2051:
  4310   002C8A  EF6A  F016         	goto	l1030
  4311   002C8E                     u2050:
  4312   002C8E                     l2747:
  4313   002C8E  EE20 F003          	lfsr	2,3
  4314   002C92  5003               	movf	fputc@fp^0,w,c
  4315   002C94  26D9               	addwf	fsr2l,f,c
  4316   002C96  5004               	movf	(fputc@fp+1)^0,w,c
  4317   002C98  22DA               	addwfc	fsr2h,f,c
  4318   002C9A  CFDE F005          	movff	postinc2,??_fputc
  4319   002C9E  CFDD F006          	movff	postdec2,??_fputc+1
  4320   002CA2  C003  FFD9         	movff	fputc@fp,fsr2l
  4321   002CA6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4322   002CAA  CFDE F007          	movff	postinc2,??_fputc+2
  4323   002CAE  CFDD F008          	movff	postdec2,??_fputc+3
  4324   002CB2  5005               	movf	??_fputc^0,w,c
  4325   002CB4  2407               	addwf	(??_fputc+2)^0,w,c
  4326   002CB6  6ED9               	movwf	fsr2l,c
  4327   002CB8  5006               	movf	(??_fputc+1)^0,w,c
  4328   002CBA  2008               	addwfc	(??_fputc+3)^0,w,c
  4329   002CBC  6EDA               	movwf	fsr2h,c
  4330   002CBE  C001  FFDF         	movff	fputc@c,indf2
  4331   002CC2  EE20 F003          	lfsr	2,3
  4332   002CC6  5003               	movf	fputc@fp^0,w,c
  4333   002CC8  26D9               	addwf	fsr2l,f,c
  4334   002CCA  5004               	movf	(fputc@fp+1)^0,w,c
  4335   002CCC  22DA               	addwfc	fsr2h,f,c
  4336   002CCE  2ADE               	incf	postinc2,f,c
  4337   002CD0  0E00               	movlw	0
  4338   002CD2  22DD               	addwfc	postdec2,f,c
  4339   002CD4                     l1030:
  4340   002CD4  0012               	return		;funcret
  4341   002CD6                     __end_of_fputc:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _putch *****************
  4345 ;; Defined at:
  4346 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  c               1    wreg     unsigned char 
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;  c               1    0[COMRAM] unsigned char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4360 ;;      Params:         0       0       0       0       0       0       0       0       0
  4361 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4362 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4363 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_fputc
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text14
  4374   003462                     __ptext14:
  4375                           	callstack 0
  4376   003462                     _putch:
  4377                           	callstack 23
  4378   003462  0012               	return		;funcret
  4379   003464                     __end_of_putch:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _memcpy *****************
  4383 ;; Defined at:
  4384 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  d1              2    0[COMRAM] PTR void 
  4387 ;;		 -> dbuf(80), 
  4388 ;;  s1              2    2[COMRAM] PTR const void 
  4389 ;;		 -> dbuf(80), 
  4390 ;;  n               2    4[COMRAM] unsigned int 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4393 ;;		 -> dbuf(80), 
  4394 ;;  d               2    6[COMRAM] PTR unsigned char 
  4395 ;;		 -> dbuf(80), 
  4396 ;;  tmp             1   10[COMRAM] unsigned char 
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  2    0[COMRAM] PTR void 
  4399 ;; Registers used:
  4400 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4406 ;;      Params:         6       0       0       0       0       0       0       0       0
  4407 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4409 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4410 ;;Total ram usage:       11 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_efgtoa
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text15
  4420   0031FA                     __ptext15:
  4421                           	callstack 0
  4422   0031FA                     _memcpy:
  4423                           	callstack 26
  4424   0031FA  C003  F009         	movff	memcpy@s1,memcpy@s
  4425   0031FE  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4426   003202  C001  F007         	movff	memcpy@d1,memcpy@d
  4427   003206  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4428   00320A  EF17  F019         	goto	l3451
  4429   00320E                     l3443:
  4430   00320E  C009  FFD9         	movff	memcpy@s,fsr2l
  4431   003212  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4432   003216  50DF               	movf	indf2,w,c
  4433   003218  6E0B               	movwf	memcpy@tmp^0,c
  4434   00321A  4A09               	infsnz	memcpy@s^0,f,c
  4435   00321C  2A0A               	incf	(memcpy@s+1)^0,f,c
  4436   00321E  C007  FFD9         	movff	memcpy@d,fsr2l
  4437   003222  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4438   003226  C00B  FFDF         	movff	memcpy@tmp,indf2
  4439   00322A  4A07               	infsnz	memcpy@d^0,f,c
  4440   00322C  2A08               	incf	(memcpy@d+1)^0,f,c
  4441   00322E                     l3451:
  4442   00322E  0605               	decf	memcpy@n^0,f,c
  4443   003230  A0D8               	btfss	status,0,c
  4444   003232  0606               	decf	(memcpy@n+1)^0,f,c
  4445   003234  2805               	incf	memcpy@n^0,w,c
  4446   003236  E106               	bnz	u3311
  4447   003238  2806               	incf	(memcpy@n+1)^0,w,c
  4448   00323A  A4D8               	btfss	status,2,c
  4449   00323C  EF22  F019         	goto	u3311
  4450   003240  EF24  F019         	goto	u3310
  4451   003244                     u3311:
  4452   003244  EF07  F019         	goto	l3443
  4453   003248                     u3310:
  4454   003248  0012               	return		;funcret
  4455   00324A                     __end_of_memcpy:
  4456                           	callstack 0
  4457                           
  4458 ;; *************** function _labs *****************
  4459 ;; Defined at:
  4460 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  a               4    0[COMRAM] long 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;		None
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  4    0[COMRAM] long 
  4467 ;; Registers used:
  4468 ;;		wreg, status,2, status,0
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4474 ;;      Params:         4       0       0       0       0       0       0       0       0
  4475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4476 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4477 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4478 ;;Total ram usage:        8 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_efgtoa
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text16
  4488   003034                     __ptext16:
  4489                           	callstack 0
  4490   003034                     _labs:
  4491                           	callstack 26
  4492   003034  BE04               	btfsc	(labs@a+3)^0,7,c
  4493   003036  EF29  F018         	goto	u3200
  4494   00303A  5004               	movf	(labs@a+3)^0,w,c
  4495   00303C  1003               	iorwf	(labs@a+2)^0,w,c
  4496   00303E  1002               	iorwf	(labs@a+1)^0,w,c
  4497   003040  E106               	bnz	u3201
  4498   003042  0401               	decf	labs@a^0,w,c
  4499   003044  B0D8               	btfsc	status,0,c
  4500   003046  EF27  F018         	goto	u3201
  4501   00304A  EF29  F018         	goto	u3200
  4502   00304E                     u3201:
  4503   00304E  EF44  F018         	goto	l1009
  4504   003052                     u3200:
  4505   003052  C001  F005         	movff	labs@a,??_labs
  4506   003056  C002  F006         	movff	labs@a+1,??_labs+1
  4507   00305A  C003  F007         	movff	labs@a+2,??_labs+2
  4508   00305E  C004  F008         	movff	labs@a+3,??_labs+3
  4509   003062  1E05               	comf	??_labs^0,f,c
  4510   003064  1E06               	comf	(??_labs+1)^0,f,c
  4511   003066  1E07               	comf	(??_labs+2)^0,f,c
  4512   003068  1E08               	comf	(??_labs+3)^0,f,c
  4513   00306A  2A05               	incf	??_labs^0,f,c
  4514   00306C  0E00               	movlw	0
  4515   00306E  2206               	addwfc	(??_labs+1)^0,f,c
  4516   003070  2207               	addwfc	(??_labs+2)^0,f,c
  4517   003072  2208               	addwfc	(??_labs+3)^0,f,c
  4518   003074  C005  F001         	movff	??_labs,?_labs
  4519   003078  C006  F002         	movff	??_labs+1,?_labs+1
  4520   00307C  C007  F003         	movff	??_labs+2,?_labs+2
  4521   003080  C008  F004         	movff	??_labs+3,?_labs+3
  4522   003084  EF4C  F018         	goto	l1012
  4523   003088                     l1009:
  4524   003088  C001  F001         	movff	labs@a,?_labs
  4525   00308C  C002  F002         	movff	labs@a+1,?_labs+1
  4526   003090  C003  F003         	movff	labs@a+2,?_labs+2
  4527   003094  C004  F004         	movff	labs@a+3,?_labs+3
  4528   003098                     l1012:
  4529   003098  0012               	return		;funcret
  4530   00309A                     __end_of_labs:
  4531                           	callstack 0
  4532                           
  4533 ;; *************** function _floorf *****************
  4534 ;; Defined at:
  4535 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  x               4   25[COMRAM] float 
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  u               4   41[COMRAM] struct .
  4540 ;;  m               4   35[COMRAM] unsigned long 
  4541 ;;  e               2   39[COMRAM] int 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  4   25[COMRAM] float 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4551 ;;      Params:         4       0       0       0       0       0       0       0       0
  4552 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4553 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4554 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4555 ;;Total ram usage:       20 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_efgtoa
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           	psect	text17
  4565   0024F8                     __ptext17:
  4566                           	callstack 0
  4567   0024F8                     _floorf:
  4568                           	callstack 26
  4569   0024F8  C09A  F02A         	movff	floorf@F526,floorf@u
  4570   0024FC  C09B  F02B         	movff	floorf@F526+1,floorf@u+1
  4571   002500  C09C  F02C         	movff	floorf@F526+2,floorf@u+2
  4572   002504  C09D  F02D         	movff	floorf@F526+3,floorf@u+3
  4573   002508  C01A  F02A         	movff	floorf@x,floorf@u
  4574   00250C  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4575   002510  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4576   002514  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4577   002518  0E81               	movlw	129
  4578   00251A  6E1E               	movwf	??_floorf^0,c
  4579   00251C  0EFF               	movlw	255
  4580   00251E  6E1F               	movwf	(??_floorf+1)^0,c
  4581   002520  C02A  F020         	movff	floorf@u,??_floorf+2
  4582   002524  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4583   002528  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4584   00252C  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4585   002530  0E18               	movlw	24
  4586   002532  EFA0  F012         	goto	u3210
  4587   002536                     u3215:
  4588   002536  90D8               	bcf	status,0,c
  4589   002538  3223               	rrcf	(??_floorf+5)^0,f,c
  4590   00253A  3222               	rrcf	(??_floorf+4)^0,f,c
  4591   00253C  3221               	rrcf	(??_floorf+3)^0,f,c
  4592   00253E  3220               	rrcf	(??_floorf+2)^0,f,c
  4593   002540                     u3210:
  4594   002540  2EE8               	decfsz	wreg,f,c
  4595   002542  EF9B  F012         	goto	u3215
  4596   002546  5020               	movf	(??_floorf+2)^0,w,c
  4597   002548  241E               	addwf	??_floorf^0,w,c
  4598   00254A  6E28               	movwf	floorf@e^0,c
  4599   00254C  0E00               	movlw	0
  4600   00254E  201F               	addwfc	(??_floorf+1)^0,w,c
  4601   002550  6E29               	movwf	(floorf@e+1)^0,c
  4602   002552  BE29               	btfsc	(floorf@e+1)^0,7,c
  4603   002554  EFB5  F012         	goto	u3221
  4604   002558  5029               	movf	(floorf@e+1)^0,w,c
  4605   00255A  E109               	bnz	u3220
  4606   00255C  0E17               	movlw	23
  4607   00255E  5C28               	subwf	floorf@e^0,w,c
  4608   002560  A0D8               	btfss	status,0,c
  4609   002562  EFB5  F012         	goto	u3221
  4610   002566  EFB7  F012         	goto	u3220
  4611   00256A                     u3221:
  4612   00256A  EFC1  F012         	goto	l3419
  4613   00256E                     u3220:
  4614   00256E                     l3417:
  4615   00256E  C01A  F01A         	movff	floorf@x,?_floorf
  4616   002572  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4617   002576  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4618   00257A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4619   00257E  EF84  F013         	goto	l998
  4620   002582                     l3419:
  4621   002582  BE29               	btfsc	(floorf@e+1)^0,7,c
  4622   002584  EFC6  F012         	goto	u3231
  4623   002588  EFC8  F012         	goto	u3230
  4624   00258C                     u3231:
  4625   00258C  EF38  F013         	goto	l3429
  4626   002590                     u3230:
  4627   002590  C028  F01E         	movff	floorf@e,??_floorf
  4628   002594  0EFF               	movlw	255
  4629   002596  6E1F               	movwf	(??_floorf+1)^0,c
  4630   002598  0EFF               	movlw	255
  4631   00259A  6E20               	movwf	(??_floorf+2)^0,c
  4632   00259C  0E7F               	movlw	127
  4633   00259E  6E21               	movwf	(??_floorf+3)^0,c
  4634   0025A0  0E00               	movlw	0
  4635   0025A2  6E22               	movwf	(??_floorf+4)^0,c
  4636   0025A4                     u3245:
  4637   0025A4  661E               	tstfsz	??_floorf^0,c
  4638   0025A6  EFD7  F012         	goto	u3246
  4639   0025AA  EFDF  F012         	goto	u3247
  4640   0025AE                     u3246:
  4641   0025AE  3422               	rlcf	(??_floorf+4)^0,w,c
  4642   0025B0  3222               	rrcf	(??_floorf+4)^0,f,c
  4643   0025B2  3221               	rrcf	(??_floorf+3)^0,f,c
  4644   0025B4  3220               	rrcf	(??_floorf+2)^0,f,c
  4645   0025B6  321F               	rrcf	(??_floorf+1)^0,f,c
  4646   0025B8  2E1E               	decfsz	??_floorf^0,f,c
  4647   0025BA  EFD2  F012         	goto	u3245
  4648   0025BE                     u3247:
  4649   0025BE  C01F  F024         	movff	??_floorf+1,floorf@m
  4650   0025C2  C020  F025         	movff	??_floorf+2,floorf@m+1
  4651   0025C6  C021  F026         	movff	??_floorf+3,floorf@m+2
  4652   0025CA  C022  F027         	movff	??_floorf+4,floorf@m+3
  4653   0025CE  5024               	movf	floorf@m^0,w,c
  4654   0025D0  142A               	andwf	floorf@u^0,w,c
  4655   0025D2  6E1E               	movwf	??_floorf^0,c
  4656   0025D4  5025               	movf	(floorf@m+1)^0,w,c
  4657   0025D6  142B               	andwf	(floorf@u+1)^0,w,c
  4658   0025D8  6E1F               	movwf	(??_floorf+1)^0,c
  4659   0025DA  5026               	movf	(floorf@m+2)^0,w,c
  4660   0025DC  142C               	andwf	(floorf@u+2)^0,w,c
  4661   0025DE  6E20               	movwf	(??_floorf+2)^0,c
  4662   0025E0  5027               	movf	(floorf@m+3)^0,w,c
  4663   0025E2  142D               	andwf	(floorf@u+3)^0,w,c
  4664   0025E4  6E21               	movwf	(??_floorf+3)^0,c
  4665   0025E6  501E               	movf	??_floorf^0,w,c
  4666   0025E8  101F               	iorwf	(??_floorf+1)^0,w,c
  4667   0025EA  1020               	iorwf	(??_floorf+2)^0,w,c
  4668   0025EC  1021               	iorwf	(??_floorf+3)^0,w,c
  4669   0025EE  A4D8               	btfss	status,2,c
  4670   0025F0  EFFC  F012         	goto	u3251
  4671   0025F4  EFFE  F012         	goto	u3250
  4672   0025F8                     u3251:
  4673   0025F8  EF00  F013         	goto	l3425
  4674   0025FC                     u3250:
  4675   0025FC  EFB7  F012         	goto	l3417
  4676   002600                     l3425:
  4677   002600  C02A  F01E         	movff	floorf@u,??_floorf
  4678   002604  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4679   002608  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4680   00260C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4681   002610  0E20               	movlw	32
  4682   002612  EF10  F013         	goto	u3260
  4683   002616                     u3265:
  4684   002616  90D8               	bcf	status,0,c
  4685   002618  3221               	rrcf	(??_floorf+3)^0,f,c
  4686   00261A  3220               	rrcf	(??_floorf+2)^0,f,c
  4687   00261C  321F               	rrcf	(??_floorf+1)^0,f,c
  4688   00261E  321E               	rrcf	??_floorf^0,f,c
  4689   002620                     u3260:
  4690   002620  2EE8               	decfsz	wreg,f,c
  4691   002622  EF0B  F013         	goto	u3265
  4692   002626  501E               	movf	??_floorf^0,w,c
  4693   002628  101F               	iorwf	(??_floorf+1)^0,w,c
  4694   00262A  1020               	iorwf	(??_floorf+2)^0,w,c
  4695   00262C  1021               	iorwf	(??_floorf+3)^0,w,c
  4696   00262E  B4D8               	btfsc	status,2,c
  4697   002630  EF1C  F013         	goto	u3271
  4698   002634  EF1E  F013         	goto	u3270
  4699   002638                     u3271:
  4700   002638  EF26  F013         	goto	l1001
  4701   00263C                     u3270:
  4702   00263C  5024               	movf	floorf@m^0,w,c
  4703   00263E  262A               	addwf	floorf@u^0,f,c
  4704   002640  5025               	movf	(floorf@m+1)^0,w,c
  4705   002642  222B               	addwfc	(floorf@u+1)^0,f,c
  4706   002644  5026               	movf	(floorf@m+2)^0,w,c
  4707   002646  222C               	addwfc	(floorf@u+2)^0,f,c
  4708   002648  5027               	movf	(floorf@m+3)^0,w,c
  4709   00264A  222D               	addwfc	(floorf@u+3)^0,f,c
  4710   00264C                     l1001:
  4711   00264C  1C24               	comf	floorf@m^0,w,c
  4712   00264E  6E1E               	movwf	??_floorf^0,c
  4713   002650  1C25               	comf	(floorf@m+1)^0,w,c
  4714   002652  6E1F               	movwf	(??_floorf+1)^0,c
  4715   002654  1C26               	comf	(floorf@m+2)^0,w,c
  4716   002656  6E20               	movwf	(??_floorf+2)^0,c
  4717   002658  1C27               	comf	(floorf@m+3)^0,w,c
  4718   00265A  6E21               	movwf	(??_floorf+3)^0,c
  4719   00265C  501E               	movf	??_floorf^0,w,c
  4720   00265E  162A               	andwf	floorf@u^0,f,c
  4721   002660  501F               	movf	(??_floorf+1)^0,w,c
  4722   002662  162B               	andwf	(floorf@u+1)^0,f,c
  4723   002664  5020               	movf	(??_floorf+2)^0,w,c
  4724   002666  162C               	andwf	(floorf@u+2)^0,f,c
  4725   002668  5021               	movf	(??_floorf+3)^0,w,c
  4726   00266A  162D               	andwf	(floorf@u+3)^0,f,c
  4727   00266C  EF7C  F013         	goto	l3437
  4728   002670                     l3429:
  4729   002670  C02A  F01E         	movff	floorf@u,??_floorf
  4730   002674  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4731   002678  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4732   00267C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4733   002680  0E20               	movlw	32
  4734   002682  EF48  F013         	goto	u3280
  4735   002686                     u3285:
  4736   002686  90D8               	bcf	status,0,c
  4737   002688  3221               	rrcf	(??_floorf+3)^0,f,c
  4738   00268A  3220               	rrcf	(??_floorf+2)^0,f,c
  4739   00268C  321F               	rrcf	(??_floorf+1)^0,f,c
  4740   00268E  321E               	rrcf	??_floorf^0,f,c
  4741   002690                     u3280:
  4742   002690  2EE8               	decfsz	wreg,f,c
  4743   002692  EF43  F013         	goto	u3285
  4744   002696  501E               	movf	??_floorf^0,w,c
  4745   002698  101F               	iorwf	(??_floorf+1)^0,w,c
  4746   00269A  1020               	iorwf	(??_floorf+2)^0,w,c
  4747   00269C  1021               	iorwf	(??_floorf+3)^0,w,c
  4748   00269E  A4D8               	btfss	status,2,c
  4749   0026A0  EF54  F013         	goto	u3291
  4750   0026A4  EF56  F013         	goto	u3290
  4751   0026A8                     u3291:
  4752   0026A8  EF60  F013         	goto	l3433
  4753   0026AC                     u3290:
  4754   0026AC  0E00               	movlw	0
  4755   0026AE  6E2A               	movwf	floorf@u^0,c
  4756   0026B0  0E00               	movlw	0
  4757   0026B2  6E2B               	movwf	(floorf@u+1)^0,c
  4758   0026B4  0E00               	movlw	0
  4759   0026B6  6E2C               	movwf	(floorf@u+2)^0,c
  4760   0026B8  0E00               	movlw	0
  4761   0026BA  6E2D               	movwf	(floorf@u+3)^0,c
  4762   0026BC  EF7C  F013         	goto	l3437
  4763   0026C0                     l3433:
  4764   0026C0  90D8               	bcf	status,0,c
  4765   0026C2  342A               	rlcf	floorf@u^0,w,c
  4766   0026C4  6E1E               	movwf	??_floorf^0,c
  4767   0026C6  342B               	rlcf	(floorf@u+1)^0,w,c
  4768   0026C8  6E1F               	movwf	(??_floorf+1)^0,c
  4769   0026CA  342C               	rlcf	(floorf@u+2)^0,w,c
  4770   0026CC  6E20               	movwf	(??_floorf+2)^0,c
  4771   0026CE  342D               	rlcf	(floorf@u+3)^0,w,c
  4772   0026D0  6E21               	movwf	(??_floorf+3)^0,c
  4773   0026D2  501E               	movf	??_floorf^0,w,c
  4774   0026D4  101F               	iorwf	(??_floorf+1)^0,w,c
  4775   0026D6  1020               	iorwf	(??_floorf+2)^0,w,c
  4776   0026D8  1021               	iorwf	(??_floorf+3)^0,w,c
  4777   0026DA  B4D8               	btfsc	status,2,c
  4778   0026DC  EF72  F013         	goto	u3301
  4779   0026E0  EF74  F013         	goto	u3300
  4780   0026E4                     u3301:
  4781   0026E4  EF7C  F013         	goto	l3437
  4782   0026E8                     u3300:
  4783   0026E8  0E00               	movlw	0
  4784   0026EA  6E2A               	movwf	floorf@u^0,c
  4785   0026EC  0E00               	movlw	0
  4786   0026EE  6E2B               	movwf	(floorf@u+1)^0,c
  4787   0026F0  0E80               	movlw	128
  4788   0026F2  6E2C               	movwf	(floorf@u+2)^0,c
  4789   0026F4  0EBF               	movlw	191
  4790   0026F6  6E2D               	movwf	(floorf@u+3)^0,c
  4791   0026F8                     l3437:
  4792   0026F8  C02A  F01A         	movff	floorf@u,?_floorf
  4793   0026FC  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4794   002700  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4795   002704  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4796   002708                     l998:
  4797   002708  0012               	return		;funcret
  4798   00270A                     __end_of_floorf:
  4799                           	callstack 0
  4800                           
  4801 ;; *************** function ___fpclassifyf *****************
  4802 ;; Defined at:
  4803 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  x               4    0[COMRAM] float 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  u               4   10[COMRAM] struct .
  4808 ;;  e               2    8[COMRAM] int 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  2    0[COMRAM] int 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4818 ;;      Params:         4       0       0       0       0       0       0       0       0
  4819 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4820 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4821 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4822 ;;Total ram usage:       14 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_efgtoa
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text18
  4832   002A3C                     __ptext18:
  4833                           	callstack 0
  4834   002A3C                     ___fpclassifyf:
  4835                           	callstack 26
  4836   002A3C  C09E  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4837   002A40  C09F  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4838   002A44  C0A0  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4839   002A48  C0A1  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4840   002A4C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4841   002A50  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4842   002A54  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4843   002A58  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4844   002A5C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4845   002A60  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4846   002A64  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4847   002A68  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4848   002A6C  0E18               	movlw	24
  4849   002A6E  EF3E  F015         	goto	u3120
  4850   002A72                     u3125:
  4851   002A72  90D8               	bcf	status,0,c
  4852   002A74  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4853   002A76  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4854   002A78  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4855   002A7A  3205               	rrcf	??___fpclassifyf^0,f,c
  4856   002A7C                     u3120:
  4857   002A7C  2EE8               	decfsz	wreg,f,c
  4858   002A7E  EF39  F015         	goto	u3125
  4859   002A82  5005               	movf	??___fpclassifyf^0,w,c
  4860   002A84  6E09               	movwf	___fpclassifyf@e^0,c
  4861   002A86  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4862   002A88  5009               	movf	___fpclassifyf@e^0,w,c
  4863   002A8A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4864   002A8C  A4D8               	btfss	status,2,c
  4865   002A8E  EF4B  F015         	goto	u3131
  4866   002A92  EF4D  F015         	goto	u3130
  4867   002A96                     u3131:
  4868   002A96  EF6D  F015         	goto	l3395
  4869   002A9A                     u3130:
  4870   002A9A  90D8               	bcf	status,0,c
  4871   002A9C  340B               	rlcf	___fpclassifyf@u^0,w,c
  4872   002A9E  6E05               	movwf	??___fpclassifyf^0,c
  4873   002AA0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4874   002AA2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4875   002AA4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4876   002AA6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4877   002AA8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4878   002AAA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4879   002AAC  5005               	movf	??___fpclassifyf^0,w,c
  4880   002AAE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4881   002AB0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4882   002AB2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4883   002AB4  A4D8               	btfss	status,2,c
  4884   002AB6  EF5F  F015         	goto	u3141
  4885   002ABA  EF61  F015         	goto	u3140
  4886   002ABE                     u3141:
  4887   002ABE  EF67  F015         	goto	l3391
  4888   002AC2                     u3140:
  4889   002AC2  0E00               	movlw	0
  4890   002AC4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4891   002AC6  0E02               	movlw	2
  4892   002AC8  6E01               	movwf	?___fpclassifyf^0,c
  4893   002ACA  EF9C  F015         	goto	l991
  4894   002ACE                     l3391:
  4895   002ACE  0E00               	movlw	0
  4896   002AD0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4897   002AD2  0E03               	movlw	3
  4898   002AD4  6E01               	movwf	?___fpclassifyf^0,c
  4899   002AD6  EF9C  F015         	goto	l991
  4900   002ADA                     l3395:
  4901   002ADA  2809               	incf	___fpclassifyf@e^0,w,c
  4902   002ADC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4903   002ADE  A4D8               	btfss	status,2,c
  4904   002AE0  EF74  F015         	goto	u3151
  4905   002AE4  EF76  F015         	goto	u3150
  4906   002AE8                     u3151:
  4907   002AE8  EF98  F015         	goto	l3401
  4908   002AEC                     u3150:
  4909   002AEC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4910   002AF0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4911   002AF4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4912   002AF8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4913   002AFC  0E09               	movlw	9
  4914   002AFE                     u3165:
  4915   002AFE  90D8               	bcf	status,0,c
  4916   002B00  3605               	rlcf	??___fpclassifyf^0,f,c
  4917   002B02  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4918   002B04  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4919   002B06  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4920   002B08  2EE8               	decfsz	wreg,f,c
  4921   002B0A  EF7F  F015         	goto	u3165
  4922   002B0E  5005               	movf	??___fpclassifyf^0,w,c
  4923   002B10  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4924   002B12  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4925   002B14  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4926   002B16  B4D8               	btfsc	status,2,c
  4927   002B18  EF90  F015         	goto	u3171
  4928   002B1C  EF93  F015         	goto	u3170
  4929   002B20                     u3171:
  4930   002B20  0E01               	movlw	1
  4931   002B22  EF94  F015         	goto	u3180
  4932   002B26                     u3170:
  4933   002B26  0E00               	movlw	0
  4934   002B28                     u3180:
  4935   002B28  6E01               	movwf	?___fpclassifyf^0,c
  4936   002B2A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4937   002B2C  EF9C  F015         	goto	l991
  4938   002B30                     l3401:
  4939   002B30  0E00               	movlw	0
  4940   002B32  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4941   002B34  0E04               	movlw	4
  4942   002B36  6E01               	movwf	?___fpclassifyf^0,c
  4943   002B38                     l991:
  4944   002B38  0012               	return		;funcret
  4945   002B3A                     __end_of___fpclassifyf:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function ___fltol *****************
  4949 ;; Defined at:
  4950 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;  f1              4    0[COMRAM] int 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  exp1            1    9[COMRAM] unsigned char 
  4955 ;;  sign1           1    8[COMRAM] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  4    0[COMRAM] long 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4965 ;;      Params:         4       0       0       0       0       0       0       0       0
  4966 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4967 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4968 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4969 ;;Total ram usage:       10 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_efgtoa
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text19
  4979   002832                     __ptext19:
  4980                           	callstack 0
  4981   002832                     ___fltol:
  4982                           	callstack 26
  4983   002832  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4984   002834  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4985   002836  6E0A               	movwf	___fltol@exp1^0,c
  4986   002838  500A               	movf	___fltol@exp1^0,w,c
  4987   00283A  A4D8               	btfss	status,2,c
  4988   00283C  EF22  F014         	goto	u2971
  4989   002840  EF24  F014         	goto	u2970
  4990   002844                     u2971:
  4991   002844  EF2E  F014         	goto	l3293
  4992   002848                     u2970:
  4993   002848                     l3289:
  4994   002848  0E00               	movlw	0
  4995   00284A  6E01               	movwf	?___fltol^0,c
  4996   00284C  0E00               	movlw	0
  4997   00284E  6E02               	movwf	(?___fltol+1)^0,c
  4998   002850  0E00               	movlw	0
  4999   002852  6E03               	movwf	(?___fltol+2)^0,c
  5000   002854  0E00               	movlw	0
  5001   002856  6E04               	movwf	(?___fltol+3)^0,c
  5002   002858  EF9B  F014         	goto	l445
  5003   00285C                     l3293:
  5004   00285C  C001  F005         	movff	___fltol@f1,??___fltol
  5005   002860  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5006   002864  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5007   002868  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5008   00286C  0E20               	movlw	32
  5009   00286E  EF3E  F014         	goto	u2980
  5010   002872                     u2985:
  5011   002872  90D8               	bcf	status,0,c
  5012   002874  3208               	rrcf	(??___fltol+3)^0,f,c
  5013   002876  3207               	rrcf	(??___fltol+2)^0,f,c
  5014   002878  3206               	rrcf	(??___fltol+1)^0,f,c
  5015   00287A  3205               	rrcf	??___fltol^0,f,c
  5016   00287C                     u2980:
  5017   00287C  2EE8               	decfsz	wreg,f,c
  5018   00287E  EF39  F014         	goto	u2985
  5019   002882  5005               	movf	??___fltol^0,w,c
  5020   002884  6E09               	movwf	___fltol@sign1^0,c
  5021   002886  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5022   002888  0EFF               	movlw	255
  5023   00288A  1601               	andwf	___fltol@f1^0,f,c
  5024   00288C  0EFF               	movlw	255
  5025   00288E  1602               	andwf	(___fltol@f1+1)^0,f,c
  5026   002890  0EFF               	movlw	255
  5027   002892  1603               	andwf	(___fltol@f1+2)^0,f,c
  5028   002894  0E00               	movlw	0
  5029   002896  1604               	andwf	(___fltol@f1+3)^0,f,c
  5030   002898  0E96               	movlw	150
  5031   00289A  5E0A               	subwf	___fltol@exp1^0,f,c
  5032   00289C  BE0A               	btfsc	___fltol@exp1^0,7,c
  5033   00289E  EF55  F014         	goto	u2990
  5034   0028A2  EF53  F014         	goto	u2991
  5035   0028A6                     u2991:
  5036   0028A6  EF6B  F014         	goto	l3313
  5037   0028AA                     u2990:
  5038   0028AA  500A               	movf	___fltol@exp1^0,w,c
  5039   0028AC  0A80               	xorlw	128
  5040   0028AE  0F97               	addlw	151
  5041   0028B0  B0D8               	btfsc	status,0,c
  5042   0028B2  EF5D  F014         	goto	u3001
  5043   0028B6  EF5F  F014         	goto	u3000
  5044   0028BA                     u3001:
  5045   0028BA  EF61  F014         	goto	l3309
  5046   0028BE                     u3000:
  5047   0028BE  EF24  F014         	goto	l3289
  5048   0028C2                     l3309:
  5049   0028C2  90D8               	bcf	status,0,c
  5050   0028C4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5051   0028C6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5052   0028C8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5053   0028CA  3201               	rrcf	___fltol@f1^0,f,c
  5054   0028CC  3E0A               	incfsz	___fltol@exp1^0,f,c
  5055   0028CE  EF61  F014         	goto	l3309
  5056   0028D2  EF83  F014         	goto	l3323
  5057   0028D6                     l3313:
  5058   0028D6  0E1F               	movlw	31
  5059   0028D8  640A               	cpfsgt	___fltol@exp1^0,c
  5060   0028DA  EF71  F014         	goto	u3011
  5061   0028DE  EF73  F014         	goto	u3010
  5062   0028E2                     u3011:
  5063   0028E2  EF7B  F014         	goto	l3321
  5064   0028E6                     u3010:
  5065   0028E6  EF24  F014         	goto	l3289
  5066   0028EA                     l3319:
  5067   0028EA  90D8               	bcf	status,0,c
  5068   0028EC  3601               	rlcf	___fltol@f1^0,f,c
  5069   0028EE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5070   0028F0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5071   0028F2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5072   0028F4  060A               	decf	___fltol@exp1^0,f,c
  5073   0028F6                     l3321:
  5074   0028F6  500A               	movf	___fltol@exp1^0,w,c
  5075   0028F8  A4D8               	btfss	status,2,c
  5076   0028FA  EF81  F014         	goto	u3021
  5077   0028FE  EF83  F014         	goto	u3020
  5078   002902                     u3021:
  5079   002902  EF75  F014         	goto	l3319
  5080   002906                     u3020:
  5081   002906                     l3323:
  5082   002906  5009               	movf	___fltol@sign1^0,w,c
  5083   002908  B4D8               	btfsc	status,2,c
  5084   00290A  EF89  F014         	goto	u3031
  5085   00290E  EF8B  F014         	goto	u3030
  5086   002912                     u3031:
  5087   002912  EF93  F014         	goto	l3327
  5088   002916                     u3030:
  5089   002916  1E04               	comf	(___fltol@f1+3)^0,f,c
  5090   002918  1E03               	comf	(___fltol@f1+2)^0,f,c
  5091   00291A  1E02               	comf	(___fltol@f1+1)^0,f,c
  5092   00291C  6C01               	negf	___fltol@f1^0,c
  5093   00291E  0E00               	movlw	0
  5094   002920  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5095   002922  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5096   002924  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5097   002926                     l3327:
  5098   002926  C001  F001         	movff	___fltol@f1,?___fltol
  5099   00292A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5100   00292E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5101   002932  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5102   002936                     l445:
  5103   002936  0012               	return		;funcret
  5104   002938                     __end_of___fltol:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function ___flsub *****************
  5108 ;; Defined at:
  5109 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  b               4   25[COMRAM] long 
  5112 ;;  a               4   29[COMRAM] long 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;		None
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  4   25[COMRAM] long 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5124 ;;      Params:         8       0       0       0       0       0       0       0       0
  5125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5127 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5128 ;;Total ram usage:        8 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; Hardware stack levels required when called: 1
  5131 ;; This function calls:
  5132 ;;		___fladd
  5133 ;; This function is called by:
  5134 ;;		_efgtoa
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text20
  5139   003292                     __ptext20:
  5140                           	callstack 0
  5141   003292                     ___flsub:
  5142                           	callstack 25
  5143   003292  0E00               	movlw	0
  5144   003294  1A1E               	xorwf	___flsub@a^0,f,c
  5145   003296  0E00               	movlw	0
  5146   003298  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  5147   00329A  0E00               	movlw	0
  5148   00329C  1A20               	xorwf	(___flsub@a+2)^0,f,c
  5149   00329E  0E80               	movlw	128
  5150   0032A0  1A21               	xorwf	(___flsub@a+3)^0,f,c
  5151   0032A2  C01A  F001         	movff	___flsub@b,___fladd@b
  5152   0032A6  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  5153   0032AA  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  5154   0032AE  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  5155   0032B2  C01E  F005         	movff	___flsub@a,___fladd@a
  5156   0032B6  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  5157   0032BA  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  5158   0032BE  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  5159   0032C2  EC55  F009         	call	___fladd	;wreg free
  5160   0032C6  C001  F01A         	movff	?___fladd,?___flsub
  5161   0032CA  C002  F01B         	movff	?___fladd+1,?___flsub+1
  5162   0032CE  C003  F01C         	movff	?___fladd+2,?___flsub+2
  5163   0032D2  C004  F01D         	movff	?___fladd+3,?___flsub+3
  5164   0032D6  0012               	return		;funcret
  5165   0032D8                     __end_of___flsub:
  5166                           	callstack 0
  5167                           
  5168 ;; *************** function ___fladd *****************
  5169 ;; Defined at:
  5170 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  b               4    0[COMRAM] long 
  5173 ;;  a               4    4[COMRAM] long 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  grs             1   15[COMRAM] unsigned char 
  5176 ;;  bexp            1   14[COMRAM] unsigned char 
  5177 ;;  aexp            1   13[COMRAM] unsigned char 
  5178 ;;  signs           1   12[COMRAM] unsigned char 
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  4    0[COMRAM] unsigned char 
  5181 ;; Registers used:
  5182 ;;		wreg, status,2, status,0
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5188 ;;      Params:         8       0       0       0       0       0       0       0       0
  5189 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5190 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5191 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5192 ;;Total ram usage:       16 bytes
  5193 ;; Hardware stack levels used: 1
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		___flsub
  5198 ;;		_efgtoa
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           	psect	text21
  5203   0012AA                     __ptext21:
  5204                           	callstack 0
  5205   0012AA                     ___fladd:
  5206                           	callstack 25
  5207   0012AA  5004               	movf	(___fladd@b+3)^0,w,c
  5208   0012AC  0B80               	andlw	128
  5209   0012AE  6E0D               	movwf	___fladd@signs^0,c
  5210   0012B0  5004               	movf	(___fladd@b+3)^0,w,c
  5211   0012B2  2404               	addwf	(___fladd@b+3)^0,w,c
  5212   0012B4  6E0F               	movwf	___fladd@bexp^0,c
  5213   0012B6  AE03               	btfss	(___fladd@b+2)^0,7,c
  5214   0012B8  EF60  F009         	goto	u2061
  5215   0012BC  EF62  F009         	goto	u2060
  5216   0012C0                     u2061:
  5217   0012C0  EF63  F009         	goto	l2757
  5218   0012C4                     u2060:
  5219   0012C4  800F               	bsf	___fladd@bexp^0,0,c
  5220   0012C6                     l2757:
  5221   0012C6  500F               	movf	___fladd@bexp^0,w,c
  5222   0012C8  B4D8               	btfsc	status,2,c
  5223   0012CA  EF69  F009         	goto	u2071
  5224   0012CE  EF6B  F009         	goto	u2070
  5225   0012D2                     u2071:
  5226   0012D2  EF80  F009         	goto	l2767
  5227   0012D6                     u2070:
  5228   0012D6  280F               	incf	___fladd@bexp^0,w,c
  5229   0012D8  A4D8               	btfss	status,2,c
  5230   0012DA  EF71  F009         	goto	u2081
  5231   0012DE  EF73  F009         	goto	u2080
  5232   0012E2                     u2081:
  5233   0012E2  EF7B  F009         	goto	l2763
  5234   0012E6                     u2080:
  5235   0012E6  0E00               	movlw	0
  5236   0012E8  6E01               	movwf	___fladd@b^0,c
  5237   0012EA  0E00               	movlw	0
  5238   0012EC  6E02               	movwf	(___fladd@b+1)^0,c
  5239   0012EE  0E00               	movlw	0
  5240   0012F0  6E03               	movwf	(___fladd@b+2)^0,c
  5241   0012F2  0E00               	movlw	0
  5242   0012F4  6E04               	movwf	(___fladd@b+3)^0,c
  5243   0012F6                     l2763:
  5244   0012F6  8E03               	bsf	(___fladd@b+2)^0,7,c
  5245   0012F8  0E00               	movlw	0
  5246   0012FA  6E04               	movwf	(___fladd@b+3)^0,c
  5247   0012FC  EF88  F009         	goto	l2769
  5248   001300                     l2767:
  5249   001300  0E00               	movlw	0
  5250   001302  6E01               	movwf	___fladd@b^0,c
  5251   001304  0E00               	movlw	0
  5252   001306  6E02               	movwf	(___fladd@b+1)^0,c
  5253   001308  0E00               	movlw	0
  5254   00130A  6E03               	movwf	(___fladd@b+2)^0,c
  5255   00130C  0E00               	movlw	0
  5256   00130E  6E04               	movwf	(___fladd@b+3)^0,c
  5257   001310                     l2769:
  5258   001310  5008               	movf	(___fladd@a+3)^0,w,c
  5259   001312  0B80               	andlw	128
  5260   001314  6E0E               	movwf	___fladd@aexp^0,c
  5261   001316  500D               	movf	___fladd@signs^0,w,c
  5262   001318  180E               	xorwf	___fladd@aexp^0,w,c
  5263   00131A  B4D8               	btfsc	status,2,c
  5264   00131C  EF92  F009         	goto	u2091
  5265   001320  EF94  F009         	goto	u2090
  5266   001324                     u2091:
  5267   001324  EF95  F009         	goto	l2775
  5268   001328                     u2090:
  5269   001328  8C0D               	bsf	___fladd@signs^0,6,c
  5270   00132A                     l2775:
  5271   00132A  5008               	movf	(___fladd@a+3)^0,w,c
  5272   00132C  2408               	addwf	(___fladd@a+3)^0,w,c
  5273   00132E  6E0E               	movwf	___fladd@aexp^0,c
  5274   001330  AE07               	btfss	(___fladd@a+2)^0,7,c
  5275   001332  EF9D  F009         	goto	u2101
  5276   001336  EF9F  F009         	goto	u2100
  5277   00133A                     u2101:
  5278   00133A  EFA0  F009         	goto	l2781
  5279   00133E                     u2100:
  5280   00133E  800E               	bsf	___fladd@aexp^0,0,c
  5281   001340                     l2781:
  5282   001340  500E               	movf	___fladd@aexp^0,w,c
  5283   001342  B4D8               	btfsc	status,2,c
  5284   001344  EFA6  F009         	goto	u2111
  5285   001348  EFA8  F009         	goto	u2110
  5286   00134C                     u2111:
  5287   00134C  EFBD  F009         	goto	l2791
  5288   001350                     u2110:
  5289   001350  280E               	incf	___fladd@aexp^0,w,c
  5290   001352  A4D8               	btfss	status,2,c
  5291   001354  EFAE  F009         	goto	u2121
  5292   001358  EFB0  F009         	goto	u2120
  5293   00135C                     u2121:
  5294   00135C  EFB8  F009         	goto	l2787
  5295   001360                     u2120:
  5296   001360  0E00               	movlw	0
  5297   001362  6E05               	movwf	___fladd@a^0,c
  5298   001364  0E00               	movlw	0
  5299   001366  6E06               	movwf	(___fladd@a+1)^0,c
  5300   001368  0E00               	movlw	0
  5301   00136A  6E07               	movwf	(___fladd@a+2)^0,c
  5302   00136C  0E00               	movlw	0
  5303   00136E  6E08               	movwf	(___fladd@a+3)^0,c
  5304   001370                     l2787:
  5305   001370  8E07               	bsf	(___fladd@a+2)^0,7,c
  5306   001372  0E00               	movlw	0
  5307   001374  6E08               	movwf	(___fladd@a+3)^0,c
  5308   001376  EFC5  F009         	goto	l2793
  5309   00137A                     l2791:
  5310   00137A  0E00               	movlw	0
  5311   00137C  6E05               	movwf	___fladd@a^0,c
  5312   00137E  0E00               	movlw	0
  5313   001380  6E06               	movwf	(___fladd@a+1)^0,c
  5314   001382  0E00               	movlw	0
  5315   001384  6E07               	movwf	(___fladd@a+2)^0,c
  5316   001386  0E00               	movlw	0
  5317   001388  6E08               	movwf	(___fladd@a+3)^0,c
  5318   00138A                     l2793:
  5319   00138A  500F               	movf	___fladd@bexp^0,w,c
  5320   00138C  5C0E               	subwf	___fladd@aexp^0,w,c
  5321   00138E  B0D8               	btfsc	status,0,c
  5322   001390  EFCC  F009         	goto	u2131
  5323   001394  EFCE  F009         	goto	u2130
  5324   001398                     u2131:
  5325   001398  EFF5  F009         	goto	l2829
  5326   00139C                     u2130:
  5327   00139C  AC0D               	btfss	___fladd@signs^0,6,c
  5328   00139E  EFD3  F009         	goto	u2141
  5329   0013A2  EFD5  F009         	goto	u2140
  5330   0013A6                     u2141:
  5331   0013A6  EFD7  F009         	goto	l2799
  5332   0013AA                     u2140:
  5333   0013AA  0E80               	movlw	128
  5334   0013AC  1A0D               	xorwf	___fladd@signs^0,f,c
  5335   0013AE                     l2799:
  5336   0013AE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5337   0013B2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5338   0013B6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5339   0013BA  C001  F010         	movff	___fladd@b,___fladd@grs
  5340   0013BE  C005  F001         	movff	___fladd@a,___fladd@b
  5341   0013C2  C010  F005         	movff	___fladd@grs,___fladd@a
  5342   0013C6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5343   0013CA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5344   0013CE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5345   0013D2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5346   0013D6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5347   0013DA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5348   0013DE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5349   0013E2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5350   0013E6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5351   0013EA                     l2829:
  5352   0013EA  0E00               	movlw	0
  5353   0013EC  6E10               	movwf	___fladd@grs^0,c
  5354   0013EE  500F               	movf	___fladd@bexp^0,w,c
  5355   0013F0  C00E  F009         	movff	___fladd@aexp,??___fladd
  5356   0013F4  6A0A               	clrf	(??___fladd+1)^0,c
  5357   0013F6  5E09               	subwf	??___fladd^0,f,c
  5358   0013F8  0E00               	movlw	0
  5359   0013FA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5360   0013FC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5361   0013FE  EF0A  F00A         	goto	u2151
  5362   001402  500A               	movf	(??___fladd+1)^0,w,c
  5363   001404  E109               	bnz	u2150
  5364   001406  0E1A               	movlw	26
  5365   001408  5C09               	subwf	??___fladd^0,w,c
  5366   00140A  A0D8               	btfss	status,0,c
  5367   00140C  EF0A  F00A         	goto	u2151
  5368   001410  EF0C  F00A         	goto	u2150
  5369   001414                     u2151:
  5370   001414  EF43  F00A         	goto	l677
  5371   001418                     u2150:
  5372   001418  5001               	movf	___fladd@b^0,w,c
  5373   00141A  1002               	iorwf	(___fladd@b+1)^0,w,c
  5374   00141C  1003               	iorwf	(___fladd@b+2)^0,w,c
  5375   00141E  1004               	iorwf	(___fladd@b+3)^0,w,c
  5376   001420  A4D8               	btfss	status,2,c
  5377   001422  EF15  F00A         	goto	u2161
  5378   001426  EF18  F00A         	goto	u2160
  5379   00142A                     u2161:
  5380   00142A  0E01               	movlw	1
  5381   00142C  EF19  F00A         	goto	u2170
  5382   001430                     u2160:
  5383   001430  0E00               	movlw	0
  5384   001432                     u2170:
  5385   001432  6E10               	movwf	___fladd@grs^0,c
  5386   001434  0E00               	movlw	0
  5387   001436  6E01               	movwf	___fladd@b^0,c
  5388   001438  0E00               	movlw	0
  5389   00143A  6E02               	movwf	(___fladd@b+1)^0,c
  5390   00143C  0E00               	movlw	0
  5391   00143E  6E03               	movwf	(___fladd@b+2)^0,c
  5392   001440  0E00               	movlw	0
  5393   001442  6E04               	movwf	(___fladd@b+3)^0,c
  5394   001444  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5395   001448  EF4C  F00A         	goto	l676
  5396   00144C                     l678:
  5397   00144C  A010               	btfss	___fladd@grs^0,0,c
  5398   00144E  EF2B  F00A         	goto	u2181
  5399   001452  EF2D  F00A         	goto	u2180
  5400   001456                     u2181:
  5401   001456  EF33  F00A         	goto	l2841
  5402   00145A                     u2180:
  5403   00145A  90D8               	bcf	status,0,c
  5404   00145C  3010               	rrcf	___fladd@grs^0,w,c
  5405   00145E  0901               	iorlw	1
  5406   001460  6E10               	movwf	___fladd@grs^0,c
  5407   001462  EF35  F00A         	goto	l2843
  5408   001466                     l2841:
  5409   001466  90D8               	bcf	status,0,c
  5410   001468  3210               	rrcf	___fladd@grs^0,f,c
  5411   00146A                     l2843:
  5412   00146A  A001               	btfss	___fladd@b^0,0,c
  5413   00146C  EF3A  F00A         	goto	u2191
  5414   001470  EF3C  F00A         	goto	u2190
  5415   001474                     u2191:
  5416   001474  EF3D  F00A         	goto	l2847
  5417   001478                     u2190:
  5418   001478  8E10               	bsf	___fladd@grs^0,7,c
  5419   00147A                     l2847:
  5420   00147A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5421   00147C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5422   00147E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5423   001480  3202               	rrcf	(___fladd@b+1)^0,f,c
  5424   001482  3201               	rrcf	___fladd@b^0,f,c
  5425   001484  2A0F               	incf	___fladd@bexp^0,f,c
  5426   001486                     l677:
  5427   001486  500E               	movf	___fladd@aexp^0,w,c
  5428   001488  5C0F               	subwf	___fladd@bexp^0,w,c
  5429   00148A  A0D8               	btfss	status,0,c
  5430   00148C  EF4A  F00A         	goto	u2201
  5431   001490  EF4C  F00A         	goto	u2200
  5432   001494                     u2201:
  5433   001494  EF26  F00A         	goto	l678
  5434   001498                     u2200:
  5435   001498                     l676:
  5436   001498  BC0D               	btfsc	___fladd@signs^0,6,c
  5437   00149A  EF51  F00A         	goto	u2211
  5438   00149E  EF53  F00A         	goto	u2210
  5439   0014A2                     u2211:
  5440   0014A2  EF93  F00A         	goto	l2875
  5441   0014A6                     u2210:
  5442   0014A6  500F               	movf	___fladd@bexp^0,w,c
  5443   0014A8  A4D8               	btfss	status,2,c
  5444   0014AA  EF59  F00A         	goto	u2221
  5445   0014AE  EF5B  F00A         	goto	u2220
  5446   0014B2                     u2221:
  5447   0014B2  EF65  F00A         	goto	l2857
  5448   0014B6                     u2220:
  5449   0014B6  0E00               	movlw	0
  5450   0014B8  6E01               	movwf	?___fladd^0,c
  5451   0014BA  0E00               	movlw	0
  5452   0014BC  6E02               	movwf	(?___fladd+1)^0,c
  5453   0014BE  0E00               	movlw	0
  5454   0014C0  6E03               	movwf	(?___fladd+2)^0,c
  5455   0014C2  0E00               	movlw	0
  5456   0014C4  6E04               	movwf	(?___fladd+3)^0,c
  5457   0014C6  EFB4  F00B         	goto	l685
  5458   0014CA                     l2857:
  5459   0014CA  5005               	movf	___fladd@a^0,w,c
  5460   0014CC  2601               	addwf	___fladd@b^0,f,c
  5461   0014CE  5006               	movf	(___fladd@a+1)^0,w,c
  5462   0014D0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5463   0014D2  5007               	movf	(___fladd@a+2)^0,w,c
  5464   0014D4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5465   0014D6  5008               	movf	(___fladd@a+3)^0,w,c
  5466   0014D8  2204               	addwfc	(___fladd@b+3)^0,f,c
  5467   0014DA  A004               	btfss	(___fladd@b+3)^0,0,c
  5468   0014DC  EF72  F00A         	goto	u2231
  5469   0014E0  EF74  F00A         	goto	u2230
  5470   0014E4                     u2231:
  5471   0014E4  EF20  F00B         	goto	l2911
  5472   0014E8                     u2230:
  5473   0014E8  A010               	btfss	___fladd@grs^0,0,c
  5474   0014EA  EF79  F00A         	goto	u2241
  5475   0014EE  EF7B  F00A         	goto	u2240
  5476   0014F2                     u2241:
  5477   0014F2  EF81  F00A         	goto	l2865
  5478   0014F6                     u2240:
  5479   0014F6  90D8               	bcf	status,0,c
  5480   0014F8  3010               	rrcf	___fladd@grs^0,w,c
  5481   0014FA  0901               	iorlw	1
  5482   0014FC  6E10               	movwf	___fladd@grs^0,c
  5483   0014FE  EF83  F00A         	goto	l2867
  5484   001502                     l2865:
  5485   001502  90D8               	bcf	status,0,c
  5486   001504  3210               	rrcf	___fladd@grs^0,f,c
  5487   001506                     l2867:
  5488   001506  A001               	btfss	___fladd@b^0,0,c
  5489   001508  EF88  F00A         	goto	u2251
  5490   00150C  EF8A  F00A         	goto	u2250
  5491   001510                     u2251:
  5492   001510  EF8B  F00A         	goto	l2871
  5493   001514                     u2250:
  5494   001514  8E10               	bsf	___fladd@grs^0,7,c
  5495   001516                     l2871:
  5496   001516  3404               	rlcf	(___fladd@b+3)^0,w,c
  5497   001518  3204               	rrcf	(___fladd@b+3)^0,f,c
  5498   00151A  3203               	rrcf	(___fladd@b+2)^0,f,c
  5499   00151C  3202               	rrcf	(___fladd@b+1)^0,f,c
  5500   00151E  3201               	rrcf	___fladd@b^0,f,c
  5501   001520  2A0F               	incf	___fladd@bexp^0,f,c
  5502   001522  EF20  F00B         	goto	l2911
  5503   001526                     l2875:
  5504   001526  5005               	movf	___fladd@a^0,w,c
  5505   001528  5C01               	subwf	___fladd@b^0,w,c
  5506   00152A  5006               	movf	(___fladd@a+1)^0,w,c
  5507   00152C  5802               	subwfb	(___fladd@b+1)^0,w,c
  5508   00152E  5007               	movf	(___fladd@a+2)^0,w,c
  5509   001530  5803               	subwfb	(___fladd@b+2)^0,w,c
  5510   001532  5004               	movf	(___fladd@b+3)^0,w,c
  5511   001534  0A80               	xorlw	128
  5512   001536  6E09               	movwf	??___fladd^0,c
  5513   001538  5008               	movf	(___fladd@a+3)^0,w,c
  5514   00153A  0A80               	xorlw	128
  5515   00153C  5809               	subwfb	??___fladd^0,w,c
  5516   00153E  B0D8               	btfsc	status,0,c
  5517   001540  EFA4  F00A         	goto	u2261
  5518   001544  EFA6  F00A         	goto	u2260
  5519   001548                     u2261:
  5520   001548  EFD1  F00A         	goto	l2885
  5521   00154C                     u2260:
  5522   00154C  5001               	movf	___fladd@b^0,w,c
  5523   00154E  5C05               	subwf	___fladd@a^0,w,c
  5524   001550  6E09               	movwf	??___fladd^0,c
  5525   001552  5002               	movf	(___fladd@b+1)^0,w,c
  5526   001554  5806               	subwfb	(___fladd@a+1)^0,w,c
  5527   001556  6E0A               	movwf	(??___fladd+1)^0,c
  5528   001558  5003               	movf	(___fladd@b+2)^0,w,c
  5529   00155A  5807               	subwfb	(___fladd@a+2)^0,w,c
  5530   00155C  6E0B               	movwf	(??___fladd+2)^0,c
  5531   00155E  5004               	movf	(___fladd@b+3)^0,w,c
  5532   001560  5808               	subwfb	(___fladd@a+3)^0,w,c
  5533   001562  6E0C               	movwf	(??___fladd+3)^0,c
  5534   001564  0EFF               	movlw	255
  5535   001566  2409               	addwf	??___fladd^0,w,c
  5536   001568  6E01               	movwf	___fladd@b^0,c
  5537   00156A  0EFF               	movlw	255
  5538   00156C  200A               	addwfc	(??___fladd+1)^0,w,c
  5539   00156E  6E02               	movwf	(___fladd@b+1)^0,c
  5540   001570  0EFF               	movlw	255
  5541   001572  200B               	addwfc	(??___fladd+2)^0,w,c
  5542   001574  6E03               	movwf	(___fladd@b+2)^0,c
  5543   001576  0EFF               	movlw	255
  5544   001578  200C               	addwfc	(??___fladd+3)^0,w,c
  5545   00157A  6E04               	movwf	(___fladd@b+3)^0,c
  5546   00157C  0E80               	movlw	128
  5547   00157E  1A0D               	xorwf	___fladd@signs^0,f,c
  5548   001580  6C10               	negf	___fladd@grs^0,c
  5549   001582  5010               	movf	___fladd@grs^0,w,c
  5550   001584  A4D8               	btfss	status,2,c
  5551   001586  EFC7  F00A         	goto	u2271
  5552   00158A  EFC9  F00A         	goto	u2270
  5553   00158E                     u2271:
  5554   00158E  EFD9  F00A         	goto	l693
  5555   001592                     u2270:
  5556   001592  0E01               	movlw	1
  5557   001594  2601               	addwf	___fladd@b^0,f,c
  5558   001596  0E00               	movlw	0
  5559   001598  2202               	addwfc	(___fladd@b+1)^0,f,c
  5560   00159A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5561   00159C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5562   00159E  EFD9  F00A         	goto	l693
  5563   0015A2                     l2885:
  5564   0015A2  5005               	movf	___fladd@a^0,w,c
  5565   0015A4  5E01               	subwf	___fladd@b^0,f,c
  5566   0015A6  5006               	movf	(___fladd@a+1)^0,w,c
  5567   0015A8  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5568   0015AA  5007               	movf	(___fladd@a+2)^0,w,c
  5569   0015AC  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5570   0015AE  5008               	movf	(___fladd@a+3)^0,w,c
  5571   0015B0  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5572   0015B2                     l693:
  5573   0015B2  5001               	movf	___fladd@b^0,w,c
  5574   0015B4  1002               	iorwf	(___fladd@b+1)^0,w,c
  5575   0015B6  1003               	iorwf	(___fladd@b+2)^0,w,c
  5576   0015B8  1004               	iorwf	(___fladd@b+3)^0,w,c
  5577   0015BA  A4D8               	btfss	status,2,c
  5578   0015BC  EFE2  F00A         	goto	u2281
  5579   0015C0  EFE4  F00A         	goto	u2280
  5580   0015C4                     u2281:
  5581   0015C4  EF19  F00B         	goto	l2909
  5582   0015C8                     u2280:
  5583   0015C8  5010               	movf	___fladd@grs^0,w,c
  5584   0015CA  A4D8               	btfss	status,2,c
  5585   0015CC  EFEA  F00A         	goto	u2291
  5586   0015D0  EFEC  F00A         	goto	u2290
  5587   0015D4                     u2291:
  5588   0015D4  EF19  F00B         	goto	l2909
  5589   0015D8                     u2290:
  5590   0015D8  0E00               	movlw	0
  5591   0015DA  6E01               	movwf	?___fladd^0,c
  5592   0015DC  0E00               	movlw	0
  5593   0015DE  6E02               	movwf	(?___fladd+1)^0,c
  5594   0015E0  0E00               	movlw	0
  5595   0015E2  6E03               	movwf	(?___fladd+2)^0,c
  5596   0015E4  0E00               	movlw	0
  5597   0015E6  6E04               	movwf	(?___fladd+3)^0,c
  5598   0015E8  EFB4  F00B         	goto	l685
  5599   0015EC                     l2893:
  5600   0015EC  90D8               	bcf	status,0,c
  5601   0015EE  3601               	rlcf	___fladd@b^0,f,c
  5602   0015F0  3602               	rlcf	(___fladd@b+1)^0,f,c
  5603   0015F2  3603               	rlcf	(___fladd@b+2)^0,f,c
  5604   0015F4  3604               	rlcf	(___fladd@b+3)^0,f,c
  5605   0015F6  AE10               	btfss	___fladd@grs^0,7,c
  5606   0015F8  EF00  F00B         	goto	u2301
  5607   0015FC  EF02  F00B         	goto	u2300
  5608   001600                     u2301:
  5609   001600  EF03  F00B         	goto	l2899
  5610   001604                     u2300:
  5611   001604  8001               	bsf	___fladd@b^0,0,c
  5612   001606                     l2899:
  5613   001606  A010               	btfss	___fladd@grs^0,0,c
  5614   001608  EF08  F00B         	goto	u2311
  5615   00160C  EF0A  F00B         	goto	u2310
  5616   001610                     u2311:
  5617   001610  EF0E  F00B         	goto	l2903
  5618   001614                     u2310:
  5619   001614  80D8               	bsf	status,0,c
  5620   001616  3610               	rlcf	___fladd@grs^0,f,c
  5621   001618  EF10  F00B         	goto	l2905
  5622   00161C                     l2903:
  5623   00161C  90D8               	bcf	status,0,c
  5624   00161E  3610               	rlcf	___fladd@grs^0,f,c
  5625   001620                     l2905:
  5626   001620  500F               	movf	___fladd@bexp^0,w,c
  5627   001622  B4D8               	btfsc	status,2,c
  5628   001624  EF16  F00B         	goto	u2321
  5629   001628  EF18  F00B         	goto	u2320
  5630   00162C                     u2321:
  5631   00162C  EF19  F00B         	goto	l2909
  5632   001630                     u2320:
  5633   001630  060F               	decf	___fladd@bexp^0,f,c
  5634   001632                     l2909:
  5635   001632  AE03               	btfss	(___fladd@b+2)^0,7,c
  5636   001634  EF1E  F00B         	goto	u2331
  5637   001638  EF20  F00B         	goto	u2330
  5638   00163C                     u2331:
  5639   00163C  EFF6  F00A         	goto	l2893
  5640   001640                     u2330:
  5641   001640                     l2911:
  5642   001640  0E00               	movlw	0
  5643   001642  6E0E               	movwf	___fladd@aexp^0,c
  5644   001644  AE10               	btfss	___fladd@grs^0,7,c
  5645   001646  EF27  F00B         	goto	u2341
  5646   00164A  EF29  F00B         	goto	u2340
  5647   00164E                     u2341:
  5648   00164E  EF41  F00B         	goto	l702
  5649   001652                     u2340:
  5650   001652  C010  F009         	movff	___fladd@grs,??___fladd
  5651   001656  0E7F               	movlw	127
  5652   001658  1609               	andwf	??___fladd^0,f,c
  5653   00165A  B4D8               	btfsc	status,2,c
  5654   00165C  EF32  F00B         	goto	u2351
  5655   001660  EF34  F00B         	goto	u2350
  5656   001664                     u2351:
  5657   001664  EF38  F00B         	goto	l703
  5658   001668                     u2350:
  5659   001668                     l2917:
  5660   001668  0E01               	movlw	1
  5661   00166A  6E0E               	movwf	___fladd@aexp^0,c
  5662   00166C  EF41  F00B         	goto	l702
  5663   001670                     l703:
  5664   001670  A001               	btfss	___fladd@b^0,0,c
  5665   001672  EF3D  F00B         	goto	u2361
  5666   001676  EF3F  F00B         	goto	u2360
  5667   00167A                     u2361:
  5668   00167A  EF41  F00B         	goto	l702
  5669   00167E                     u2360:
  5670   00167E  EF34  F00B         	goto	l2917
  5671   001682                     l702:
  5672   001682  500E               	movf	___fladd@aexp^0,w,c
  5673   001684  B4D8               	btfsc	status,2,c
  5674   001686  EF47  F00B         	goto	u2371
  5675   00168A  EF49  F00B         	goto	u2370
  5676   00168E                     u2371:
  5677   00168E  EF74  F00B         	goto	l2929
  5678   001692                     u2370:
  5679   001692  0E01               	movlw	1
  5680   001694  2601               	addwf	___fladd@b^0,f,c
  5681   001696  0E00               	movlw	0
  5682   001698  2202               	addwfc	(___fladd@b+1)^0,f,c
  5683   00169A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5684   00169C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5685   00169E  A004               	btfss	(___fladd@b+3)^0,0,c
  5686   0016A0  EF54  F00B         	goto	u2381
  5687   0016A4  EF56  F00B         	goto	u2380
  5688   0016A8                     u2381:
  5689   0016A8  EF74  F00B         	goto	l2929
  5690   0016AC                     u2380:
  5691   0016AC  C001  F009         	movff	___fladd@b,??___fladd
  5692   0016B0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5693   0016B4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5694   0016B8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5695   0016BC  340C               	rlcf	(??___fladd+3)^0,w,c
  5696   0016BE  320C               	rrcf	(??___fladd+3)^0,f,c
  5697   0016C0  320B               	rrcf	(??___fladd+2)^0,f,c
  5698   0016C2  320A               	rrcf	(??___fladd+1)^0,f,c
  5699   0016C4  3209               	rrcf	??___fladd^0,f,c
  5700   0016C6  C009  F001         	movff	??___fladd,___fladd@b
  5701   0016CA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5702   0016CE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5703   0016D2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5704   0016D6  280F               	incf	___fladd@bexp^0,w,c
  5705   0016D8  B4D8               	btfsc	status,2,c
  5706   0016DA  EF71  F00B         	goto	u2391
  5707   0016DE  EF73  F00B         	goto	u2390
  5708   0016E2                     u2391:
  5709   0016E2  EF74  F00B         	goto	l2929
  5710   0016E6                     u2390:
  5711   0016E6  2A0F               	incf	___fladd@bexp^0,f,c
  5712   0016E8                     l2929:
  5713   0016E8  280F               	incf	___fladd@bexp^0,w,c
  5714   0016EA  B4D8               	btfsc	status,2,c
  5715   0016EC  EF7A  F00B         	goto	u2401
  5716   0016F0  EF7C  F00B         	goto	u2400
  5717   0016F4                     u2401:
  5718   0016F4  EF84  F00B         	goto	l2933
  5719   0016F8                     u2400:
  5720   0016F8  500F               	movf	___fladd@bexp^0,w,c
  5721   0016FA  A4D8               	btfss	status,2,c
  5722   0016FC  EF82  F00B         	goto	u2411
  5723   001700  EF84  F00B         	goto	u2410
  5724   001704                     u2411:
  5725   001704  EF96  F00B         	goto	l2937
  5726   001708                     u2410:
  5727   001708                     l2933:
  5728   001708  0E00               	movlw	0
  5729   00170A  6E01               	movwf	___fladd@b^0,c
  5730   00170C  0E00               	movlw	0
  5731   00170E  6E02               	movwf	(___fladd@b+1)^0,c
  5732   001710  0E00               	movlw	0
  5733   001712  6E03               	movwf	(___fladd@b+2)^0,c
  5734   001714  0E00               	movlw	0
  5735   001716  6E04               	movwf	(___fladd@b+3)^0,c
  5736   001718  500F               	movf	___fladd@bexp^0,w,c
  5737   00171A  A4D8               	btfss	status,2,c
  5738   00171C  EF92  F00B         	goto	u2421
  5739   001720  EF94  F00B         	goto	u2420
  5740   001724                     u2421:
  5741   001724  EF96  F00B         	goto	l2937
  5742   001728                     u2420:
  5743   001728  0E00               	movlw	0
  5744   00172A  6E0D               	movwf	___fladd@signs^0,c
  5745   00172C                     l2937:
  5746   00172C  A00F               	btfss	___fladd@bexp^0,0,c
  5747   00172E  EF9B  F00B         	goto	u2431
  5748   001732  EF9D  F00B         	goto	u2430
  5749   001736                     u2431:
  5750   001736  EFA0  F00B         	goto	l2941
  5751   00173A                     u2430:
  5752   00173A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5753   00173C  EFA1  F00B         	goto	l2943
  5754   001740                     l2941:
  5755   001740  9E03               	bcf	(___fladd@b+2)^0,7,c
  5756   001742                     l2943:
  5757   001742  90D8               	bcf	status,0,c
  5758   001744  300F               	rrcf	___fladd@bexp^0,w,c
  5759   001746  6E04               	movwf	(___fladd@b+3)^0,c
  5760   001748  AE0D               	btfss	___fladd@signs^0,7,c
  5761   00174A  EFA9  F00B         	goto	u2441
  5762   00174E  EFAB  F00B         	goto	u2440
  5763   001752                     u2441:
  5764   001752  EFAC  F00B         	goto	l2949
  5765   001756                     u2440:
  5766   001756  8E04               	bsf	(___fladd@b+3)^0,7,c
  5767   001758                     l2949:
  5768   001758  C001  F001         	movff	___fladd@b,?___fladd
  5769   00175C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5770   001760  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5771   001764  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5772   001768                     l685:
  5773   001768  0012               	return		;funcret
  5774   00176A                     __end_of___fladd:
  5775                           	callstack 0
  5776                           
  5777 ;; *************** function ___flneg *****************
  5778 ;; Defined at:
  5779 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;  f1              4    0[COMRAM] unsigned char 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  4    0[COMRAM] unsigned char 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5793 ;;      Params:         4       0       0       0       0       0       0       0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5796 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5797 ;;Total ram usage:        4 bytes
  5798 ;; Hardware stack levels used: 1
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_efgtoa
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           	psect	text22
  5807   00335C                     __ptext22:
  5808                           	callstack 0
  5809   00335C                     ___flneg:
  5810                           	callstack 26
  5811   00335C  5001               	movf	___flneg@f1^0,w,c
  5812   00335E  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5813   003360  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5814   003362  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5815   003364  B4D8               	btfsc	status,2,c
  5816   003366  EFB7  F019         	goto	u2961
  5817   00336A  EFB9  F019         	goto	u2960
  5818   00336E                     u2961:
  5819   00336E  EFC1  F019         	goto	l3283
  5820   003372                     u2960:
  5821   003372  0E00               	movlw	0
  5822   003374  1A01               	xorwf	___flneg@f1^0,f,c
  5823   003376  0E00               	movlw	0
  5824   003378  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5825   00337A  0E00               	movlw	0
  5826   00337C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5827   00337E  0E80               	movlw	128
  5828   003380  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5829   003382                     l3283:
  5830   003382  C001  F001         	movff	___flneg@f1,?___flneg
  5831   003386  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5832   00338A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5833   00338E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5834   003392  0012               	return		;funcret
  5835   003394                     __end_of___flneg:
  5836                           	callstack 0
  5837                           
  5838 ;; *************** function ___flmul *****************
  5839 ;; Defined at:
  5840 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  b               4    0[COMRAM] unsigned char 
  5843 ;;  a               4    4[COMRAM] unsigned char 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  prod            4   19[COMRAM] struct .
  5846 ;;  grs             4   13[COMRAM] unsigned long 
  5847 ;;  temp            2   23[COMRAM] struct .
  5848 ;;  bexp            1   18[COMRAM] unsigned char 
  5849 ;;  aexp            1   17[COMRAM] unsigned char 
  5850 ;;  sign            1   12[COMRAM] unsigned char 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  4    0[COMRAM] unsigned char 
  5853 ;; Registers used:
  5854 ;;		wreg, status,2, status,0, prodl, prodh
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5860 ;;      Params:         8       0       0       0       0       0       0       0       0
  5861 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5862 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5863 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5864 ;;Total ram usage:       25 bytes
  5865 ;; Hardware stack levels used: 1
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_efgtoa
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text23
  5874   00176A                     __ptext23:
  5875                           	callstack 0
  5876   00176A                     ___flmul:
  5877                           	callstack 26
  5878   00176A  5004               	movf	(___flmul@b+3)^0,w,c
  5879   00176C  0B80               	andlw	128
  5880   00176E  6E0D               	movwf	___flmul@sign^0,c
  5881   001770  5004               	movf	(___flmul@b+3)^0,w,c
  5882   001772  2404               	addwf	(___flmul@b+3)^0,w,c
  5883   001774  6E13               	movwf	___flmul@bexp^0,c
  5884   001776  AE03               	btfss	(___flmul@b+2)^0,7,c
  5885   001778  EFC0  F00B         	goto	u2691
  5886   00177C  EFC2  F00B         	goto	u2690
  5887   001780                     u2691:
  5888   001780  EFC3  F00B         	goto	l3111
  5889   001784                     u2690:
  5890   001784  8013               	bsf	___flmul@bexp^0,0,c
  5891   001786                     l3111:
  5892   001786  5013               	movf	___flmul@bexp^0,w,c
  5893   001788  B4D8               	btfsc	status,2,c
  5894   00178A  EFC9  F00B         	goto	u2701
  5895   00178E  EFCB  F00B         	goto	u2700
  5896   001792                     u2701:
  5897   001792  EFDE  F00B         	goto	l3119
  5898   001796                     u2700:
  5899   001796  2813               	incf	___flmul@bexp^0,w,c
  5900   001798  A4D8               	btfss	status,2,c
  5901   00179A  EFD1  F00B         	goto	u2711
  5902   00179E  EFD3  F00B         	goto	u2710
  5903   0017A2                     u2711:
  5904   0017A2  EFDB  F00B         	goto	l3117
  5905   0017A6                     u2710:
  5906   0017A6  0E00               	movlw	0
  5907   0017A8  6E01               	movwf	___flmul@b^0,c
  5908   0017AA  0E00               	movlw	0
  5909   0017AC  6E02               	movwf	(___flmul@b+1)^0,c
  5910   0017AE  0E00               	movlw	0
  5911   0017B0  6E03               	movwf	(___flmul@b+2)^0,c
  5912   0017B2  0E00               	movlw	0
  5913   0017B4  6E04               	movwf	(___flmul@b+3)^0,c
  5914   0017B6                     l3117:
  5915   0017B6  8E03               	bsf	(___flmul@b+2)^0,7,c
  5916   0017B8  EFE6  F00B         	goto	l3121
  5917   0017BC                     l3119:
  5918   0017BC  0E00               	movlw	0
  5919   0017BE  6E01               	movwf	___flmul@b^0,c
  5920   0017C0  0E00               	movlw	0
  5921   0017C2  6E02               	movwf	(___flmul@b+1)^0,c
  5922   0017C4  0E00               	movlw	0
  5923   0017C6  6E03               	movwf	(___flmul@b+2)^0,c
  5924   0017C8  0E00               	movlw	0
  5925   0017CA  6E04               	movwf	(___flmul@b+3)^0,c
  5926   0017CC                     l3121:
  5927   0017CC  5008               	movf	(___flmul@a+3)^0,w,c
  5928   0017CE  0B80               	andlw	128
  5929   0017D0  1A0D               	xorwf	___flmul@sign^0,f,c
  5930   0017D2  5008               	movf	(___flmul@a+3)^0,w,c
  5931   0017D4  2408               	addwf	(___flmul@a+3)^0,w,c
  5932   0017D6  6E12               	movwf	___flmul@aexp^0,c
  5933   0017D8  AE07               	btfss	(___flmul@a+2)^0,7,c
  5934   0017DA  EFF1  F00B         	goto	u2721
  5935   0017DE  EFF3  F00B         	goto	u2720
  5936   0017E2                     u2721:
  5937   0017E2  EFF4  F00B         	goto	l3129
  5938   0017E6                     u2720:
  5939   0017E6  8012               	bsf	___flmul@aexp^0,0,c
  5940   0017E8                     l3129:
  5941   0017E8  5012               	movf	___flmul@aexp^0,w,c
  5942   0017EA  B4D8               	btfsc	status,2,c
  5943   0017EC  EFFA  F00B         	goto	u2731
  5944   0017F0  EFFC  F00B         	goto	u2730
  5945   0017F4                     u2731:
  5946   0017F4  EF0F  F00C         	goto	l3137
  5947   0017F8                     u2730:
  5948   0017F8  2812               	incf	___flmul@aexp^0,w,c
  5949   0017FA  A4D8               	btfss	status,2,c
  5950   0017FC  EF02  F00C         	goto	u2741
  5951   001800  EF04  F00C         	goto	u2740
  5952   001804                     u2741:
  5953   001804  EF0C  F00C         	goto	l3135
  5954   001808                     u2740:
  5955   001808  0E00               	movlw	0
  5956   00180A  6E05               	movwf	___flmul@a^0,c
  5957   00180C  0E00               	movlw	0
  5958   00180E  6E06               	movwf	(___flmul@a+1)^0,c
  5959   001810  0E00               	movlw	0
  5960   001812  6E07               	movwf	(___flmul@a+2)^0,c
  5961   001814  0E00               	movlw	0
  5962   001816  6E08               	movwf	(___flmul@a+3)^0,c
  5963   001818                     l3135:
  5964   001818  8E07               	bsf	(___flmul@a+2)^0,7,c
  5965   00181A  EF17  F00C         	goto	l762
  5966   00181E                     l3137:
  5967   00181E  0E00               	movlw	0
  5968   001820  6E05               	movwf	___flmul@a^0,c
  5969   001822  0E00               	movlw	0
  5970   001824  6E06               	movwf	(___flmul@a+1)^0,c
  5971   001826  0E00               	movlw	0
  5972   001828  6E07               	movwf	(___flmul@a+2)^0,c
  5973   00182A  0E00               	movlw	0
  5974   00182C  6E08               	movwf	(___flmul@a+3)^0,c
  5975   00182E                     l762:
  5976   00182E  5012               	movf	___flmul@aexp^0,w,c
  5977   001830  B4D8               	btfsc	status,2,c
  5978   001832  EF1D  F00C         	goto	u2751
  5979   001836  EF1F  F00C         	goto	u2750
  5980   00183A                     u2751:
  5981   00183A  EF27  F00C         	goto	l3141
  5982   00183E                     u2750:
  5983   00183E  5013               	movf	___flmul@bexp^0,w,c
  5984   001840  A4D8               	btfss	status,2,c
  5985   001842  EF25  F00C         	goto	u2761
  5986   001846  EF27  F00C         	goto	u2760
  5987   00184A                     u2761:
  5988   00184A  EF31  F00C         	goto	l3145
  5989   00184E                     u2760:
  5990   00184E                     l3141:
  5991   00184E  0E00               	movlw	0
  5992   001850  6E01               	movwf	?___flmul^0,c
  5993   001852  0E00               	movlw	0
  5994   001854  6E02               	movwf	(?___flmul+1)^0,c
  5995   001856  0E00               	movlw	0
  5996   001858  6E03               	movwf	(?___flmul+2)^0,c
  5997   00185A  0E00               	movlw	0
  5998   00185C  6E04               	movwf	(?___flmul+3)^0,c
  5999   00185E  EFC9  F00D         	goto	l766
  6000   001862                     l3145:
  6001   001862  5007               	movf	(___flmul@a+2)^0,w,c
  6002   001864  0201               	mulwf	___flmul@b^0,c
  6003   001866  CFF3 F018          	movff	prodl,___flmul@temp
  6004   00186A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6005   00186E  5018               	movf	___flmul@temp^0,w,c
  6006   001870  6E0E               	movwf	___flmul@grs^0,c
  6007   001872  6A0F               	clrf	(___flmul@grs+1)^0,c
  6008   001874  6A10               	clrf	(___flmul@grs+2)^0,c
  6009   001876  6A11               	clrf	(___flmul@grs+3)^0,c
  6010   001878  5019               	movf	(___flmul@temp+1)^0,w,c
  6011   00187A  6E14               	movwf	___flmul@prod^0,c
  6012   00187C  6A15               	clrf	(___flmul@prod+1)^0,c
  6013   00187E  6A16               	clrf	(___flmul@prod+2)^0,c
  6014   001880  6A17               	clrf	(___flmul@prod+3)^0,c
  6015   001882  5006               	movf	(___flmul@a+1)^0,w,c
  6016   001884  0202               	mulwf	(___flmul@b+1)^0,c
  6017   001886  CFF3 F018          	movff	prodl,___flmul@temp
  6018   00188A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6019   00188E  5018               	movf	___flmul@temp^0,w,c
  6020   001890  260E               	addwf	___flmul@grs^0,f,c
  6021   001892  0E00               	movlw	0
  6022   001894  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6023   001896  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6024   001898  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6025   00189A  5019               	movf	(___flmul@temp+1)^0,w,c
  6026   00189C  2614               	addwf	___flmul@prod^0,f,c
  6027   00189E  0E00               	movlw	0
  6028   0018A0  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6029   0018A2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6030   0018A4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6031   0018A6  5005               	movf	___flmul@a^0,w,c
  6032   0018A8  0203               	mulwf	(___flmul@b+2)^0,c
  6033   0018AA  CFF3 F018          	movff	prodl,___flmul@temp
  6034   0018AE  CFF4 F019          	movff	prodh,___flmul@temp+1
  6035   0018B2  5018               	movf	___flmul@temp^0,w,c
  6036   0018B4  260E               	addwf	___flmul@grs^0,f,c
  6037   0018B6  0E00               	movlw	0
  6038   0018B8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6039   0018BA  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6040   0018BC  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6041   0018BE  5019               	movf	(___flmul@temp+1)^0,w,c
  6042   0018C0  2614               	addwf	___flmul@prod^0,f,c
  6043   0018C2  0E00               	movlw	0
  6044   0018C4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6045   0018C6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6046   0018C8  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6047   0018CA  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6048   0018CE  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6049   0018D2  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6050   0018D6  6A0E               	clrf	___flmul@grs^0,c
  6051   0018D8  5005               	movf	___flmul@a^0,w,c
  6052   0018DA  0202               	mulwf	(___flmul@b+1)^0,c
  6053   0018DC  CFF3 F018          	movff	prodl,___flmul@temp
  6054   0018E0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6055   0018E4  5018               	movf	___flmul@temp^0,w,c
  6056   0018E6  260E               	addwf	___flmul@grs^0,f,c
  6057   0018E8  5019               	movf	(___flmul@temp+1)^0,w,c
  6058   0018EA  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6059   0018EC  0E00               	movlw	0
  6060   0018EE  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6061   0018F0  0E00               	movlw	0
  6062   0018F2  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6063   0018F4  5006               	movf	(___flmul@a+1)^0,w,c
  6064   0018F6  0201               	mulwf	___flmul@b^0,c
  6065   0018F8  CFF3 F018          	movff	prodl,___flmul@temp
  6066   0018FC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6067   001900  5018               	movf	___flmul@temp^0,w,c
  6068   001902  260E               	addwf	___flmul@grs^0,f,c
  6069   001904  5019               	movf	(___flmul@temp+1)^0,w,c
  6070   001906  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6071   001908  0E00               	movlw	0
  6072   00190A  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6073   00190C  0E00               	movlw	0
  6074   00190E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6075   001910  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6076   001914  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6077   001918  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6078   00191C  6A0E               	clrf	___flmul@grs^0,c
  6079   00191E  5005               	movf	___flmul@a^0,w,c
  6080   001920  0201               	mulwf	___flmul@b^0,c
  6081   001922  CFF3 F018          	movff	prodl,___flmul@temp
  6082   001926  CFF4 F019          	movff	prodh,___flmul@temp+1
  6083   00192A  5018               	movf	___flmul@temp^0,w,c
  6084   00192C  260E               	addwf	___flmul@grs^0,f,c
  6085   00192E  5019               	movf	(___flmul@temp+1)^0,w,c
  6086   001930  220F               	addwfc	(___flmul@grs+1)^0,f,c
  6087   001932  0E00               	movlw	0
  6088   001934  2210               	addwfc	(___flmul@grs+2)^0,f,c
  6089   001936  0E00               	movlw	0
  6090   001938  2211               	addwfc	(___flmul@grs+3)^0,f,c
  6091   00193A  5007               	movf	(___flmul@a+2)^0,w,c
  6092   00193C  0202               	mulwf	(___flmul@b+1)^0,c
  6093   00193E  CFF3 F018          	movff	prodl,___flmul@temp
  6094   001942  CFF4 F019          	movff	prodh,___flmul@temp+1
  6095   001946  5018               	movf	___flmul@temp^0,w,c
  6096   001948  2614               	addwf	___flmul@prod^0,f,c
  6097   00194A  5019               	movf	(___flmul@temp+1)^0,w,c
  6098   00194C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6099   00194E  0E00               	movlw	0
  6100   001950  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6101   001952  0E00               	movlw	0
  6102   001954  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6103   001956  5006               	movf	(___flmul@a+1)^0,w,c
  6104   001958  0203               	mulwf	(___flmul@b+2)^0,c
  6105   00195A  CFF3 F018          	movff	prodl,___flmul@temp
  6106   00195E  CFF4 F019          	movff	prodh,___flmul@temp+1
  6107   001962  5018               	movf	___flmul@temp^0,w,c
  6108   001964  2614               	addwf	___flmul@prod^0,f,c
  6109   001966  5019               	movf	(___flmul@temp+1)^0,w,c
  6110   001968  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6111   00196A  0E00               	movlw	0
  6112   00196C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6113   00196E  0E00               	movlw	0
  6114   001970  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6115   001972  5007               	movf	(___flmul@a+2)^0,w,c
  6116   001974  0203               	mulwf	(___flmul@b+2)^0,c
  6117   001976  CFF3 F018          	movff	prodl,___flmul@temp
  6118   00197A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6119   00197E  5018               	movf	___flmul@temp^0,w,c
  6120   001980  6E09               	movwf	??___flmul^0,c
  6121   001982  5019               	movf	(___flmul@temp+1)^0,w,c
  6122   001984  6E0A               	movwf	(??___flmul+1)^0,c
  6123   001986  6A0B               	clrf	(??___flmul+2)^0,c
  6124   001988  6A0C               	clrf	(??___flmul+3)^0,c
  6125   00198A  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6126   00198E  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6127   001992  C009  F00A         	movff	??___flmul,??___flmul+1
  6128   001996  6A09               	clrf	??___flmul^0,c
  6129   001998  5009               	movf	??___flmul^0,w,c
  6130   00199A  2614               	addwf	___flmul@prod^0,f,c
  6131   00199C  500A               	movf	(??___flmul+1)^0,w,c
  6132   00199E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6133   0019A0  500B               	movf	(??___flmul+2)^0,w,c
  6134   0019A2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6135   0019A4  500C               	movf	(??___flmul+3)^0,w,c
  6136   0019A6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6137   0019A8  C00E  F009         	movff	___flmul@grs,??___flmul
  6138   0019AC  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  6139   0019B0  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  6140   0019B4  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  6141   0019B8  0E19               	movlw	25
  6142   0019BA  EFE4  F00C         	goto	u2770
  6143   0019BE                     u2775:
  6144   0019BE  90D8               	bcf	status,0,c
  6145   0019C0  320C               	rrcf	(??___flmul+3)^0,f,c
  6146   0019C2  320B               	rrcf	(??___flmul+2)^0,f,c
  6147   0019C4  320A               	rrcf	(??___flmul+1)^0,f,c
  6148   0019C6  3209               	rrcf	??___flmul^0,f,c
  6149   0019C8                     u2770:
  6150   0019C8  2EE8               	decfsz	wreg,f,c
  6151   0019CA  EFDF  F00C         	goto	u2775
  6152   0019CE  5009               	movf	??___flmul^0,w,c
  6153   0019D0  2614               	addwf	___flmul@prod^0,f,c
  6154   0019D2  500A               	movf	(??___flmul+1)^0,w,c
  6155   0019D4  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6156   0019D6  500B               	movf	(??___flmul+2)^0,w,c
  6157   0019D8  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6158   0019DA  500C               	movf	(??___flmul+3)^0,w,c
  6159   0019DC  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6160   0019DE  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  6161   0019E2  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  6162   0019E6  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  6163   0019EA  6A0E               	clrf	___flmul@grs^0,c
  6164   0019EC  5012               	movf	___flmul@aexp^0,w,c
  6165   0019EE  C013  F009         	movff	___flmul@bexp,??___flmul
  6166   0019F2  6A0A               	clrf	(??___flmul+1)^0,c
  6167   0019F4  2609               	addwf	??___flmul^0,f,c
  6168   0019F6  0E00               	movlw	0
  6169   0019F8  220A               	addwfc	(??___flmul+1)^0,f,c
  6170   0019FA  0E82               	movlw	130
  6171   0019FC  2409               	addwf	??___flmul^0,w,c
  6172   0019FE  6E18               	movwf	___flmul@temp^0,c
  6173   001A00  0EFF               	movlw	255
  6174   001A02  200A               	addwfc	(??___flmul+1)^0,w,c
  6175   001A04  6E19               	movwf	(___flmul@temp+1)^0,c
  6176   001A06  EF1A  F00D         	goto	l3193
  6177   001A0A                     l3187:
  6178   001A0A  90D8               	bcf	status,0,c
  6179   001A0C  3614               	rlcf	___flmul@prod^0,f,c
  6180   001A0E  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6181   001A10  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6182   001A12  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6183   001A14  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6184   001A16  EF0F  F00D         	goto	u2781
  6185   001A1A  EF11  F00D         	goto	u2780
  6186   001A1E                     u2781:
  6187   001A1E  EF12  F00D         	goto	l769
  6188   001A22                     u2780:
  6189   001A22  8014               	bsf	___flmul@prod^0,0,c
  6190   001A24                     l769:
  6191   001A24  90D8               	bcf	status,0,c
  6192   001A26  360E               	rlcf	___flmul@grs^0,f,c
  6193   001A28  360F               	rlcf	(___flmul@grs+1)^0,f,c
  6194   001A2A  3610               	rlcf	(___flmul@grs+2)^0,f,c
  6195   001A2C  3611               	rlcf	(___flmul@grs+3)^0,f,c
  6196   001A2E  0618               	decf	___flmul@temp^0,f,c
  6197   001A30  A0D8               	btfss	status,0,c
  6198   001A32  0619               	decf	(___flmul@temp+1)^0,f,c
  6199   001A34                     l3193:
  6200   001A34  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6201   001A36  EF1F  F00D         	goto	u2791
  6202   001A3A  EF21  F00D         	goto	u2790
  6203   001A3E                     u2791:
  6204   001A3E  EF05  F00D         	goto	l3187
  6205   001A42                     u2790:
  6206   001A42  0E00               	movlw	0
  6207   001A44  6E12               	movwf	___flmul@aexp^0,c
  6208   001A46  AE11               	btfss	(___flmul@grs+3)^0,7,c
  6209   001A48  EF28  F00D         	goto	u2801
  6210   001A4C  EF2A  F00D         	goto	u2800
  6211   001A50                     u2801:
  6212   001A50  EF4E  F00D         	goto	l771
  6213   001A54                     u2800:
  6214   001A54  0EFF               	movlw	255
  6215   001A56  140E               	andwf	___flmul@grs^0,w,c
  6216   001A58  6E09               	movwf	??___flmul^0,c
  6217   001A5A  0EFF               	movlw	255
  6218   001A5C  140F               	andwf	(___flmul@grs+1)^0,w,c
  6219   001A5E  6E0A               	movwf	(??___flmul+1)^0,c
  6220   001A60  0EFF               	movlw	255
  6221   001A62  1410               	andwf	(___flmul@grs+2)^0,w,c
  6222   001A64  6E0B               	movwf	(??___flmul+2)^0,c
  6223   001A66  0E7F               	movlw	127
  6224   001A68  1411               	andwf	(___flmul@grs+3)^0,w,c
  6225   001A6A  6E0C               	movwf	(??___flmul+3)^0,c
  6226   001A6C  5009               	movf	??___flmul^0,w,c
  6227   001A6E  100A               	iorwf	(??___flmul+1)^0,w,c
  6228   001A70  100B               	iorwf	(??___flmul+2)^0,w,c
  6229   001A72  100C               	iorwf	(??___flmul+3)^0,w,c
  6230   001A74  B4D8               	btfsc	status,2,c
  6231   001A76  EF3F  F00D         	goto	u2811
  6232   001A7A  EF41  F00D         	goto	u2810
  6233   001A7E                     u2811:
  6234   001A7E  EF45  F00D         	goto	l772
  6235   001A82                     u2810:
  6236   001A82                     l3201:
  6237   001A82  0E01               	movlw	1
  6238   001A84  6E12               	movwf	___flmul@aexp^0,c
  6239   001A86  EF4E  F00D         	goto	l771
  6240   001A8A                     l772:
  6241   001A8A  A014               	btfss	___flmul@prod^0,0,c
  6242   001A8C  EF4A  F00D         	goto	u2821
  6243   001A90  EF4C  F00D         	goto	u2820
  6244   001A94                     u2821:
  6245   001A94  EF4E  F00D         	goto	l771
  6246   001A98                     u2820:
  6247   001A98  EF41  F00D         	goto	l3201
  6248   001A9C                     l771:
  6249   001A9C  5012               	movf	___flmul@aexp^0,w,c
  6250   001A9E  B4D8               	btfsc	status,2,c
  6251   001AA0  EF54  F00D         	goto	u2831
  6252   001AA4  EF56  F00D         	goto	u2830
  6253   001AA8                     u2831:
  6254   001AA8  EF7A  F00D         	goto	l3213
  6255   001AAC                     u2830:
  6256   001AAC  0E01               	movlw	1
  6257   001AAE  2614               	addwf	___flmul@prod^0,f,c
  6258   001AB0  0E00               	movlw	0
  6259   001AB2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6260   001AB4  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6261   001AB6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6262   001AB8  A017               	btfss	(___flmul@prod+3)^0,0,c
  6263   001ABA  EF61  F00D         	goto	u2841
  6264   001ABE  EF63  F00D         	goto	u2840
  6265   001AC2                     u2841:
  6266   001AC2  EF7A  F00D         	goto	l3213
  6267   001AC6                     u2840:
  6268   001AC6  C014  F009         	movff	___flmul@prod,??___flmul
  6269   001ACA  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6270   001ACE  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6271   001AD2  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6272   001AD6  340C               	rlcf	(??___flmul+3)^0,w,c
  6273   001AD8  320C               	rrcf	(??___flmul+3)^0,f,c
  6274   001ADA  320B               	rrcf	(??___flmul+2)^0,f,c
  6275   001ADC  320A               	rrcf	(??___flmul+1)^0,f,c
  6276   001ADE  3209               	rrcf	??___flmul^0,f,c
  6277   001AE0  C009  F014         	movff	??___flmul,___flmul@prod
  6278   001AE4  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6279   001AE8  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6280   001AEC  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6281   001AF0  4A18               	infsnz	___flmul@temp^0,f,c
  6282   001AF2  2A19               	incf	(___flmul@temp+1)^0,f,c
  6283   001AF4                     l3213:
  6284   001AF4  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6285   001AF6  EF85  F00D         	goto	u2851
  6286   001AFA  5019               	movf	(___flmul@temp+1)^0,w,c
  6287   001AFC  E108               	bnz	u2850
  6288   001AFE  2818               	incf	___flmul@temp^0,w,c
  6289   001B00  A0D8               	btfss	status,0,c
  6290   001B02  EF85  F00D         	goto	u2851
  6291   001B06  EF87  F00D         	goto	u2850
  6292   001B0A                     u2851:
  6293   001B0A  EF91  F00D         	goto	l3217
  6294   001B0E                     u2850:
  6295   001B0E  0E00               	movlw	0
  6296   001B10  6E14               	movwf	___flmul@prod^0,c
  6297   001B12  0E00               	movlw	0
  6298   001B14  6E15               	movwf	(___flmul@prod+1)^0,c
  6299   001B16  0E80               	movlw	128
  6300   001B18  6E16               	movwf	(___flmul@prod+2)^0,c
  6301   001B1A  0E7F               	movlw	127
  6302   001B1C  6E17               	movwf	(___flmul@prod+3)^0,c
  6303   001B1E  EFBF  F00D         	goto	l3229
  6304   001B22                     l3217:
  6305   001B22  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6306   001B24  EF9E  F00D         	goto	u2860
  6307   001B28  5019               	movf	(___flmul@temp+1)^0,w,c
  6308   001B2A  E106               	bnz	u2861
  6309   001B2C  0418               	decf	___flmul@temp^0,w,c
  6310   001B2E  B0D8               	btfsc	status,0,c
  6311   001B30  EF9C  F00D         	goto	u2861
  6312   001B34  EF9E  F00D         	goto	u2860
  6313   001B38                     u2861:
  6314   001B38  EFAA  F00D         	goto	l779
  6315   001B3C                     u2860:
  6316   001B3C  0E00               	movlw	0
  6317   001B3E  6E14               	movwf	___flmul@prod^0,c
  6318   001B40  0E00               	movlw	0
  6319   001B42  6E15               	movwf	(___flmul@prod+1)^0,c
  6320   001B44  0E00               	movlw	0
  6321   001B46  6E16               	movwf	(___flmul@prod+2)^0,c
  6322   001B48  0E00               	movlw	0
  6323   001B4A  6E17               	movwf	(___flmul@prod+3)^0,c
  6324   001B4C  0E00               	movlw	0
  6325   001B4E  6E0D               	movwf	___flmul@sign^0,c
  6326   001B50  EFBF  F00D         	goto	l3229
  6327   001B54                     l779:
  6328   001B54  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6329   001B58  0EFF               	movlw	255
  6330   001B5A  1614               	andwf	___flmul@prod^0,f,c
  6331   001B5C  0EFF               	movlw	255
  6332   001B5E  1615               	andwf	(___flmul@prod+1)^0,f,c
  6333   001B60  0E7F               	movlw	127
  6334   001B62  1616               	andwf	(___flmul@prod+2)^0,f,c
  6335   001B64  0E00               	movlw	0
  6336   001B66  1617               	andwf	(___flmul@prod+3)^0,f,c
  6337   001B68  A013               	btfss	___flmul@bexp^0,0,c
  6338   001B6A  EFB9  F00D         	goto	u2871
  6339   001B6E  EFBB  F00D         	goto	u2870
  6340   001B72                     u2871:
  6341   001B72  EFBC  F00D         	goto	l3227
  6342   001B76                     u2870:
  6343   001B76  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6344   001B78                     l3227:
  6345   001B78  90D8               	bcf	status,0,c
  6346   001B7A  3013               	rrcf	___flmul@bexp^0,w,c
  6347   001B7C  6E17               	movwf	(___flmul@prod+3)^0,c
  6348   001B7E                     l3229:
  6349   001B7E  500D               	movf	___flmul@sign^0,w,c
  6350   001B80  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6351   001B82  C014  F001         	movff	___flmul@prod,?___flmul
  6352   001B86  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6353   001B8A  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6354   001B8E  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6355   001B92                     l766:
  6356   001B92  0012               	return		;funcret
  6357   001B94                     __end_of___flmul:
  6358                           	callstack 0
  6359                           
  6360 ;; *************** function ___flge *****************
  6361 ;; Defined at:
  6362 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  ff1             4   25[COMRAM] unsigned char 
  6365 ;;  ff2             4   29[COMRAM] unsigned char 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;		None               void
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6377 ;;      Params:         8       0       0       0       0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6379 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6380 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6381 ;;Total ram usage:       12 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_efgtoa
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text24
  6391   002938                     __ptext24:
  6392                           	callstack 0
  6393   002938                     ___flge:
  6394                           	callstack 26
  6395   002938  0E00               	movlw	0
  6396   00293A  141A               	andwf	___flge@ff1^0,w,c
  6397   00293C  6E22               	movwf	??___flge^0,c
  6398   00293E  0E00               	movlw	0
  6399   002940  141B               	andwf	(___flge@ff1+1)^0,w,c
  6400   002942  6E23               	movwf	(??___flge+1)^0,c
  6401   002944  0E80               	movlw	128
  6402   002946  141C               	andwf	(___flge@ff1+2)^0,w,c
  6403   002948  6E24               	movwf	(??___flge+2)^0,c
  6404   00294A  0E7F               	movlw	127
  6405   00294C  141D               	andwf	(___flge@ff1+3)^0,w,c
  6406   00294E  6E25               	movwf	(??___flge+3)^0,c
  6407   002950  5022               	movf	??___flge^0,w,c
  6408   002952  1023               	iorwf	(??___flge+1)^0,w,c
  6409   002954  1024               	iorwf	(??___flge+2)^0,w,c
  6410   002956  1025               	iorwf	(??___flge+3)^0,w,c
  6411   002958  A4D8               	btfss	status,2,c
  6412   00295A  EFB1  F014         	goto	u2911
  6413   00295E  EFB3  F014         	goto	u2910
  6414   002962                     u2911:
  6415   002962  EFBB  F014         	goto	l3261
  6416   002966                     u2910:
  6417   002966  0E00               	movlw	0
  6418   002968  6E1A               	movwf	___flge@ff1^0,c
  6419   00296A  0E00               	movlw	0
  6420   00296C  6E1B               	movwf	(___flge@ff1+1)^0,c
  6421   00296E  0E00               	movlw	0
  6422   002970  6E1C               	movwf	(___flge@ff1+2)^0,c
  6423   002972  0E00               	movlw	0
  6424   002974  6E1D               	movwf	(___flge@ff1+3)^0,c
  6425   002976                     l3261:
  6426   002976  0E00               	movlw	0
  6427   002978  141E               	andwf	___flge@ff2^0,w,c
  6428   00297A  6E22               	movwf	??___flge^0,c
  6429   00297C  0E00               	movlw	0
  6430   00297E  141F               	andwf	(___flge@ff2+1)^0,w,c
  6431   002980  6E23               	movwf	(??___flge+1)^0,c
  6432   002982  0E80               	movlw	128
  6433   002984  1420               	andwf	(___flge@ff2+2)^0,w,c
  6434   002986  6E24               	movwf	(??___flge+2)^0,c
  6435   002988  0E7F               	movlw	127
  6436   00298A  1421               	andwf	(___flge@ff2+3)^0,w,c
  6437   00298C  6E25               	movwf	(??___flge+3)^0,c
  6438   00298E  5022               	movf	??___flge^0,w,c
  6439   002990  1023               	iorwf	(??___flge+1)^0,w,c
  6440   002992  1024               	iorwf	(??___flge+2)^0,w,c
  6441   002994  1025               	iorwf	(??___flge+3)^0,w,c
  6442   002996  A4D8               	btfss	status,2,c
  6443   002998  EFD0  F014         	goto	u2921
  6444   00299C  EFD2  F014         	goto	u2920
  6445   0029A0                     u2921:
  6446   0029A0  EFDA  F014         	goto	l3265
  6447   0029A4                     u2920:
  6448   0029A4  0E00               	movlw	0
  6449   0029A6  6E1E               	movwf	___flge@ff2^0,c
  6450   0029A8  0E00               	movlw	0
  6451   0029AA  6E1F               	movwf	(___flge@ff2+1)^0,c
  6452   0029AC  0E00               	movlw	0
  6453   0029AE  6E20               	movwf	(___flge@ff2+2)^0,c
  6454   0029B0  0E00               	movlw	0
  6455   0029B2  6E21               	movwf	(___flge@ff2+3)^0,c
  6456   0029B4                     l3265:
  6457   0029B4  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6458   0029B6  EFDF  F014         	goto	u2931
  6459   0029BA  EFE1  F014         	goto	u2930
  6460   0029BE                     u2931:
  6461   0029BE  EFEA  F014         	goto	l3269
  6462   0029C2                     u2930:
  6463   0029C2  6C1A               	negf	___flge@ff1^0,c
  6464   0029C4  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6465   0029C6  B0D8               	btfsc	status,0,c
  6466   0029C8  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6467   0029CA  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6468   0029CC  B0D8               	btfsc	status,0,c
  6469   0029CE  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6470   0029D0  0E80               	movlw	128
  6471   0029D2  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6472   0029D4                     l3269:
  6473   0029D4  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6474   0029D6  EFEF  F014         	goto	u2941
  6475   0029DA  EFF1  F014         	goto	u2940
  6476   0029DE                     u2941:
  6477   0029DE  EFFA  F014         	goto	l413
  6478   0029E2                     u2940:
  6479   0029E2  6C1E               	negf	___flge@ff2^0,c
  6480   0029E4  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6481   0029E6  B0D8               	btfsc	status,0,c
  6482   0029E8  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6483   0029EA  1E20               	comf	(___flge@ff2+2)^0,f,c
  6484   0029EC  B0D8               	btfsc	status,0,c
  6485   0029EE  2A20               	incf	(___flge@ff2+2)^0,f,c
  6486   0029F0  0E80               	movlw	128
  6487   0029F2  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6488   0029F4                     l413:
  6489   0029F4  0E00               	movlw	0
  6490   0029F6  1A1A               	xorwf	___flge@ff1^0,f,c
  6491   0029F8  0E00               	movlw	0
  6492   0029FA  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6493   0029FC  0E00               	movlw	0
  6494   0029FE  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6495   002A00  0E80               	movlw	128
  6496   002A02  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6497   002A04  0E00               	movlw	0
  6498   002A06  1A1E               	xorwf	___flge@ff2^0,f,c
  6499   002A08  0E00               	movlw	0
  6500   002A0A  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6501   002A0C  0E00               	movlw	0
  6502   002A0E  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6503   002A10  0E80               	movlw	128
  6504   002A12  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6505   002A14  501E               	movf	___flge@ff2^0,w,c
  6506   002A16  5C1A               	subwf	___flge@ff1^0,w,c
  6507   002A18  501F               	movf	(___flge@ff2+1)^0,w,c
  6508   002A1A  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6509   002A1C  5020               	movf	(___flge@ff2+2)^0,w,c
  6510   002A1E  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6511   002A20  5021               	movf	(___flge@ff2+3)^0,w,c
  6512   002A22  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6513   002A24  B0D8               	btfsc	status,0,c
  6514   002A26  EF17  F015         	goto	u2951
  6515   002A2A  EF19  F015         	goto	u2950
  6516   002A2E                     u2951:
  6517   002A2E  EF1C  F015         	goto	l3275
  6518   002A32                     u2950:
  6519   002A32  90D8               	bcf	status,0,c
  6520   002A34  EF1D  F015         	goto	l418
  6521   002A38                     l3275:
  6522   002A38  80D8               	bsf	status,0,c
  6523   002A3A                     l418:
  6524   002A3A  0012               	return		;funcret
  6525   002A3C                     __end_of___flge:
  6526                           	callstack 0
  6527                           
  6528 ;; *************** function ___fleq *****************
  6529 ;; Defined at:
  6530 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  ff1             4    0[COMRAM] unsigned char 
  6533 ;;  ff2             4    4[COMRAM] unsigned char 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;		None
  6536 ;; Return value:  Size  Location     Type
  6537 ;;		None               void
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6545 ;;      Params:         8       0       0       0       0       0       0       0       0
  6546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6547 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6548 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6549 ;;Total ram usage:       12 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_efgtoa
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text25
  6559   002D9C                     __ptext25:
  6560                           	callstack 0
  6561   002D9C                     ___fleq:
  6562                           	callstack 26
  6563   002D9C  0E00               	movlw	0
  6564   002D9E  1401               	andwf	___fleq@ff1^0,w,c
  6565   002DA0  6E09               	movwf	??___fleq^0,c
  6566   002DA2  0E00               	movlw	0
  6567   002DA4  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6568   002DA6  6E0A               	movwf	(??___fleq+1)^0,c
  6569   002DA8  0E80               	movlw	128
  6570   002DAA  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6571   002DAC  6E0B               	movwf	(??___fleq+2)^0,c
  6572   002DAE  0E7F               	movlw	127
  6573   002DB0  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6574   002DB2  6E0C               	movwf	(??___fleq+3)^0,c
  6575   002DB4  5009               	movf	??___fleq^0,w,c
  6576   002DB6  100A               	iorwf	(??___fleq+1)^0,w,c
  6577   002DB8  100B               	iorwf	(??___fleq+2)^0,w,c
  6578   002DBA  100C               	iorwf	(??___fleq+3)^0,w,c
  6579   002DBC  A4D8               	btfss	status,2,c
  6580   002DBE  EFE3  F016         	goto	u2881
  6581   002DC2  EFE5  F016         	goto	u2880
  6582   002DC6                     u2881:
  6583   002DC6  EFED  F016         	goto	l3245
  6584   002DCA                     u2880:
  6585   002DCA  0E00               	movlw	0
  6586   002DCC  6E01               	movwf	___fleq@ff1^0,c
  6587   002DCE  0E00               	movlw	0
  6588   002DD0  6E02               	movwf	(___fleq@ff1+1)^0,c
  6589   002DD2  0E00               	movlw	0
  6590   002DD4  6E03               	movwf	(___fleq@ff1+2)^0,c
  6591   002DD6  0E00               	movlw	0
  6592   002DD8  6E04               	movwf	(___fleq@ff1+3)^0,c
  6593   002DDA                     l3245:
  6594   002DDA  0E00               	movlw	0
  6595   002DDC  1405               	andwf	___fleq@ff2^0,w,c
  6596   002DDE  6E09               	movwf	??___fleq^0,c
  6597   002DE0  0E00               	movlw	0
  6598   002DE2  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6599   002DE4  6E0A               	movwf	(??___fleq+1)^0,c
  6600   002DE6  0E80               	movlw	128
  6601   002DE8  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6602   002DEA  6E0B               	movwf	(??___fleq+2)^0,c
  6603   002DEC  0E7F               	movlw	127
  6604   002DEE  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6605   002DF0  6E0C               	movwf	(??___fleq+3)^0,c
  6606   002DF2  5009               	movf	??___fleq^0,w,c
  6607   002DF4  100A               	iorwf	(??___fleq+1)^0,w,c
  6608   002DF6  100B               	iorwf	(??___fleq+2)^0,w,c
  6609   002DF8  100C               	iorwf	(??___fleq+3)^0,w,c
  6610   002DFA  A4D8               	btfss	status,2,c
  6611   002DFC  EF02  F017         	goto	u2891
  6612   002E00  EF04  F017         	goto	u2890
  6613   002E04                     u2891:
  6614   002E04  EF0C  F017         	goto	l3249
  6615   002E08                     u2890:
  6616   002E08  0E00               	movlw	0
  6617   002E0A  6E05               	movwf	___fleq@ff2^0,c
  6618   002E0C  0E00               	movlw	0
  6619   002E0E  6E06               	movwf	(___fleq@ff2+1)^0,c
  6620   002E10  0E00               	movlw	0
  6621   002E12  6E07               	movwf	(___fleq@ff2+2)^0,c
  6622   002E14  0E00               	movlw	0
  6623   002E16  6E08               	movwf	(___fleq@ff2+3)^0,c
  6624   002E18                     l3249:
  6625   002E18  5005               	movf	___fleq@ff2^0,w,c
  6626   002E1A  1801               	xorwf	___fleq@ff1^0,w,c
  6627   002E1C  E10F               	bnz	u2900
  6628   002E1E  5006               	movf	(___fleq@ff2+1)^0,w,c
  6629   002E20  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6630   002E22  E10C               	bnz	u2900
  6631   002E24  5007               	movf	(___fleq@ff2+2)^0,w,c
  6632   002E26  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6633   002E28  E109               	bnz	u2900
  6634   002E2A  5008               	movf	(___fleq@ff2+3)^0,w,c
  6635   002E2C  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6636   002E2E  B4D8               	btfsc	status,2,c
  6637   002E30  EF1C  F017         	goto	u2901
  6638   002E34  EF1E  F017         	goto	u2900
  6639   002E38                     u2901:
  6640   002E38  EF21  F017         	goto	l3253
  6641   002E3C                     u2900:
  6642   002E3C  90D8               	bcf	status,0,c
  6643   002E3E  EF22  F017         	goto	l407
  6644   002E42                     l3253:
  6645   002E42  80D8               	bsf	status,0,c
  6646   002E44                     l407:
  6647   002E44  0012               	return		;funcret
  6648   002E46                     __end_of___fleq:
  6649                           	callstack 0
  6650                           
  6651 ;; *************** function ___fldiv *****************
  6652 ;; Defined at:
  6653 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  b               4    0[COMRAM] unsigned char 
  6656 ;;  a               4    4[COMRAM] unsigned char 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  grs             4   19[COMRAM] unsigned long 
  6659 ;;  rem             4   12[COMRAM] unsigned long 
  6660 ;;  new_exp         2   17[COMRAM] short 
  6661 ;;  aexp            1   24[COMRAM] unsigned char 
  6662 ;;  bexp            1   23[COMRAM] unsigned char 
  6663 ;;  sign            1   16[COMRAM] unsigned char 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  4    0[COMRAM] unsigned char 
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6673 ;;      Params:         8       0       0       0       0       0       0       0       0
  6674 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6675 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6676 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6677 ;;Total ram usage:       25 bytes
  6678 ;; Hardware stack levels used: 1
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		_efgtoa
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text26
  6687   001B94                     __ptext26:
  6688                           	callstack 0
  6689   001B94                     ___fldiv:
  6690                           	callstack 26
  6691   001B94  5004               	movf	(___fldiv@b+3)^0,w,c
  6692   001B96  0B80               	andlw	128
  6693   001B98  6E11               	movwf	___fldiv@sign^0,c
  6694   001B9A  5004               	movf	(___fldiv@b+3)^0,w,c
  6695   001B9C  2404               	addwf	(___fldiv@b+3)^0,w,c
  6696   001B9E  6E18               	movwf	___fldiv@bexp^0,c
  6697   001BA0  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6698   001BA2  EFD5  F00D         	goto	u2461
  6699   001BA6  EFD7  F00D         	goto	u2460
  6700   001BAA                     u2461:
  6701   001BAA  EFD8  F00D         	goto	l2973
  6702   001BAE                     u2460:
  6703   001BAE  8018               	bsf	___fldiv@bexp^0,0,c
  6704   001BB0                     l2973:
  6705   001BB0  5018               	movf	___fldiv@bexp^0,w,c
  6706   001BB2  B4D8               	btfsc	status,2,c
  6707   001BB4  EFDE  F00D         	goto	u2471
  6708   001BB8  EFE0  F00D         	goto	u2470
  6709   001BBC                     u2471:
  6710   001BBC  EFF5  F00D         	goto	l2983
  6711   001BC0                     u2470:
  6712   001BC0  2818               	incf	___fldiv@bexp^0,w,c
  6713   001BC2  A4D8               	btfss	status,2,c
  6714   001BC4  EFE6  F00D         	goto	u2481
  6715   001BC8  EFE8  F00D         	goto	u2480
  6716   001BCC                     u2481:
  6717   001BCC  EFF0  F00D         	goto	l2979
  6718   001BD0                     u2480:
  6719   001BD0  0E00               	movlw	0
  6720   001BD2  6E01               	movwf	___fldiv@b^0,c
  6721   001BD4  0E00               	movlw	0
  6722   001BD6  6E02               	movwf	(___fldiv@b+1)^0,c
  6723   001BD8  0E00               	movlw	0
  6724   001BDA  6E03               	movwf	(___fldiv@b+2)^0,c
  6725   001BDC  0E00               	movlw	0
  6726   001BDE  6E04               	movwf	(___fldiv@b+3)^0,c
  6727   001BE0                     l2979:
  6728   001BE0  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6729   001BE2  0E00               	movlw	0
  6730   001BE4  6E04               	movwf	(___fldiv@b+3)^0,c
  6731   001BE6  EFFD  F00D         	goto	l2985
  6732   001BEA                     l2983:
  6733   001BEA  0E00               	movlw	0
  6734   001BEC  6E01               	movwf	___fldiv@b^0,c
  6735   001BEE  0E00               	movlw	0
  6736   001BF0  6E02               	movwf	(___fldiv@b+1)^0,c
  6737   001BF2  0E00               	movlw	0
  6738   001BF4  6E03               	movwf	(___fldiv@b+2)^0,c
  6739   001BF6  0E00               	movlw	0
  6740   001BF8  6E04               	movwf	(___fldiv@b+3)^0,c
  6741   001BFA                     l2985:
  6742   001BFA  5008               	movf	(___fldiv@a+3)^0,w,c
  6743   001BFC  0B80               	andlw	128
  6744   001BFE  1A11               	xorwf	___fldiv@sign^0,f,c
  6745   001C00  5008               	movf	(___fldiv@a+3)^0,w,c
  6746   001C02  2408               	addwf	(___fldiv@a+3)^0,w,c
  6747   001C04  6E19               	movwf	___fldiv@aexp^0,c
  6748   001C06  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6749   001C08  EF08  F00E         	goto	u2491
  6750   001C0C  EF0A  F00E         	goto	u2490
  6751   001C10                     u2491:
  6752   001C10  EF0B  F00E         	goto	l2993
  6753   001C14                     u2490:
  6754   001C14  8019               	bsf	___fldiv@aexp^0,0,c
  6755   001C16                     l2993:
  6756   001C16  5019               	movf	___fldiv@aexp^0,w,c
  6757   001C18  B4D8               	btfsc	status,2,c
  6758   001C1A  EF11  F00E         	goto	u2501
  6759   001C1E  EF13  F00E         	goto	u2500
  6760   001C22                     u2501:
  6761   001C22  EF28  F00E         	goto	l3003
  6762   001C26                     u2500:
  6763   001C26  2819               	incf	___fldiv@aexp^0,w,c
  6764   001C28  A4D8               	btfss	status,2,c
  6765   001C2A  EF19  F00E         	goto	u2511
  6766   001C2E  EF1B  F00E         	goto	u2510
  6767   001C32                     u2511:
  6768   001C32  EF23  F00E         	goto	l2999
  6769   001C36                     u2510:
  6770   001C36  0E00               	movlw	0
  6771   001C38  6E05               	movwf	___fldiv@a^0,c
  6772   001C3A  0E00               	movlw	0
  6773   001C3C  6E06               	movwf	(___fldiv@a+1)^0,c
  6774   001C3E  0E00               	movlw	0
  6775   001C40  6E07               	movwf	(___fldiv@a+2)^0,c
  6776   001C42  0E00               	movlw	0
  6777   001C44  6E08               	movwf	(___fldiv@a+3)^0,c
  6778   001C46                     l2999:
  6779   001C46  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6780   001C48  0E00               	movlw	0
  6781   001C4A  6E08               	movwf	(___fldiv@a+3)^0,c
  6782   001C4C  EF30  F00E         	goto	l3005
  6783   001C50                     l3003:
  6784   001C50  0E00               	movlw	0
  6785   001C52  6E05               	movwf	___fldiv@a^0,c
  6786   001C54  0E00               	movlw	0
  6787   001C56  6E06               	movwf	(___fldiv@a+1)^0,c
  6788   001C58  0E00               	movlw	0
  6789   001C5A  6E07               	movwf	(___fldiv@a+2)^0,c
  6790   001C5C  0E00               	movlw	0
  6791   001C5E  6E08               	movwf	(___fldiv@a+3)^0,c
  6792   001C60                     l3005:
  6793   001C60  5005               	movf	___fldiv@a^0,w,c
  6794   001C62  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6795   001C64  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6796   001C66  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6797   001C68  A4D8               	btfss	status,2,c
  6798   001C6A  EF39  F00E         	goto	u2521
  6799   001C6E  EF3B  F00E         	goto	u2520
  6800   001C72                     u2521:
  6801   001C72  EF53  F00E         	goto	l3017
  6802   001C76                     u2520:
  6803   001C76  0E00               	movlw	0
  6804   001C78  6E01               	movwf	___fldiv@b^0,c
  6805   001C7A  0E00               	movlw	0
  6806   001C7C  6E02               	movwf	(___fldiv@b+1)^0,c
  6807   001C7E  0E00               	movlw	0
  6808   001C80  6E03               	movwf	(___fldiv@b+2)^0,c
  6809   001C82  0E00               	movlw	0
  6810   001C84  6E04               	movwf	(___fldiv@b+3)^0,c
  6811   001C86  0E80               	movlw	128
  6812   001C88  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6813   001C8A  0E7F               	movlw	127
  6814   001C8C  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6815   001C8E                     l3011:
  6816   001C8E  5011               	movf	___fldiv@sign^0,w,c
  6817   001C90  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6818   001C92  C001  F001         	movff	___fldiv@b,?___fldiv
  6819   001C96  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6820   001C9A  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6821   001C9E  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6822   001CA2  EF96  F00F         	goto	l730
  6823   001CA6                     l3017:
  6824   001CA6  5018               	movf	___fldiv@bexp^0,w,c
  6825   001CA8  A4D8               	btfss	status,2,c
  6826   001CAA  EF59  F00E         	goto	u2531
  6827   001CAE  EF5B  F00E         	goto	u2530
  6828   001CB2                     u2531:
  6829   001CB2  EF65  F00E         	goto	l3025
  6830   001CB6                     u2530:
  6831   001CB6  0E00               	movlw	0
  6832   001CB8  6E01               	movwf	?___fldiv^0,c
  6833   001CBA  0E00               	movlw	0
  6834   001CBC  6E02               	movwf	(?___fldiv+1)^0,c
  6835   001CBE  0E00               	movlw	0
  6836   001CC0  6E03               	movwf	(?___fldiv+2)^0,c
  6837   001CC2  0E00               	movlw	0
  6838   001CC4  6E04               	movwf	(?___fldiv+3)^0,c
  6839   001CC6  EF96  F00F         	goto	l730
  6840   001CCA                     l3025:
  6841   001CCA  5019               	movf	___fldiv@aexp^0,w,c
  6842   001CCC  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6843   001CD0  6A0A               	clrf	(??___fldiv+1)^0,c
  6844   001CD2  5E09               	subwf	??___fldiv^0,f,c
  6845   001CD4  0E00               	movlw	0
  6846   001CD6  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6847   001CD8  0E7F               	movlw	127
  6848   001CDA  2409               	addwf	??___fldiv^0,w,c
  6849   001CDC  6E12               	movwf	___fldiv@new_exp^0,c
  6850   001CDE  0E00               	movlw	0
  6851   001CE0  200A               	addwfc	(??___fldiv+1)^0,w,c
  6852   001CE2  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6853   001CE4  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6854   001CE8  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6855   001CEC  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6856   001CF0  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6857   001CF4  0E00               	movlw	0
  6858   001CF6  6E01               	movwf	___fldiv@b^0,c
  6859   001CF8  0E00               	movlw	0
  6860   001CFA  6E02               	movwf	(___fldiv@b+1)^0,c
  6861   001CFC  0E00               	movlw	0
  6862   001CFE  6E03               	movwf	(___fldiv@b+2)^0,c
  6863   001D00  0E00               	movlw	0
  6864   001D02  6E04               	movwf	(___fldiv@b+3)^0,c
  6865   001D04  0E00               	movlw	0
  6866   001D06  6E14               	movwf	___fldiv@grs^0,c
  6867   001D08  0E00               	movlw	0
  6868   001D0A  6E15               	movwf	(___fldiv@grs+1)^0,c
  6869   001D0C  0E00               	movlw	0
  6870   001D0E  6E16               	movwf	(___fldiv@grs+2)^0,c
  6871   001D10  0E00               	movlw	0
  6872   001D12  6E17               	movwf	(___fldiv@grs+3)^0,c
  6873   001D14  0E00               	movlw	0
  6874   001D16  6E19               	movwf	___fldiv@aexp^0,c
  6875   001D18  EFC6  F00E         	goto	l732
  6876   001D1C                     l3035:
  6877   001D1C  5019               	movf	___fldiv@aexp^0,w,c
  6878   001D1E  B4D8               	btfsc	status,2,c
  6879   001D20  EF94  F00E         	goto	u2541
  6880   001D24  EF96  F00E         	goto	u2540
  6881   001D28                     u2541:
  6882   001D28  EFAD  F00E         	goto	l3043
  6883   001D2C                     u2540:
  6884   001D2C  90D8               	bcf	status,0,c
  6885   001D2E  360D               	rlcf	___fldiv@rem^0,f,c
  6886   001D30  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6887   001D32  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6888   001D34  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6889   001D36  90D8               	bcf	status,0,c
  6890   001D38  3601               	rlcf	___fldiv@b^0,f,c
  6891   001D3A  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6892   001D3C  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6893   001D3E  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6894   001D40  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6895   001D42  EFA5  F00E         	goto	u2551
  6896   001D46  EFA7  F00E         	goto	u2550
  6897   001D4A                     u2551:
  6898   001D4A  EFA8  F00E         	goto	l735
  6899   001D4E                     u2550:
  6900   001D4E  8001               	bsf	___fldiv@b^0,0,c
  6901   001D50                     l735:
  6902   001D50  90D8               	bcf	status,0,c
  6903   001D52  3614               	rlcf	___fldiv@grs^0,f,c
  6904   001D54  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6905   001D56  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6906   001D58  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6907   001D5A                     l3043:
  6908   001D5A  5005               	movf	___fldiv@a^0,w,c
  6909   001D5C  5C0D               	subwf	___fldiv@rem^0,w,c
  6910   001D5E  5006               	movf	(___fldiv@a+1)^0,w,c
  6911   001D60  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6912   001D62  5007               	movf	(___fldiv@a+2)^0,w,c
  6913   001D64  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6914   001D66  5008               	movf	(___fldiv@a+3)^0,w,c
  6915   001D68  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6916   001D6A  A0D8               	btfss	status,0,c
  6917   001D6C  EFBA  F00E         	goto	u2561
  6918   001D70  EFBC  F00E         	goto	u2560
  6919   001D74                     u2561:
  6920   001D74  EFC5  F00E         	goto	l3049
  6921   001D78                     u2560:
  6922   001D78  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6923   001D7A  5005               	movf	___fldiv@a^0,w,c
  6924   001D7C  5E0D               	subwf	___fldiv@rem^0,f,c
  6925   001D7E  5006               	movf	(___fldiv@a+1)^0,w,c
  6926   001D80  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6927   001D82  5007               	movf	(___fldiv@a+2)^0,w,c
  6928   001D84  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6929   001D86  5008               	movf	(___fldiv@a+3)^0,w,c
  6930   001D88  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6931   001D8A                     l3049:
  6932   001D8A  2A19               	incf	___fldiv@aexp^0,f,c
  6933   001D8C                     l732:
  6934   001D8C  0E19               	movlw	25
  6935   001D8E  6419               	cpfsgt	___fldiv@aexp^0,c
  6936   001D90  EFCC  F00E         	goto	u2571
  6937   001D94  EFCE  F00E         	goto	u2570
  6938   001D98                     u2571:
  6939   001D98  EF8E  F00E         	goto	l3035
  6940   001D9C                     u2570:
  6941   001D9C  500D               	movf	___fldiv@rem^0,w,c
  6942   001D9E  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6943   001DA0  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6944   001DA2  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6945   001DA4  B4D8               	btfsc	status,2,c
  6946   001DA6  EFD7  F00E         	goto	u2581
  6947   001DAA  EFD9  F00E         	goto	u2580
  6948   001DAE                     u2581:
  6949   001DAE  EFF1  F00E         	goto	l3061
  6950   001DB2                     u2580:
  6951   001DB2  8014               	bsf	___fldiv@grs^0,0,c
  6952   001DB4  EFF1  F00E         	goto	l3061
  6953   001DB8                     l3055:
  6954   001DB8  90D8               	bcf	status,0,c
  6955   001DBA  3601               	rlcf	___fldiv@b^0,f,c
  6956   001DBC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6957   001DBE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6958   001DC0  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6959   001DC2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6960   001DC4  EFE6  F00E         	goto	u2591
  6961   001DC8  EFE8  F00E         	goto	u2590
  6962   001DCC                     u2591:
  6963   001DCC  EFE9  F00E         	goto	l741
  6964   001DD0                     u2590:
  6965   001DD0  8001               	bsf	___fldiv@b^0,0,c
  6966   001DD2                     l741:
  6967   001DD2  90D8               	bcf	status,0,c
  6968   001DD4  3614               	rlcf	___fldiv@grs^0,f,c
  6969   001DD6  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6970   001DD8  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6971   001DDA  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6972   001DDC  0612               	decf	___fldiv@new_exp^0,f,c
  6973   001DDE  A0D8               	btfss	status,0,c
  6974   001DE0  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6975   001DE2                     l3061:
  6976   001DE2  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6977   001DE4  EFF6  F00E         	goto	u2601
  6978   001DE8  EFF8  F00E         	goto	u2600
  6979   001DEC                     u2601:
  6980   001DEC  EFDC  F00E         	goto	l3055
  6981   001DF0                     u2600:
  6982   001DF0  0E00               	movlw	0
  6983   001DF2  6E19               	movwf	___fldiv@aexp^0,c
  6984   001DF4  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6985   001DF6  EFFF  F00E         	goto	u2611
  6986   001DFA  EF01  F00F         	goto	u2610
  6987   001DFE                     u2611:
  6988   001DFE  EF25  F00F         	goto	l743
  6989   001E02                     u2610:
  6990   001E02  0EFF               	movlw	255
  6991   001E04  1414               	andwf	___fldiv@grs^0,w,c
  6992   001E06  6E09               	movwf	??___fldiv^0,c
  6993   001E08  0EFF               	movlw	255
  6994   001E0A  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6995   001E0C  6E0A               	movwf	(??___fldiv+1)^0,c
  6996   001E0E  0EFF               	movlw	255
  6997   001E10  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6998   001E12  6E0B               	movwf	(??___fldiv+2)^0,c
  6999   001E14  0E7F               	movlw	127
  7000   001E16  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7001   001E18  6E0C               	movwf	(??___fldiv+3)^0,c
  7002   001E1A  5009               	movf	??___fldiv^0,w,c
  7003   001E1C  100A               	iorwf	(??___fldiv+1)^0,w,c
  7004   001E1E  100B               	iorwf	(??___fldiv+2)^0,w,c
  7005   001E20  100C               	iorwf	(??___fldiv+3)^0,w,c
  7006   001E22  B4D8               	btfsc	status,2,c
  7007   001E24  EF16  F00F         	goto	u2621
  7008   001E28  EF18  F00F         	goto	u2620
  7009   001E2C                     u2621:
  7010   001E2C  EF1C  F00F         	goto	l744
  7011   001E30                     u2620:
  7012   001E30                     l3069:
  7013   001E30  0E01               	movlw	1
  7014   001E32  6E19               	movwf	___fldiv@aexp^0,c
  7015   001E34  EF25  F00F         	goto	l743
  7016   001E38                     l744:
  7017   001E38  A001               	btfss	___fldiv@b^0,0,c
  7018   001E3A  EF21  F00F         	goto	u2631
  7019   001E3E  EF23  F00F         	goto	u2630
  7020   001E42                     u2631:
  7021   001E42  EF25  F00F         	goto	l743
  7022   001E46                     u2630:
  7023   001E46  EF18  F00F         	goto	l3069
  7024   001E4A                     l743:
  7025   001E4A  5019               	movf	___fldiv@aexp^0,w,c
  7026   001E4C  B4D8               	btfsc	status,2,c
  7027   001E4E  EF2B  F00F         	goto	u2641
  7028   001E52  EF2D  F00F         	goto	u2640
  7029   001E56                     u2641:
  7030   001E56  EF51  F00F         	goto	l3081
  7031   001E5A                     u2640:
  7032   001E5A  0E01               	movlw	1
  7033   001E5C  2601               	addwf	___fldiv@b^0,f,c
  7034   001E5E  0E00               	movlw	0
  7035   001E60  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7036   001E62  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7037   001E64  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7038   001E66  A004               	btfss	(___fldiv@b+3)^0,0,c
  7039   001E68  EF38  F00F         	goto	u2651
  7040   001E6C  EF3A  F00F         	goto	u2650
  7041   001E70                     u2651:
  7042   001E70  EF51  F00F         	goto	l3081
  7043   001E74                     u2650:
  7044   001E74  C001  F009         	movff	___fldiv@b,??___fldiv
  7045   001E78  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7046   001E7C  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7047   001E80  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7048   001E84  340C               	rlcf	(??___fldiv+3)^0,w,c
  7049   001E86  320C               	rrcf	(??___fldiv+3)^0,f,c
  7050   001E88  320B               	rrcf	(??___fldiv+2)^0,f,c
  7051   001E8A  320A               	rrcf	(??___fldiv+1)^0,f,c
  7052   001E8C  3209               	rrcf	??___fldiv^0,f,c
  7053   001E8E  C009  F001         	movff	??___fldiv,___fldiv@b
  7054   001E92  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7055   001E96  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7056   001E9A  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7057   001E9E  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7058   001EA0  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7059   001EA2                     l3081:
  7060   001EA2  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7061   001EA4  EF5C  F00F         	goto	u2661
  7062   001EA8  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7063   001EAA  E108               	bnz	u2660
  7064   001EAC  2812               	incf	___fldiv@new_exp^0,w,c
  7065   001EAE  A0D8               	btfss	status,0,c
  7066   001EB0  EF5C  F00F         	goto	u2661
  7067   001EB4  EF5E  F00F         	goto	u2660
  7068   001EB8                     u2661:
  7069   001EB8  EF69  F00F         	goto	l3085
  7070   001EBC                     u2660:
  7071   001EBC  0E00               	movlw	0
  7072   001EBE  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7073   001EC0  6812               	setf	___fldiv@new_exp^0,c
  7074   001EC2  0E00               	movlw	0
  7075   001EC4  6E01               	movwf	___fldiv@b^0,c
  7076   001EC6  0E00               	movlw	0
  7077   001EC8  6E02               	movwf	(___fldiv@b+1)^0,c
  7078   001ECA  0E00               	movlw	0
  7079   001ECC  6E03               	movwf	(___fldiv@b+2)^0,c
  7080   001ECE  0E00               	movlw	0
  7081   001ED0  6E04               	movwf	(___fldiv@b+3)^0,c
  7082   001ED2                     l3085:
  7083   001ED2  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7084   001ED4  EF76  F00F         	goto	u2670
  7085   001ED8  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7086   001EDA  E106               	bnz	u2671
  7087   001EDC  0412               	decf	___fldiv@new_exp^0,w,c
  7088   001EDE  B0D8               	btfsc	status,0,c
  7089   001EE0  EF74  F00F         	goto	u2671
  7090   001EE4  EF76  F00F         	goto	u2670
  7091   001EE8                     u2671:
  7092   001EE8  EF84  F00F         	goto	l3089
  7093   001EEC                     u2670:
  7094   001EEC  0E00               	movlw	0
  7095   001EEE  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7096   001EF0  0E00               	movlw	0
  7097   001EF2  6E12               	movwf	___fldiv@new_exp^0,c
  7098   001EF4  0E00               	movlw	0
  7099   001EF6  6E01               	movwf	___fldiv@b^0,c
  7100   001EF8  0E00               	movlw	0
  7101   001EFA  6E02               	movwf	(___fldiv@b+1)^0,c
  7102   001EFC  0E00               	movlw	0
  7103   001EFE  6E03               	movwf	(___fldiv@b+2)^0,c
  7104   001F00  0E00               	movlw	0
  7105   001F02  6E04               	movwf	(___fldiv@b+3)^0,c
  7106   001F04  0E00               	movlw	0
  7107   001F06  6E11               	movwf	___fldiv@sign^0,c
  7108   001F08                     l3089:
  7109   001F08  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7110   001F0C  A018               	btfss	___fldiv@bexp^0,0,c
  7111   001F0E  EF8B  F00F         	goto	u2681
  7112   001F12  EF8D  F00F         	goto	u2680
  7113   001F16                     u2681:
  7114   001F16  EF90  F00F         	goto	l3095
  7115   001F1A                     u2680:
  7116   001F1A  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7117   001F1C  EF91  F00F         	goto	l3097
  7118   001F20                     l3095:
  7119   001F20  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7120   001F22                     l3097:
  7121   001F22  90D8               	bcf	status,0,c
  7122   001F24  3018               	rrcf	___fldiv@bexp^0,w,c
  7123   001F26  6E04               	movwf	(___fldiv@b+3)^0,c
  7124   001F28  EF47  F00E         	goto	l3011
  7125   001F2C                     l730:
  7126   001F2C  0012               	return		;funcret
  7127   001F2E                     __end_of___fldiv:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _Lcd_Write_String *****************
  7131 ;; Defined at:
  7132 ;;		line 104 in file "lcd.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  a               2    4[COMRAM] PTR const unsigned char 
  7135 ;;		 -> buffer(20), STR_3(13), STR_2(12), STR_1(14), 
  7136 ;; Auto vars:     Size  Location     Type
  7137 ;;  i               2    8[COMRAM] int 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  1    wreg      void 
  7140 ;; Registers used:
  7141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7147 ;;      Params:         2       0       0       0       0       0       0       0       0
  7148 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7149 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7150 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7151 ;;Total ram usage:        6 bytes
  7152 ;; Hardware stack levels used: 1
  7153 ;; Hardware stack levels required when called: 2
  7154 ;; This function calls:
  7155 ;;		_Lcd_Write_Char
  7156 ;; This function is called by:
  7157 ;;		_main
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text27
  7162   002EC8                     __ptext27:
  7163                           	callstack 0
  7164   002EC8                     _Lcd_Write_String:
  7165                           	callstack 28
  7166   002EC8                     
  7167                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  7168   002EC8  0E00               	movlw	0
  7169   002ECA  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  7170   002ECC  0E00               	movlw	0
  7171   002ECE  6E09               	movwf	Lcd_Write_String@i^0,c
  7172   002ED0  EF84  F017         	goto	l3971
  7173   002ED4                     l3967:
  7174                           
  7175                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  7176   002ED4  5009               	movf	Lcd_Write_String@i^0,w,c
  7177   002ED6  2405               	addwf	Lcd_Write_String@a^0,w,c
  7178   002ED8  6E07               	movwf	??_Lcd_Write_String^0,c
  7179   002EDA  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7180   002EDC  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7181   002EDE  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7182   002EE0  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7183   002EE4  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7184   002EE8  6AF8               	clrf	tblptru,c
  7185   002EEA  0E07               	movlw	(high __ramtop+-1)
  7186   002EEC  64F7               	cpfsgt	tblptrh,c
  7187   002EEE  D003               	bra	u3907
  7188   002EF0  0008               	tblrd		*
  7189   002EF2  50F5               	movf	tablat,w,c
  7190   002EF4  D005               	bra	u3900
  7191   002EF6                     u3907:
  7192   002EF6  CFF6 FFE1          	movff	tblptrl,fsr1l
  7193   002EFA  CFF7 FFE2          	movff	tblptrh,fsr1h
  7194   002EFE  50E7               	movf	indf1,w,c
  7195   002F00                     u3900:
  7196   002F00  ECCA  F019         	call	_Lcd_Write_Char
  7197   002F04  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  7198   002F06  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  7199   002F08                     l3971:
  7200   002F08  5009               	movf	Lcd_Write_String@i^0,w,c
  7201   002F0A  2405               	addwf	Lcd_Write_String@a^0,w,c
  7202   002F0C  6E07               	movwf	??_Lcd_Write_String^0,c
  7203   002F0E  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7204   002F10  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7205   002F12  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7206   002F14  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7207   002F18  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7208   002F1C  6AF8               	clrf	tblptru,c
  7209   002F1E  0E07               	movlw	(high __ramtop+-1)
  7210   002F20  64F7               	cpfsgt	tblptrh,c
  7211   002F22  D003               	bra	u3917
  7212   002F24  0008               	tblrd		*
  7213   002F26  50F5               	movf	tablat,w,c
  7214   002F28  D005               	bra	u3910
  7215   002F2A                     u3917:
  7216   002F2A  CFF6 FFE1          	movff	tblptrl,fsr1l
  7217   002F2E  CFF7 FFE2          	movff	tblptrh,fsr1h
  7218   002F32  50E7               	movf	indf1,w,c
  7219   002F34                     u3910:
  7220   002F34  0900               	iorlw	0
  7221   002F36  A4D8               	btfss	status,2,c
  7222   002F38  EFA0  F017         	goto	u3921
  7223   002F3C  EFA2  F017         	goto	u3920
  7224   002F40                     u3921:
  7225   002F40  EF6A  F017         	goto	l3967
  7226   002F44                     u3920:
  7227   002F44  0012               	return		;funcret
  7228   002F46                     __end_of_Lcd_Write_String:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function _Lcd_Write_Char *****************
  7232 ;; Defined at:
  7233 ;;		line 88 in file "lcd.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  a               1    wreg     unsigned char 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  a               1    3[COMRAM] unsigned char 
  7238 ;;  y               1    2[COMRAM] unsigned char 
  7239 ;;  temp            1    1[COMRAM] unsigned char 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		wreg, status,2, status,0, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7249 ;;      Params:         0       0       0       0       0       0       0       0       0
  7250 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7252 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7253 ;;Total ram usage:        3 bytes
  7254 ;; Hardware stack levels used: 1
  7255 ;; Hardware stack levels required when called: 1
  7256 ;; This function calls:
  7257 ;;		_Lcd_Port
  7258 ;; This function is called by:
  7259 ;;		_Lcd_Write_String
  7260 ;;		_Lcd_CGRAM_CreateChar
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text28
  7265   003394                     __ptext28:
  7266                           	callstack 0
  7267   003394                     _Lcd_Write_Char:
  7268                           	callstack 28
  7269                           
  7270                           ;incstack = 0
  7271                           ;Lcd_Write_Char@a stored from wreg
  7272   003394  6E04               	movwf	Lcd_Write_Char@a^0,c
  7273   003396                     
  7274                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  7275   003396  5004               	movf	Lcd_Write_Char@a^0,w,c
  7276   003398  0B0F               	andlw	15
  7277   00339A  6E02               	movwf	Lcd_Write_Char@temp^0,c
  7278                           
  7279                           ;lcd.c: 92:     y = a&0xF0;
  7280   00339C  5004               	movf	Lcd_Write_Char@a^0,w,c
  7281   00339E  0BF0               	andlw	240
  7282   0033A0  6E03               	movwf	Lcd_Write_Char@y^0,c
  7283   0033A2                     
  7284                           ;lcd.c: 93:     LATDbits.LD5 = 1;
  7285   0033A2  8A8C               	bsf	140,5,c	;volatile
  7286   0033A4                     
  7287                           ;lcd.c: 94:     Lcd_Port(y>>4);
  7288   0033A4  3803               	swapf	Lcd_Write_Char@y^0,w,c
  7289   0033A6  0B0F               	andlw	15
  7290   0033A8  EC7F  F018         	call	_Lcd_Port
  7291   0033AC                     
  7292                           ;lcd.c: 95:     LATDbits.LD4 = 1;
  7293   0033AC  888C               	bsf	140,4,c	;volatile
  7294   0033AE                     
  7295                           ;lcd.c: 96:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  7296   0033AE  0E28               	movlw	40
  7297   0033B0                     u4157:
  7298   0033B0  2EE8               	decfsz	wreg,f,c
  7299   0033B2  D7FE               	bra	u4157
  7300   0033B4                     
  7301                           ;lcd.c: 97:     LATDbits.LD4 = 0;
  7302   0033B4  988C               	bcf	140,4,c	;volatile
  7303   0033B6                     
  7304                           ;lcd.c: 98:     Lcd_Port(temp);
  7305   0033B6  5002               	movf	Lcd_Write_Char@temp^0,w,c
  7306   0033B8  EC7F  F018         	call	_Lcd_Port
  7307   0033BC                     
  7308                           ;lcd.c: 99:     LATDbits.LD4 = 1;
  7309   0033BC  888C               	bsf	140,4,c	;volatile
  7310   0033BE                     
  7311                           ;lcd.c: 100:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  7312   0033BE  0E28               	movlw	40
  7313   0033C0                     u4167:
  7314   0033C0  2EE8               	decfsz	wreg,f,c
  7315   0033C2  D7FE               	bra	u4167
  7316   0033C4                     
  7317                           ;lcd.c: 101:     LATDbits.LD4 = 0;
  7318   0033C4  988C               	bcf	140,4,c	;volatile
  7319   0033C6  0012               	return		;funcret
  7320   0033C8                     __end_of_Lcd_Write_Char:
  7321                           	callstack 0
  7322                           
  7323 ;; *************** function _Lcd_Shift_Right *****************
  7324 ;; Defined at:
  7325 ;;		line 111 in file "lcd.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;		None
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;		None
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  1    wreg      void 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, cstack
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7339 ;;      Params:         0       0       0       0       0       0       0       0       0
  7340 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7341 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7342 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7343 ;;Total ram usage:        0 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; Hardware stack levels required when called: 2
  7346 ;; This function calls:
  7347 ;;		_Lcd_Cmd
  7348 ;; This function is called by:
  7349 ;;		_main
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text29
  7354   00340E                     __ptext29:
  7355                           	callstack 0
  7356   00340E                     _Lcd_Shift_Right:
  7357                           	callstack 28
  7358   00340E                     
  7359                           ;lcd.c: 113:     Lcd_Cmd(0x01);
  7360   00340E  0E01               	movlw	1
  7361   003410  ECF7  F019         	call	_Lcd_Cmd
  7362                           
  7363                           ;lcd.c: 114:     Lcd_Cmd(0x0C);
  7364   003414  0E0C               	movlw	12
  7365   003416  ECF7  F019         	call	_Lcd_Cmd
  7366   00341A  0012               	return		;funcret
  7367   00341C                     __end_of_Lcd_Shift_Right:
  7368                           	callstack 0
  7369                           
  7370 ;; *************** function _Lcd_Shift_Left *****************
  7371 ;; Defined at:
  7372 ;;		line 117 in file "lcd.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;		None
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;		None
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  1    wreg      void 
  7379 ;; Registers used:
  7380 ;;		wreg, status,2, cstack
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7386 ;;      Params:         0       0       0       0       0       0       0       0       0
  7387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7389 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7390 ;;Total ram usage:        0 bytes
  7391 ;; Hardware stack levels used: 1
  7392 ;; Hardware stack levels required when called: 2
  7393 ;; This function calls:
  7394 ;;		_Lcd_Cmd
  7395 ;; This function is called by:
  7396 ;;		_main
  7397 ;; This function uses a non-reentrant model
  7398 ;;
  7399                           
  7400                           	psect	text30
  7401   00341C                     __ptext30:
  7402                           	callstack 0
  7403   00341C                     _Lcd_Shift_Left:
  7404                           	callstack 28
  7405   00341C                     
  7406                           ;lcd.c: 119:     Lcd_Cmd(0x01);
  7407   00341C  0E01               	movlw	1
  7408   00341E  ECF7  F019         	call	_Lcd_Cmd
  7409                           
  7410                           ;lcd.c: 120:     Lcd_Cmd(0x08);
  7411   003422  0E08               	movlw	8
  7412   003424  ECF7  F019         	call	_Lcd_Cmd
  7413   003428  0012               	return		;funcret
  7414   00342A                     __end_of_Lcd_Shift_Left:
  7415                           	callstack 0
  7416                           
  7417 ;; *************** function _Lcd_Set_Cursor *****************
  7418 ;; Defined at:
  7419 ;;		line 26 in file "lcd.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  a               1    wreg     unsigned char 
  7422 ;;  b               1    3[COMRAM] unsigned char 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  a               1    4[COMRAM] unsigned char 
  7425 ;;  temp            1    7[COMRAM] unsigned char 
  7426 ;;  y               1    6[COMRAM] unsigned char 
  7427 ;;  z               1    5[COMRAM] unsigned char 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      void 
  7430 ;; Registers used:
  7431 ;;		wreg, status,2, status,0, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7437 ;;      Params:         1       0       0       0       0       0       0       0       0
  7438 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7440 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7441 ;;Total ram usage:        5 bytes
  7442 ;; Hardware stack levels used: 1
  7443 ;; Hardware stack levels required when called: 2
  7444 ;; This function calls:
  7445 ;;		_Lcd_Cmd
  7446 ;; This function is called by:
  7447 ;;		_main
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text31
  7452   002B3A                     __ptext31:
  7453                           	callstack 0
  7454   002B3A                     _Lcd_Set_Cursor:
  7455                           	callstack 28
  7456                           
  7457                           ;incstack = 0
  7458                           ;Lcd_Set_Cursor@a stored from wreg
  7459   002B3A  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7460   002B3C                     
  7461                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  7462   002B3C  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7463   002B3E  A4D8               	btfss	status,2,c
  7464   002B40  EFA4  F015         	goto	u3861
  7465   002B44  EFA6  F015         	goto	u3860
  7466   002B48                     u3861:
  7467   002B48  EFB7  F015         	goto	l3941
  7468   002B4C                     u3860:
  7469   002B4C                     
  7470                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  7471   002B4C  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7472   002B4E  0F7F               	addlw	127
  7473   002B50  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7474                           
  7475                           ;lcd.c: 32:         z = temp>>4;
  7476   002B52  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7477   002B54  0B0F               	andlw	15
  7478   002B56  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7479                           
  7480                           ;lcd.c: 33:         y = temp & 0x0F;
  7481   002B58  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7482   002B5A  0B0F               	andlw	15
  7483   002B5C  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7484   002B5E                     
  7485                           ;lcd.c: 34:         Lcd_Cmd(z);
  7486   002B5E  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7487   002B60  ECF7  F019         	call	_Lcd_Cmd
  7488   002B64                     
  7489                           ;lcd.c: 35:         Lcd_Cmd(y);
  7490   002B64  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7491   002B66  ECF7  F019         	call	_Lcd_Cmd
  7492                           
  7493                           ;lcd.c: 36:     }
  7494   002B6A  EF05  F016         	goto	l86
  7495   002B6E                     l3941:
  7496   002B6E  0E02               	movlw	2
  7497   002B70  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7498   002B72  A4D8               	btfss	status,2,c
  7499   002B74  EFBE  F015         	goto	u3871
  7500   002B78  EFC0  F015         	goto	u3870
  7501   002B7C                     u3871:
  7502   002B7C  EFD1  F015         	goto	l3949
  7503   002B80                     u3870:
  7504   002B80                     
  7505                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  7506   002B80  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7507   002B82  0FBF               	addlw	191
  7508   002B84  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7509                           
  7510                           ;lcd.c: 40:         z = temp>>4;
  7511   002B86  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7512   002B88  0B0F               	andlw	15
  7513   002B8A  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7514                           
  7515                           ;lcd.c: 41:         y = temp & 0x0F;
  7516   002B8C  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7517   002B8E  0B0F               	andlw	15
  7518   002B90  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7519   002B92                     
  7520                           ;lcd.c: 42:         Lcd_Cmd(z);
  7521   002B92  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7522   002B94  ECF7  F019         	call	_Lcd_Cmd
  7523   002B98                     
  7524                           ;lcd.c: 43:         Lcd_Cmd(y);
  7525   002B98  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7526   002B9A  ECF7  F019         	call	_Lcd_Cmd
  7527                           
  7528                           ;lcd.c: 44:     }
  7529   002B9E  EF05  F016         	goto	l86
  7530   002BA2                     l3949:
  7531   002BA2  0E03               	movlw	3
  7532   002BA4  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7533   002BA6  A4D8               	btfss	status,2,c
  7534   002BA8  EFD8  F015         	goto	u3881
  7535   002BAC  EFDA  F015         	goto	u3880
  7536   002BB0                     u3881:
  7537   002BB0  EFEB  F015         	goto	l3957
  7538   002BB4                     u3880:
  7539   002BB4                     
  7540                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  7541   002BB4  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7542   002BB6  0F93               	addlw	147
  7543   002BB8  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7544                           
  7545                           ;lcd.c: 48:         z = temp>>4;
  7546   002BBA  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7547   002BBC  0B0F               	andlw	15
  7548   002BBE  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7549                           
  7550                           ;lcd.c: 49:         y = temp & 0x0F;
  7551   002BC0  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7552   002BC2  0B0F               	andlw	15
  7553   002BC4  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7554   002BC6                     
  7555                           ;lcd.c: 50:         Lcd_Cmd(z);
  7556   002BC6  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7557   002BC8  ECF7  F019         	call	_Lcd_Cmd
  7558   002BCC                     
  7559                           ;lcd.c: 51:         Lcd_Cmd(y);
  7560   002BCC  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7561   002BCE  ECF7  F019         	call	_Lcd_Cmd
  7562                           
  7563                           ;lcd.c: 52:     }
  7564   002BD2  EF05  F016         	goto	l86
  7565   002BD6                     l3957:
  7566   002BD6  0E04               	movlw	4
  7567   002BD8  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7568   002BDA  A4D8               	btfss	status,2,c
  7569   002BDC  EFF2  F015         	goto	u3891
  7570   002BE0  EFF4  F015         	goto	u3890
  7571   002BE4                     u3891:
  7572   002BE4  EF05  F016         	goto	l82
  7573   002BE8                     u3890:
  7574   002BE8                     
  7575                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  7576   002BE8  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7577   002BEA  0FD3               	addlw	211
  7578   002BEC  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7579                           
  7580                           ;lcd.c: 56:         z = temp>>4;
  7581   002BEE  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7582   002BF0  0B0F               	andlw	15
  7583   002BF2  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7584                           
  7585                           ;lcd.c: 57:         y = temp & 0x0F;
  7586   002BF4  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7587   002BF6  0B0F               	andlw	15
  7588   002BF8  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7589   002BFA                     
  7590                           ;lcd.c: 58:         Lcd_Cmd(z);
  7591   002BFA  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7592   002BFC  ECF7  F019         	call	_Lcd_Cmd
  7593   002C00                     
  7594                           ;lcd.c: 59:         Lcd_Cmd(y);
  7595   002C00  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7596   002C02  ECF7  F019         	call	_Lcd_Cmd
  7597   002C06  EF05  F016         	goto	l86
  7598   002C0A                     l82:
  7599   002C0A                     l86:
  7600   002C0A  0012               	return		;funcret
  7601   002C0C                     __end_of_Lcd_Set_Cursor:
  7602                           	callstack 0
  7603                           
  7604 ;; *************** function _Lcd_NoBlink *****************
  7605 ;; Defined at:
  7606 ;;		line 129 in file "lcd.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;		None
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      void 
  7613 ;; Registers used:
  7614 ;;		wreg, status,2, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0
  7621 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7623 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7624 ;;Total ram usage:        0 bytes
  7625 ;; Hardware stack levels used: 1
  7626 ;; Hardware stack levels required when called: 2
  7627 ;; This function calls:
  7628 ;;		_Lcd_Cmd
  7629 ;; This function is called by:
  7630 ;;		_main
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	text32
  7635   00342A                     __ptext32:
  7636                           	callstack 0
  7637   00342A                     _Lcd_NoBlink:
  7638                           	callstack 28
  7639   00342A                     
  7640                           ;lcd.c: 131:     Lcd_Cmd(0x00);
  7641   00342A  0E00               	movlw	0
  7642   00342C  ECF7  F019         	call	_Lcd_Cmd
  7643                           
  7644                           ;lcd.c: 132:     Lcd_Cmd(0x0C);
  7645   003430  0E0C               	movlw	12
  7646   003432  ECF7  F019         	call	_Lcd_Cmd
  7647   003436  0012               	return		;funcret
  7648   003438                     __end_of_Lcd_NoBlink:
  7649                           	callstack 0
  7650                           
  7651 ;; *************** function _Lcd_Init *****************
  7652 ;; Defined at:
  7653 ;;		line 63 in file "lcd.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;		None
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg, status,2, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7667 ;;      Params:         0       0       0       0       0       0       0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7669 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7670 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7671 ;;Total ram usage:        1 bytes
  7672 ;; Hardware stack levels used: 1
  7673 ;; Hardware stack levels required when called: 3
  7674 ;; This function calls:
  7675 ;;		_Lcd_Clear
  7676 ;;		_Lcd_Cmd
  7677 ;;		_Lcd_Port
  7678 ;; This function is called by:
  7679 ;;		_main
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text33
  7684   002E46                     __ptext33:
  7685                           	callstack 0
  7686   002E46                     _Lcd_Init:
  7687                           	callstack 27
  7688   002E46                     
  7689                           ;lcd.c: 65:  TRISDbits.TRISD5 = 0;
  7690   002E46  9A95               	bcf	149,5,c	;volatile
  7691                           
  7692                           ;lcd.c: 66:  TRISDbits.TRISD4 = 0;
  7693   002E48  9895               	bcf	149,4,c	;volatile
  7694                           
  7695                           ;lcd.c: 67:  TRISDbits.TRISD0 = 0;
  7696   002E4A  9095               	bcf	149,0,c	;volatile
  7697                           
  7698                           ;lcd.c: 68:  TRISDbits.TRISD1 = 0;
  7699   002E4C  9295               	bcf	149,1,c	;volatile
  7700                           
  7701                           ;lcd.c: 69:  TRISDbits.TRISD2 = 0;
  7702   002E4E  9495               	bcf	149,2,c	;volatile
  7703                           
  7704                           ;lcd.c: 70:  TRISDbits.TRISD3 = 0;
  7705   002E50  9695               	bcf	149,3,c	;volatile
  7706   002E52                     
  7707                           ;lcd.c: 71:     Lcd_Port(0x00);
  7708   002E52  0E00               	movlw	0
  7709   002E54  EC7F  F018         	call	_Lcd_Port
  7710   002E58                     
  7711                           ;lcd.c: 72:     _delay((unsigned long)((20)*(12000000/4000.0)));
  7712   002E58  0E4E               	movlw	78
  7713   002E5A  6E04               	movwf	??_Lcd_Init^0,c
  7714   002E5C  0EEB               	movlw	235
  7715   002E5E                     u4177:
  7716   002E5E  2EE8               	decfsz	wreg,f,c
  7717   002E60  D7FE               	bra	u4177
  7718   002E62  2E04               	decfsz	??_Lcd_Init^0,f,c
  7719   002E64  D7FC               	bra	u4177
  7720   002E66  F000               	nop	
  7721   002E68                     
  7722                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  7723   002E68  0E03               	movlw	3
  7724   002E6A  ECF7  F019         	call	_Lcd_Cmd
  7725   002E6E                     
  7726                           ;lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000.0)));
  7727   002E6E  0E14               	movlw	20
  7728   002E70  6E04               	movwf	??_Lcd_Init^0,c
  7729   002E72  0E7A               	movlw	122
  7730   002E74                     u4187:
  7731   002E74  2EE8               	decfsz	wreg,f,c
  7732   002E76  D7FE               	bra	u4187
  7733   002E78  2E04               	decfsz	??_Lcd_Init^0,f,c
  7734   002E7A  D7FC               	bra	u4187
  7735   002E7C                     
  7736                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  7737   002E7C  0E03               	movlw	3
  7738   002E7E  ECF7  F019         	call	_Lcd_Cmd
  7739   002E82                     
  7740                           ;lcd.c: 76:     _delay((unsigned long)((11)*(12000000/4000.0)));
  7741   002E82  0E2B               	movlw	43
  7742   002E84  6E04               	movwf	??_Lcd_Init^0,c
  7743   002E86  0EDA               	movlw	218
  7744   002E88                     u4197:
  7745   002E88  2EE8               	decfsz	wreg,f,c
  7746   002E8A  D7FE               	bra	u4197
  7747   002E8C  2E04               	decfsz	??_Lcd_Init^0,f,c
  7748   002E8E  D7FC               	bra	u4197
  7749   002E90  D000               	nop2	
  7750   002E92                     
  7751                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  7752   002E92  0E03               	movlw	3
  7753   002E94  ECF7  F019         	call	_Lcd_Cmd
  7754   002E98                     
  7755                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  7756   002E98  0E02               	movlw	2
  7757   002E9A  ECF7  F019         	call	_Lcd_Cmd
  7758   002E9E                     
  7759                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  7760   002E9E  0E02               	movlw	2
  7761   002EA0  ECF7  F019         	call	_Lcd_Cmd
  7762   002EA4                     
  7763                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  7764   002EA4  0E08               	movlw	8
  7765   002EA6  ECF7  F019         	call	_Lcd_Cmd
  7766   002EAA                     
  7767                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  7768   002EAA  0E00               	movlw	0
  7769   002EAC  ECF7  F019         	call	_Lcd_Cmd
  7770   002EB0                     
  7771                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  7772   002EB0  0E0C               	movlw	12
  7773   002EB2  ECF7  F019         	call	_Lcd_Cmd
  7774   002EB6                     
  7775                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  7776   002EB6  0E00               	movlw	0
  7777   002EB8  ECF7  F019         	call	_Lcd_Cmd
  7778   002EBC                     
  7779                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  7780   002EBC  0E06               	movlw	6
  7781   002EBE  ECF7  F019         	call	_Lcd_Cmd
  7782   002EC2                     
  7783                           ;lcd.c: 85:     Lcd_Clear();
  7784   002EC2  EC1C  F01A         	call	_Lcd_Clear	;wreg free
  7785   002EC6  0012               	return		;funcret
  7786   002EC8                     __end_of_Lcd_Init:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function _Lcd_Clear *****************
  7790 ;; Defined at:
  7791 ;;		line 20 in file "lcd.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;		None
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;		None
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      void 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, cstack
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7805 ;;      Params:         0       0       0       0       0       0       0       0       0
  7806 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7807 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7808 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7809 ;;Total ram usage:        0 bytes
  7810 ;; Hardware stack levels used: 1
  7811 ;; Hardware stack levels required when called: 2
  7812 ;; This function calls:
  7813 ;;		_Lcd_Cmd
  7814 ;; This function is called by:
  7815 ;;		_main
  7816 ;;		_Lcd_Init
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text34
  7821   003438                     __ptext34:
  7822                           	callstack 0
  7823   003438                     _Lcd_Clear:
  7824                           	callstack 27
  7825   003438                     
  7826                           ;lcd.c: 22:     Lcd_Cmd(0);
  7827   003438  0E00               	movlw	0
  7828   00343A  ECF7  F019         	call	_Lcd_Cmd
  7829                           
  7830                           ;lcd.c: 23:     Lcd_Cmd(1);
  7831   00343E  0E01               	movlw	1
  7832   003440  ECF7  F019         	call	_Lcd_Cmd
  7833   003444  0012               	return		;funcret
  7834   003446                     __end_of_Lcd_Clear:
  7835                           	callstack 0
  7836                           
  7837 ;; *************** function _Lcd_Blink *****************
  7838 ;; Defined at:
  7839 ;;		line 123 in file "lcd.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;		None
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7853 ;;      Params:         0       0       0       0       0       0       0       0       0
  7854 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7856 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7857 ;;Total ram usage:        0 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; Hardware stack levels required when called: 2
  7860 ;; This function calls:
  7861 ;;		_Lcd_Cmd
  7862 ;; This function is called by:
  7863 ;;		_main
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           	psect	text35
  7868   003446                     __ptext35:
  7869                           	callstack 0
  7870   003446                     _Lcd_Blink:
  7871                           	callstack 28
  7872   003446                     
  7873                           ;lcd.c: 125:     Lcd_Cmd(0x00);
  7874   003446  0E00               	movlw	0
  7875   003448  ECF7  F019         	call	_Lcd_Cmd
  7876                           
  7877                           ;lcd.c: 126:     Lcd_Cmd(0x0F);
  7878   00344C  0E0F               	movlw	15
  7879   00344E  ECF7  F019         	call	_Lcd_Cmd
  7880   003452  0012               	return		;funcret
  7881   003454                     __end_of_Lcd_Blink:
  7882                           	callstack 0
  7883                           
  7884 ;; *************** function _Lcd_Cmd *****************
  7885 ;; Defined at:
  7886 ;;		line 11 in file "lcd.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  a               1    wreg     unsigned char 
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;  a               1    2[COMRAM] unsigned char 
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      void 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0
  7901 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7902 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7903 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7904 ;;Total ram usage:        2 bytes
  7905 ;; Hardware stack levels used: 1
  7906 ;; Hardware stack levels required when called: 1
  7907 ;; This function calls:
  7908 ;;		_Lcd_Port
  7909 ;; This function is called by:
  7910 ;;		_Lcd_Clear
  7911 ;;		_Lcd_Set_Cursor
  7912 ;;		_Lcd_Init
  7913 ;;		_Lcd_Shift_Right
  7914 ;;		_Lcd_Shift_Left
  7915 ;;		_Lcd_Blink
  7916 ;;		_Lcd_NoBlink
  7917 ;;		_Lcd_CGRAM_Init
  7918 ;;		_Lcd_CGRAM_Close
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text36
  7923   0033EE                     __ptext36:
  7924                           	callstack 0
  7925   0033EE                     _Lcd_Cmd:
  7926                           	callstack 28
  7927                           
  7928                           ;incstack = 0
  7929                           ;Lcd_Cmd@a stored from wreg
  7930   0033EE  6E03               	movwf	Lcd_Cmd@a^0,c
  7931   0033F0                     
  7932                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD5 = 0;
  7933   0033F0  9A8C               	bcf	140,5,c	;volatile
  7934   0033F2                     
  7935                           ;lcd.c: 14:     Lcd_Port(a);
  7936   0033F2  5003               	movf	Lcd_Cmd@a^0,w,c
  7937   0033F4  EC7F  F018         	call	_Lcd_Port
  7938   0033F8                     
  7939                           ;lcd.c: 15:     LATDbits.LD4 = 1;
  7940   0033F8  888C               	bsf	140,4,c	;volatile
  7941   0033FA                     
  7942                           ;lcd.c: 16:     _delay((unsigned long)((4)*(12000000/4000.0)));
  7943   0033FA  0E10               	movlw	16
  7944   0033FC  6E02               	movwf	??_Lcd_Cmd^0,c
  7945   0033FE  0E94               	movlw	148
  7946   003400                     u4207:
  7947   003400  2EE8               	decfsz	wreg,f,c
  7948   003402  D7FE               	bra	u4207
  7949   003404  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7950   003406  D7FC               	bra	u4207
  7951   003408  D000               	nop2	
  7952   00340A                     
  7953                           ;lcd.c: 17:     LATDbits.LD4 = 0;
  7954   00340A  988C               	bcf	140,4,c	;volatile
  7955   00340C  0012               	return		;funcret
  7956   00340E                     __end_of_Lcd_Cmd:
  7957                           	callstack 0
  7958                           
  7959 ;; *************** function _Lcd_Port *****************
  7960 ;; Defined at:
  7961 ;;		line 3 in file "lcd.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  a               1    wreg     unsigned char 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  a               1    0[COMRAM] unsigned char 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7975 ;;      Params:         0       0       0       0       0       0       0       0       0
  7976 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7978 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7979 ;;Total ram usage:        1 bytes
  7980 ;; Hardware stack levels used: 1
  7981 ;; This function calls:
  7982 ;;		Nothing
  7983 ;; This function is called by:
  7984 ;;		_Lcd_Cmd
  7985 ;;		_Lcd_Init
  7986 ;;		_Lcd_Write_Char
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           	psect	text37
  7991   0030FE                     __ptext37:
  7992                           	callstack 0
  7993   0030FE                     _Lcd_Port:
  7994                           	callstack 28
  7995                           
  7996                           ;incstack = 0
  7997                           ;Lcd_Port@a stored from wreg
  7998   0030FE  6E01               	movwf	Lcd_Port@a^0,c
  7999   003100                     
  8000                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD0 = 1) 
      +                          : (LATDbits.LD0 = 0);
  8001   003100  A001               	btfss	Lcd_Port@a^0,0,c
  8002   003102  EF85  F018         	goto	u3321
  8003   003106  EF87  F018         	goto	u3320
  8004   00310A                     u3321:
  8005   00310A  EF8A  F018         	goto	l55
  8006   00310E                     u3320:
  8007   00310E  808C               	bsf	140,0,c	;volatile
  8008   003110  EF8B  F018         	goto	l3457
  8009   003114                     l55:
  8010   003114  908C               	bcf	140,0,c	;volatile
  8011   003116                     l3457:
  8012                           
  8013                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD1 = 1) : (LATDbits.LD1 = 0);
  8014   003116  A201               	btfss	Lcd_Port@a^0,1,c
  8015   003118  EF90  F018         	goto	u3331
  8016   00311C  EF92  F018         	goto	u3330
  8017   003120                     u3331:
  8018   003120  EF95  F018         	goto	l59
  8019   003124                     u3330:
  8020   003124  828C               	bsf	140,1,c	;volatile
  8021   003126  EF96  F018         	goto	l3461
  8022   00312A                     l59:
  8023   00312A  928C               	bcf	140,1,c	;volatile
  8024   00312C                     l3461:
  8025                           
  8026                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD2 = 1) : (LATDbits.LD2 = 0);
  8027   00312C  A401               	btfss	Lcd_Port@a^0,2,c
  8028   00312E  EF9B  F018         	goto	u3341
  8029   003132  EF9D  F018         	goto	u3340
  8030   003136                     u3341:
  8031   003136  EFA0  F018         	goto	l63
  8032   00313A                     u3340:
  8033   00313A  848C               	bsf	140,2,c	;volatile
  8034   00313C  EFA1  F018         	goto	l3465
  8035   003140                     l63:
  8036   003140  948C               	bcf	140,2,c	;volatile
  8037   003142                     l3465:
  8038                           
  8039                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD3 = 1) : (LATDbits.LD3 = 0);
  8040   003142  A601               	btfss	Lcd_Port@a^0,3,c
  8041   003144  EFA6  F018         	goto	u3351
  8042   003148  EFA8  F018         	goto	u3350
  8043   00314C                     u3351:
  8044   00314C  EFAB  F018         	goto	l67
  8045   003150                     u3350:
  8046   003150  868C               	bsf	140,3,c	;volatile
  8047   003152  EFAC  F018         	goto	l70
  8048   003156                     l67:
  8049   003156  968C               	bcf	140,3,c	;volatile
  8050   003158                     l70:
  8051   003158  0012               	return		;funcret
  8052   00315A                     __end_of_Lcd_Port:
  8053                           	callstack 0
  8054                           
  8055 ;; *************** function _InitPort *****************
  8056 ;; Defined at:
  8057 ;;		line 18 in file "main_lcd.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;		None
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;		None
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1    wreg      void 
  8064 ;; Registers used:
  8065 ;;		wreg, status,2
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0
  8072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8074 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8075 ;;Total ram usage:        0 bytes
  8076 ;; Hardware stack levels used: 1
  8077 ;; This function calls:
  8078 ;;		Nothing
  8079 ;; This function is called by:
  8080 ;;		_main
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text38
  8085   003454                     __ptext38:
  8086                           	callstack 0
  8087   003454                     _InitPort:
  8088                           	callstack 30
  8089   003454                     
  8090                           ;main_lcd.c: 19:     ANSELD = 0x00;
  8091   003454  0E00               	movlw	0
  8092   003456  010F               	movlb	15	; () banked
  8093   003458  6F5E               	movwf	94,b	;volatile
  8094   00345A                     
  8095                           ; BSR set to: 15
  8096   00345A  0012               	return		;funcret
  8097   00345C                     __end_of_InitPort:
  8098                           	callstack 0
  8099                           
  8100                           	psect	rparam
  8101   000000                     
  8102                           	psect	config
  8103                           
  8104                           ;Config register CONFIG1L @ 0x300000
  8105                           ;	PLL Selection
  8106                           ;	PLLSEL = PLL4X, 4x clock multiplier
  8107                           ;	PLL Enable Configuration bit
  8108                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  8109                           ;	CPU System Clock Postscaler
  8110                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  8111                           ;	Low Speed USB mode with 48 MHz system clock
  8112                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  8113   300000                     	org	3145728
  8114   300000  00                 	db	0
  8115                           
  8116                           ;Config register CONFIG1H @ 0x300001
  8117                           ;	Oscillator Selection
  8118                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  8119                           ;	Primary Oscillator Shutdown
  8120                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  8121                           ;	Fail-Safe Clock Monitor
  8122                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8123                           ;	Internal/External Oscillator Switchover
  8124                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8125   300001                     	org	3145729
  8126   300001  03                 	db	3
  8127                           
  8128                           ;Config register CONFIG2L @ 0x300002
  8129                           ;	Power-up Timer Enable
  8130                           ;	nPWRTEN = ON, Power up timer enabled
  8131                           ;	Brown-out Reset Enable
  8132                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  8133                           ;	Brown-out Reset Voltage
  8134                           ;	BORV = 190, BOR set to 1.9V nominal
  8135                           ;	Low-Power Brown-out Reset
  8136                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  8137   300002                     	org	3145730
  8138   300002  58                 	db	88
  8139                           
  8140                           ;Config register CONFIG2H @ 0x300003
  8141                           ;	Watchdog Timer Enable bits
  8142                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  8143                           ;	Watchdog Timer Postscaler
  8144                           ;	WDTPS = 32768, 1:32768
  8145   300003                     	org	3145731
  8146   300003  3C                 	db	60
  8147                           
  8148                           ; Padding undefined space
  8149   300004                     	org	3145732
  8150   300004  FF                 	db	255
  8151                           
  8152                           ;Config register CONFIG3H @ 0x300005
  8153                           ;	CCP2 MUX bit
  8154                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  8155                           ;	PORTB A/D Enable bit
  8156                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  8157                           ;	Timer3 Clock Input MUX bit
  8158                           ;	T3CMX = RC0, T3CKI function is on RC0
  8159                           ;	SDO Output MUX bit
  8160                           ;	SDOMX = RB3, SDO function is on RB3
  8161                           ;	Master Clear Reset Pin Enable
  8162                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  8163   300005                     	org	3145733
  8164   300005  D1                 	db	209
  8165                           
  8166                           ;Config register CONFIG4L @ 0x300006
  8167                           ;	Stack Full/Underflow Reset
  8168                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8169                           ;	Single-Supply ICSP Enable bit
  8170                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  8171                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  8172                           ;	ICPRT = OFF, ICPORT disabled
  8173                           ;	Extended Instruction Set Enable bit
  8174                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  8175                           ;	Background Debugger Enable bit
  8176                           ;	DEBUG = 0x1, unprogrammed default
  8177   300006                     	org	3145734
  8178   300006  84                 	db	132
  8179                           
  8180                           ; Padding undefined space
  8181   300007                     	org	3145735
  8182   300007  FF                 	db	255
  8183                           
  8184                           ;Config register CONFIG5L @ 0x300008
  8185                           ;	Block 0 Code Protect
  8186                           ;	CP0 = OFF, Block 0 is not code-protected
  8187                           ;	Block 1 Code Protect
  8188                           ;	CP1 = OFF, Block 1 is not code-protected
  8189                           ;	Block 2 Code Protect
  8190                           ;	CP2 = OFF, Block 2 is not code-protected
  8191                           ;	Block 3 Code Protect
  8192                           ;	CP3 = OFF, Block 3 is not code-protected
  8193   300008                     	org	3145736
  8194   300008  0F                 	db	15
  8195                           
  8196                           ;Config register CONFIG5H @ 0x300009
  8197                           ;	Boot Block Code Protect
  8198                           ;	CPB = OFF, Boot block is not code-protected
  8199                           ;	Data EEPROM Code Protect
  8200                           ;	CPD = OFF, Data EEPROM is not code-protected
  8201   300009                     	org	3145737
  8202   300009  C0                 	db	192
  8203                           
  8204                           ;Config register CONFIG6L @ 0x30000A
  8205                           ;	Block 0 Write Protect
  8206                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  8207                           ;	Block 1 Write Protect
  8208                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  8209                           ;	Block 2 Write Protect
  8210                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  8211                           ;	Block 3 Write Protect
  8212                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  8213   30000A                     	org	3145738
  8214   30000A  0F                 	db	15
  8215                           
  8216                           ;Config register CONFIG6H @ 0x30000B
  8217                           ;	Configuration Registers Write Protect
  8218                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8219                           ;	Boot Block Write Protect
  8220                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  8221                           ;	Data EEPROM Write Protect
  8222                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8223   30000B                     	org	3145739
  8224   30000B  E0                 	db	224
  8225                           
  8226                           ;Config register CONFIG7L @ 0x30000C
  8227                           ;	Block 0 Table Read Protect
  8228                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  8229                           ;	Block 1 Table Read Protect
  8230                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  8231                           ;	Block 2 Table Read Protect
  8232                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  8233                           ;	Block 3 Table Read Protect
  8234                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  8235   30000C                     	org	3145740
  8236   30000C  0F                 	db	15
  8237                           
  8238                           ;Config register CONFIG7H @ 0x30000D
  8239                           ;	Boot Block Table Read Protect
  8240                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  8241   30000D                     	org	3145741
  8242   30000D  40                 	db	64
  8243                           tosu	equ	0xFFF
  8244                           tosh	equ	0xFFE
  8245                           tosl	equ	0xFFD
  8246                           stkptr	equ	0xFFC
  8247                           pclatu	equ	0xFFB
  8248                           pclath	equ	0xFFA
  8249                           pcl	equ	0xFF9
  8250                           tblptru	equ	0xFF8
  8251                           tblptrh	equ	0xFF7
  8252                           tblptrl	equ	0xFF6
  8253                           tablat	equ	0xFF5
  8254                           prodh	equ	0xFF4
  8255                           prodl	equ	0xFF3
  8256                           indf0	equ	0xFEF
  8257                           postinc0	equ	0xFEE
  8258                           postdec0	equ	0xFED
  8259                           preinc0	equ	0xFEC
  8260                           plusw0	equ	0xFEB
  8261                           fsr0h	equ	0xFEA
  8262                           fsr0l	equ	0xFE9
  8263                           wreg	equ	0xFE8
  8264                           indf1	equ	0xFE7
  8265                           postinc1	equ	0xFE6
  8266                           postdec1	equ	0xFE5
  8267                           preinc1	equ	0xFE4
  8268                           plusw1	equ	0xFE3
  8269                           fsr1h	equ	0xFE2
  8270                           fsr1l	equ	0xFE1
  8271                           bsr	equ	0xFE0
  8272                           indf2	equ	0xFDF
  8273                           postinc2	equ	0xFDE
  8274                           postdec2	equ	0xFDD
  8275                           preinc2	equ	0xFDC
  8276                           plusw2	equ	0xFDB
  8277                           fsr2h	equ	0xFDA
  8278                           fsr2l	equ	0xFD9
  8279                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        6
    BSS         113
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      94
    BANK0           160     58      94
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_6(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_6(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[13]), STR_4(CODE[8]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[13]), STR_4(CODE[8]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[13]), STR_4(CODE[8]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S775$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[13]), STR_4(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S690$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S690$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_3(CODE[13]), STR_2(CODE[12]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _utoa->_pad
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_NoBlink->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Blink->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   28520
                                             87 COMRAM     4     4      0
                           _InitPort
                          _Lcd_Blink
                          _Lcd_Clear
                           _Lcd_Init
                        _Lcd_NoBlink
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8   25816
                                             73 COMRAM    14    14      0
                                             50 BANK0      8     0      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   25307
                                             71 COMRAM     2     2      0
                                             44 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   24942
                                             54 COMRAM    17    11      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                10     6      4    3710
                                             27 COMRAM    10     6      4
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     643
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   18920
                                             45 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     648
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1    1106
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_NoBlink                                          0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Blink                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPort
   _Lcd_Blink
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_NoBlink
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Shift_Left
     _Lcd_Cmd
   _Lcd_Shift_Right
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul
         _utoa
           ___lwdiv
           ___lwmod
           _pad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3A      5E       5       58.8%
BITBIGSFRhh         69      0       0      20        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5E       1       98.9%
BITBIGSFRhll        2D      0       0      22        0.0%
BITBIGSFRl           B      0       0      23        0.0%
BITBIGSFRhlh         8      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10C      24        0.0%
DATA                 0      0     10C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jul 19 10:11:18 2023

              ___fldiv@aexp 0019                ___fldiv@bexp 0018                           _t 00B8  
                         _v 00BC                ___fldiv@sign 0011                          l33 345A  
                        l70 3158                          l63 3140                          l55 3114  
                        l73 340C                          l82 2C0A                          l67 3156  
                        l59 312A                          l76 3444                          l92 33C6  
                        l86 2C0A                          l89 2EC6                          l98 2F44  
       ___wmul@multiplicand 0003                         l101 341A                         l110 3436  
                       l104 3428                         l107 3452                         l148 33EC  
                       l413 29F4                         l422 3392                         l407 2E44  
                       l418 2A3A                         l445 2936                         l702 1682  
                       l703 1670                         l730 1F2C                         l732 1D8C  
                       l741 1DD2                         l718 32D6                         l646 3032  
                       l743 1E4A                         l735 1D50                         l639 302A  
                       l744 1E38                         l904 1022                         l656 30FC  
                       l649 30F4                         l762 182E                         l826 31A8  
                       l771 1A9C                         l923 2734                         l772 1A8A  
                       l676 1498                         l860 2FBE                         l693 15B2  
                       l685 1768                         l677 1486                         l941 2D9A  
                       l933 2830                         l925 273C                         l766 1B92  
                       l678 144C                         l871 12A8                         l856 2F68  
                       l769 1A24                         l937 2D92                         l874 0BD8  
                       l779 1B54                         l876 0A1E                         l981 31F8  
                       l958 22BC                         l991 2B38                         l998 2708  
                       _pad 2F46                         wreg 0FE8                ___flmul@aexp 0012  
              ___flmul@bexp 0013         __end_of_Lcd_NoBlink 3438                ___flmul@sign 000D  
              ___flmul@temp 0018                ___flmul@prod 0014                ___fltol@exp1 000A  
                      l1001 264C                        l1012 3098                        l1030 2CD4  
                      l1009 3088                        l1041 3462                        l1018 3248  
                      l1038 331A                        l1047 335A                        l3001 1C48  
                      l3011 1C8E                        l3003 1C50                        l3021 1CB6  
                      l3013 1C92                        l3005 1C60                        l3031 1D04  
                      l3007 1C76                        l3111 1786                        l3041 1D4E  
                      l3033 1D14                        l3025 1CCA                        l3009 1C86  
                      l3017 1CA6                        l3201 1A82                        l3121 17CC  
                      l3113 1796                        l3105 176A                        l4001 22D0  
                      l3051 1D9C                        l3043 1D5A                        l3035 1D1C  
                      l3027 1CE4                        l3019 1CB6                        l3211 1AF0  
                      l3131 17F8                        l3123 17D2                        l3115 17A6  
                      l3107 1776                        l4011 2302                        l4003 22E6  
                      l3053 1DB2                        l3061 1DE2                        l3045 1D78  
                      l3037 1D2C                        l3029 1CF4                        l3221 1B58  
                      l3205 1AAC                        l3213 1AF4                        l3141 184E  
                      l3133 1808                        l3125 17D8                        l3117 17B6  
                      l3109 1784                        l3301 289C                        l4021 2328  
                      l4013 2304                        l4005 22E8                        l3063 1DF0  
                      l3055 1DB8                        l3047 1D7A                        l3039 1D40  
                      l3231 1B82                        l3223 1B68                        l3215 1B0E  
                      l3207 1AB8                        l3151 188E                        l3135 1818  
                      l3127 17E6                        l3119 17BC                        l3311 28CC  
                      l3303 28AA                        l4031 2358                        l4023 2334  
                      l4015 2306                        l4007 22EA                        l3073 1E5A  
                      l3081 1EA2                        l3065 1DF4                        l3057 1DC2  
                      l3049 1D8A                        l3241 2D9C                        l3225 1B76  
                      l3217 1B22                        l3209 1AC6                        l3161 18D8  
                      l3153 189A                        l3145 1862                        l3137 181E  
                      l3129 17E8                        l3321 28F6                        l3313 28D6  
                      l3401 2B30                        l4041 239A                        l4033 2370  
                      l4025 233E                        l4017 2308                        l4009 22EC  
                      l3091 1F0C                        l3083 1EBC                        l3075 1E66  
                      l3067 1E02                        l3059 1DD0                        l3251 2E3C  
                      l3243 2DCA                        l3227 1B78                        l3219 1B3C  
                      l3171 192A                        l3163 18E4                        l3155 18B2  
                      l3147 186E                        l3139 183E                        l3235 3292  
                      l3323 2906                        l3411 3052                        l3331 2FC0  
                      l4051 23C0                        l4043 23A6                        l4035 2374  
                      l4027 234A                        l4019 231E                        l3093 1F1A  
                      l3085 1ED2                        l3077 1E74                        l3069 1E30  
                      l3253 2E42                        l3245 2DDA                        l3261 2976  
                      l3229 1B7E                        l3181 19A8                        l3173 193A  
                      l3165 18F4                        l3157 18BE                        l3149 1878  
                      l3237 32A2                        l3325 2916                        l3309 28C2  
                      l3421 2590                        l3413 24F8                        l3405 331C  
                      l3501 091E                        l3341 2FF8                        l3333 2FC8  
                      l4061 2402                        l4053 23C4                        l4045 23BC  
                      l4037 2378                        l4029 2354                        l3095 1F20  
                      l3087 1EEC                        l3079 1E9E                        l3247 2E08  
                      l3271 29E2                        l3263 29A4                        l3191 1A22  
                      l3183 19DE                        l3175 1956                        l3167 1900  
                      l3159 18CA                        l3327 2926                        l3319 28EA  
                      l3431 26AC                        l3415 2518                        l3407 332C  
                      l3503 0926                        l3511 0968                        l3351 3024  
                      l3343 2FFE                        l3335 2FDA                        l4311 21F2  
                      l4071 2420                        l4055 23DA                        l4039 2390  
                      l3097 1F22                        l3089 1F08                        l3249 2E18  
                      l3273 2A32                        l3265 29B4                        l3257 2938  
                      l3193 1A34                        l3185 19EC                        l3177 1962  
                      l3169 1910                        l3281 3372                        l2801 13B2  
                      l3433 26C0                        l3425 2600                        l3417 256E  
                      l3409 3034                        l3441 31FA                        l3601 0E52  
                      l3521 09B2                        l3513 098E                        l3505 093E  
                      l3345 3014                        l3337 2FE2                        l3361 30CA  
                      l3353 309A                        l4313 2274                        l4305 1FC4  
                      l4081 2458                        l4073 2422                        l4057 23DC  
                      l3275 2A38                        l3267 29C2                        l3259 2966  
                      l3195 1A42                        l3187 1A0A                        l3179 197E  
                      l3283 3382                        l2811 13C6                        l2803 13B6  
                      l3435 26E8                        l3427 263C                        l3419 2582  
                      l3443 320E                        l3451 322E                        l3371 2F54  
                      l3611 0F02                        l3603 0E62                        l3531 09E8  
                      l3515 09A0                        l3507 0948                        l3347 301C  
                      l3339 2FEA                        l3363 30E0                        l3355 30AC  
                      l4307 20DC                        l4091 24BC                        l4083 2474  
                      l4075 2432                        l4067 2406                        l4059 23EC  
                      l3461 312C                        l3453 3100                        l3269 29D4  
                      l3197 1A46                        l3189 1A14                        l2901 1614  
                      l2821 13DA                        l2813 13CA                        l2805 13BA  
                      l3293 285C                        l3437 26F8                        l3429 2670  
                      l3445 321A                        l2741 2C30                        l3381 2FAA  
                      l3373 2F60                        l3621 0F66                        l3613 0F36  
                      l3605 0E72                        l3541 0AA6                        l3517 09A4  
                      l3349 301E                        l3365 30E8                        l3357 30B4  
                      l4309 2138                        l4093 24D8                        l4085 2480  
                      l4077 2436                        l4069 240A                        l3463 313A  
                      l3455 310E                        l3199 1A54                        l3279 335C  
                      l2903 161C                        l2911 1640                        l2831 13EE  
                      l2823 13DE                        l2815 13CE                        l2807 13BE  
                      l2751 12AA                        l3295 2886                        l3287 2832  
                      l3391 2ACE                        l3383 2A3C                        l3447 321E  
                      l2743 2C3A                        l3375 2F74                        l3631 1018  
                      l3623 0F6C                        l3615 0F4A                        l3607 0EA6  
                      l3551 0B66                        l3543 0AD8                        l3535 0A2E  
                      l3519 09AA                        l3471 084C                        l3367 30EE  
                      l3359 30BC                        l3711 2744                        l3703 270A  
                      l4087 248A                        l4079 244E                        l3465 3142  
                      l3457 3116                        l2921 1692                        l2913 1644  
                      l2905 1620                        l2841 1466                        l2833 1418  
                      l2825 13E2                        l2817 13D2                        l2809 13C2  
                      l2761 12E6                        l2753 12B6                        l3297 2888  
                      l3289 2848                        l3385 2A5C                        l3449 322A  
                      l2745 2C58                        l2737 2C0C                        l3377 2F88  
                      l3369 2F46                        l3641 105C                        l3633 1034  
                      l3625 0F74                        l3609 0EFC                        l3617 0F4E  
                      l3561 0BFA                        l3545 0B16                        l3537 0A34  
                      l3529 09CE                        l3481 089C                        l3473 085C  
                      l3721 2788                        l3713 274C                        l3705 2718  
                      l3801 20BE                        l4089 24B0                        l3467 3150  
                      l3459 3124                        l2931 16F8                        l2923 169E  
                      l2915 1652                        l2907 1630                        l2851 14A6  
                      l2843 146A                        l2835 1434                        l2827 13E6  
                      l2819 13D6                        l2771 1316                        l2763 12F6  
                      l2755 12C4                        l3299 2898                        l3387 2A9A  
                      l3395 2ADA                        l2747 2C8E                        l2739 2C1E  
                      l3379 2F8C                        l3643 1064                        l3635 1042  
                      l3651 1084                        l3627 0F80                        l3619 0F5E  
                      l3571 0C32                        l3563 0C04                        l3547 0B2A  
                      l3555 0BA6                        l3539 0A68                        l3491 08D8  
                      l3483 08A4                        l3475 086A                        l3731 27E8  
                      l3723 278E                        l3715 2756                        l3707 271A  
                      l3811 211C                        l3803 20EA                        l3901 2E46  
                      l2941 1740                        l2933 1708                        l2925 16AC  
                      l2917 1668                        l2909 1632                        l2861 14E8  
                      l2853 14B6                        l2845 1478                        l2837 1444  
                      l2829 13EA                        l2781 1340                        l2773 1328  
                      l2765 12F8                        l2757 12C6                        l3397 2AEC  
                      l3389 2AC2                        l3661 110A                        l3653 1096  
                      l3645 1074                        l3637 1052                        l3629 0FF8  
                      l3581 0C7C                        l3573 0C4A                        l3565 0C0C  
                      l3557 0BE0                        l3549 0B5E                        l3485 08B4  
                      l3493 08DC                        l3477 086E                        l3469 0846  
                      l3741 2CDE                        l3733 2802                        l3717 275C  
                      l3725 27AA                        l3709 2728                        l3821 21AA  
                      l3805 20FA                        ?_pad 0011                        l3751 33F0  
                      l3911 2E7C                        l3903 2E52                        l2943 1742  
                      l2935 1728                        l2927 16E6                        l2871 1516  
                      l2863 14F6                        l2847 147A                        l2839 145A  
                      l2783 1350                        l2791 137A                        l2775 132A  
                      l2759 12D6                        l2767 1300                        l3671 1184  
                      l3663 113E                        l3655 10A8                        l3647 1078  
                      l3639 1056                        l3583 0C90                        l3591 0D86  
                      l3575 0C5C                        l3567 0C12                        l3559 0BEE  
                      l3495 0902                        l3487 08C4                        l3479 0892  
                      l3743 2D02                        l3727 27BC                        l3735 2810  
                      l3719 2782                        l3807 210C                        l3815 2124  
                      l3753 33F2                        l3921 2EA4                        l3913 2E82  
                      l3905 2E58                        l2945 1748                        l2937 172C  
                      l2929 16E8                        l2881 1582                        l2873 1520  
                      l2865 1502                        l2857 14CA                        l2849 1484  
                      l2793 138A                        l2785 1360                        l2777 1330  
                      l2769 1310                        l2953 32D8                        l3681 11F0  
                      l3673 118C                        l3665 1146                        l3657 10AC  
                      l3649 107E                        l3593 0DA4                        l3585 0CF4  
                      l3569 0C24                        l3577 0C64                        l3497 0914  
                      l3489 08D0                        l2961 33C8                        l3745 2D3C  
                      l3729 27CE                        l3825 21DE                        l3809 2114  
                      l3817 2156                        l3841 2294                        l3761 1F2E  
                      l3755 33F8                        l3931 2EC2                        l3923 2EAA  
                      l3915 2E92                        l3907 2E68                        l2971 1BAE  
                      l2947 1756                        l2939 173A                        l2883 1592  
                      l2867 1506                        l2859 14DA                        l2875 1526  
                      l2795 139C                        l2787 1370                        l2779 133E  
                      l2955 32E4                        l3691 123C                        l3675 119A  
                      l3659 10B2                        l3667 114A                        l3595 0DD8  
                      l3587 0D4C                        l3579 0C6C                        l3499 0918  
                      l2963 33E4                        l3747 2D5C                        l3739 2CD6  
                      l3835 2256                        l3827 2208                        l3819 2176  
                      l3771 1F7E                        l3763 1F52                        l3757 33FA  
                      l3925 2EB0                        l3917 2E98                        l3909 2E6E  
                      l3941 2B6E                        l3933 2B3C                        l2981 1BE2  
                      l2973 1BB0                        l2949 1758                        l2893 15EC  
                      l2877 154C                        l2885 15A2                        l2869 1514  
                      l2797 13AA                        l2789 1372                        l2957 32F6  
                      l3685 1202                        l3693 125A                        l3677 11CA  
                      l3669 1168                        l3597 0E0A                        l3589 0D80  
                      l3749 2D6A                        l3829 2228                        l3837 2282  
                      l3773 1F80                        l3781 1FD2                        l3765 1F60  
                      l3759 340A                        l3927 2EB6                        l3919 2E9E  
                      l3951 2BB4                        l3943 2B80                        l3935 2B4C  
                      l3871 33A2                        l2991 1C14                        l2975 1BC0  
                      l2983 1BEA                        l2967 1B94                        l2895 15F6  
                      l2887 15C8                        l2879 1580                        l2799 13AE  
                      l2959 32FA                        l3695 126A                        l3687 1218  
                      l3679 11D8                        l3599 0E20                        l3791 2042  
                      l3783 1FE4                        l3775 1F92                        l3767 1F6E  
                      l3929 2EBC                        l3961 2BFA                        l3953 2BC6  
                      l3945 2B92                        l3937 2B5E                        l3881 33B6  
                      l3873 33A4                        l2993 1C16                        l2985 1BFA  
                      l2977 1BD0                        l2969 1BA0                        l2897 1604  
                      l2889 15D8                        l3697 1280                        l3689 121E  
                      l3793 205E                        l3785 2008                        l3769 1F72  
                      l3867 3438                        l3963 2C00                        l3955 2BCC  
                      l3947 2B98                        l3939 2B64                        l3883 33BC  
                      l3875 33AC                        l3971 2F08                        l2995 1C26  
                      l2987 1C00                        l2979 1BE0                        l2899 1606  
                      l3699 1288                        l3795 20A6                        l3787 2016  
                      l3779 1F9E                        l3891 31B6                        l3973 3446  
                      l3957 2BD6                        l3949 2BA2                        l3885 33BE  
                      l3877 33AE                        l3869 3396                        l3965 2EC8  
                      l2997 1C36                        l2989 1C06                        l3789 2032  
                      l3893 31D2                        l3981 315A                        l3975 342A  
                      l3959 2BE8                        l3887 33C4                        l3879 33B4  
                      l3967 2ED4                        l2999 1C46                        l3895 31EE  
                      l3983 316A                        l3977 340E                        l3969 2F04  
                      l3889 31AA                        l3985 3172                        l3993 22BE  
                      l3899 3454                        l3979 341C                        l3987 317A  
                      l3995 22CA                        l3989 3198                        l3997 22CC  
                      l3999 22CE                        STR_1 0801                        STR_2 0829  
                      STR_3 081C                        STR_4 0835                        STR_5 080F  
                      STR_6 083D                        STR_9 0841                        u2100 133E  
                      u2020 2C1E                        u2101 133A                        u2021 2C1A  
                      u2110 1350                        u2030 2C30                        u2111 134C  
                      u2031 2C2C                        u2200 1498                        u2120 1360  
                      u3000 28BE                        u2040 2C58                        u2201 1494  
                      u2121 135C                        u3001 28BA                        u2041 2C54  
                      u2210 14A6                        u2130 139C                        u3010 28E6  
                      u2050 2C8E                        u2211 14A2                        u2131 1398  
                      u3011 28E2                        u2051 2C8A                        u2300 1604  
                      u2220 14B6                        u2140 13AA                        u2060 12C4  
                      u3020 2906                        u3100 2F54                        u2301 1600  
                      u2221 14B2                        u2141 13A6                        u2061 12C0  
                      u3021 2902                        u3101 2F50                        u2310 1614  
                      u2230 14E8                        u2150 1418                        u2070 12D6  
                      u3030 2916                        u3110 2FAA                        u2311 1610  
                      u2231 14E4                        u2151 1414                        u2071 12D2  
                      u3031 2912                        u3111 2FA6                        u2400 16F8  
                      u2320 1630                        u2240 14F6                        u2160 1430  
                      u2080 12E6                        u3120 2A7C                        u3200 3052  
                      u3040 2FDA                        u2401 16F4                        u2321 162C  
                      u2241 14F2                        u2161 142A                        u2081 12E2  
                      u3201 304E                        u3041 2FD6                        u2410 1708  
                      u2330 1640                        u2250 1514                        u2170 1432  
                      u2090 1328                        u3130 2A9A                        u3210 2540  
                      u3050 2FF8                        u2411 1704                        u2331 163C  
                      u2251 1510                        u2091 1324                        u3131 2A96  
                      u3051 2FF4                        u2500 1C26                        u2420 1728  
                      u2340 1652                        u2260 154C                        u2180 145A  
                      u3140 2AC2                        u3300 26E8                        u3220 256E  
                      u3060 3014                        u2501 1C22                        u2421 1724  
                      u2341 164E                        u2261 1548                        u2181 1456  
                      u3141 2ABE                        u3125 2A72                        u3301 26E4  
                      u3221 256A                        u3061 3010                        u2510 1C36  
                      u2430 173A                        u2350 1668                        u2270 1592  
                      u2190 1478                        u3150 2AEC                        u3230 2590  
                      u3310 3248                        u3070 30AC                        u2511 1C32  
                      u2431 1736                        u2351 1664                        u2271 158E  
                      u2191 1474                        u3151 2AE8                        u3231 258C  
                      u3215 2536                        u3311 3244                        u3071 30A8  
                      u3320 310E                        u2600 1DF0                        u2520 1C76  
                      u2440 1756                        u2360 167E                        u2280 15C8  
                      u3400 0914                        u3080 30CA                        u3321 310A  
                      u2601 1DEC                        u2521 1C72                        u2441 1752  
                      u2361 167A                        u2281 15C4                        u3401 0910  
                      u3081 30C6                        u3330 3124                        u2610 1E02  
                      u2530 1CB6                        u2370 1692                        u2290 15D8  
                      u3170 2B26                        u3250 25FC                        u2450 331A  
                      u3410 098E                        u3090 30E0                        u3331 3120  
                      u2611 1DFE                        u2531 1CB2                        u2371 168E  
                      u2291 15D4                        u3171 2B20                        u3251 25F8  
                      u2451 3316                        u3411 098A                        u3091 30DC  
                      u4107 23F6                        u3340 313A                        u2620 1E30  
                      u2540 1D2C                        u2460 1BAE                        u2700 1796  
                      u2380 16AC                        u3180 2B28                        u3260 2620  
                      u3500 0C24                        u3420 09A0                        u3341 3136  
                      u2621 1E2C                        u2541 1D28                        u2461 1BAA  
                      u2701 1792                        u2381 16A8                        u3165 2AFE  
                      u3245 25A4                        u3501 0C20                        u3421 099C  
                      u4117 2414                        u4037 22DA                        u3350 3150  
                      u2630 1E46                        u2550 1D4E                        u2470 1BC0  
                      u2710 17A6                        u2390 16E6                        u3270 263C  
                      u3246 25AE                        u3190 335A                        u3510 0C32  
                      u3430 0A1A                        u3351 314C                        u4207 3400  
                      u2631 1E42                        u2551 1D4A                        u2471 1BBC  
                      u2711 17A2                        u2391 16E2                        u3271 2638  
                      u3247 25BE                        u3191 3356                        u3511 0C2E  
                      u3431 0A16                        u4127 2440                        u4047 22F6  
                      u2640 1E5A                        u2560 1D78                        u2480 1BD0  
                      u2800 1A54                        u2720 17E6                        u3280 2690  
                      u3600 1034                        u3520 0C5C                        u3440 0AA6  
                      u3360 086A                        u2641 1E56                        u2561 1D74  
                      u2481 1BCC                        u2801 1A50                        u2721 17E2  
                      u3265 2616                        u3601 1030                        u3521 0C58  
                      u3441 0AA2                        u3361 0866                        u4137 24C6  
                      u4057 2312                        u2650 1E74                        u2570 1D9C  
                      u2490 1C14                        u2810 1A82                        u2730 17F8  
                      u3290 26AC                        u3610 1042                        u3530 0DA4  
                      u3450 0AD8                        u3370 08B4                        u2651 1E70  
                      u2571 1D98                        u2491 1C10                        u2811 1A7E  
                      u2731 17F4                        u3291 26A8                        u3611 103E  
                      u3531 0DA0                        u3451 0AD4                        u3371 08B0  
                      u4147 24E2                        u4067 2362                        u2660 1EBC  
                      u2580 1DB2                        u2900 2E3C                        u2820 1A98  
                      u2740 1808                        u3700 126A                        u3620 1096  
                      u3540 0E0A                        u3460 0B16                        u3380 08C4  
                      u4157 33B0                        u2661 1EB8                        u2581 1DAE  
                      u2901 2E38                        u2821 1A94                        u2741 1804  
                      u3285 2686                        u3701 1266                        u3621 1092  
                      u3541 0E06                        u3461 0B12                        u3381 08C0  
                      u4077 2382                        u2670 1EEC                        u2590 1DD0  
                      u2910 2966                        u2830 1AAC                        u2750 183E  
                      u3630 1168                        u3550 0E52                        u3470 0BA2  
                      u3390 0902                        u3710 2718                        u4167 33C0  
                      u2671 1EE8                        u2591 1DCC                        u2911 2962  
                      u2831 1AA8                        u2751 183A                        u3631 1164  
                      u3551 0E4E                        u3471 0B9E                        u3391 08FE  
                      u3711 2714                        u4087 23B0                        u2680 1F1A  
                      u2920 29A4                        u2840 1AC6                        u2760 184E  
                      u3640 1184                        u3560 0E62                        u3480 0BD8  
                      u3720 2728                        u3800 1F52                        u4177 2E5E  
                      u2681 1F16                        u2921 29A0                        u2841 1AC2  
                      u2761 184A                        u3641 1180                        u3561 0E5E  
                      u3481 0BD4                        u3721 2724                        u3801 1F4E  
                      u4097 23CE                        u2930 29C2                        u2850 1B0E  
                      u2770 19C8                        u2690 1784                        u3650 11EA  
                      u3570 0EFC                        u3490 0BEE                        u3730 27BC  
                      u3810 1FE4                        u4187 2E74                        u2931 29BE  
                      u2851 1B0A                        u2691 1780                        u3651 11E4  
                      u3571 0EF8                        u3491 0BEA                        u3731 27B8  
                      u3811 1FE0                        u3900 2F00                        u2940 29E2  
                      u2860 1B3C                        u2780 1A22                        u3660 11EC  
                      u3580 0F4A                        u3740 27CE                        u3820 2008  
                      u4197 2E88                        u2941 29DE                        u2861 1B38  
                      u2781 1A1E                        u3581 0F46                        u3741 27CA  
                      u3821 2004                        u3910 2F34                        u2950 2A32  
                      u2870 1B76                        u2790 1A42                        u3670 11FE  
                      u3590 0FF8                        u3750 27E8                        u3830 205E  
                      u2951 2A2E                        u2871 1B72                        u2791 1A3E  
                      u2775 19BE                        u3671 11FA                        u3591 0FF4  
                      u3751 27E4                        u3831 205A                        u3920 2F44  
                      u2880 2DCA                        u2960 3372                        u3680 123C  
                      u3760 2802                        u3840 2172                        u3921 2F40  
                      u2881 2DC6                        u2961 336E                        u3681 1238  
                      u3761 27FE                        u3841 216E                        u2890 2E08  
                      u2970 2848                        u3690 125A                        u3770 2810  
                      u3850 31EE                        u3930 23EC                        u3907 2EF6  
                      u2891 2E04                        u2971 2844                        u3691 1256  
                      u3771 280C                        u3851 31EA                        u3931 23E8  
                      u3860 2B4C                        u2980 287C                        u3780 2D02  
                      u3940 2432                        u3861 2B48                        u3917 2F2A  
                      u3781 2CFE                        u3941 242E                        u3870 2B80  
                      u2990 28AA                        u3790 2D92                        u3871 2B7C  
                      u2991 28A6                        u3791 2D8E                        u3880 2BB4  
                      u3881 2BB0                        u2985 2872                        u3890 2BE8  
                      u3891 2BE4           ?_Lcd_Write_String 0005                        _dbuf 0100  
                      _labs 3034                        _main 22BE                        _prec 005C  
                      pad@i 0018                        pad@p 0015                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        pad@w 001A                        fsr2l 0FD9  
                      _utoa 270A               ___fpclassifyf 2A3C                        prodh 0FF4  
                      prodl 0FF3                        start 0000          ??_Lcd_Write_String 0007  
           ___fldiv@new_exp 0012             __end_of_Lcd_Cmd 340E                ___param_bank 0000  
                     ??_pad 0017               ___fltol@sign1 0009                       ?_labs 0001  
           __end_of___fladd 176A                       ?_main 0001             __end_of___fldiv 1F2E  
           __end_of___flneg 3394             __end_of___flmul 1B94             __end_of___flsub 32D8  
           __end_of___fltol 2938                       ?_utoa 001C             __end_of___lwdiv 3034  
           __end_of___lwmod 30FE                vfpfcnvrt@fmt 0039                       _flags 005E  
       read_prec_or_width@c 000D         read_prec_or_width@n 000E                       _fputc 2C0C  
                     _fputs 32D8                       labs@a 0001                       pad@fp 0011  
                     _width 00A2                       _putch 3462                       main@i 005A  
                     tablat 0FF5                       utoa@d 001E                       utoa@i 0024  
                     utoa@p 0020                       utoa@w 0022                       status 0FD8  
           __end_of_sprintf 31AA              ?___fpclassifyf 0001            __end_of_Lcd_Init 2EC8  
          __end_of_Lcd_Port 315A             __initialization 324A                __end_of_labs 309A  
              __end_of_main 24F8                __end_of_utoa 2832            __end_of_InitPort 345C  
               _Lcd_NoBlink 342A                      ??_labs 0005                      ??_main 0058  
                    ??_utoa 0020               __activetblptr 0002  __end_of_read_prec_or_width 2D9C  
                    ?_fputc 0001                      ?_fputs 000A                      ?_putch 0001  
                    _ANSELD 0F5E                   ??_Lcd_Cmd 0002               vfpfcnvrt@done 003F  
              vfprintf@cfmt 0048                      ___flge 2938                      ___fleq 2D9C  
                 ??___fladd 0009                      ___wmul 33C8                   ??___fldiv 0009  
                 ??___flneg 0005                   ??___flmul 0009                   ??___flsub 0022  
                 ??___fltol 0005                      _efgtoa 0846                   ??___lwdiv 0005  
                 ??___lwmod 0005                      _buffer 00A4                      _floorf 24F8  
                    _memcpy 31FA        read_prec_or_width@ap 0009                      clear_0 3270  
                    clear_1 327C                      isa$std 0001                      pad@buf 0013  
                    _strcpy 331C                      fputc@c 0001                      fputs@c 000E  
                    fputs@i 000F                      fputs@s 000A             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
                    putch@c 0001            __end_of_vfprintf 31FA                      utoa@fp 001C  
                 ??_sprintf 004A             Lcd_Set_Cursor@a 0005             Lcd_Set_Cursor@b 0004  
           Lcd_Set_Cursor@y 0007             Lcd_Set_Cursor@z 0006                  ___flge@ff1 001A  
                ___flge@ff2 001E             ??___fpclassifyf 0005                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                  __accesstop 0060     __end_of__initialization 3288  
                ___flneg@f1 0001           __end_of_Lcd_Clear 3446           __end_of_Lcd_Blink 3454  
             ___rparam_used 0001                  ___fltol@f1 0001              __pcstackCOMRAM 0001  
              __pidataBANK0 345C               __end_of_fputc 2CD6               __end_of_fputs 331C  
             __end_of_putch 3464              _Lcd_Set_Cursor 2B3A              _Lcd_Shift_Left 341C  
                 ?_Lcd_Init 0001                   ?_Lcd_Port 0001                     ??_fputc 0005  
                   ??_fputs 000E                     ??_putch 0001                  __pbssBANK0 009A  
                __pbssBANK1 0100                   ?_InitPort 0001                  _efgtoa$819 0066  
                   ?___flge 001A                     ?___fleq 0001                     ?___wmul 0001  
                   ?_efgtoa 002E                     ?_floorf 001A                     ?_memcpy 0001  
    __end_of_Lcd_Set_Cursor 2C0C                     ?_strcpy 0001      __end_of_Lcd_Shift_Left 342A  
         ??_Lcd_Shift_Right 0004                  ??_Lcd_Init 0004                  ??_Lcd_Port 0001  
            _Lcd_Write_Char 3394                  ??_InitPort 0001                     _Lcd_Cmd 33EE  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 12AA  
                   ___fldiv 1B94                     ___flneg 335C                     ___flmul 176A  
                   ___flsub 3292                     ___fltol 2832                     ___lwdiv 2FC0  
                   ___lwmod 309A                   ?_vfprintf 008C                __psmallconst 0800  
                   __pcinit 324A                     __ramtop 0800             ?_Lcd_Set_Cursor 0004  
              ?_Lcd_NoBlink 0001                     __ptext0 22BE                     __ptext1 315A  
                   __ptext2 31AA                     __ptext3 1F2E                     __ptext4 270A  
                   __ptext5 309A                     __ptext6 2FC0                     __ptext7 2CD6  
                   __ptext8 33C8                     __ptext9 0846       read_prec_or_width@fmt 0007  
           ?_Lcd_Shift_Left 0001                     efgtoa@c 0034                     efgtoa@d 006B  
                   efgtoa@e 006F                     efgtoa@f 0030                     efgtoa@g 0082  
                   efgtoa@h 0077                     efgtoa@i 007F                     efgtoa@l 007B  
                   efgtoa@m 006D                     efgtoa@n 0086                     efgtoa@p 0062  
                   efgtoa@t 0064                     efgtoa@u 0088                     efgtoa@w 0071  
                   _sprintf 315A      __end_of_Lcd_Write_Char 33C8        end_of_initialization 3288  
                   floorf@e 0028                     floorf@m 0024                     floorf@u 002A  
                   floorf@x 001A                     memcpy@d 0007                     memcpy@n 0005  
                   memcpy@s 0009                     fputc@fp 0003               __Lmediumconst 0000  
                   fputs@fp 000C          _read_prec_or_width 2CD6           __end_of_vfpfcnvrt 22BE  
                efgtoa@mode 0069                  efgtoa@sign 0081                     postdec1 0FE5  
                   postdec2 0FDD         ?_read_prec_or_width 0007                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0041  
                 Lcd_Port@a 0001                  ??_vfprintf 0048                     strcpy@d 0007  
                   strcpy@s 0005                 ___fladd@grs 0010                   _TRISDbits 0F95  
                 _TRISEbits 0F96        ??_read_prec_or_width 000B                 ___fldiv@grs 0014  
               ___fldiv@rem 000D             ?_Lcd_Write_Char 0001           Lcd_Write_String@a 0005  
         Lcd_Write_String@i 0009                 ___flmul@grs 000E                   _Lcd_Clear 3438  
                 _Lcd_Blink 3446              __end_of___flge 2A3C              __end_of___fleq 2E46  
               vfpfcnvrt@ap 003B                 vfpfcnvrt@cp 0046                 vfpfcnvrt@fp 0037  
            __end_of___wmul 33EE            _Lcd_Write_String 2EC8              __end_of_efgtoa 12AA  
            __end_of_floorf 270A              __end_of_memcpy 324A                  floorf@F526 009A  
            __end_of_strcpy 335C         start_initialization 324A                 __end_of_pad 2FC0  
     __end_of___fpclassifyf 2B3A                 vfprintf@fmt 008E                  ?_Lcd_Clear 0001  
                  ??___flge 0022                    ??___fleq 0009                  ?_Lcd_Blink 0001  
           _Lcd_Shift_Right 340E                    ??___wmul 0005                    ??_efgtoa 0035  
               __pdataBANK0 00B8                    ??_floorf 001E                    ??_memcpy 0007  
           Lcd_Write_Char@a 0004             Lcd_Write_Char@y 0003                    ??_strcpy 0005  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 0005  
                 ___fldiv@b 0001                   ___flmul@a 0005                   ___flmul@b 0001  
               __pbssCOMRAM 005C                   ___flsub@a 001E                   ___flsub@b 001A  
             __pcstackBANK0 0060                    ?_Lcd_Cmd 0001            ___lwdiv@dividend 0001  
          ??_Lcd_Set_Cursor 0005                    ?___fladd 0001                    ?___fldiv 0001  
                  ?___flneg 0001                    ?___flmul 0001                    ?___flsub 001A  
                  ?___fltol 0001                    ?___lwdiv 0001                    ?___lwmod 0001  
          ??_Lcd_Shift_Left 0004                 __smallconst 0800            ___lwdiv@quotient 0005  
                  ?_sprintf 0092              ___wmul@product 0005                    _LATDbits 0F8C  
   __end_of_Lcd_Shift_Right 341C                    Lcd_Cmd@a 0003                 ??_Lcd_Clear 0004  
               ??_Lcd_Blink 0004                   _vfpfcnvrt 1F2E                   main@i_113 005B  
         ___wmul@multiplier 0001            ??_Lcd_Write_Char 0002                    _Lcd_Init 2E46  
                  _Lcd_Port 30FE                  vfpfcnvrt@c 0045                   copy_data0 325E  
  __end_of_Lcd_Write_String 2F46                    _InitPort 3454                    __Hrparam 0000  
                 memcpy@tmp 000B                  vfprintf@ap 0090                    __Lrparam 0000  
                vfprintf@fp 008C                  ?_vfpfcnvrt 0037          ___fpclassifyf@F465 009E  
                sprintf@fmt 0094             ___lwdiv@divisor 0003             ___lwdiv@counter 0007  
                  __ptext10 331C                    __ptext11 2F46                    __ptext20 3292  
                  __ptext12 32D8                    __ptext21 12AA                    __ptext13 2C0C  
                  __ptext30 341C                    __ptext22 335C                    __ptext14 3462  
                  __ptext31 2B3A                    __ptext23 176A                    __ptext15 31FA  
                  __ptext32 342A                    __ptext24 2938                    __ptext16 3034  
                  __ptext33 2E46                    __ptext25 2D9C                    __ptext17 24F8  
                  __ptext34 3438                    __ptext26 1B94                    __ptext18 2A3C  
                  __ptext35 3446                    __ptext27 2EC8                    __ptext19 2832  
                  __ptext36 33EE                    __ptext28 3394                    __ptext37 30FE  
                  __ptext29 340E                    __ptext38 3454                  strcpy@dest 0001  
          ?_Lcd_Shift_Right 0001                    efgtoa@fp 002E                    efgtoa@ne 0060  
                  efgtoa@pp 0068                    efgtoa@ou 0073                    isa$xinst 0000  
                  _vfprintf 31AA                    memcpy@d1 0001                    memcpy@s1 0003  
        Lcd_Write_Char@temp 0002                   sprintf@ap 004A            ___lwmod@dividend 0001  
                 strcpy@src 0003                 efgtoa@nmode 006A                 ??_vfpfcnvrt 003D  
        Lcd_Set_Cursor@temp 0008               ??_Lcd_NoBlink 0004                    sprintf@f 004C  
                  sprintf@s 0092             ___lwmod@divisor 0003             ___lwmod@counter 0005  
             ___fladd@signs 000D                ___fladd@aexp 000E                ___fladd@bexp 000F  
