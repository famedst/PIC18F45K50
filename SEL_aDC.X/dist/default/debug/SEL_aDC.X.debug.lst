

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jul 08 20:17:45 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Generated 14/06/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F45K50 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83   000000                     _ADRESL	set	4035
    84   000000                     _ADRESH	set	4036
    85   000000                     _ADCON0bits	set	4034
    86   000000                     _ANSELAbits	set	3931
    87   000000                     _ANSELB	set	3932
    88   000000                     _LATB	set	3978
    89   000000                     _LATDbits	set	3980
    90   000000                     _TRISAbits	set	3986
    91   000000                     _TRISB	set	3987
    92   000000                     _PORTBbits	set	3969
    93   000000                     _TRISDbits	set	3989
    94   000000                     _ADCON2	set	4032
    95   000000                     _ADCON1	set	4033
    96   000000                     _ADCON0	set	4034
    97   000000                     _INTCON2bits	set	4081
    98                           
    99                           	psect	smallconst
   100   000800                     __psmallconst:
   101                           	callstack 0
   102   000800  00                 	db	0
   103   000801                     STR_5:
   104                           
   105                           ; BSR set to: 15
   106   000801  56                 	db	86	;'V'
   107   000802  6F                 	db	111	;'o'
   108   000803  6C                 	db	108	;'l'
   109   000804  74                 	db	116	;'t'
   110   000805  61                 	db	97	;'a'
   111   000806  6A                 	db	106	;'j'
   112   000807  65                 	db	101	;'e'
   113   000808  20                 	db	32
   114   000809  25                 	db	37
   115   00080A  30                 	db	48	;'0'
   116   00080B  2E                 	db	46
   117   00080C  32                 	db	50	;'2'
   118   00080D  66                 	db	102	;'f'
   119   00080E  00                 	db	0
   120   00080F                     STR_4:
   121                           
   122                           ; BSR set to: 15
   123   00080F  4C                 	db	76	;'L'
   124   000810  61                 	db	97	;'a'
   125   000811  20                 	db	32
   126   000812  4C                 	db	76	;'L'
   127   000813  65                 	db	101	;'e'
   128   000814  63                 	db	99	;'c'
   129   000815  74                 	db	116	;'t'
   130   000816  75                 	db	117	;'u'
   131   000817  72                 	db	114	;'r'
   132   000818  61                 	db	97	;'a'
   133   000819  3A                 	db	58	;':'
   134   00081A  20                 	db	32
   135   00081B  00                 	db	0
   136   00081C                     STR_1:
   137                           
   138                           ; BSR set to: 15
   139   00081C  41                 	db	65	;'A'
   140   00081D  44                 	db	68	;'D'
   141   00081E  43                 	db	67	;'C'
   142   00081F  30                 	db	48	;'0'
   143   000820  20                 	db	32
   144   000821  20                 	db	32
   145   000822  42                 	db	66	;'B'
   146   000823  54                 	db	84	;'T'
   147   000824  4E                 	db	78	;'N'
   148   000825  20                 	db	32
   149   000826  30                 	db	48	;'0'
   150   000827  00                 	db	0
   151   000828                     STR_2:
   152                           
   153                           ; BSR set to: 15
   154   000828  41                 	db	65	;'A'
   155   000829  44                 	db	68	;'D'
   156   00082A  43                 	db	67	;'C'
   157   00082B  31                 	db	49	;'1'
   158   00082C  20                 	db	32
   159   00082D  42                 	db	66	;'B'
   160   00082E  54                 	db	84	;'T'
   161   00082F  4E                 	db	78	;'N'
   162   000830  20                 	db	32
   163   000831  31                 	db	49	;'1'
   164   000832  00                 	db	0
   165   000833                     STR_3:
   166                           
   167                           ; BSR set to: 15
   168   000833  41                 	db	65	;'A'
   169   000834  44                 	db	68	;'D'
   170   000835  43                 	db	67	;'C'
   171   000836  32                 	db	50	;'2'
   172   000837  20                 	db	32
   173   000838  42                 	db	66	;'B'
   174   000839  54                 	db	84	;'T'
   175   00083A  4E                 	db	78	;'N'
   176   00083B  20                 	db	32
   177   00083C  32                 	db	50	;'2'
   178   00083D  00                 	db	0
   179   00083E                     STR_6:
   180                           
   181                           ; BSR set to: 15
   182   00083E  69                 	db	105	;'i'
   183   00083F  6E                 	db	110	;'n'
   184   000840  66                 	db	102	;'f'
   185   000841  00                 	db	0
   186   000842                     STR_9:
   187                           
   188                           ; BSR set to: 15
   189   000842  6E                 	db	110	;'n'
   190   000843  61                 	db	97	;'a'
   191   000844  6E                 	db	110	;'n'
   192   000845  00                 	db	0
   193   000846  00                 	db	0	; dummy byte at the end
   194   000000                     
   195                           ; #config settings
   196                           
   197                           	psect	cinit
   198   00320C                     __pcinit:
   199                           	callstack 0
   200   00320C                     start_initialization:
   201                           	callstack 0
   202   00320C                     __initialization:
   203                           	callstack 0
   204                           
   205                           ; Clear objects allocated to BANK1 (80 bytes)
   206   00320C  EE01  F000         	lfsr	0,__pbssBANK1
   207   003210  0E50               	movlw	80
   208   003212                     clear_0:
   209   003212  6AEE               	clrf	postinc0,c
   210   003214  06E8               	decf	wreg,f,c
   211   003216  E1FD               	bnz	clear_0
   212                           
   213                           ; Clear objects allocated to BANK0 (39 bytes)
   214   003218  EE00  F0BB         	lfsr	0,__pbssBANK0
   215   00321C  0E27               	movlw	39
   216   00321E                     clear_1:
   217   00321E  6AEE               	clrf	postinc0,c
   218   003220  06E8               	decf	wreg,f,c
   219   003222  E1FD               	bnz	clear_1
   220   003224                     end_of_initialization:
   221                           	callstack 0
   222   003224                     __end_of__initialization:
   223                           	callstack 0
   224   003224  0E00               	movlw	low (__Lmediumconst shr (0+16))
   225   003226  6EF8               	movwf	tblptru,c
   226   003228  0100               	movlb	0
   227   00322A  EFE7  F012         	goto	_main	;jump to C main() function
   228                           
   229                           	psect	bssBANK0
   230   0000BB                     __pbssBANK0:
   231                           	callstack 0
   232   0000BB                     floorf@F526:
   233                           	callstack 0
   234   0000BB                     	ds	4
   235   0000BF                     ___fpclassifyf@F465:
   236                           	callstack 0
   237   0000BF                     	ds	4
   238   0000C3                     _volt:
   239                           	callstack 0
   240   0000C3                     	ds	4
   241   0000C7                     _width:
   242                           	callstack 0
   243   0000C7                     	ds	2
   244   0000C9                     _prec:
   245                           	callstack 0
   246   0000C9                     	ds	2
   247   0000CB                     _v_adc:
   248                           	callstack 0
   249   0000CB                     	ds	2
   250   0000CD                     _flags:
   251                           	callstack 0
   252   0000CD                     	ds	1
   253   0000CE                     _buffer:
   254                           	callstack 0
   255   0000CE                     	ds	20
   256                           
   257                           	psect	bssBANK1
   258   000100                     __pbssBANK1:
   259                           	callstack 0
   260   000100                     _dbuf:
   261                           	callstack 0
   262   000100                     	ds	80
   263                           
   264                           	psect	cstackBANK0
   265   000060                     __pcstackBANK0:
   266                           	callstack 0
   267   000060                     efgtoa@ne:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x0
   271   000060                     	ds	2
   272   000062                     efgtoa@p:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x2
   276   000062                     	ds	2
   277   000064                     efgtoa@t:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x4
   281   000064                     	ds	2
   282   000066                     _efgtoa$1015:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x6
   286   000066                     	ds	2
   287   000068                     efgtoa@pp:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x8
   291   000068                     	ds	1
   292   000069                     efgtoa@mode:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x9
   296   000069                     	ds	1
   297   00006A                     efgtoa@nmode:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0xA
   301   00006A                     	ds	1
   302   00006B                     efgtoa@d:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0xB
   306   00006B                     	ds	2
   307   00006D                     efgtoa@m:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0xD
   311   00006D                     	ds	2
   312   00006F                     efgtoa@e:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xF
   316   00006F                     	ds	2
   317   000071                     efgtoa@w:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x11
   321   000071                     	ds	2
   322   000073                     efgtoa@ou:
   323                           	callstack 0
   324                           
   325                           ; 4 bytes @ 0x13
   326   000073                     	ds	4
   327   000077                     efgtoa@h:
   328                           	callstack 0
   329                           
   330                           ; 4 bytes @ 0x17
   331   000077                     	ds	4
   332   00007B                     efgtoa@l:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0x1B
   336   00007B                     	ds	4
   337   00007F                     efgtoa@i:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x1F
   341   00007F                     	ds	2
   342   000081                     efgtoa@sign:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x21
   346   000081                     	ds	1
   347   000082                     efgtoa@g:
   348                           	callstack 0
   349                           
   350                           ; 4 bytes @ 0x22
   351   000082                     	ds	4
   352   000086                     efgtoa@n:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x26
   356   000086                     	ds	2
   357   000088                     efgtoa@u:
   358                           	callstack 0
   359                           
   360                           ; 4 bytes @ 0x28
   361   000088                     	ds	4
   362   00008C                     vfpfcnvrt@fp:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x2C
   366   00008C                     	ds	2
   367   00008E                     vfpfcnvrt@fmt:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x2E
   371   00008E                     	ds	2
   372   000090                     vfpfcnvrt@ap:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x30
   376   000090                     	ds	2
   377   000092                     vfpfcnvrt@convarg:
   378                           	callstack 0
   379                           
   380                           ; 4 bytes @ 0x32
   381   000092                     	ds	4
   382   000096                     vfpfcnvrt@done:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x36
   386   000096                     	ds	2
   387   000098                     vfpfcnvrt@c:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x38
   391   000098                     	ds	1
   392   000099                     vfpfcnvrt@cp:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x39
   396   000099                     	ds	2
   397   00009B                     ?_vfprintf:
   398                           	callstack 0
   399   00009B                     vfprintf@fp:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x3B
   403   00009B                     	ds	2
   404   00009D                     vfprintf@fmt:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x3D
   408   00009D                     	ds	2
   409   00009F                     vfprintf@ap:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x3F
   413   00009F                     	ds	2
   414   0000A1                     vfprintf@cfmt:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x41
   418   0000A1                     	ds	2
   419   0000A3                     ?_sprintf:
   420                           	callstack 0
   421   0000A3                     sprintf@s:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x43
   425   0000A3                     	ds	2
   426   0000A5                     sprintf@fmt:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x45
   430   0000A5                     	ds	6
   431   0000AB                     sprintf@ap:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x4B
   435   0000AB                     	ds	2
   436   0000AD                     sprintf@f:
   437                           	callstack 0
   438                           
   439                           ; 12 bytes @ 0x4D
   440   0000AD                     	ds	12
   441   0000B9                     ??_main:
   442                           
   443                           ; 1 bytes @ 0x59
   444   0000B9                     	ds	2
   445                           
   446                           	psect	cstackCOMRAM
   447   000001                     __pcstackCOMRAM:
   448                           	callstack 0
   449   000001                     ?___fpclassifyf:
   450                           	callstack 0
   451   000001                     ?___wmul:
   452                           	callstack 0
   453   000001                     ?___fladd:
   454                           	callstack 0
   455   000001                     ?_labs:
   456                           	callstack 0
   457   000001                     ?___flneg:
   458                           	callstack 0
   459   000001                     ?___fltol:
   460                           	callstack 0
   461   000001                     ?___xxtofl:
   462                           	callstack 0
   463   000001                     Lcd_Port@a:
   464                           	callstack 0
   465   000001                     ___wmul@multiplier:
   466                           	callstack 0
   467   000001                     memcpy@d1:
   468                           	callstack 0
   469   000001                     fputc@c:
   470                           	callstack 0
   471   000001                     strcpy@dest:
   472                           	callstack 0
   473   000001                     ___fleq@ff1:
   474                           	callstack 0
   475   000001                     ___flneg@f1:
   476                           	callstack 0
   477   000001                     ___fltol@f1:
   478                           	callstack 0
   479   000001                     ___fladd@b:
   480                           	callstack 0
   481   000001                     ___xxtofl@val:
   482                           	callstack 0
   483   000001                     ___fpclassifyf@x:
   484                           	callstack 0
   485   000001                     labs@a:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0x0
   489   000001                     	ds	1
   490   000002                     ??_Lcd_Cmd:
   491   000002                     Lcd_Write_Char@temp:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x1
   495   000002                     	ds	1
   496   000003                     Lcd_Cmd@a:
   497                           	callstack 0
   498   000003                     Lcd_Write_Char@y:
   499                           	callstack 0
   500   000003                     ___wmul@multiplicand:
   501                           	callstack 0
   502   000003                     memcpy@s1:
   503                           	callstack 0
   504   000003                     fputc@fp:
   505                           	callstack 0
   506   000003                     strcpy@src:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x2
   510   000003                     	ds	1
   511   000004                     ??_Lcd_Init:
   512   000004                     Lcd_Set_Cursor@b:
   513                           	callstack 0
   514   000004                     Lcd_Write_Char@a:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x3
   518   000004                     	ds	1
   519   000005                     ??_fputc:
   520   000005                     ??___fpclassifyf:
   521   000005                     ??_labs:
   522   000005                     ??___fltol:
   523   000005                     ??___xxtofl:
   524   000005                     Lcd_Set_Cursor@a:
   525                           	callstack 0
   526   000005                     Lcd_Write_String@a:
   527                           	callstack 0
   528   000005                     ___wmul@product:
   529                           	callstack 0
   530   000005                     memcpy@n:
   531                           	callstack 0
   532   000005                     strcpy@s:
   533                           	callstack 0
   534   000005                     ___fleq@ff2:
   535                           	callstack 0
   536   000005                     ___fladd@a:
   537                           	callstack 0
   538                           
   539                           ; 4 bytes @ 0x4
   540   000005                     	ds	1
   541   000006                     Lcd_Set_Cursor@z:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x5
   545   000006                     	ds	1
   546   000007                     ??_Lcd_Write_String:
   547   000007                     ?_read_prec_or_width:
   548                           	callstack 0
   549   000007                     Lcd_Set_Cursor@y:
   550                           	callstack 0
   551   000007                     read_prec_or_width@fmt:
   552                           	callstack 0
   553   000007                     memcpy@d:
   554                           	callstack 0
   555   000007                     strcpy@d:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x6
   559   000007                     	ds	1
   560   000008                     Lcd_Set_Cursor@temp:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x7
   564   000008                     	ds	1
   565   000009                     ??___fladd:
   566   000009                     ??___fleq:
   567   000009                     ___fltol@sign1:
   568                           	callstack 0
   569   000009                     ___xxtofl@sign:
   570                           	callstack 0
   571   000009                     Lcd_Write_String@i:
   572                           	callstack 0
   573   000009                     read_prec_or_width@ap:
   574                           	callstack 0
   575   000009                     ___fpclassifyf@e:
   576                           	callstack 0
   577   000009                     memcpy@s:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x8
   581   000009                     	ds	1
   582   00000A                     ___fltol@exp1:
   583                           	callstack 0
   584   00000A                     ___xxtofl@exp:
   585                           	callstack 0
   586   00000A                     fputs@s:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x9
   590   00000A                     	ds	1
   591   00000B                     ??_read_prec_or_width:
   592   00000B                     memcpy@tmp:
   593                           	callstack 0
   594   00000B                     ___xxtofl@arg:
   595                           	callstack 0
   596   00000B                     ___fpclassifyf@u:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0xA
   600   00000B                     	ds	1
   601   00000C                     fputs@fp:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0xB
   605   00000C                     	ds	1
   606   00000D                     ___fladd@signs:
   607                           	callstack 0
   608   00000D                     read_prec_or_width@c:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0xC
   612   00000D                     	ds	1
   613   00000E                     ___fladd@aexp:
   614                           	callstack 0
   615   00000E                     fputs@c:
   616                           	callstack 0
   617   00000E                     read_prec_or_width@n:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0xD
   621   00000E                     	ds	1
   622   00000F                     ?___flmul:
   623                           	callstack 0
   624   00000F                     ___fladd@bexp:
   625                           	callstack 0
   626   00000F                     fputs@i:
   627                           	callstack 0
   628   00000F                     ___flmul@b:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0xE
   632   00000F                     	ds	1
   633   000010                     ___fladd@grs:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0xF
   637   000010                     	ds	1
   638   000011                     pad@fp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x10
   642   000011                     	ds	2
   643   000013                     pad@buf:
   644                           	callstack 0
   645   000013                     ___flmul@a:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x12
   649   000013                     	ds	2
   650   000015                     pad@p:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x14
   654   000015                     	ds	2
   655   000017                     ??___flmul:
   656   000017                     ??_pad:
   657                           
   658                           ; 1 bytes @ 0x16
   659   000017                     	ds	1
   660   000018                     pad@i:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x17
   664   000018                     	ds	2
   665   00001A                     pad@w:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x19
   669   00001A                     	ds	1
   670   00001B                     ___flmul@sign:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x1A
   674   00001B                     	ds	1
   675   00001C                     ___flmul@grs:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x1B
   679   00001C                     	ds	4
   680   000020                     ___flmul@aexp:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x1F
   684   000020                     	ds	1
   685   000021                     ___flmul@bexp:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x20
   689   000021                     	ds	1
   690   000022                     ___flmul@prod:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0x21
   694   000022                     	ds	4
   695   000026                     ___flmul@temp:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x25
   699   000026                     	ds	2
   700   000028                     ?___fldiv:
   701                           	callstack 0
   702   000028                     ?___flsub:
   703                           	callstack 0
   704   000028                     ___flge@ff1:
   705                           	callstack 0
   706   000028                     ___flsub@b:
   707                           	callstack 0
   708   000028                     ___fldiv@b:
   709                           	callstack 0
   710                           
   711                           ; 4 bytes @ 0x27
   712   000028                     	ds	4
   713   00002C                     ___flge@ff2:
   714                           	callstack 0
   715   00002C                     ___flsub@a:
   716                           	callstack 0
   717   00002C                     ___fldiv@a:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x2B
   721   00002C                     	ds	4
   722   000030                     ??___fldiv:
   723   000030                     ??___flge:
   724                           
   725                           ; 1 bytes @ 0x2F
   726   000030                     	ds	4
   727   000034                     ___fldiv@rem:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x33
   731   000034                     	ds	4
   732   000038                     ___fldiv@sign:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x37
   736   000038                     	ds	1
   737   000039                     ___fldiv@new_exp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x38
   741   000039                     	ds	2
   742   00003B                     ___fldiv@grs:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x3A
   746   00003B                     	ds	4
   747   00003F                     ___fldiv@bexp:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x3E
   751   00003F                     	ds	1
   752   000040                     ___fldiv@aexp:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x3F
   756   000040                     	ds	1
   757   000041                     ?_floorf:
   758                           	callstack 0
   759   000041                     floorf@x:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x40
   763   000041                     	ds	4
   764   000045                     ??_floorf:
   765                           
   766                           ; 1 bytes @ 0x44
   767   000045                     	ds	6
   768   00004B                     floorf@m:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x4A
   772   00004B                     	ds	4
   773   00004F                     floorf@e:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x4E
   777   00004F                     	ds	2
   778   000051                     floorf@u:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x50
   782   000051                     	ds	4
   783   000055                     efgtoa@fp:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x54
   787   000055                     	ds	2
   788   000057                     efgtoa@f:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x56
   792   000057                     	ds	4
   793   00005B                     efgtoa@c:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x5A
   797   00005B                     	ds	1
   798   00005C                     ??_efgtoa:
   799                           
   800                           ; 1 bytes @ 0x5B
   801   00005C                     	ds	2
   802   00005E                     ??_vfpfcnvrt:
   803                           
   804                           ; 1 bytes @ 0x5D
   805   00005E                     	ds	2
   806   000060                     
   807                           ; 1 bytes @ 0x5F
   808 ;;
   809 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   810 ;;
   811 ;; *************** function _main *****************
   812 ;; Defined at:
   813 ;;		line 133 in file "mainselec.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   827 ;;      Params:         0       0       0       0       0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0
   829 ;;      Temps:          0       2       0       0       0       0       0       0       0
   830 ;;      Totals:         0       2       0       0       0       0       0       0       0
   831 ;;Total ram usage:        2 bytes
   832 ;; Hardware stack levels required when called: 8
   833 ;; This function calls:
   834 ;;		_InitPort
   835 ;;		_Lcd_Clear
   836 ;;		_Lcd_Init
   837 ;;		_Lcd_Set_Cursor
   838 ;;		_Lcd_Write_String
   839 ;;		___fldiv
   840 ;;		___flmul
   841 ;;		___xxtofl
   842 ;;		_set_adc
   843 ;;		_sprintf
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text0
   850   0025CE                     __ptext0:
   851                           	callstack 0
   852   0025CE                     _main:
   853                           	callstack 23
   854   0025CE                     l61:
   855   0025CE                     
   856                           ;mainselec.c: 135:         InitPort();
   857   0025CE  EC32  F019         	call	_InitPort	;wreg free
   858                           
   859                           ;mainselec.c: 136:         Lcd_Init();
   860   0025D2  ECC1  F016         	call	_Lcd_Init	;wreg free
   861                           
   862                           ;mainselec.c: 137:         Lcd_Clear();
   863   0025D6  EC3A  F019         	call	_Lcd_Clear	;wreg free
   864   0025DA                     
   865                           ;mainselec.c: 138:         Lcd_Set_Cursor(1,1);
   866   0025DA  0E01               	movlw	1
   867   0025DC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   868   0025DE  0E01               	movlw	1
   869   0025E0  EC3B  F015         	call	_Lcd_Set_Cursor
   870   0025E4                     
   871                           ;mainselec.c: 139:         Lcd_Write_String("ADC0  BTN 0");
   872   0025E4  0E1C               	movlw	low STR_1
   873   0025E6  6E05               	movwf	Lcd_Write_String@a^0,c
   874   0025E8  0E08               	movlw	high STR_1
   875   0025EA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   876   0025EC  EC02  F017         	call	_Lcd_Write_String	;wreg free
   877   0025F0                     
   878                           ;mainselec.c: 140:         Lcd_Set_Cursor(2,1);
   879   0025F0  0E01               	movlw	1
   880   0025F2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   881   0025F4  0E02               	movlw	2
   882   0025F6  EC3B  F015         	call	_Lcd_Set_Cursor
   883   0025FA                     
   884                           ;mainselec.c: 141:         Lcd_Write_String("ADC1 BTN 1");
   885   0025FA  0E28               	movlw	low STR_2
   886   0025FC  6E05               	movwf	Lcd_Write_String@a^0,c
   887   0025FE  0E08               	movlw	high STR_2
   888   002600  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   889   002602  EC02  F017         	call	_Lcd_Write_String	;wreg free
   890   002606                     
   891                           ;mainselec.c: 142:         _delay((unsigned long)((250)*(12000000/4000.0)));
   892   002606  0E04               	movlw	4
   893   002608  0100               	movlb	0	; () banked
   894   00260A  6FBA               	movwf	(??_main+1)& (0+255),b
   895   00260C  0ECF               	movlw	207
   896   00260E  6FB9               	movwf	??_main& (0+255),b
   897   002610  0E01               	movlw	1
   898   002612                     u3957:
   899   002612  2EE8               	decfsz	wreg,f,c
   900   002614  D7FE               	bra	u3957
   901   002616  2FB9               	decfsz	??_main& (0+255),f,b
   902   002618  D7FC               	bra	u3957
   903   00261A  2FBA               	decfsz	(??_main+1)& (0+255),f,b
   904   00261C  D7FA               	bra	u3957
   905   00261E  D000               	nop2	
   906   002620                     
   907                           ;mainselec.c: 143:         Lcd_Clear();
   908   002620  EC3A  F019         	call	_Lcd_Clear	;wreg free
   909   002624                     
   910                           ;mainselec.c: 144:         Lcd_Set_Cursor(1,1);
   911   002624  0E01               	movlw	1
   912   002626  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   913   002628  0E01               	movlw	1
   914   00262A  EC3B  F015         	call	_Lcd_Set_Cursor
   915   00262E                     
   916                           ;mainselec.c: 145:         Lcd_Write_String("ADC2 BTN 2");
   917   00262E  0E33               	movlw	low STR_3
   918   002630  6E05               	movwf	Lcd_Write_String@a^0,c
   919   002632  0E08               	movlw	high STR_3
   920   002634  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   921   002636  EC02  F017         	call	_Lcd_Write_String	;wreg free
   922   00263A                     
   923                           ;mainselec.c: 146:         _delay((unsigned long)((250)*(12000000/4000.0)));
   924   00263A  0E04               	movlw	4
   925   00263C  0100               	movlb	0	; () banked
   926   00263E  6FBA               	movwf	(??_main+1)& (0+255),b
   927   002640  0ECF               	movlw	207
   928   002642  6FB9               	movwf	??_main& (0+255),b
   929   002644  0E01               	movlw	1
   930   002646                     u3967:
   931   002646  2EE8               	decfsz	wreg,f,c
   932   002648  D7FE               	bra	u3967
   933   00264A  2FB9               	decfsz	??_main& (0+255),f,b
   934   00264C  D7FC               	bra	u3967
   935   00264E  2FBA               	decfsz	(??_main+1)& (0+255),f,b
   936   002650  D7FA               	bra	u3967
   937   002652  D000               	nop2	
   938   002654                     
   939                           ;mainselec.c: 148:     if(PORTBbits.RB0 == 0){
   940   002654  B081               	btfsc	129,0,c	;volatile
   941   002656  EF2F  F013         	goto	u3851
   942   00265A  EF31  F013         	goto	u3850
   943   00265E                     u3851:
   944   00265E  EFE7  F012         	goto	l61
   945   002662                     u3850:
   946   002662                     
   947                           ;mainselec.c: 149:         set_adc();
   948   002662  EC27  F019         	call	_set_adc	;wreg free
   949   002666                     
   950                           ;mainselec.c: 150:         ADCON0bits.GO_DONE = 1;
   951   002666  82C2               	bsf	194,1,c	;volatile
   952   002668                     l63:
   953   002668  B2C2               	btfsc	194,1,c	;volatile
   954   00266A  EF39  F013         	goto	u3861
   955   00266E  EF3B  F013         	goto	u3860
   956   002672                     u3861:
   957   002672  EF34  F013         	goto	l63
   958   002676                     u3860:
   959   002676                     
   960                           ;mainselec.c: 152:         v_adc = (int)((ADRESH << 8) + ADRESL);
   961   002676  50C4               	movf	196,w,c	;volatile
   962   002678  0100               	movlb	0	; () banked
   963   00267A  6FBA               	movwf	(??_main+1)& (0+255),b
   964   00267C  6BB9               	clrf	??_main& (0+255),b
   965   00267E  50C3               	movf	195,w,c	;volatile
   966   002680  25B9               	addwf	??_main& (0+255),w,b
   967   002682  6FCB               	movwf	_v_adc& (0+255),b
   968   002684  0E00               	movlw	0
   969   002686  21BA               	addwfc	(??_main+1)& (0+255),w,b
   970   002688  6FCC               	movwf	(_v_adc+1)& (0+255),b
   971   00268A                     
   972                           ; BSR set to: 0
   973                           ;mainselec.c: 153:         volt = (float)((v_adc*5.0)/1023.0);
   974   00268A  0E00               	movlw	0
   975   00268C  6E13               	movwf	___flmul@a^0,c
   976   00268E  0E00               	movlw	0
   977   002690  6E14               	movwf	(___flmul@a+1)^0,c
   978   002692  0EA0               	movlw	160
   979   002694  6E15               	movwf	(___flmul@a+2)^0,c
   980   002696  0E40               	movlw	64
   981   002698  6E16               	movwf	(___flmul@a+3)^0,c
   982   00269A  C0CB  F001         	movff	_v_adc,___xxtofl@val
   983   00269E  C0CC  F002         	movff	_v_adc+1,___xxtofl@val+1
   984   0026A2  0E00               	movlw	0
   985   0026A4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   986   0026A6  0EFF               	movlw	-1
   987   0026A8  6E03               	movwf	(___xxtofl@val+2)^0,c
   988   0026AA  6E04               	movwf	(___xxtofl@val+3)^0,c
   989   0026AC  0E01               	movlw	1
   990   0026AE  EC0D  F012         	call	___xxtofl
   991   0026B2  C001  F00F         	movff	?___xxtofl,___flmul@b
   992   0026B6  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   993   0026BA  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   994   0026BE  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   995   0026C2  ECB5  F00B         	call	___flmul	;wreg free
   996   0026C6  C00F  F028         	movff	?___flmul,___fldiv@b
   997   0026CA  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   998   0026CE  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   999   0026D2  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1000   0026D6  0E00               	movlw	0
  1001   0026D8  6E2C               	movwf	___fldiv@a^0,c
  1002   0026DA  0EC0               	movlw	192
  1003   0026DC  6E2D               	movwf	(___fldiv@a+1)^0,c
  1004   0026DE  0E7F               	movlw	127
  1005   0026E0  6E2E               	movwf	(___fldiv@a+2)^0,c
  1006   0026E2  0E44               	movlw	68
  1007   0026E4  6E2F               	movwf	(___fldiv@a+3)^0,c
  1008   0026E6  ECCA  F00D         	call	___fldiv	;wreg free
  1009   0026EA  C028  F0C3         	movff	?___fldiv,_volt
  1010   0026EE  C029  F0C4         	movff	?___fldiv+1,_volt+1
  1011   0026F2  C02A  F0C5         	movff	?___fldiv+2,_volt+2
  1012   0026F6  C02B  F0C6         	movff	?___fldiv+3,_volt+3
  1013   0026FA                     
  1014                           ;mainselec.c: 154:         Lcd_Set_Cursor(1,1);
  1015   0026FA  0E01               	movlw	1
  1016   0026FC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1017   0026FE  0E01               	movlw	1
  1018   002700  EC3B  F015         	call	_Lcd_Set_Cursor
  1019   002704                     
  1020                           ;mainselec.c: 155:         Lcd_Write_String("La Lectura: ");
  1021   002704  0E0F               	movlw	low STR_4
  1022   002706  6E05               	movwf	Lcd_Write_String@a^0,c
  1023   002708  0E08               	movlw	high STR_4
  1024   00270A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1025   00270C  EC02  F017         	call	_Lcd_Write_String	;wreg free
  1026   002710                     
  1027                           ;mainselec.c: 156:         Lcd_Set_Cursor(2,1);
  1028   002710  0E01               	movlw	1
  1029   002712  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1030   002714  0E02               	movlw	2
  1031   002716  EC3B  F015         	call	_Lcd_Set_Cursor
  1032   00271A                     
  1033                           ;mainselec.c: 157:         sprintf(buffer,"Voltaje %0.2f", volt);
  1034   00271A  0ECE               	movlw	low _buffer
  1035   00271C  0100               	movlb	0	; () banked
  1036   00271E  6FA3               	movwf	sprintf@s& (0+255),b
  1037   002720  0E00               	movlw	high _buffer
  1038   002722  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  1039   002724  0E01               	movlw	low STR_5
  1040   002726  6FA5               	movwf	sprintf@fmt& (0+255),b
  1041   002728  0E08               	movlw	high STR_5
  1042   00272A  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  1043   00272C  C0C3  F0A7         	movff	_volt,?_sprintf+4
  1044   002730  C0C4  F0A8         	movff	_volt+1,?_sprintf+5
  1045   002734  C0C5  F0A9         	movff	_volt+2,?_sprintf+6
  1046   002738  C0C6  F0AA         	movff	_volt+3,?_sprintf+7
  1047   00273C  EC08  F018         	call	_sprintf	;wreg free
  1048   002740                     
  1049                           ;mainselec.c: 158:         Lcd_Write_String(buffer);
  1050   002740  0ECE               	movlw	low _buffer
  1051   002742  6E05               	movwf	Lcd_Write_String@a^0,c
  1052   002744  0E00               	movlw	high _buffer
  1053   002746  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1054   002748  EC02  F017         	call	_Lcd_Write_String	;wreg free
  1055   00274C                     
  1056                           ;mainselec.c: 159:         _delay((unsigned long)((200)*(12000000/4000.0)));
  1057   00274C  0E04               	movlw	4
  1058   00274E  0100               	movlb	0	; () banked
  1059   002750  6FBA               	movwf	(??_main+1)& (0+255),b
  1060   002752  0E0C               	movlw	12
  1061   002754  6FB9               	movwf	??_main& (0+255),b
  1062   002756  0E33               	movlw	51
  1063   002758                     u3977:
  1064   002758  2EE8               	decfsz	wreg,f,c
  1065   00275A  D7FE               	bra	u3977
  1066   00275C  2FB9               	decfsz	??_main& (0+255),f,b
  1067   00275E  D7FC               	bra	u3977
  1068   002760  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1069   002762  D7FA               	bra	u3977
  1070   002764  D000               	nop2	
  1071   002766  EFE7  F012         	goto	l61
  1072   00276A  EF00  F000         	goto	start
  1073   00276E                     __end_of_main:
  1074                           	callstack 0
  1075                           
  1076 ;; *************** function _sprintf *****************
  1077 ;; Defined at:
  1078 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;  s               2   67[BANK0 ] PTR unsigned char 
  1081 ;;		 -> buffer(20), 
  1082 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
  1083 ;;		 -> STR_5(14), 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  f              12   77[BANK0 ] struct _IO_FILE
  1086 ;;  ap              2   75[BANK0 ] PTR void [1]
  1087 ;;		 -> ?_sprintf(2), 
  1088 ;;  ret             2    0        int 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2   67[BANK0 ] int 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1098 ;;      Params:         0       8       0       0       0       0       0       0       0
  1099 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1101 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1102 ;;Total ram usage:       22 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 7
  1105 ;; This function calls:
  1106 ;;		_vfprintf
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text1
  1113   003010                     __ptext1:
  1114                           	callstack 0
  1115   003010                     _sprintf:
  1116                           	callstack 23
  1117   003010  0EA7               	movlw	low (?_sprintf+4)
  1118   003012  0100               	movlb	0	; () banked
  1119   003014  6FAB               	movwf	sprintf@ap& (0+255),b
  1120   003016  0E00               	movlw	high (?_sprintf+4)
  1121   003018  6FAC               	movwf	(sprintf@ap+1)& (0+255),b
  1122   00301A  C0A3  F0AD         	movff	sprintf@s,sprintf@f
  1123   00301E  C0A4  F0AE         	movff	sprintf@s+1,sprintf@f+1
  1124   003022                     
  1125                           ; BSR set to: 0
  1126   003022  0E00               	movlw	0
  1127   003024  6FB1               	movwf	(sprintf@f+4)& (0+255),b
  1128   003026  0E00               	movlw	0
  1129   003028  6FB0               	movwf	(sprintf@f+3)& (0+255),b
  1130   00302A                     
  1131                           ; BSR set to: 0
  1132   00302A  0E00               	movlw	0
  1133   00302C  6FB8               	movwf	(sprintf@f+11)& (0+255),b
  1134   00302E  0E00               	movlw	0
  1135   003030  6FB7               	movwf	(sprintf@f+10)& (0+255),b
  1136   003032                     
  1137                           ; BSR set to: 0
  1138   003032  0EAD               	movlw	low sprintf@f
  1139   003034  6F9B               	movwf	vfprintf@fp& (0+255),b
  1140   003036  0E00               	movlw	high sprintf@f
  1141   003038  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
  1142   00303A  C0A5  F09D         	movff	sprintf@fmt,vfprintf@fmt
  1143   00303E  C0A6  F09E         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1144   003042  0EAB               	movlw	low sprintf@ap
  1145   003044  6F9F               	movwf	vfprintf@ap& (0+255),b
  1146   003046  0E00               	movlw	high sprintf@ap
  1147   003048  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
  1148   00304A  ECDF  F017         	call	_vfprintf	;wreg free
  1149   00304E  0100               	movlb	0	; () banked
  1150   003050  51B0               	movf	(sprintf@f+3)& (0+255),w,b
  1151   003052  25A3               	addwf	sprintf@s& (0+255),w,b
  1152   003054  6ED9               	movwf	fsr2l,c
  1153   003056  51B1               	movf	(sprintf@f+4)& (0+255),w,b
  1154   003058  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  1155   00305A  6EDA               	movwf	fsr2h,c
  1156   00305C  6ADF               	clrf	indf2,c
  1157   00305E                     
  1158                           ; BSR set to: 0
  1159   00305E  0012               	return		;funcret
  1160   003060                     __end_of_sprintf:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _vfprintf *****************
  1164 ;; Defined at:
  1165 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  1168 ;;		 -> sprintf@f(12), 
  1169 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  1170 ;;		 -> STR_5(14), 
  1171 ;;  ap              2   63[BANK0 ] PTR PTR void 
  1172 ;;		 -> sprintf@ap(2), 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  1175 ;;		 -> STR_5(14), 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  2   59[BANK0 ] int 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1185 ;;      Params:         0       6       0       0       0       0       0       0       0
  1186 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1188 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1189 ;;Total ram usage:        8 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; Hardware stack levels required when called: 6
  1192 ;; This function calls:
  1193 ;;		_vfpfcnvrt
  1194 ;; This function is called by:
  1195 ;;		_sprintf
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text2
  1200   002FBE                     __ptext2:
  1201                           	callstack 0
  1202   002FBE                     _vfprintf:
  1203                           	callstack 23
  1204   002FBE                     
  1205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1206   002FBE  C09D  F0A1         	movff	vfprintf@fmt,vfprintf@cfmt
  1207   002FC2  C09E  F0A2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1208                           
  1209                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1210   002FC6  EFF4  F017         	goto	l3587
  1211   002FCA                     l3585:
  1212                           
  1213                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1214   002FCA  C09B  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1215   002FCE  C09C  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1216   002FD2  0EA1               	movlw	low vfprintf@cfmt
  1217   002FD4  0100               	movlb	0	; () banked
  1218   002FD6  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1219   002FD8  0E00               	movlw	high vfprintf@cfmt
  1220   002FDA  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1221   002FDC  C09F  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1222   002FE0  C0A0  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1223   002FE4  EC97  F00F         	call	_vfpfcnvrt	;wreg free
  1224   002FE8                     l3587:
  1225                           
  1226                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1227   002FE8  C0A1  FFF6         	movff	vfprintf@cfmt,tblptrl
  1228   002FEC  C0A2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1229   002FF0                     	if	0	;tblptru may be non-zero
  1230   002FF0                     	endif
  1231   002FF0                     	if	0	;tblptru may be non-zero
  1232   002FF0                     	endif
  1233   002FF0  0008               	tblrd		*
  1234   002FF2  50F5               	movf	tablat,w,c
  1235   002FF4  0900               	iorlw	0
  1236   002FF6  A4D8               	btfss	status,2,c
  1237   002FF8  EF00  F018         	goto	u3671
  1238   002FFC  EF02  F018         	goto	u3670
  1239   003000                     u3671:
  1240   003000  EFE5  F017         	goto	l3585
  1241   003004                     u3670:
  1242   003004                     
  1243                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1244   003004  0E00               	movlw	0
  1245   003006  0100               	movlb	0	; () banked
  1246   003008  6F9C               	movwf	(?_vfprintf+1)& (0+255),b
  1247   00300A  0E00               	movlw	0
  1248   00300C  6F9B               	movwf	?_vfprintf& (0+255),b
  1249   00300E                     
  1250                           ; BSR set to: 0
  1251   00300E  0012               	return		;funcret
  1252   003010                     __end_of_vfprintf:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _vfpfcnvrt *****************
  1256 ;; Defined at:
  1257 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1260 ;;		 -> sprintf@f(12), 
  1261 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1262 ;;		 -> vfprintf@cfmt(2), 
  1263 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1264 ;;		 -> sprintf@ap(2), 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  convarg         4   50[BANK0 ] struct .
  1267 ;;  cp              2   57[BANK0 ] PTR unsigned char 
  1268 ;;		 -> STR_5(14), 
  1269 ;;  done            2   54[BANK0 ] int 
  1270 ;;  i               2    0        int 
  1271 ;;  c               1   56[BANK0 ] unsigned char 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1281 ;;      Params:         0       6       0       0       0       0       0       0       0
  1282 ;;      Locals:         0       9       0       0       0       0       0       0       0
  1283 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1284 ;;      Totals:         2      15       0       0       0       0       0       0       0
  1285 ;;Total ram usage:       17 bytes
  1286 ;; Hardware stack levels used: 1
  1287 ;; Hardware stack levels required when called: 5
  1288 ;; This function calls:
  1289 ;;		_efgtoa
  1290 ;;		_fputc
  1291 ;;		_read_prec_or_width
  1292 ;; This function is called by:
  1293 ;;		_vfprintf
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text3
  1298   001F2E                     __ptext3:
  1299                           	callstack 0
  1300   001F2E                     _vfpfcnvrt:
  1301                           	callstack 23
  1302   001F2E                     
  1303                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1304   001F2E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1305   001F32  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1306   001F36  CFDE FFF6          	movff	postinc2,tblptrl
  1307   001F3A  CFDD FFF7          	movff	postdec2,tblptrh
  1308   001F3E                     	if	0	;tblptru may be non-zero
  1309   001F3E                     	endif
  1310   001F3E                     	if	0	;tblptru may be non-zero
  1311   001F3E                     	endif
  1312   001F3E  0008               	tblrd		*
  1313   001F40  50F5               	movf	tablat,w,c
  1314   001F42  0A25               	xorlw	37
  1315   001F44  A4D8               	btfss	status,2,c
  1316   001F46  EFA7  F00F         	goto	u3631
  1317   001F4A  EFA9  F00F         	goto	u3630
  1318   001F4E                     u3631:
  1319   001F4E  EFEF  F010         	goto	l3531
  1320   001F52                     u3630:
  1321   001F52                     
  1322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1323   001F52  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1324   001F56  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1325   001F5A  2ADE               	incf	postinc2,f,c
  1326   001F5C  0E00               	movlw	0
  1327   001F5E  22DD               	addwfc	postdec2,f,c
  1328   001F60                     
  1329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1330   001F60  0E00               	movlw	0
  1331   001F62  0100               	movlb	0	; () banked
  1332   001F64  6FC8               	movwf	(_width+1)& (0+255),b
  1333   001F66  0E00               	movlw	0
  1334   001F68  6FC7               	movwf	_width& (0+255),b
  1335   001F6A  C0C7  F0CD         	movff	_width,_flags
  1336   001F6E                     
  1337                           ; BSR set to: 0
  1338                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1339   001F6E  69C9               	setf	_prec& (0+255),b
  1340   001F70  69CA               	setf	(_prec+1)& (0+255),b
  1341   001F72                     
  1342                           ; BSR set to: 0
  1343                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1344   001F72  0E00               	movlw	0
  1345   001F74  6F97               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1346   001F76  0E00               	movlw	0
  1347   001F78  6F96               	movwf	vfpfcnvrt@done& (0+255),b
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1350   001F7A  EFE9  F00F         	goto	l3485
  1351   001F7E                     l3475:
  1352                           
  1353                           ; BSR set to: 0
  1354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1355   001F7E  83CD               	bsf	_flags& (0+255),1,b
  1356   001F80                     
  1357                           ; BSR set to: 0
  1358                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1359   001F80  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1360   001F84  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1361   001F88  2ADE               	incf	postinc2,f,c
  1362   001F8A  0E00               	movlw	0
  1363   001F8C  22DD               	addwfc	postdec2,f,c
  1364                           
  1365                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1366   001F8E  EFE9  F00F         	goto	l3485
  1367   001F92                     l3479:
  1368                           
  1369                           ; BSR set to: 0
  1370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1371   001F92  0E00               	movlw	0
  1372   001F94  6F97               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1373   001F96  0E01               	movlw	1
  1374   001F98  6F96               	movwf	vfpfcnvrt@done& (0+255),b
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1377   001F9A  EFE9  F00F         	goto	l3485
  1378   001F9E                     l3483:
  1379                           
  1380                           ; BSR set to: 0
  1381   001F9E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1382   001FA2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1383   001FA6  CFDE FFF6          	movff	postinc2,tblptrl
  1384   001FAA  CFDD FFF7          	movff	postdec2,tblptrh
  1385   001FAE                     	if	0	;tblptru may be non-zero
  1386   001FAE                     	endif
  1387   001FAE                     	if	0	;tblptru may be non-zero
  1388   001FAE                     	endif
  1389   001FAE  0008               	tblrd		*
  1390   001FB0  50F5               	movf	tablat,w,c
  1391   001FB2  6E5E               	movwf	??_vfpfcnvrt^0,c
  1392   001FB4  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1393                           
  1394                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1395                           ; Switch size 1, requested type "simple"
  1396                           ; Number of cases is 1, Range of values is 0 to 0
  1397                           ; switch strategies available:
  1398                           ; Name         Instructions Cycles
  1399                           ; simple_byte            4     3 (average)
  1400                           ;	Chosen strategy is simple_byte
  1401   001FB6  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1402   001FB8  0A00               	xorlw	0	; case 0
  1403   001FBA  B4D8               	btfsc	status,2,c
  1404   001FBC  EFE2  F00F         	goto	l4015
  1405   001FC0  EFC9  F00F         	goto	l3479
  1406   001FC4                     l4015:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ; Switch size 1, requested type "simple"
  1410                           ; Number of cases is 1, Range of values is 48 to 48
  1411                           ; switch strategies available:
  1412                           ; Name         Instructions Cycles
  1413                           ; simple_byte            4     3 (average)
  1414                           ;	Chosen strategy is simple_byte
  1415   001FC4  505E               	movf	??_vfpfcnvrt^0,w,c
  1416   001FC6  0A30               	xorlw	48	; case 48
  1417   001FC8  B4D8               	btfsc	status,2,c
  1418   001FCA  EFBF  F00F         	goto	l3475
  1419   001FCE  EFC9  F00F         	goto	l3479
  1420   001FD2                     l3485:
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1424   001FD2  5196               	movf	vfpfcnvrt@done& (0+255),w,b
  1425   001FD4  1197               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1426   001FD6  B4D8               	btfsc	status,2,c
  1427   001FD8  EFF0  F00F         	goto	u3641
  1428   001FDC  EFF2  F00F         	goto	u3640
  1429   001FE0                     u3641:
  1430   001FE0  EFCF  F00F         	goto	l3483
  1431   001FE4                     u3640:
  1432   001FE4                     
  1433                           ; BSR set to: 0
  1434                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  1435   001FE4  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1436   001FE8  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1437   001FEC  CFDE FFF6          	movff	postinc2,tblptrl
  1438   001FF0  CFDD FFF7          	movff	postdec2,tblptrh
  1439   001FF4                     	if	0	;tblptru may be non-zero
  1440   001FF4                     	endif
  1441   001FF4                     	if	0	;tblptru may be non-zero
  1442   001FF4                     	endif
  1443   001FF4  0008               	tblrd		*
  1444   001FF6  50F5               	movf	tablat,w,c
  1445   001FF8  0A2E               	xorlw	46
  1446   001FFA  A4D8               	btfss	status,2,c
  1447   001FFC  EF02  F010         	goto	u3651
  1448   002000  EF04  F010         	goto	u3650
  1449   002004                     u3651:
  1450   002004  EF19  F010         	goto	l3493
  1451   002008                     u3650:
  1452   002008                     
  1453                           ; BSR set to: 0
  1454                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  1455   002008  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1456   00200C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1457   002010  2ADE               	incf	postinc2,f,c
  1458   002012  0E00               	movlw	0
  1459   002014  22DD               	addwfc	postdec2,f,c
  1460   002016                     
  1461                           ; BSR set to: 0
  1462                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1463   002016  C08E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1464   00201A  C08F  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1465   00201E  C090  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1466   002022  C091  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1467   002026  EC09  F016         	call	_read_prec_or_width	;wreg free
  1468   00202A  C007  F0C9         	movff	?_read_prec_or_width,_prec
  1469   00202E  C008  F0CA         	movff	?_read_prec_or_width+1,_prec+1
  1470   002032                     l3493:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  1473   002032  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1474   002036  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1475   00203A  CFDE F099          	movff	postinc2,vfpfcnvrt@cp
  1476   00203E  CFDD F09A          	movff	postdec2,vfpfcnvrt@cp+1
  1477   002042                     
  1478                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  1479   002042  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1480   002046  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1481   00204A                     	if	0	;tblptru may be non-zero
  1482   00204A                     	endif
  1483   00204A                     	if	0	;tblptru may be non-zero
  1484   00204A                     	endif
  1485   00204A  0008               	tblrd		*
  1486   00204C  CFF5 F098          	movff	tablat,vfpfcnvrt@c
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  1489   002050  EF36  F010         	goto	l3505
  1490   002054                     l3497:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  1494   002054  4B99               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1495   002056  2B9A               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  1498   002058  EF50  F010         	goto	l3507
  1499   00205C                     l3499:
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  1503   00205C  0E6C               	movlw	108
  1504   00205E  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1505                           
  1506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  1507   002060  EF50  F010         	goto	l3507
  1508   002064                     l3501:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  1512   002064  0E00               	movlw	0
  1513   002066  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  1516   002068  EF50  F010         	goto	l3507
  1517   00206C                     l3505:
  1518   00206C  0100               	movlb	0	; () banked
  1519   00206E  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1520   002070  6E5E               	movwf	??_vfpfcnvrt^0,c
  1521   002072  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1522                           
  1523                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1524                           ; Switch size 1, requested type "simple"
  1525                           ; Number of cases is 1, Range of values is 0 to 0
  1526                           ; switch strategies available:
  1527                           ; Name         Instructions Cycles
  1528                           ; simple_byte            4     3 (average)
  1529                           ;	Chosen strategy is simple_byte
  1530   002074  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1531   002076  0A00               	xorlw	0	; case 0
  1532   002078  B4D8               	btfsc	status,2,c
  1533   00207A  EF41  F010         	goto	l4017
  1534   00207E  EF32  F010         	goto	l3501
  1535   002082                     l4017:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ; Switch size 1, requested type "simple"
  1539                           ; Number of cases is 3, Range of values is 76 to 108
  1540                           ; switch strategies available:
  1541                           ; Name         Instructions Cycles
  1542                           ; simple_byte           10     6 (average)
  1543                           ;	Chosen strategy is simple_byte
  1544   002082  505E               	movf	??_vfpfcnvrt^0,w,c
  1545   002084  0A4C               	xorlw	76	; case 76
  1546   002086  B4D8               	btfsc	status,2,c
  1547   002088  EF2A  F010         	goto	l3497
  1548   00208C  0A2A               	xorlw	42	; case 102
  1549   00208E  B4D8               	btfsc	status,2,c
  1550   002090  EF2E  F010         	goto	l3499
  1551   002094  0A0A               	xorlw	10	; case 108
  1552   002096  B4D8               	btfsc	status,2,c
  1553   002098  EF2A  F010         	goto	l3497
  1554   00209C  EF32  F010         	goto	l3501
  1555   0020A0                     l3507:
  1556                           
  1557                           ; BSR set to: 0
  1558   0020A0  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1559   0020A4  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1560   0020A8                     	if	0	;tblptru may be non-zero
  1561   0020A8                     	endif
  1562   0020A8                     	if	0	;tblptru may be non-zero
  1563   0020A8                     	endif
  1564   0020A8  0008               	tblrd		*
  1565   0020AA  50F5               	movf	tablat,w,c
  1566   0020AC  0A66               	xorlw	102
  1567   0020AE  A4D8               	btfss	status,2,c
  1568   0020B0  EF5C  F010         	goto	u3661
  1569   0020B4  EF5E  F010         	goto	u3660
  1570   0020B8                     u3661:
  1571   0020B8  EFE6  F010         	goto	l3527
  1572   0020BC                     u3660:
  1573   0020BC  EF94  F010         	goto	l3515
  1574   0020C0                     l3509:
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1578   0020C0  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1579   0020C4  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1580   0020C8  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  1581   0020CC  0E04               	movlw	4
  1582   0020CE  26DE               	addwf	postinc2,f,c
  1583   0020D0  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  1584   0020D4  0E00               	movlw	0
  1585   0020D6  22DD               	addwfc	postdec2,f,c
  1586   0020D8  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1587   0020DC  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1588   0020E0  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  1589   0020E4  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  1590   0020E8  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  1591   0020EC  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  1594   0020F0  EFA9  F010         	goto	l3517
  1595   0020F4                     l3511:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1599   0020F4  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1600   0020F8  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1601   0020FC  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  1602   002100  0E04               	movlw	4
  1603   002102  26DE               	addwf	postinc2,f,c
  1604   002104  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  1605   002108  0E00               	movlw	0
  1606   00210A  22DD               	addwfc	postdec2,f,c
  1607   00210C  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1608   002110  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1609   002114  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  1610   002118  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  1611   00211C  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  1612   002120  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  1615   002124  EFA9  F010         	goto	l3517
  1616   002128                     l3515:
  1617                           
  1618                           ; BSR set to: 0
  1619   002128  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1620   00212A  6E5E               	movwf	??_vfpfcnvrt^0,c
  1621   00212C  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1622                           
  1623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1624                           ; Switch size 1, requested type "simple"
  1625                           ; Number of cases is 1, Range of values is 0 to 0
  1626                           ; switch strategies available:
  1627                           ; Name         Instructions Cycles
  1628                           ; simple_byte            4     3 (average)
  1629                           ;	Chosen strategy is simple_byte
  1630   00212E  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1631   002130  0A00               	xorlw	0	; case 0
  1632   002132  B4D8               	btfsc	status,2,c
  1633   002134  EF9E  F010         	goto	l4019
  1634   002138  EFA9  F010         	goto	l3517
  1635   00213C                     l4019:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ; Switch size 1, requested type "simple"
  1639                           ; Number of cases is 2, Range of values is 76 to 108
  1640                           ; switch strategies available:
  1641                           ; Name         Instructions Cycles
  1642                           ; simple_byte            7     4 (average)
  1643                           ;	Chosen strategy is simple_byte
  1644   00213C  505E               	movf	??_vfpfcnvrt^0,w,c
  1645   00213E  0A4C               	xorlw	76	; case 76
  1646   002140  B4D8               	btfsc	status,2,c
  1647   002142  EF7A  F010         	goto	l3511
  1648   002146  0A20               	xorlw	32	; case 108
  1649   002148  B4D8               	btfsc	status,2,c
  1650   00214A  EF60  F010         	goto	l3509
  1651   00214E  EFA9  F010         	goto	l3517
  1652   002152                     l3517:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  1656   002152  0E01               	movlw	1
  1657   002154  2599               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1658   002156  6E5E               	movwf	??_vfpfcnvrt^0,c
  1659   002158  0E00               	movlw	0
  1660   00215A  219A               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1661   00215C  6E5F               	movwf	(??_vfpfcnvrt+1)^0,c
  1662   00215E  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1663   002162  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1664   002166  C05E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1665   00216A  C05F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  1668   00216E  EFD0  F010         	goto	l3525
  1669   002172                     l3519:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1673   002172  C08C  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1674   002176  C08D  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1675   00217A  C092  F057         	movff	vfpfcnvrt@convarg,efgtoa@f
  1676   00217E  C093  F058         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1677   002182  C094  F059         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1678   002186  C095  F05A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1679   00218A  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1680   00218E  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1681   002192                     	if	0	;tblptru may be non-zero
  1682   002192                     	endif
  1683   002192                     	if	0	;tblptru may be non-zero
  1684   002192                     	endif
  1685   002192  0008               	tblrd		*
  1686   002194  CFF5 F05B          	movff	tablat,efgtoa@c
  1687   002198  EC24  F004         	call	_efgtoa	;wreg free
  1688   00219C  EF03  F011         	goto	l976
  1689   0021A0                     l3525:
  1690                           
  1691                           ; BSR set to: 0
  1692   0021A0  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1693   0021A4  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1694   0021A8                     	if	0	;tblptru may be non-zero
  1695   0021A8                     	endif
  1696   0021A8                     	if	0	;tblptru may be non-zero
  1697   0021A8                     	endif
  1698   0021A8  0008               	tblrd		*
  1699   0021AA  50F5               	movf	tablat,w,c
  1700   0021AC  6E5E               	movwf	??_vfpfcnvrt^0,c
  1701   0021AE  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1702                           
  1703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1704                           ; Switch size 1, requested type "simple"
  1705                           ; Number of cases is 1, Range of values is 0 to 0
  1706                           ; switch strategies available:
  1707                           ; Name         Instructions Cycles
  1708                           ; simple_byte            4     3 (average)
  1709                           ;	Chosen strategy is simple_byte
  1710   0021B0  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1711   0021B2  0A00               	xorlw	0	; case 0
  1712   0021B4  B4D8               	btfsc	status,2,c
  1713   0021B6  EFDF  F010         	goto	l4021
  1714   0021BA  EFE6  F010         	goto	l3527
  1715   0021BE                     l4021:
  1716                           
  1717                           ; BSR set to: 0
  1718                           ; Switch size 1, requested type "simple"
  1719                           ; Number of cases is 1, Range of values is 102 to 102
  1720                           ; switch strategies available:
  1721                           ; Name         Instructions Cycles
  1722                           ; simple_byte            4     3 (average)
  1723                           ;	Chosen strategy is simple_byte
  1724   0021BE  505E               	movf	??_vfpfcnvrt^0,w,c
  1725   0021C0  0A66               	xorlw	102	; case 102
  1726   0021C2  B4D8               	btfsc	status,2,c
  1727   0021C4  EFB9  F010         	goto	l3519
  1728   0021C8  EFE6  F010         	goto	l3527
  1729   0021CC                     l3527:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1732   0021CC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1733   0021D0  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1734   0021D4  2ADE               	incf	postinc2,f,c
  1735   0021D6  0E00               	movlw	0
  1736   0021D8  22DD               	addwfc	postdec2,f,c
  1737   0021DA  EF03  F011         	goto	l976
  1738   0021DE                     l3531:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1741   0021DE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1742   0021E2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1743   0021E6  CFDE FFF6          	movff	postinc2,tblptrl
  1744   0021EA  CFDD FFF7          	movff	postdec2,tblptrh
  1745   0021EE                     	if	0	;tblptru may be non-zero
  1746   0021EE                     	endif
  1747   0021EE                     	if	0	;tblptru may be non-zero
  1748   0021EE                     	endif
  1749   0021EE  0008               	tblrd		*
  1750   0021F0  50F5               	movf	tablat,w,c
  1751   0021F2  6E01               	movwf	fputc@c^0,c
  1752   0021F4  6A02               	clrf	(fputc@c+1)^0,c
  1753   0021F6  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1754   0021FA  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1755   0021FE  ECA4  F015         	call	_fputc	;wreg free
  1756   002202  EFE6  F010         	goto	l3527
  1757   002206                     l976:
  1758   002206  0012               	return		;funcret
  1759   002208                     __end_of_vfpfcnvrt:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _read_prec_or_width *****************
  1763 ;; Defined at:
  1764 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  1767 ;;		 -> vfprintf@cfmt(2), 
  1768 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  1769 ;;		 -> sprintf@ap(2), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  c               1   12[COMRAM] unsigned char 
  1772 ;;  n               2   13[COMRAM] int 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  2    6[COMRAM] int 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         4       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1784 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1785 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1786 ;;Total ram usage:        9 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 1
  1789 ;; This function calls:
  1790 ;;		___wmul
  1791 ;; This function is called by:
  1792 ;;		_vfpfcnvrt
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text4
  1797   002C12                     __ptext4:
  1798                           	callstack 0
  1799   002C12                     _read_prec_or_width:
  1800                           	callstack 26
  1801   002C12                     
  1802                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  1803   002C12  0E00               	movlw	0
  1804   002C14  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1805   002C16  0E00               	movlw	0
  1806   002C18  6E0E               	movwf	read_prec_or_width@n^0,c
  1807   002C1A                     
  1808                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  1809   002C1A  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1810   002C1E  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1811   002C22  CFDE FFF6          	movff	postinc2,tblptrl
  1812   002C26  CFDD FFF7          	movff	postdec2,tblptrh
  1813   002C2A                     	if	0	;tblptru may be non-zero
  1814   002C2A                     	endif
  1815   002C2A                     	if	0	;tblptru may be non-zero
  1816   002C2A                     	endif
  1817   002C2A  0008               	tblrd		*
  1818   002C2C  50F5               	movf	tablat,w,c
  1819   002C2E  0A2A               	xorlw	42
  1820   002C30  A4D8               	btfss	status,2,c
  1821   002C32  EF1D  F016         	goto	u3611
  1822   002C36  EF1F  F016         	goto	u3610
  1823   002C3A                     u3611:
  1824   002C3A  EF53  F016         	goto	l3453
  1825   002C3E                     u3610:
  1826   002C3E                     
  1827                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  1828   002C3E  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1829   002C42  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1830   002C46  2ADE               	incf	postinc2,f,c
  1831   002C48  0E00               	movlw	0
  1832   002C4A  22DD               	addwfc	postdec2,f,c
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1835   002C4C  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  1836   002C50  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  1837   002C54  CFDF F00B          	movff	indf2,??_read_prec_or_width
  1838   002C58  0E02               	movlw	2
  1839   002C5A  26DE               	addwf	postinc2,f,c
  1840   002C5C  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  1841   002C60  0E00               	movlw	0
  1842   002C62  22DD               	addwfc	postdec2,f,c
  1843   002C64  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  1844   002C68  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  1845   002C6C  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  1846   002C70  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  1847                           
  1848                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  1849   002C74  EF67  F016         	goto	l945
  1850   002C78                     l3449:
  1851                           
  1852                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  1853   002C78  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  1854   002C7C  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  1855   002C80  0E00               	movlw	0
  1856   002C82  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1857   002C84  0E0A               	movlw	10
  1858   002C86  6E03               	movwf	___wmul@multiplicand^0,c
  1859   002C88  ECF3  F018         	call	___wmul	;wreg free
  1860   002C8C  500D               	movf	read_prec_or_width@c^0,w,c
  1861   002C8E  2401               	addwf	?___wmul^0,w,c
  1862   002C90  6E0E               	movwf	read_prec_or_width@n^0,c
  1863   002C92  0E00               	movlw	0
  1864   002C94  2002               	addwfc	(?___wmul+1)^0,w,c
  1865   002C96  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  1866   002C98                     
  1867                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  1868   002C98  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1869   002C9C  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1870   002CA0  2ADE               	incf	postinc2,f,c
  1871   002CA2  0E00               	movlw	0
  1872   002CA4  22DD               	addwfc	postdec2,f,c
  1873   002CA6                     l3453:
  1874                           
  1875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1876   002CA6  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  1877   002CAA  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  1878   002CAE  CFDE FFF6          	movff	postinc2,tblptrl
  1879   002CB2  CFDD FFF7          	movff	postdec2,tblptrh
  1880   002CB6                     	if	0	;tblptru may be non-zero
  1881   002CB6                     	endif
  1882   002CB6                     	if	0	;tblptru may be non-zero
  1883   002CB6                     	endif
  1884   002CB6  0008               	tblrd		*
  1885   002CB8  50F5               	movf	tablat,w,c
  1886   002CBA  0FD0               	addlw	208
  1887   002CBC  6E0D               	movwf	read_prec_or_width@c^0,c
  1888   002CBE  0E09               	movlw	9
  1889   002CC0  640D               	cpfsgt	read_prec_or_width@c^0,c
  1890   002CC2  EF65  F016         	goto	u3621
  1891   002CC6  EF67  F016         	goto	u3620
  1892   002CCA                     u3621:
  1893   002CCA  EF3C  F016         	goto	l3449
  1894   002CCE                     u3620:
  1895   002CCE                     l945:
  1896                           
  1897                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  1898   002CCE  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  1899   002CD2  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1900   002CD6  0012               	return		;funcret
  1901   002CD8                     __end_of_read_prec_or_width:
  1902                           	callstack 0
  1903                           
  1904 ;; *************** function ___wmul *****************
  1905 ;; Defined at:
  1906 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  multiplier      2    0[COMRAM] unsigned int 
  1909 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  product         2    4[COMRAM] unsigned int 
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  2    0[COMRAM] unsigned int 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, prodl, prodh
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1921 ;;      Params:         4       0       0       0       0       0       0       0       0
  1922 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1923 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1924 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1925 ;;Total ram usage:        6 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_read_prec_or_width
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text5
  1935   0031E6                     __ptext5:
  1936                           	callstack 0
  1937   0031E6                     ___wmul:
  1938                           	callstack 26
  1939   0031E6  5001               	movf	___wmul@multiplier^0,w,c
  1940   0031E8  0203               	mulwf	___wmul@multiplicand^0,c
  1941   0031EA  CFF3 F005          	movff	prodl,___wmul@product
  1942   0031EE  CFF4 F006          	movff	prodh,___wmul@product+1
  1943   0031F2  5001               	movf	___wmul@multiplier^0,w,c
  1944   0031F4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1945   0031F6  50F3               	movf	243,w,c
  1946   0031F8  2606               	addwf	(___wmul@product+1)^0,f,c
  1947   0031FA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1948   0031FC  0203               	mulwf	___wmul@multiplicand^0,c
  1949   0031FE  50F3               	movf	243,w,c
  1950   003200  2606               	addwf	(___wmul@product+1)^0,f,c
  1951   003202  C005  F001         	movff	___wmul@product,?___wmul
  1952   003206  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1953   00320A  0012               	return		;funcret
  1954   00320C                     __end_of___wmul:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _efgtoa *****************
  1958 ;; Defined at:
  1959 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  1962 ;;		 -> sprintf@f(12), 
  1963 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  1964 ;;  c               1   90[COMRAM] unsigned char 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  u               4   40[BANK0 ] struct flui
  1967 ;;  g               4   34[BANK0 ] struct flui
  1968 ;;  l               4   27[BANK0 ] struct flui
  1969 ;;  h               4   23[BANK0 ] struct flui
  1970 ;;  ou              4   19[BANK0 ] struct flui
  1971 ;;  n               2   38[BANK0 ] int 
  1972 ;;  i               2   31[BANK0 ] int 
  1973 ;;  w               2   17[BANK0 ] int 
  1974 ;;  e               2   15[BANK0 ] int 
  1975 ;;  m               2   13[BANK0 ] int 
  1976 ;;  d               2   11[BANK0 ] int 
  1977 ;;  t               2    4[BANK0 ] int 
  1978 ;;  p               2    2[BANK0 ] int 
  1979 ;;  ne              2    0[BANK0 ] int 
  1980 ;;  sign            1   33[BANK0 ] unsigned char 
  1981 ;;  nmode           1   10[BANK0 ] unsigned char 
  1982 ;;  mode            1    9[BANK0 ] unsigned char 
  1983 ;;  pp              1    8[BANK0 ] unsigned char 
  1984 ;;  esign           1    0        unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1994 ;;      Params:         7       0       0       0       0       0       0       0       0
  1995 ;;      Locals:         0      44       0       0       0       0       0       0       0
  1996 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1997 ;;      Totals:         9      44       0       0       0       0       0       0       0
  1998 ;;Total ram usage:       53 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 4
  2001 ;; This function calls:
  2002 ;;		___fladd
  2003 ;;		___fldiv
  2004 ;;		___fleq
  2005 ;;		___flge
  2006 ;;		___flmul
  2007 ;;		___flneg
  2008 ;;		___flsub
  2009 ;;		___fltol
  2010 ;;		___fpclassifyf
  2011 ;;		_floorf
  2012 ;;		_labs
  2013 ;;		_memcpy
  2014 ;;		_pad
  2015 ;;		_strcpy
  2016 ;; This function is called by:
  2017 ;;		_vfpfcnvrt
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text6
  2022   000848                     __ptext6:
  2023                           	callstack 0
  2024   000848                     _efgtoa:
  2025                           	callstack 23
  2026   000848                     
  2027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  2028   000848  0E00               	movlw	0
  2029   00084A  0100               	movlb	0	; () banked
  2030   00084C  6F81               	movwf	efgtoa@sign& (0+255),b
  2031   00084E                     
  2032                           ; BSR set to: 0
  2033                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  2034   00084E  C057  F082         	movff	efgtoa@f,efgtoa@g
  2035   000852  C058  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2036   000856  C059  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2037   00085A  C05A  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2038   00085E                     
  2039                           ; BSR set to: 0
  2040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  2041   00085E  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2042   000860  EF36  F004         	goto	u3260
  2043   000864  EF34  F004         	goto	u3261
  2044   000868                     u3261:
  2045   000868  EF4A  F004         	goto	l3219
  2046   00086C                     u3260:
  2047   00086C                     
  2048                           ; BSR set to: 0
  2049                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  2050   00086C  0E01               	movlw	1
  2051   00086E  6F81               	movwf	efgtoa@sign& (0+255),b
  2052   000870                     
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  2055   000870  C082  F001         	movff	efgtoa@g,___flneg@f1
  2056   000874  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2057   000878  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2058   00087C  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2059   000880  ECBD  F018         	call	___flneg	;wreg free
  2060   000884  C001  F082         	movff	?___flneg,efgtoa@g
  2061   000888  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2062   00088C  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2063   000890  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2064   000894                     l3219:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  2067   000894  0E00               	movlw	0
  2068   000896  0100               	movlb	0	; () banked
  2069   000898  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2070   00089A  0E00               	movlw	0
  2071   00089C  6F86               	movwf	efgtoa@n& (0+255),b
  2072   00089E                     
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  2075   00089E  C0C7  F071         	movff	_width,efgtoa@w
  2076   0008A2  C0C8  F072         	movff	_width+1,efgtoa@w+1
  2077   0008A6                     
  2078                           ; BSR set to: 0
  2079                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  2080   0008A6  5181               	movf	efgtoa@sign& (0+255),w,b
  2081   0008A8  B4D8               	btfsc	status,2,c
  2082   0008AA  EF59  F004         	goto	u3271
  2083   0008AE  EF5B  F004         	goto	u3270
  2084   0008B2                     u3271:
  2085   0008B2  EF6F  F004         	goto	l3233
  2086   0008B6                     u3270:
  2087   0008B6                     
  2088                           ; BSR set to: 0
  2089                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  2090   0008B6  5181               	movf	efgtoa@sign& (0+255),w,b
  2091   0008B8  A4D8               	btfss	status,2,c
  2092   0008BA  EF61  F004         	goto	u3281
  2093   0008BE  EF63  F004         	goto	u3280
  2094   0008C2                     u3281:
  2095   0008C2  EF69  F004         	goto	l3229
  2096   0008C6                     u3280:
  2097   0008C6                     
  2098                           ; BSR set to: 0
  2099   0008C6  0E00               	movlw	0
  2100   0008C8  6F67               	movwf	(_efgtoa$1015+1)& (0+255),b
  2101   0008CA  0E2B               	movlw	43
  2102   0008CC  6F66               	movwf	_efgtoa$1015& (0+255),b
  2103   0008CE  EF6D  F004         	goto	l3231
  2104   0008D2                     l3229:
  2105                           
  2106                           ; BSR set to: 0
  2107   0008D2  0E00               	movlw	0
  2108   0008D4  6F67               	movwf	(_efgtoa$1015+1)& (0+255),b
  2109   0008D6  0E2D               	movlw	45
  2110   0008D8  6F66               	movwf	_efgtoa$1015& (0+255),b
  2111   0008DA                     l3231:
  2112                           
  2113                           ; BSR set to: 0
  2114   0008DA  C066  F081         	movff	_efgtoa$1015,efgtoa@sign
  2115   0008DE                     l3233:
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2119   0008DE  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2120   0008E2  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2121   0008E6  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2122   0008EA  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2123   0008EE  ECBC  F014         	call	___fpclassifyf	;wreg free
  2124   0008F2  0401               	decf	?___fpclassifyf^0,w,c
  2125   0008F4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2126   0008F6  A4D8               	btfss	status,2,c
  2127   0008F8  EF80  F004         	goto	u3291
  2128   0008FC  EF82  F004         	goto	u3290
  2129   000900                     u3291:
  2130   000900  EFB5  F004         	goto	l3251
  2131   000904                     u3290:
  2132   000904                     
  2133                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  2134   000904  0100               	movlb	0	; () banked
  2135   000906  5181               	movf	efgtoa@sign& (0+255),w,b
  2136   000908  B4D8               	btfsc	status,2,c
  2137   00090A  EF89  F004         	goto	u3301
  2138   00090E  EF8B  F004         	goto	u3300
  2139   000912                     u3301:
  2140   000912  EF94  F004         	goto	l3243
  2141   000916                     u3300:
  2142   000916                     
  2143                           ; BSR set to: 0
  2144                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  2145   000916  C081  F100         	movff	efgtoa@sign,_dbuf
  2146   00091A                     
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  2149   00091A  0771               	decf	efgtoa@w& (0+255),f,b
  2150   00091C  A0D8               	btfss	status,0,c
  2151   00091E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2152   000920                     
  2153                           ; BSR set to: 0
  2154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  2155   000920  0E00               	movlw	0
  2156   000922  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2157   000924  0E01               	movlw	1
  2158   000926  6F86               	movwf	efgtoa@n& (0+255),b
  2159   000928                     l3243:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  2163   000928  0E00               	movlw	low _dbuf
  2164   00092A  2586               	addwf	efgtoa@n& (0+255),w,b
  2165   00092C  6E01               	movwf	strcpy@dest^0,c
  2166   00092E  0E01               	movlw	high _dbuf
  2167   000930  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2168   000932  6E02               	movwf	(strcpy@dest+1)^0,c
  2169   000934  0E3E               	movlw	low STR_6
  2170   000936  6E03               	movwf	strcpy@src^0,c
  2171   000938  0E08               	movlw	high STR_6
  2172   00093A  6E04               	movwf	(strcpy@src+1)^0,c
  2173   00093C  EC9D  F018         	call	_strcpy	;wreg free
  2174   000940                     l3245:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2177   000940  0100               	movlb	0	; () banked
  2178   000942  0EFD               	movlw	253
  2179   000944  2771               	addwf	efgtoa@w& (0+255),f,b
  2180   000946  0EFF               	movlw	255
  2181   000948  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2182   00094A                     
  2183                           ; BSR set to: 0
  2184                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2185   00094A  C055  F011         	movff	efgtoa@fp,pad@fp
  2186   00094E  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2187   000952  0E00               	movlw	low _dbuf
  2188   000954  6E13               	movwf	pad@buf^0,c
  2189   000956  0E01               	movlw	high _dbuf
  2190   000958  6E14               	movwf	(pad@buf+1)^0,c
  2191   00095A  C071  F015         	movff	efgtoa@w,pad@p
  2192   00095E  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2193   000962  EC41  F017         	call	_pad	;wreg free
  2194   000966  EF54  F009         	goto	l894
  2195   00096A                     l3251:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2198   00096A  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2199   00096E  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2200   000972  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2201   000976  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2202   00097A  ECBC  F014         	call	___fpclassifyf	;wreg free
  2203   00097E  5001               	movf	?___fpclassifyf^0,w,c
  2204   000980  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2205   000982  A4D8               	btfss	status,2,c
  2206   000984  EFC6  F004         	goto	u3311
  2207   000988  EFC8  F004         	goto	u3310
  2208   00098C                     u3311:
  2209   00098C  EFE8  F004         	goto	l3269
  2210   000990                     u3310:
  2211   000990                     
  2212                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  2213   000990  0100               	movlb	0	; () banked
  2214   000992  5181               	movf	efgtoa@sign& (0+255),w,b
  2215   000994  B4D8               	btfsc	status,2,c
  2216   000996  EFCF  F004         	goto	u3321
  2217   00099A  EFD1  F004         	goto	u3320
  2218   00099E                     u3321:
  2219   00099E  EFDA  F004         	goto	l3261
  2220   0009A2                     u3320:
  2221   0009A2                     
  2222                           ; BSR set to: 0
  2223                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  2224   0009A2  C081  F100         	movff	efgtoa@sign,_dbuf
  2225   0009A6                     
  2226                           ; BSR set to: 0
  2227                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  2228   0009A6  0771               	decf	efgtoa@w& (0+255),f,b
  2229   0009A8  A0D8               	btfss	status,0,c
  2230   0009AA  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2231   0009AC                     
  2232                           ; BSR set to: 0
  2233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  2234   0009AC  0E00               	movlw	0
  2235   0009AE  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2236   0009B0  0E01               	movlw	1
  2237   0009B2  6F86               	movwf	efgtoa@n& (0+255),b
  2238   0009B4                     l3261:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  2242   0009B4  0E00               	movlw	low _dbuf
  2243   0009B6  2586               	addwf	efgtoa@n& (0+255),w,b
  2244   0009B8  6E01               	movwf	strcpy@dest^0,c
  2245   0009BA  0E01               	movlw	high _dbuf
  2246   0009BC  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2247   0009BE  6E02               	movwf	(strcpy@dest+1)^0,c
  2248   0009C0  0E42               	movlw	low STR_9
  2249   0009C2  6E03               	movwf	strcpy@src^0,c
  2250   0009C4  0E08               	movlw	high STR_9
  2251   0009C6  6E04               	movwf	(strcpy@src+1)^0,c
  2252   0009C8  EC9D  F018         	call	_strcpy	;wreg free
  2253   0009CC  EFA0  F004         	goto	l3245
  2254   0009D0                     l3269:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  2257   0009D0  0E00               	movlw	0
  2258   0009D2  0100               	movlb	0	; () banked
  2259   0009D4  6F88               	movwf	efgtoa@u& (0+255),b
  2260   0009D6  0E00               	movlw	0
  2261   0009D8  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2262   0009DA  0E80               	movlw	128
  2263   0009DC  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2264   0009DE  0E3F               	movlw	63
  2265   0009E0  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2266                           
  2267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  2268   0009E2  0E00               	movlw	0
  2269   0009E4  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2270   0009E6  0E00               	movlw	0
  2271   0009E8  6F6F               	movwf	efgtoa@e& (0+255),b
  2272   0009EA                     
  2273                           ; BSR set to: 0
  2274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  2275   0009EA  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2276   0009EE  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2277   0009F2  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2278   0009F6  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2279   0009FA  0E00               	movlw	0
  2280   0009FC  6E05               	movwf	___fleq@ff2^0,c
  2281   0009FE  0E00               	movlw	0
  2282   000A00  6E06               	movwf	(___fleq@ff2+1)^0,c
  2283   000A02  0E00               	movlw	0
  2284   000A04  6E07               	movwf	(___fleq@ff2+2)^0,c
  2285   000A06  0E00               	movlw	0
  2286   000A08  6E08               	movwf	(___fleq@ff2+3)^0,c
  2287   000A0A  EC6C  F016         	call	___fleq	;wreg free
  2288   000A0E  B0D8               	btfsc	status,0,c
  2289   000A10  EF0C  F005         	goto	u3331
  2290   000A14  EF0E  F005         	goto	u3330
  2291   000A18                     u3331:
  2292   000A18  EFED  F005         	goto	l897
  2293   000A1C                     u3330:
  2294   000A1C  EF1B  F005         	goto	l3277
  2295   000A20                     l899:
  2296                           
  2297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  2298   000A20  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2299   000A24  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2300   000A28  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2301   000A2C  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2302   000A30                     
  2303                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  2304   000A30  0100               	movlb	0	; () banked
  2305   000A32  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2306   000A34  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2307   000A36                     l3277:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2310   000A36  C088  F00F         	movff	efgtoa@u,___flmul@b
  2311   000A3A  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2312   000A3E  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2313   000A42  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2314   000A46  0E00               	movlw	0
  2315   000A48  6E13               	movwf	___flmul@a^0,c
  2316   000A4A  0E00               	movlw	0
  2317   000A4C  6E14               	movwf	(___flmul@a+1)^0,c
  2318   000A4E  0E20               	movlw	32
  2319   000A50  6E15               	movwf	(___flmul@a+2)^0,c
  2320   000A52  0E41               	movlw	65
  2321   000A54  6E16               	movwf	(___flmul@a+3)^0,c
  2322   000A56  ECB5  F00B         	call	___flmul	;wreg free
  2323   000A5A  C00F  F073         	movff	?___flmul,efgtoa@ou
  2324   000A5E  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2325   000A62  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2326   000A66  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2327   000A6A  0100               	movlb	0	; () banked
  2328   000A6C  5173               	movf	efgtoa@ou& (0+255),w,b
  2329   000A6E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2330   000A70  6E01               	movwf	labs@a^0,c
  2331   000A72  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2332   000A74  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2333   000A76  6E02               	movwf	(labs@a+1)^0,c
  2334   000A78  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2335   000A7A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2336   000A7C  6E03               	movwf	(labs@a+2)^0,c
  2337   000A7E  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2338   000A80  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2339   000A82  6E04               	movwf	(labs@a+3)^0,c
  2340   000A84  EC7E  F017         	call	_labs	;wreg free
  2341   000A88  BE04               	btfsc	(?_labs+3)^0,7,c
  2342   000A8A  EF52  F005         	goto	u3341
  2343   000A8E  5004               	movf	(?_labs+3)^0,w,c
  2344   000A90  1003               	iorwf	(?_labs+2)^0,w,c
  2345   000A92  1002               	iorwf	(?_labs+1)^0,w,c
  2346   000A94  E109               	bnz	u3340
  2347   000A96  0E02               	movlw	2
  2348   000A98  5C01               	subwf	?_labs^0,w,c
  2349   000A9A  A0D8               	btfss	status,0,c
  2350   000A9C  EF52  F005         	goto	u3341
  2351   000AA0  EF54  F005         	goto	u3340
  2352   000AA4                     u3341:
  2353   000AA4  EF10  F005         	goto	l899
  2354   000AA8                     u3340:
  2355   000AA8  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2356   000AAC  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2357   000AB0  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2358   000AB4  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2359   000AB8  C082  F02C         	movff	efgtoa@g,___flge@ff2
  2360   000ABC  C083  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2361   000AC0  C084  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2362   000AC4  C085  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2363   000AC8  EC3A  F014         	call	___flge	;wreg free
  2364   000ACC  A0D8               	btfss	status,0,c
  2365   000ACE  EF6B  F005         	goto	u3351
  2366   000AD2  EF6D  F005         	goto	u3350
  2367   000AD6                     u3351:
  2368   000AD6  EF10  F005         	goto	l899
  2369   000ADA                     u3350:
  2370   000ADA                     
  2371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2372   000ADA  0100               	movlb	0	; () banked
  2373   000ADC  5188               	movf	efgtoa@u& (0+255),w,b
  2374   000ADE  5D82               	subwf	efgtoa@g& (0+255),w,b
  2375   000AE0  6E01               	movwf	labs@a^0,c
  2376   000AE2  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2377   000AE4  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2378   000AE6  6E02               	movwf	(labs@a+1)^0,c
  2379   000AE8  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2380   000AEA  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2381   000AEC  6E03               	movwf	(labs@a+2)^0,c
  2382   000AEE  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2383   000AF0  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2384   000AF2  6E04               	movwf	(labs@a+3)^0,c
  2385   000AF4  EC7E  F017         	call	_labs	;wreg free
  2386   000AF8  BE04               	btfsc	(?_labs+3)^0,7,c
  2387   000AFA  EF8C  F005         	goto	u3360
  2388   000AFE  5004               	movf	(?_labs+3)^0,w,c
  2389   000B00  1003               	iorwf	(?_labs+2)^0,w,c
  2390   000B02  1002               	iorwf	(?_labs+1)^0,w,c
  2391   000B04  E107               	bnz	u3361
  2392   000B06  0E02               	movlw	2
  2393   000B08  5C01               	subwf	?_labs^0,w,c
  2394   000B0A  B0D8               	btfsc	status,0,c
  2395   000B0C  EF8A  F005         	goto	u3361
  2396   000B10  EF8C  F005         	goto	u3360
  2397   000B14                     u3361:
  2398   000B14  EFD4  F005         	goto	l3295
  2399   000B18                     u3360:
  2400   000B18                     l3285:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  2403   000B18  C088  F082         	movff	efgtoa@u,efgtoa@g
  2404   000B1C  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2405   000B20  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2406   000B24  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  2409   000B28  EFED  F005         	goto	l897
  2410   000B2C                     l3287:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  2413   000B2C  C088  F028         	movff	efgtoa@u,___fldiv@b
  2414   000B30  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2415   000B34  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2416   000B38  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2417   000B3C  0E00               	movlw	0
  2418   000B3E  6E2C               	movwf	___fldiv@a^0,c
  2419   000B40  0E00               	movlw	0
  2420   000B42  6E2D               	movwf	(___fldiv@a+1)^0,c
  2421   000B44  0E20               	movlw	32
  2422   000B46  6E2E               	movwf	(___fldiv@a+2)^0,c
  2423   000B48  0E41               	movlw	65
  2424   000B4A  6E2F               	movwf	(___fldiv@a+3)^0,c
  2425   000B4C  ECCA  F00D         	call	___fldiv	;wreg free
  2426   000B50  C028  F088         	movff	?___fldiv,efgtoa@u
  2427   000B54  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2428   000B58  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2429   000B5C  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2430   000B60                     
  2431                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  2432   000B60  0100               	movlb	0	; () banked
  2433   000B62  076F               	decf	efgtoa@e& (0+255),f,b
  2434   000B64  A0D8               	btfss	status,0,c
  2435   000B66  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2436   000B68                     
  2437                           ; BSR set to: 0
  2438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2439   000B68  5188               	movf	efgtoa@u& (0+255),w,b
  2440   000B6A  5D82               	subwf	efgtoa@g& (0+255),w,b
  2441   000B6C  6E01               	movwf	labs@a^0,c
  2442   000B6E  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2443   000B70  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2444   000B72  6E02               	movwf	(labs@a+1)^0,c
  2445   000B74  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2446   000B76  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2447   000B78  6E03               	movwf	(labs@a+2)^0,c
  2448   000B7A  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2449   000B7C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2450   000B7E  6E04               	movwf	(labs@a+3)^0,c
  2451   000B80  EC7E  F017         	call	_labs	;wreg free
  2452   000B84  BE04               	btfsc	(?_labs+3)^0,7,c
  2453   000B86  EFD2  F005         	goto	u3370
  2454   000B8A  5004               	movf	(?_labs+3)^0,w,c
  2455   000B8C  1003               	iorwf	(?_labs+2)^0,w,c
  2456   000B8E  1002               	iorwf	(?_labs+1)^0,w,c
  2457   000B90  E107               	bnz	u3371
  2458   000B92  0E02               	movlw	2
  2459   000B94  5C01               	subwf	?_labs^0,w,c
  2460   000B96  B0D8               	btfsc	status,0,c
  2461   000B98  EFD0  F005         	goto	u3371
  2462   000B9C  EFD2  F005         	goto	u3370
  2463   000BA0                     u3371:
  2464   000BA0  EFD4  F005         	goto	l3295
  2465   000BA4                     u3370:
  2466   000BA4  EF8C  F005         	goto	l3285
  2467   000BA8                     l3295:
  2468                           
  2469                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  2470   000BA8  C082  F028         	movff	efgtoa@g,___flge@ff1
  2471   000BAC  C083  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2472   000BB0  C084  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2473   000BB4  C085  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2474   000BB8  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2475   000BBC  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2476   000BC0  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2477   000BC4  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2478   000BC8  EC3A  F014         	call	___flge	;wreg free
  2479   000BCC  A0D8               	btfss	status,0,c
  2480   000BCE  EFEB  F005         	goto	u3381
  2481   000BD2  EFED  F005         	goto	u3380
  2482   000BD6                     u3381:
  2483   000BD6  EF96  F005         	goto	l3287
  2484   000BDA                     u3380:
  2485   000BDA                     l897:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  2488   000BDA  C05B  F069         	movff	efgtoa@c,efgtoa@mode
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  2491   000BDE  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2492   000BE2                     
  2493                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  2494   000BE2  0100               	movlb	0	; () banked
  2495   000BE4  BFCA               	btfsc	(_prec+1)& (0+255),7,b
  2496   000BE6  EFF7  F005         	goto	u3391
  2497   000BEA  EFF9  F005         	goto	u3390
  2498   000BEE                     u3391:
  2499   000BEE  EFFF  F005         	goto	l3301
  2500   000BF2                     u3390:
  2501   000BF2                     
  2502                           ; BSR set to: 0
  2503   000BF2  C0C9  F062         	movff	_prec,efgtoa@p
  2504   000BF6  C0CA  F063         	movff	_prec+1,efgtoa@p+1
  2505   000BFA  EF03  F006         	goto	l3303
  2506   000BFE                     l3301:
  2507                           
  2508                           ; BSR set to: 0
  2509   000BFE  0E00               	movlw	0
  2510   000C00  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2511   000C02  0E06               	movlw	6
  2512   000C04  6F62               	movwf	efgtoa@p& (0+255),b
  2513   000C06                     l3303:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  2517   000C06  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2518   000C0A  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2519   000C0E                     
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  2522   000C0E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2523   000C10  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2524   000C12                     
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  2527   000C12  0E66               	movlw	102
  2528   000C14  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2529   000C16  A4D8               	btfss	status,2,c
  2530   000C18  EF10  F006         	goto	u3401
  2531   000C1C  EF12  F006         	goto	u3400
  2532   000C20                     u3401:
  2533   000C20  EF32  F006         	goto	l3317
  2534   000C24                     u3400:
  2535   000C24                     
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  2538   000C24  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2539   000C26  EF19  F006         	goto	u3410
  2540   000C2A  EF17  F006         	goto	u3411
  2541   000C2E                     u3411:
  2542   000C2E  EF25  F006         	goto	l3313
  2543   000C32                     u3410:
  2544   000C32                     
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  2547   000C32  0E00               	movlw	0
  2548   000C34  6F88               	movwf	efgtoa@u& (0+255),b
  2549   000C36  0E00               	movlw	0
  2550   000C38  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2551   000C3A  0E80               	movlw	128
  2552   000C3C  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2553   000C3E  0E3F               	movlw	63
  2554   000C40  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  2557   000C42  0E00               	movlw	0
  2558   000C44  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2559   000C46  0E00               	movlw	0
  2560   000C48  6F6F               	movwf	efgtoa@e& (0+255),b
  2561   000C4A                     l3313:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  2565   000C4A  0E67               	movlw	103
  2566   000C4C  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2567   000C4E  B4D8               	btfsc	status,2,c
  2568   000C50  EF2C  F006         	goto	u3421
  2569   000C54  EF2E  F006         	goto	u3420
  2570   000C58                     u3421:
  2571   000C58  EF32  F006         	goto	l3317
  2572   000C5C                     u3420:
  2573   000C5C                     
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  2576   000C5C  516F               	movf	efgtoa@e& (0+255),w,b
  2577   000C5E  276D               	addwf	efgtoa@m& (0+255),f,b
  2578   000C60  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2579   000C62  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2580   000C64                     l3317:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  2584   000C64  0E00               	movlw	0
  2585   000C66  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2586   000C68  0E00               	movlw	0
  2587   000C6A  6F7F               	movwf	efgtoa@i& (0+255),b
  2588   000C6C                     
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  2591   000C6C  C082  F077         	movff	efgtoa@g,efgtoa@h
  2592   000C70  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  2593   000C74  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  2594   000C78  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  2595   000C7C                     
  2596                           ; BSR set to: 0
  2597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  2598   000C7C  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2599   000C80  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2600   000C84  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2601   000C88  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2604   000C8C  EFC3  F006         	goto	l3331
  2605   000C90                     l3323:
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  2609   000C90  C077  F028         	movff	efgtoa@h,___fldiv@b
  2610   000C94  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2611   000C98  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2612   000C9C  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2613   000CA0  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2614   000CA4  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2615   000CA8  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2616   000CAC  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2617   000CB0  ECCA  F00D         	call	___fldiv	;wreg free
  2618   000CB4  C028  F041         	movff	?___fldiv,floorf@x
  2619   000CB8  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2620   000CBC  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2621   000CC0  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2622   000CC4  EC04  F011         	call	_floorf	;wreg free
  2623   000CC8  C041  F07B         	movff	?_floorf,efgtoa@l
  2624   000CCC  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  2625   000CD0  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  2626   000CD4  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  2629   000CD8  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2630   000CDC  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2631   000CE0  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2632   000CE4  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2633   000CE8  ECB7  F013         	call	___fltol	;wreg free
  2634   000CEC  C001  F06B         	movff	?___fltol,efgtoa@d
  2635   000CF0  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2636   000CF4                     
  2637                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  2638   000CF4  C077  F028         	movff	efgtoa@h,___flsub@b
  2639   000CF8  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  2640   000CFC  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2641   000D00  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2642   000D04  C07B  F013         	movff	efgtoa@l,___flmul@a
  2643   000D08  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  2644   000D0C  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  2645   000D10  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  2646   000D14  C088  F00F         	movff	efgtoa@u,___flmul@b
  2647   000D18  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2648   000D1C  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2649   000D20  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2650   000D24  ECB5  F00B         	call	___flmul	;wreg free
  2651   000D28  C00F  F02C         	movff	?___flmul,___flsub@a
  2652   000D2C  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2653   000D30  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2654   000D34  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2655   000D38  EC58  F018         	call	___flsub	;wreg free
  2656   000D3C  C028  F077         	movff	?___flsub,efgtoa@h
  2657   000D40  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  2658   000D44  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  2659   000D48  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  2660   000D4C                     
  2661                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  2662   000D4C  C088  F028         	movff	efgtoa@u,___fldiv@b
  2663   000D50  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2664   000D54  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2665   000D58  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2666   000D5C  0E00               	movlw	0
  2667   000D5E  6E2C               	movwf	___fldiv@a^0,c
  2668   000D60  0E00               	movlw	0
  2669   000D62  6E2D               	movwf	(___fldiv@a+1)^0,c
  2670   000D64  0E20               	movlw	32
  2671   000D66  6E2E               	movwf	(___fldiv@a+2)^0,c
  2672   000D68  0E41               	movlw	65
  2673   000D6A  6E2F               	movwf	(___fldiv@a+3)^0,c
  2674   000D6C  ECCA  F00D         	call	___fldiv	;wreg free
  2675   000D70  C028  F088         	movff	?___fldiv,efgtoa@u
  2676   000D74  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2677   000D78  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2678   000D7C  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2679   000D80                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  2681   000D80  0100               	movlb	0	; () banked
  2682   000D82  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  2683   000D84  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  2684   000D86                     l3331:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2688   000D86  516D               	movf	efgtoa@m& (0+255),w,b
  2689   000D88  5D7F               	subwf	efgtoa@i& (0+255),w,b
  2690   000D8A  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  2691   000D8C  0A80               	xorlw	128
  2692   000D8E  6E5C               	movwf	??_efgtoa^0,c
  2693   000D90  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2694   000D92  0A80               	xorlw	128
  2695   000D94  585C               	subwfb	??_efgtoa^0,w,c
  2696   000D96  A0D8               	btfss	status,0,c
  2697   000D98  EFD0  F006         	goto	u3431
  2698   000D9C  EFD2  F006         	goto	u3430
  2699   000DA0                     u3431:
  2700   000DA0  EF48  F006         	goto	l3323
  2701   000DA4                     u3430:
  2702   000DA4                     
  2703                           ; BSR set to: 0
  2704                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  2705   000DA4  C088  F00F         	movff	efgtoa@u,___flmul@b
  2706   000DA8  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2707   000DAC  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2708   000DB0  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2709   000DB4  0E00               	movlw	0
  2710   000DB6  6E13               	movwf	___flmul@a^0,c
  2711   000DB8  0E00               	movlw	0
  2712   000DBA  6E14               	movwf	(___flmul@a+1)^0,c
  2713   000DBC  0EA0               	movlw	160
  2714   000DBE  6E15               	movwf	(___flmul@a+2)^0,c
  2715   000DC0  0E40               	movlw	64
  2716   000DC2  6E16               	movwf	(___flmul@a+3)^0,c
  2717   000DC4  ECB5  F00B         	call	___flmul	;wreg free
  2718   000DC8  C00F  F07B         	movff	?___flmul,efgtoa@l
  2719   000DCC  C010  F07C         	movff	?___flmul+1,efgtoa@l+1
  2720   000DD0  C011  F07D         	movff	?___flmul+2,efgtoa@l+2
  2721   000DD4  C012  F07E         	movff	?___flmul+3,efgtoa@l+3
  2722   000DD8                     
  2723                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  2724   000DD8  C077  F028         	movff	efgtoa@h,___flge@ff1
  2725   000DDC  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2726   000DE0  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2727   000DE4  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2728   000DE8  C07B  F02C         	movff	efgtoa@l,___flge@ff2
  2729   000DEC  C07C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2730   000DF0  C07D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2731   000DF4  C07E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2732   000DF8  EC3A  F014         	call	___flge	;wreg free
  2733   000DFC  B0D8               	btfsc	status,0,c
  2734   000DFE  EF03  F007         	goto	u3441
  2735   000E02  EF05  F007         	goto	u3440
  2736   000E06                     u3441:
  2737   000E06  EF10  F007         	goto	l3339
  2738   000E0A                     u3440:
  2739   000E0A                     
  2740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  2741   000E0A  0E00               	movlw	0
  2742   000E0C  0100               	movlb	0	; () banked
  2743   000E0E  6F7B               	movwf	efgtoa@l& (0+255),b
  2744   000E10  0E00               	movlw	0
  2745   000E12  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  2746   000E14  0E00               	movlw	0
  2747   000E16  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  2748   000E18  0E00               	movlw	0
  2749   000E1A  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  2752   000E1C  EF39  F007         	goto	l3345
  2753   000E20                     l3339:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  2756   000E20  C077  F001         	movff	efgtoa@h,___fleq@ff1
  2757   000E24  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2758   000E28  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2759   000E2C  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2760   000E30  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  2761   000E34  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2762   000E38  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2763   000E3C  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2764   000E40  EC6C  F016         	call	___fleq	;wreg free
  2765   000E44  A0D8               	btfss	status,0,c
  2766   000E46  EF27  F007         	goto	u3451
  2767   000E4A  EF29  F007         	goto	u3450
  2768   000E4E                     u3451:
  2769   000E4E  EF39  F007         	goto	l3345
  2770   000E52                     u3450:
  2771   000E52  0100               	movlb	0	; () banked
  2772   000E54  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2773   000E56  EF2F  F007         	goto	u3461
  2774   000E5A  EF31  F007         	goto	u3460
  2775   000E5E                     u3461:
  2776   000E5E  EF39  F007         	goto	l3345
  2777   000E62                     u3460:
  2778   000E62                     
  2779                           ; BSR set to: 0
  2780                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  2781   000E62  0E00               	movlw	0
  2782   000E64  6F7B               	movwf	efgtoa@l& (0+255),b
  2783   000E66  0E00               	movlw	0
  2784   000E68  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  2785   000E6A  0E00               	movlw	0
  2786   000E6C  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  2787   000E6E  0E00               	movlw	0
  2788   000E70  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  2789   000E72                     l3345:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  2792   000E72  C082  F001         	movff	efgtoa@g,___fladd@b
  2793   000E76  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  2794   000E7A  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  2795   000E7E  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  2796   000E82  C07B  F005         	movff	efgtoa@l,___fladd@a
  2797   000E86  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  2798   000E8A  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  2799   000E8E  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  2800   000E92  EC55  F009         	call	___fladd	;wreg free
  2801   000E96  C001  F077         	movff	?___fladd,efgtoa@h
  2802   000E9A  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  2803   000E9E  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  2804   000EA2  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  2805   000EA6                     
  2806                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  2807   000EA6  C077  F028         	movff	efgtoa@h,___flge@ff1
  2808   000EAA  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2809   000EAE  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2810   000EB2  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2811   000EB6  0E00               	movlw	0
  2812   000EB8  6E13               	movwf	___flmul@a^0,c
  2813   000EBA  0E00               	movlw	0
  2814   000EBC  6E14               	movwf	(___flmul@a+1)^0,c
  2815   000EBE  0E20               	movlw	32
  2816   000EC0  6E15               	movwf	(___flmul@a+2)^0,c
  2817   000EC2  0E41               	movlw	65
  2818   000EC4  6E16               	movwf	(___flmul@a+3)^0,c
  2819   000EC6  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2820   000ECA  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2821   000ECE  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2822   000ED2  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2823   000ED6  ECB5  F00B         	call	___flmul	;wreg free
  2824   000EDA  C00F  F02C         	movff	?___flmul,___flge@ff2
  2825   000EDE  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2826   000EE2  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2827   000EE6  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2828   000EEA  EC3A  F014         	call	___flge	;wreg free
  2829   000EEE  A0D8               	btfss	status,0,c
  2830   000EF0  EF7C  F007         	goto	u3471
  2831   000EF4  EF7E  F007         	goto	u3470
  2832   000EF8                     u3471:
  2833   000EF8  EFA7  F007         	goto	l3357
  2834   000EFC                     u3470:
  2835   000EFC                     
  2836                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  2837   000EFC  0100               	movlb	0	; () banked
  2838   000EFE  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2839   000F00  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2840   000F02                     
  2841                           ; BSR set to: 0
  2842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  2843   000F02  C073  F00F         	movff	efgtoa@ou,___flmul@b
  2844   000F06  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  2845   000F0A  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  2846   000F0E  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  2847   000F12  0E00               	movlw	0
  2848   000F14  6E13               	movwf	___flmul@a^0,c
  2849   000F16  0E00               	movlw	0
  2850   000F18  6E14               	movwf	(___flmul@a+1)^0,c
  2851   000F1A  0E20               	movlw	32
  2852   000F1C  6E15               	movwf	(___flmul@a+2)^0,c
  2853   000F1E  0E41               	movlw	65
  2854   000F20  6E16               	movwf	(___flmul@a+3)^0,c
  2855   000F22  ECB5  F00B         	call	___flmul	;wreg free
  2856   000F26  C00F  F073         	movff	?___flmul,efgtoa@ou
  2857   000F2A  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2858   000F2E  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2859   000F32  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2860   000F36                     
  2861                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  2862   000F36  0E66               	movlw	102
  2863   000F38  0100               	movlb	0	; () banked
  2864   000F3A  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2865   000F3C  A4D8               	btfss	status,2,c
  2866   000F3E  EFA3  F007         	goto	u3481
  2867   000F42  EFA5  F007         	goto	u3480
  2868   000F46                     u3481:
  2869   000F46  EFA7  F007         	goto	l3357
  2870   000F4A                     u3480:
  2871   000F4A                     
  2872                           ; BSR set to: 0
  2873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  2874   000F4A  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2875   000F4C  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2876   000F4E                     l3357:
  2877                           
  2878                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  2879   000F4E  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2880   000F52  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2881   000F56  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2882   000F5A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2883   000F5E                     
  2884                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  2885   000F5E  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2886   000F62  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2887   000F66                     
  2888                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  2889   000F66  0E00               	movlw	0
  2890   000F68  0100               	movlb	0	; () banked
  2891   000F6A  6F68               	movwf	efgtoa@pp& (0+255),b
  2892   000F6C                     
  2893                           ; BSR set to: 0
  2894                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  2895   000F6C  0E00               	movlw	0
  2896   000F6E  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2897   000F70  0E00               	movlw	0
  2898   000F72  6F64               	movwf	efgtoa@t& (0+255),b
  2899   000F74                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  2902   000F74  0E00               	movlw	0
  2903   000F76  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2904   000F78  0E00               	movlw	0
  2905   000F7A  6F7F               	movwf	efgtoa@i& (0+255),b
  2906                           
  2907                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2908   000F7C  EFA5  F008         	goto	l3407
  2909   000F80                     l3367:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  2913   000F80  C077  F028         	movff	efgtoa@h,___fldiv@b
  2914   000F84  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2915   000F88  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2916   000F8C  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2917   000F90  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2918   000F94  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2919   000F98  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2920   000F9C  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2921   000FA0  ECCA  F00D         	call	___fldiv	;wreg free
  2922   000FA4  C028  F041         	movff	?___fldiv,floorf@x
  2923   000FA8  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2924   000FAC  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2925   000FB0  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2926   000FB4  EC04  F011         	call	_floorf	;wreg free
  2927   000FB8  C041  F07B         	movff	?_floorf,efgtoa@l
  2928   000FBC  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  2929   000FC0  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  2930   000FC4  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2933   000FC8  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2934   000FCC  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2935   000FD0  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2936   000FD4  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2937   000FD8  ECB7  F013         	call	___fltol	;wreg free
  2938   000FDC  BE02               	btfsc	(?___fltol+1)^0,7,c
  2939   000FDE  EFFC  F007         	goto	u3490
  2940   000FE2  5002               	movf	(?___fltol+1)^0,w,c
  2941   000FE4  E107               	bnz	u3491
  2942   000FE6  0E0A               	movlw	10
  2943   000FE8  5C01               	subwf	?___fltol^0,w,c
  2944   000FEA  B0D8               	btfsc	status,0,c
  2945   000FEC  EFFA  F007         	goto	u3491
  2946   000FF0  EFFC  F007         	goto	u3490
  2947   000FF4                     u3491:
  2948   000FF4  EF0C  F008         	goto	l3371
  2949   000FF8                     u3490:
  2950   000FF8  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2951   000FFC  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2952   001000  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2953   001004  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2954   001008  ECB7  F013         	call	___fltol	;wreg free
  2955   00100C  C001  F06B         	movff	?___fltol,efgtoa@d
  2956   001010  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2957   001014  EF11  F008         	goto	l927
  2958   001018                     l3371:
  2959   001018  0E00               	movlw	0
  2960   00101A  0100               	movlb	0	; () banked
  2961   00101C  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2962   00101E  0E09               	movlw	9
  2963   001020  6F6B               	movwf	efgtoa@d& (0+255),b
  2964   001022                     l927:
  2965                           
  2966                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  2967   001022  0100               	movlb	0	; () banked
  2968   001024  5168               	movf	efgtoa@pp& (0+255),w,b
  2969   001026  A4D8               	btfss	status,2,c
  2970   001028  EF18  F008         	goto	u3501
  2971   00102C  EF1A  F008         	goto	u3500
  2972   001030                     u3501:
  2973   001030  EF42  F008         	goto	l3391
  2974   001034                     u3500:
  2975   001034                     
  2976                           ; BSR set to: 0
  2977   001034  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2978   001036  EF21  F008         	goto	u3510
  2979   00103A  EF1F  F008         	goto	u3511
  2980   00103E                     u3511:
  2981   00103E  EF42  F008         	goto	l3391
  2982   001042                     u3510:
  2983   001042                     
  2984                           ; BSR set to: 0
  2985                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  2986   001042  0E00               	movlw	low _dbuf
  2987   001044  2586               	addwf	efgtoa@n& (0+255),w,b
  2988   001046  6ED9               	movwf	fsr2l,c
  2989   001048  0E01               	movlw	high _dbuf
  2990   00104A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2991   00104C  6EDA               	movwf	fsr2h,c
  2992   00104E  0E2E               	movlw	46
  2993   001050  6EDF               	movwf	indf2,c
  2994   001052                     
  2995                           ; BSR set to: 0
  2996   001052  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2997   001054  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2998   001056                     
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  3001   001056  0771               	decf	efgtoa@w& (0+255),f,b
  3002   001058  A0D8               	btfss	status,0,c
  3003   00105A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3004   00105C                     
  3005                           ; BSR set to: 0
  3006                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  3007   00105C  0E01               	movlw	1
  3008   00105E  6F68               	movwf	efgtoa@pp& (0+255),b
  3009   001060  EF42  F008         	goto	l3391
  3010   001064                     l3383:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  3014   001064  0E00               	movlw	low _dbuf
  3015   001066  2586               	addwf	efgtoa@n& (0+255),w,b
  3016   001068  6ED9               	movwf	fsr2l,c
  3017   00106A  0E01               	movlw	high _dbuf
  3018   00106C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3019   00106E  6EDA               	movwf	fsr2h,c
  3020   001070  0E30               	movlw	48
  3021   001072  6EDF               	movwf	indf2,c
  3022   001074                     
  3023                           ; BSR set to: 0
  3024   001074  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3025   001076  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3026   001078                     
  3027                           ; BSR set to: 0
  3028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  3029   001078  0771               	decf	efgtoa@w& (0+255),f,b
  3030   00107A  A0D8               	btfss	status,0,c
  3031   00107C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3032   00107E                     
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  3035   00107E  0764               	decf	efgtoa@t& (0+255),f,b
  3036   001080  A0D8               	btfss	status,0,c
  3037   001082  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3038   001084                     l3391:
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  3042   001084  5164               	movf	efgtoa@t& (0+255),w,b
  3043   001086  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3044   001088  A4D8               	btfss	status,2,c
  3045   00108A  EF49  F008         	goto	u3521
  3046   00108E  EF4B  F008         	goto	u3520
  3047   001092                     u3521:
  3048   001092  EF32  F008         	goto	l3383
  3049   001096                     u3520:
  3050   001096                     
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3053   001096  0E00               	movlw	low _dbuf
  3054   001098  2586               	addwf	efgtoa@n& (0+255),w,b
  3055   00109A  6ED9               	movwf	fsr2l,c
  3056   00109C  0E01               	movlw	high _dbuf
  3057   00109E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3058   0010A0  6EDA               	movwf	fsr2h,c
  3059   0010A2  516B               	movf	efgtoa@d& (0+255),w,b
  3060   0010A4  0F30               	addlw	48
  3061   0010A6  6EDF               	movwf	indf2,c
  3062   0010A8                     
  3063                           ; BSR set to: 0
  3064   0010A8  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3065   0010AA  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3066   0010AC                     
  3067                           ; BSR set to: 0
  3068                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  3069   0010AC  0771               	decf	efgtoa@w& (0+255),f,b
  3070   0010AE  A0D8               	btfss	status,0,c
  3071   0010B0  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3072   0010B2                     
  3073                           ; BSR set to: 0
  3074                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  3075   0010B2  C077  F028         	movff	efgtoa@h,___flsub@b
  3076   0010B6  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  3077   0010BA  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3078   0010BE  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3079   0010C2  C07B  F013         	movff	efgtoa@l,___flmul@a
  3080   0010C6  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  3081   0010CA  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  3082   0010CE  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  3083   0010D2  C088  F00F         	movff	efgtoa@u,___flmul@b
  3084   0010D6  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3085   0010DA  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3086   0010DE  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3087   0010E2  ECB5  F00B         	call	___flmul	;wreg free
  3088   0010E6  C00F  F02C         	movff	?___flmul,___flsub@a
  3089   0010EA  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3090   0010EE  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3091   0010F2  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3092   0010F6  EC58  F018         	call	___flsub	;wreg free
  3093   0010FA  C028  F077         	movff	?___flsub,efgtoa@h
  3094   0010FE  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  3095   001102  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  3096   001106  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  3097   00110A                     
  3098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  3099   00110A  C088  F028         	movff	efgtoa@u,___fldiv@b
  3100   00110E  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3101   001112  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3102   001116  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3103   00111A  0E00               	movlw	0
  3104   00111C  6E2C               	movwf	___fldiv@a^0,c
  3105   00111E  0E00               	movlw	0
  3106   001120  6E2D               	movwf	(___fldiv@a+1)^0,c
  3107   001122  0E20               	movlw	32
  3108   001124  6E2E               	movwf	(___fldiv@a+2)^0,c
  3109   001126  0E41               	movlw	65
  3110   001128  6E2F               	movwf	(___fldiv@a+3)^0,c
  3111   00112A  ECCA  F00D         	call	___fldiv	;wreg free
  3112   00112E  C028  F088         	movff	?___fldiv,efgtoa@u
  3113   001132  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3114   001136  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3115   00113A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3116   00113E                     
  3117                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  3118   00113E  0100               	movlb	0	; () banked
  3119   001140  0760               	decf	efgtoa@ne& (0+255),f,b
  3120   001142  A0D8               	btfss	status,0,c
  3121   001144  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3122   001146                     
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  3125   001146  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3126   001148  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3127   00114A                     l3407:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3131   00114A  516D               	movf	efgtoa@m& (0+255),w,b
  3132   00114C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3133   00114E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3134   001150  0A80               	xorlw	128
  3135   001152  6E5C               	movwf	??_efgtoa^0,c
  3136   001154  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3137   001156  0A80               	xorlw	128
  3138   001158  585C               	subwfb	??_efgtoa^0,w,c
  3139   00115A  B0D8               	btfsc	status,0,c
  3140   00115C  EFB2  F008         	goto	u3531
  3141   001160  EFB4  F008         	goto	u3530
  3142   001164                     u3531:
  3143   001164  EFC2  F008         	goto	l3411
  3144   001168                     u3530:
  3145   001168                     
  3146                           ; BSR set to: 0
  3147   001168  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3148   00116A  EFC0  F008         	goto	u3541
  3149   00116E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3150   001170  E109               	bnz	u3540
  3151   001172  0E4B               	movlw	75
  3152   001174  5D86               	subwf	efgtoa@n& (0+255),w,b
  3153   001176  A0D8               	btfss	status,0,c
  3154   001178  EFC0  F008         	goto	u3541
  3155   00117C  EFC2  F008         	goto	u3540
  3156   001180                     u3541:
  3157   001180  EFC0  F007         	goto	l3367
  3158   001184                     u3540:
  3159   001184                     l3411:
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  3163   001184  0E00               	movlw	0
  3164   001186  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3165   001188  0E4F               	movlw	79
  3166   00118A  6F7F               	movwf	efgtoa@i& (0+255),b
  3167   00118C                     
  3168                           ; BSR set to: 0
  3169                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  3170   00118C  0E00               	movlw	low _dbuf
  3171   00118E  257F               	addwf	efgtoa@i& (0+255),w,b
  3172   001190  6ED9               	movwf	fsr2l,c
  3173   001192  0E01               	movlw	high _dbuf
  3174   001194  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3175   001196  6EDA               	movwf	fsr2h,c
  3176   001198  6ADF               	clrf	indf2,c
  3177   00119A                     
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3180   00119A  0E00               	movlw	low _dbuf
  3181   00119C  6E5C               	movwf	??_efgtoa^0,c
  3182   00119E  0E01               	movlw	high _dbuf
  3183   0011A0  6E5D               	movwf	(??_efgtoa+1)^0,c
  3184   0011A2  5186               	movf	efgtoa@n& (0+255),w,b
  3185   0011A4  5E5C               	subwf	??_efgtoa^0,f,c
  3186   0011A6  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3187   0011A8  5A5D               	subwfb	(??_efgtoa+1)^0,f,c
  3188   0011AA  517F               	movf	efgtoa@i& (0+255),w,b
  3189   0011AC  245C               	addwf	??_efgtoa^0,w,c
  3190   0011AE  6E01               	movwf	memcpy@d1^0,c
  3191   0011B0  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3192   0011B2  205D               	addwfc	(??_efgtoa+1)^0,w,c
  3193   0011B4  6E02               	movwf	(memcpy@d1+1)^0,c
  3194   0011B6  0E00               	movlw	low _dbuf
  3195   0011B8  6E03               	movwf	memcpy@s1^0,c
  3196   0011BA  0E01               	movlw	high _dbuf
  3197   0011BC  6E04               	movwf	(memcpy@s1+1)^0,c
  3198   0011BE  C086  F005         	movff	efgtoa@n,memcpy@n
  3199   0011C2  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3200   0011C6  EC30  F018         	call	_memcpy	;wreg free
  3201   0011CA                     
  3202                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  3203   0011CA  0100               	movlb	0	; () banked
  3204   0011CC  5186               	movf	efgtoa@n& (0+255),w,b
  3205   0011CE  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3206   0011D0  6F86               	movwf	efgtoa@n& (0+255),b
  3207   0011D2  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3208   0011D4  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3209   0011D6  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3210   0011D8                     
  3211                           ; BSR set to: 0
  3212                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  3213   0011D8  5181               	movf	efgtoa@sign& (0+255),w,b
  3214   0011DA  A4D8               	btfss	status,2,c
  3215   0011DC  EFF2  F008         	goto	u3551
  3216   0011E0  EFF5  F008         	goto	u3550
  3217   0011E4                     u3551:
  3218   0011E4  0E01               	movlw	1
  3219   0011E6  EFF6  F008         	goto	u3560
  3220   0011EA                     u3550:
  3221   0011EA  0E00               	movlw	0
  3222   0011EC                     u3560:
  3223   0011EC  6F7F               	movwf	efgtoa@i& (0+255),b
  3224   0011EE  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  3225   0011F0                     
  3226                           ; BSR set to: 0
  3227                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 797:  if (flags &
      +                           (1 << 1)) {
  3228   0011F0  A3CD               	btfss	_flags& (0+255),1,b
  3229   0011F2  EFFD  F008         	goto	u3571
  3230   0011F6  EFFF  F008         	goto	u3570
  3231   0011FA                     u3571:
  3232   0011FA  EF2D  F009         	goto	l3433
  3233   0011FE                     u3570:
  3234   0011FE  EF0F  F009         	goto	l3429
  3235   001202                     l3425:
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 799:    dbuf[--n]
      +                           = '0';
  3239   001202  0786               	decf	efgtoa@n& (0+255),f,b
  3240   001204  A0D8               	btfss	status,0,c
  3241   001206  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3242   001208  0E00               	movlw	low _dbuf
  3243   00120A  2586               	addwf	efgtoa@n& (0+255),w,b
  3244   00120C  6ED9               	movwf	fsr2l,c
  3245   00120E  0E01               	movlw	high _dbuf
  3246   001210  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3247   001212  6EDA               	movwf	fsr2h,c
  3248   001214  0E30               	movlw	48
  3249   001216  6EDF               	movwf	indf2,c
  3250   001218                     
  3251                           ; BSR set to: 0
  3252                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 800:    w--;
  3253   001218  0771               	decf	efgtoa@w& (0+255),f,b
  3254   00121A  A0D8               	btfss	status,0,c
  3255   00121C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3256   00121E                     l3429:
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 798:   while (w >
      +                           i && n > i) {
  3260   00121E  5171               	movf	efgtoa@w& (0+255),w,b
  3261   001220  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3262   001222  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3263   001224  0A80               	xorlw	128
  3264   001226  6E5C               	movwf	??_efgtoa^0,c
  3265   001228  5172               	movf	(efgtoa@w+1)& (0+255),w,b
  3266   00122A  0A80               	xorlw	128
  3267   00122C  585C               	subwfb	??_efgtoa^0,w,c
  3268   00122E  B0D8               	btfsc	status,0,c
  3269   001230  EF1C  F009         	goto	u3581
  3270   001234  EF1E  F009         	goto	u3580
  3271   001238                     u3581:
  3272   001238  EF2D  F009         	goto	l3433
  3273   00123C                     u3580:
  3274   00123C                     
  3275                           ; BSR set to: 0
  3276   00123C  5186               	movf	efgtoa@n& (0+255),w,b
  3277   00123E  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3278   001240  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3279   001242  0A80               	xorlw	128
  3280   001244  6E5C               	movwf	??_efgtoa^0,c
  3281   001246  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3282   001248  0A80               	xorlw	128
  3283   00124A  585C               	subwfb	??_efgtoa^0,w,c
  3284   00124C  A0D8               	btfss	status,0,c
  3285   00124E  EF2B  F009         	goto	u3591
  3286   001252  EF2D  F009         	goto	u3590
  3287   001256                     u3591:
  3288   001256  EF01  F009         	goto	l3425
  3289   00125A                     u3590:
  3290   00125A                     l3433:
  3291                           
  3292                           ; BSR set to: 0
  3293                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  3294   00125A  5181               	movf	efgtoa@sign& (0+255),w,b
  3295   00125C  B4D8               	btfsc	status,2,c
  3296   00125E  EF33  F009         	goto	u3601
  3297   001262  EF35  F009         	goto	u3600
  3298   001266                     u3601:
  3299   001266  EF40  F009         	goto	l3437
  3300   00126A                     u3600:
  3301   00126A                     
  3302                           ; BSR set to: 0
  3303                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  3304   00126A  0786               	decf	efgtoa@n& (0+255),f,b
  3305   00126C  A0D8               	btfss	status,0,c
  3306   00126E  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3307   001270  0E00               	movlw	low _dbuf
  3308   001272  2586               	addwf	efgtoa@n& (0+255),w,b
  3309   001274  6ED9               	movwf	fsr2l,c
  3310   001276  0E01               	movlw	high _dbuf
  3311   001278  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3312   00127A  6EDA               	movwf	fsr2h,c
  3313   00127C  C081  FFDF         	movff	efgtoa@sign,indf2
  3314   001280                     l3437:
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  3318   001280  517F               	movf	efgtoa@i& (0+255),w,b
  3319   001282  5F71               	subwf	efgtoa@w& (0+255),f,b
  3320   001284  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3321   001286  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3322   001288                     
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3325   001288  C055  F011         	movff	efgtoa@fp,pad@fp
  3326   00128C  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3327   001290  0E00               	movlw	low _dbuf
  3328   001292  2586               	addwf	efgtoa@n& (0+255),w,b
  3329   001294  6E13               	movwf	pad@buf^0,c
  3330   001296  0E01               	movlw	high _dbuf
  3331   001298  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3332   00129A  6E14               	movwf	(pad@buf+1)^0,c
  3333   00129C  C071  F015         	movff	efgtoa@w,pad@p
  3334   0012A0  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3335   0012A4  EC41  F017         	call	_pad	;wreg free
  3336   0012A8                     l894:
  3337   0012A8  0012               	return		;funcret
  3338   0012AA                     __end_of_efgtoa:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function _strcpy *****************
  3342 ;; Defined at:
  3343 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3346 ;;		 -> dbuf(80), 
  3347 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3348 ;;		 -> STR_9(4), STR_6(4), 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  d               2    6[COMRAM] PTR unsigned char 
  3351 ;;		 -> dbuf(80), 
  3352 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3353 ;;		 -> STR_9(4), STR_6(4), 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  2    0[COMRAM] PTR unsigned char 
  3356 ;; Registers used:
  3357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3363 ;;      Params:         4       0       0       0       0       0       0       0       0
  3364 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3366 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3367 ;;Total ram usage:        8 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_efgtoa
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           	psect	text7
  3377   00313A                     __ptext7:
  3378                           	callstack 0
  3379   00313A                     _strcpy:
  3380                           	callstack 26
  3381   00313A  C003  F005         	movff	strcpy@src,strcpy@s
  3382   00313E  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3383   003142  C001  F007         	movff	strcpy@dest,strcpy@d
  3384   003146  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3385   00314A                     l3147:
  3386   00314A  C005  FFF6         	movff	strcpy@s,tblptrl
  3387   00314E  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3388   003152  4A05               	infsnz	strcpy@s^0,f,c
  3389   003154  2A06               	incf	(strcpy@s+1)^0,f,c
  3390   003156                     	if	0	;tblptru may be non-zero
  3391   003156                     	endif
  3392   003156                     	if	0	;tblptru may be non-zero
  3393   003156                     	endif
  3394   003156  C007  FFD9         	movff	strcpy@d,fsr2l
  3395   00315A  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3396   00315E  4A07               	infsnz	strcpy@d^0,f,c
  3397   003160  2A08               	incf	(strcpy@d+1)^0,f,c
  3398   003162  0008               	tblrd		*
  3399   003164  CFF5 FFDF          	movff	tablat,indf2
  3400   003168  50DF               	movf	indf2,w,c
  3401   00316A  A4D8               	btfss	status,2,c
  3402   00316C  EFBA  F018         	goto	u3091
  3403   003170  EFBC  F018         	goto	u3090
  3404   003174                     u3091:
  3405   003174  EFA5  F018         	goto	l3147
  3406   003178                     u3090:
  3407   003178  0012               	return		;funcret
  3408   00317A                     __end_of_strcpy:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _pad *****************
  3412 ;; Defined at:
  3413 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3416 ;;		 -> sprintf@f(12), 
  3417 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3418 ;;		 -> dbuf(80), 
  3419 ;;  p               2   20[COMRAM] int 
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;  w               2   25[COMRAM] int 
  3422 ;;  i               2   23[COMRAM] int 
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3432 ;;      Params:         6       0       0       0       0       0       0       0       0
  3433 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3434 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3435 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3436 ;;Total ram usage:       11 bytes
  3437 ;; Hardware stack levels used: 1
  3438 ;; Hardware stack levels required when called: 3
  3439 ;; This function calls:
  3440 ;;		_fputc
  3441 ;;		_fputs
  3442 ;; This function is called by:
  3443 ;;		_efgtoa
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text8
  3448   002E82                     __ptext8:
  3449                           	callstack 0
  3450   002E82                     _pad:
  3451                           	callstack 23
  3452   002E82                     
  3453                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3454   002E82  BE16               	btfsc	(pad@p+1)^0,7,c
  3455   002E84  EF46  F017         	goto	u3001
  3456   002E88  EF48  F017         	goto	u3000
  3457   002E8C                     u3001:
  3458   002E8C  EF4E  F017         	goto	l3113
  3459   002E90                     u3000:
  3460   002E90  C015  F01A         	movff	pad@p,pad@w
  3461   002E94  C016  F01B         	movff	pad@p+1,pad@w+1
  3462   002E98  EF52  F017         	goto	l879
  3463   002E9C                     l3113:
  3464   002E9C  0E00               	movlw	0
  3465   002E9E  6E1B               	movwf	(pad@w+1)^0,c
  3466   002EA0  0E00               	movlw	0
  3467   002EA2  6E1A               	movwf	pad@w^0,c
  3468   002EA4                     l879:
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3471   002EA4  0E00               	movlw	0
  3472   002EA6  6E19               	movwf	(pad@i+1)^0,c
  3473   002EA8  0E00               	movlw	0
  3474   002EAA  6E18               	movwf	pad@i^0,c
  3475                           
  3476                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3477   002EAC  EF64  F017         	goto	l3119
  3478   002EB0                     l3115:
  3479                           
  3480                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3481   002EB0  0E00               	movlw	0
  3482   002EB2  6E02               	movwf	(fputc@c+1)^0,c
  3483   002EB4  0E20               	movlw	32
  3484   002EB6  6E01               	movwf	fputc@c^0,c
  3485   002EB8  C011  F003         	movff	pad@fp,fputc@fp
  3486   002EBC  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3487   002EC0  ECA4  F015         	call	_fputc	;wreg free
  3488   002EC4                     
  3489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3490   002EC4  4A18               	infsnz	pad@i^0,f,c
  3491   002EC6  2A19               	incf	(pad@i+1)^0,f,c
  3492   002EC8                     l3119:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3495   002EC8  501A               	movf	pad@w^0,w,c
  3496   002ECA  5C18               	subwf	pad@i^0,w,c
  3497   002ECC  5019               	movf	(pad@i+1)^0,w,c
  3498   002ECE  0A80               	xorlw	128
  3499   002ED0  6E17               	movwf	??_pad^0,c
  3500   002ED2  501B               	movf	(pad@w+1)^0,w,c
  3501   002ED4  0A80               	xorlw	128
  3502   002ED6  5817               	subwfb	??_pad^0,w,c
  3503   002ED8  A0D8               	btfss	status,0,c
  3504   002EDA  EF71  F017         	goto	u3011
  3505   002EDE  EF73  F017         	goto	u3010
  3506   002EE2                     u3011:
  3507   002EE2  EF58  F017         	goto	l3115
  3508   002EE6                     u3010:
  3509   002EE6                     
  3510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3511   002EE6  C013  F00A         	movff	pad@buf,fputs@s
  3512   002EEA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3513   002EEE  C011  F00C         	movff	pad@fp,fputs@fp
  3514   002EF2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3515   002EF6  EC7B  F018         	call	_fputs	;wreg free
  3516   002EFA  0012               	return		;funcret
  3517   002EFC                     __end_of_pad:
  3518                           	callstack 0
  3519                           
  3520 ;; *************** function _fputs *****************
  3521 ;; Defined at:
  3522 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3525 ;;		 -> dbuf(80), 
  3526 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3527 ;;		 -> sprintf@f(12), 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  i               2   14[COMRAM] int 
  3530 ;;  c               1   13[COMRAM] unsigned char 
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  2    9[COMRAM] int 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3540 ;;      Params:         4       0       0       0       0       0       0       0       0
  3541 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3543 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3544 ;;Total ram usage:        7 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 2
  3547 ;; This function calls:
  3548 ;;		_fputc
  3549 ;; This function is called by:
  3550 ;;		_pad
  3551 ;; This function uses a non-reentrant model
  3552 ;;
  3553                           
  3554                           	psect	text9
  3555   0030F6                     __ptext9:
  3556                           	callstack 0
  3557   0030F6                     _fputs:
  3558                           	callstack 23
  3559   0030F6  0E00               	movlw	0
  3560   0030F8  6E10               	movwf	(fputs@i+1)^0,c
  3561   0030FA  0E00               	movlw	0
  3562   0030FC  6E0F               	movwf	fputs@i^0,c
  3563   0030FE  EF8C  F018         	goto	l2737
  3564   003102                     l2733:
  3565   003102  C00E  F001         	movff	fputs@c,fputc@c
  3566   003106  6A02               	clrf	(fputc@c+1)^0,c
  3567   003108  C00C  F003         	movff	fputs@fp,fputc@fp
  3568   00310C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3569   003110  ECA4  F015         	call	_fputc	;wreg free
  3570   003114  4A0F               	infsnz	fputs@i^0,f,c
  3571   003116  2A10               	incf	(fputs@i+1)^0,f,c
  3572   003118                     l2737:
  3573   003118  500F               	movf	fputs@i^0,w,c
  3574   00311A  240A               	addwf	fputs@s^0,w,c
  3575   00311C  6ED9               	movwf	fsr2l,c
  3576   00311E  5010               	movf	(fputs@i+1)^0,w,c
  3577   003120  200B               	addwfc	(fputs@s+1)^0,w,c
  3578   003122  6EDA               	movwf	fsr2h,c
  3579   003124  50DF               	movf	indf2,w,c
  3580   003126  6E0E               	movwf	fputs@c^0,c
  3581   003128  500E               	movf	fputs@c^0,w,c
  3582   00312A  A4D8               	btfss	status,2,c
  3583   00312C  EF9A  F018         	goto	u2411
  3584   003130  EF9C  F018         	goto	u2410
  3585   003134                     u2411:
  3586   003134  EF81  F018         	goto	l2733
  3587   003138                     u2410:
  3588   003138  0012               	return		;funcret
  3589   00313A                     __end_of_fputs:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _fputc *****************
  3593 ;; Defined at:
  3594 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  c               2    0[COMRAM] int 
  3597 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3598 ;;		 -> sprintf@f(12), 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2    0[COMRAM] int 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3610 ;;      Params:         4       0       0       0       0       0       0       0       0
  3611 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3612 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3613 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3614 ;;Total ram usage:        9 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 1
  3617 ;; This function calls:
  3618 ;;		_putch
  3619 ;; This function is called by:
  3620 ;;		_pad
  3621 ;;		_vfpfcnvrt
  3622 ;;		_fputs
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text10
  3627   002B48                     __ptext10:
  3628                           	callstack 0
  3629   002B48                     _fputc:
  3630                           	callstack 26
  3631   002B48  5003               	movf	fputc@fp^0,w,c
  3632   002B4A  1004               	iorwf	(fputc@fp+1)^0,w,c
  3633   002B4C  B4D8               	btfsc	status,2,c
  3634   002B4E  EFAB  F015         	goto	u1981
  3635   002B52  EFAD  F015         	goto	u1980
  3636   002B56                     u1981:
  3637   002B56  EFB6  F015         	goto	l2519
  3638   002B5A                     u1980:
  3639   002B5A  5003               	movf	fputc@fp^0,w,c
  3640   002B5C  1004               	iorwf	(fputc@fp+1)^0,w,c
  3641   002B5E  A4D8               	btfss	status,2,c
  3642   002B60  EFB4  F015         	goto	u1991
  3643   002B64  EFB6  F015         	goto	u1990
  3644   002B68                     u1991:
  3645   002B68  EFBB  F015         	goto	l2521
  3646   002B6C                     u1990:
  3647   002B6C                     l2519:
  3648   002B6C  5001               	movf	fputc@c^0,w,c
  3649   002B6E  EC41  F019         	call	_putch
  3650   002B72  EF08  F016         	goto	l1032
  3651   002B76                     l2521:
  3652   002B76  EE20 F00A          	lfsr	2,10
  3653   002B7A  5003               	movf	fputc@fp^0,w,c
  3654   002B7C  26D9               	addwf	fsr2l,f,c
  3655   002B7E  5004               	movf	(fputc@fp+1)^0,w,c
  3656   002B80  22DA               	addwfc	fsr2h,f,c
  3657   002B82  50DE               	movf	postinc2,w,c
  3658   002B84  10DE               	iorwf	postinc2,w,c
  3659   002B86  B4D8               	btfsc	status,2,c
  3660   002B88  EFC8  F015         	goto	u2001
  3661   002B8C  EFCA  F015         	goto	u2000
  3662   002B90                     u2001:
  3663   002B90  EFE5  F015         	goto	l2525
  3664   002B94                     u2000:
  3665   002B94  EE20 F00A          	lfsr	2,10
  3666   002B98  5003               	movf	fputc@fp^0,w,c
  3667   002B9A  26D9               	addwf	fsr2l,f,c
  3668   002B9C  5004               	movf	(fputc@fp+1)^0,w,c
  3669   002B9E  22DA               	addwfc	fsr2h,f,c
  3670   002BA0  EE10 F003          	lfsr	1,3
  3671   002BA4  5003               	movf	fputc@fp^0,w,c
  3672   002BA6  26E1               	addwf	fsr1l,f,c
  3673   002BA8  5004               	movf	(fputc@fp+1)^0,w,c
  3674   002BAA  22E2               	addwfc	fsr1h,f,c
  3675   002BAC  50DE               	movf	postinc2,w,c
  3676   002BAE  5CE6               	subwf	postinc1,w,c
  3677   002BB0  50E6               	movf	postinc1,w,c
  3678   002BB2  0A80               	xorlw	128
  3679   002BB4  6E09               	movwf	(??_fputc+4)^0,c
  3680   002BB6  50DE               	movf	postinc2,w,c
  3681   002BB8  0A80               	xorlw	128
  3682   002BBA  5809               	subwfb	(??_fputc+4)^0,w,c
  3683   002BBC  B0D8               	btfsc	status,0,c
  3684   002BBE  EFE3  F015         	goto	u2011
  3685   002BC2  EFE5  F015         	goto	u2010
  3686   002BC6                     u2011:
  3687   002BC6  EF08  F016         	goto	l1032
  3688   002BCA                     u2010:
  3689   002BCA                     l2525:
  3690   002BCA  EE20 F003          	lfsr	2,3
  3691   002BCE  5003               	movf	fputc@fp^0,w,c
  3692   002BD0  26D9               	addwf	fsr2l,f,c
  3693   002BD2  5004               	movf	(fputc@fp+1)^0,w,c
  3694   002BD4  22DA               	addwfc	fsr2h,f,c
  3695   002BD6  CFDE F005          	movff	postinc2,??_fputc
  3696   002BDA  CFDD F006          	movff	postdec2,??_fputc+1
  3697   002BDE  C003  FFD9         	movff	fputc@fp,fsr2l
  3698   002BE2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3699   002BE6  CFDE F007          	movff	postinc2,??_fputc+2
  3700   002BEA  CFDD F008          	movff	postdec2,??_fputc+3
  3701   002BEE  5005               	movf	??_fputc^0,w,c
  3702   002BF0  2407               	addwf	(??_fputc+2)^0,w,c
  3703   002BF2  6ED9               	movwf	fsr2l,c
  3704   002BF4  5006               	movf	(??_fputc+1)^0,w,c
  3705   002BF6  2008               	addwfc	(??_fputc+3)^0,w,c
  3706   002BF8  6EDA               	movwf	fsr2h,c
  3707   002BFA  C001  FFDF         	movff	fputc@c,indf2
  3708   002BFE  EE20 F003          	lfsr	2,3
  3709   002C02  5003               	movf	fputc@fp^0,w,c
  3710   002C04  26D9               	addwf	fsr2l,f,c
  3711   002C06  5004               	movf	(fputc@fp+1)^0,w,c
  3712   002C08  22DA               	addwfc	fsr2h,f,c
  3713   002C0A  2ADE               	incf	postinc2,f,c
  3714   002C0C  0E00               	movlw	0
  3715   002C0E  22DD               	addwfc	postdec2,f,c
  3716   002C10                     l1032:
  3717   002C10  0012               	return		;funcret
  3718   002C12                     __end_of_fputc:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _putch *****************
  3722 ;; Defined at:
  3723 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  c               1    wreg     unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  c               1    0[COMRAM] unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_fputc
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text11
  3751   003282                     __ptext11:
  3752                           	callstack 0
  3753   003282                     _putch:
  3754                           	callstack 26
  3755   003282  0012               	return		;funcret
  3756   003284                     __end_of_putch:
  3757                           	callstack 0
  3758                           
  3759 ;; *************** function _memcpy *****************
  3760 ;; Defined at:
  3761 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  d1              2    0[COMRAM] PTR void 
  3764 ;;		 -> dbuf(80), 
  3765 ;;  s1              2    2[COMRAM] PTR const void 
  3766 ;;		 -> dbuf(80), 
  3767 ;;  n               2    4[COMRAM] unsigned int 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3770 ;;		 -> dbuf(80), 
  3771 ;;  d               2    6[COMRAM] PTR unsigned char 
  3772 ;;		 -> dbuf(80), 
  3773 ;;  tmp             1   10[COMRAM] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  2    0[COMRAM] PTR void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3783 ;;      Params:         6       0       0       0       0       0       0       0       0
  3784 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3786 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3787 ;;Total ram usage:       11 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_efgtoa
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text12
  3797   003060                     __ptext12:
  3798                           	callstack 0
  3799   003060                     _memcpy:
  3800                           	callstack 26
  3801   003060  C003  F009         	movff	memcpy@s1,memcpy@s
  3802   003064  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3803   003068  C001  F007         	movff	memcpy@d1,memcpy@d
  3804   00306C  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3805   003070  EF4A  F018         	goto	l3191
  3806   003074                     l3183:
  3807   003074  C009  FFD9         	movff	memcpy@s,fsr2l
  3808   003078  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3809   00307C  50DF               	movf	indf2,w,c
  3810   00307E  6E0B               	movwf	memcpy@tmp^0,c
  3811   003080  4A09               	infsnz	memcpy@s^0,f,c
  3812   003082  2A0A               	incf	(memcpy@s+1)^0,f,c
  3813   003084  C007  FFD9         	movff	memcpy@d,fsr2l
  3814   003088  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3815   00308C  C00B  FFDF         	movff	memcpy@tmp,indf2
  3816   003090  4A07               	infsnz	memcpy@d^0,f,c
  3817   003092  2A08               	incf	(memcpy@d+1)^0,f,c
  3818   003094                     l3191:
  3819   003094  0605               	decf	memcpy@n^0,f,c
  3820   003096  A0D8               	btfss	status,0,c
  3821   003098  0606               	decf	(memcpy@n+1)^0,f,c
  3822   00309A  2805               	incf	memcpy@n^0,w,c
  3823   00309C  E106               	bnz	u3211
  3824   00309E  2806               	incf	(memcpy@n+1)^0,w,c
  3825   0030A0  A4D8               	btfss	status,2,c
  3826   0030A2  EF55  F018         	goto	u3211
  3827   0030A6  EF57  F018         	goto	u3210
  3828   0030AA                     u3211:
  3829   0030AA  EF3A  F018         	goto	l3183
  3830   0030AE                     u3210:
  3831   0030AE  0012               	return		;funcret
  3832   0030B0                     __end_of_memcpy:
  3833                           	callstack 0
  3834                           
  3835 ;; *************** function _labs *****************
  3836 ;; Defined at:
  3837 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  a               4    0[COMRAM] long 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;		None
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  4    0[COMRAM] long 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3851 ;;      Params:         4       0       0       0       0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3853 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3854 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3855 ;;Total ram usage:        8 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_efgtoa
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text13
  3865   002EFC                     __ptext13:
  3866                           	callstack 0
  3867   002EFC                     _labs:
  3868                           	callstack 26
  3869   002EFC  BE04               	btfsc	(labs@a+3)^0,7,c
  3870   002EFE  EF8D  F017         	goto	u3100
  3871   002F02  5004               	movf	(labs@a+3)^0,w,c
  3872   002F04  1003               	iorwf	(labs@a+2)^0,w,c
  3873   002F06  1002               	iorwf	(labs@a+1)^0,w,c
  3874   002F08  E106               	bnz	u3101
  3875   002F0A  0401               	decf	labs@a^0,w,c
  3876   002F0C  B0D8               	btfsc	status,0,c
  3877   002F0E  EF8B  F017         	goto	u3101
  3878   002F12  EF8D  F017         	goto	u3100
  3879   002F16                     u3101:
  3880   002F16  EFA8  F017         	goto	l1011
  3881   002F1A                     u3100:
  3882   002F1A  C001  F005         	movff	labs@a,??_labs
  3883   002F1E  C002  F006         	movff	labs@a+1,??_labs+1
  3884   002F22  C003  F007         	movff	labs@a+2,??_labs+2
  3885   002F26  C004  F008         	movff	labs@a+3,??_labs+3
  3886   002F2A  1E05               	comf	??_labs^0,f,c
  3887   002F2C  1E06               	comf	(??_labs+1)^0,f,c
  3888   002F2E  1E07               	comf	(??_labs+2)^0,f,c
  3889   002F30  1E08               	comf	(??_labs+3)^0,f,c
  3890   002F32  2A05               	incf	??_labs^0,f,c
  3891   002F34  0E00               	movlw	0
  3892   002F36  2206               	addwfc	(??_labs+1)^0,f,c
  3893   002F38  2207               	addwfc	(??_labs+2)^0,f,c
  3894   002F3A  2208               	addwfc	(??_labs+3)^0,f,c
  3895   002F3C  C005  F001         	movff	??_labs,?_labs
  3896   002F40  C006  F002         	movff	??_labs+1,?_labs+1
  3897   002F44  C007  F003         	movff	??_labs+2,?_labs+2
  3898   002F48  C008  F004         	movff	??_labs+3,?_labs+3
  3899   002F4C  EFB0  F017         	goto	l1014
  3900   002F50                     l1011:
  3901   002F50  C001  F001         	movff	labs@a,?_labs
  3902   002F54  C002  F002         	movff	labs@a+1,?_labs+1
  3903   002F58  C003  F003         	movff	labs@a+2,?_labs+2
  3904   002F5C  C004  F004         	movff	labs@a+3,?_labs+3
  3905   002F60                     l1014:
  3906   002F60  0012               	return		;funcret
  3907   002F62                     __end_of_labs:
  3908                           	callstack 0
  3909                           
  3910 ;; *************** function _floorf *****************
  3911 ;; Defined at:
  3912 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  x               4   64[COMRAM] float 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  u               4   80[COMRAM] struct .
  3917 ;;  m               4   74[COMRAM] unsigned long 
  3918 ;;  e               2   78[COMRAM] int 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  4   64[COMRAM] float 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3928 ;;      Params:         4       0       0       0       0       0       0       0       0
  3929 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3930 ;;      Temps:          6       0       0       0       0       0       0       0       0
  3931 ;;      Totals:        20       0       0       0       0       0       0       0       0
  3932 ;;Total ram usage:       20 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_efgtoa
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           	psect	text14
  3942   002208                     __ptext14:
  3943                           	callstack 0
  3944   002208                     _floorf:
  3945                           	callstack 26
  3946   002208  C0BB  F051         	movff	floorf@F526,floorf@u
  3947   00220C  C0BC  F052         	movff	floorf@F526+1,floorf@u+1
  3948   002210  C0BD  F053         	movff	floorf@F526+2,floorf@u+2
  3949   002214  C0BE  F054         	movff	floorf@F526+3,floorf@u+3
  3950   002218  C041  F051         	movff	floorf@x,floorf@u
  3951   00221C  C042  F052         	movff	floorf@x+1,floorf@u+1
  3952   002220  C043  F053         	movff	floorf@x+2,floorf@u+2
  3953   002224  C044  F054         	movff	floorf@x+3,floorf@u+3
  3954   002228  0E81               	movlw	129
  3955   00222A  6E45               	movwf	??_floorf^0,c
  3956   00222C  0EFF               	movlw	255
  3957   00222E  6E46               	movwf	(??_floorf+1)^0,c
  3958   002230  C051  F047         	movff	floorf@u,??_floorf+2
  3959   002234  C052  F048         	movff	floorf@u+1,??_floorf+3
  3960   002238  C053  F049         	movff	floorf@u+2,??_floorf+4
  3961   00223C  C054  F04A         	movff	floorf@u+3,??_floorf+5
  3962   002240  0E18               	movlw	24
  3963   002242  EF28  F011         	goto	u3110
  3964   002246                     u3115:
  3965   002246  90D8               	bcf	status,0,c
  3966   002248  324A               	rrcf	(??_floorf+5)^0,f,c
  3967   00224A  3249               	rrcf	(??_floorf+4)^0,f,c
  3968   00224C  3248               	rrcf	(??_floorf+3)^0,f,c
  3969   00224E  3247               	rrcf	(??_floorf+2)^0,f,c
  3970   002250                     u3110:
  3971   002250  2EE8               	decfsz	wreg,f,c
  3972   002252  EF23  F011         	goto	u3115
  3973   002256  5047               	movf	(??_floorf+2)^0,w,c
  3974   002258  2445               	addwf	??_floorf^0,w,c
  3975   00225A  6E4F               	movwf	floorf@e^0,c
  3976   00225C  0E00               	movlw	0
  3977   00225E  2046               	addwfc	(??_floorf+1)^0,w,c
  3978   002260  6E50               	movwf	(floorf@e+1)^0,c
  3979   002262  BE50               	btfsc	(floorf@e+1)^0,7,c
  3980   002264  EF3D  F011         	goto	u3121
  3981   002268  5050               	movf	(floorf@e+1)^0,w,c
  3982   00226A  E109               	bnz	u3120
  3983   00226C  0E17               	movlw	23
  3984   00226E  5C4F               	subwf	floorf@e^0,w,c
  3985   002270  A0D8               	btfss	status,0,c
  3986   002272  EF3D  F011         	goto	u3121
  3987   002276  EF3F  F011         	goto	u3120
  3988   00227A                     u3121:
  3989   00227A  EF49  F011         	goto	l3159
  3990   00227E                     u3120:
  3991   00227E                     l3157:
  3992   00227E  C041  F041         	movff	floorf@x,?_floorf
  3993   002282  C042  F042         	movff	floorf@x+1,?_floorf+1
  3994   002286  C043  F043         	movff	floorf@x+2,?_floorf+2
  3995   00228A  C044  F044         	movff	floorf@x+3,?_floorf+3
  3996   00228E  EF0C  F012         	goto	l1000
  3997   002292                     l3159:
  3998   002292  BE50               	btfsc	(floorf@e+1)^0,7,c
  3999   002294  EF4E  F011         	goto	u3131
  4000   002298  EF50  F011         	goto	u3130
  4001   00229C                     u3131:
  4002   00229C  EFC0  F011         	goto	l3169
  4003   0022A0                     u3130:
  4004   0022A0  C04F  F045         	movff	floorf@e,??_floorf
  4005   0022A4  0EFF               	movlw	255
  4006   0022A6  6E46               	movwf	(??_floorf+1)^0,c
  4007   0022A8  0EFF               	movlw	255
  4008   0022AA  6E47               	movwf	(??_floorf+2)^0,c
  4009   0022AC  0E7F               	movlw	127
  4010   0022AE  6E48               	movwf	(??_floorf+3)^0,c
  4011   0022B0  0E00               	movlw	0
  4012   0022B2  6E49               	movwf	(??_floorf+4)^0,c
  4013   0022B4                     u3145:
  4014   0022B4  6645               	tstfsz	??_floorf^0,c
  4015   0022B6  EF5F  F011         	goto	u3146
  4016   0022BA  EF67  F011         	goto	u3147
  4017   0022BE                     u3146:
  4018   0022BE  3449               	rlcf	(??_floorf+4)^0,w,c
  4019   0022C0  3249               	rrcf	(??_floorf+4)^0,f,c
  4020   0022C2  3248               	rrcf	(??_floorf+3)^0,f,c
  4021   0022C4  3247               	rrcf	(??_floorf+2)^0,f,c
  4022   0022C6  3246               	rrcf	(??_floorf+1)^0,f,c
  4023   0022C8  2E45               	decfsz	??_floorf^0,f,c
  4024   0022CA  EF5A  F011         	goto	u3145
  4025   0022CE                     u3147:
  4026   0022CE  C046  F04B         	movff	??_floorf+1,floorf@m
  4027   0022D2  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4028   0022D6  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4029   0022DA  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4030   0022DE  504B               	movf	floorf@m^0,w,c
  4031   0022E0  1451               	andwf	floorf@u^0,w,c
  4032   0022E2  6E45               	movwf	??_floorf^0,c
  4033   0022E4  504C               	movf	(floorf@m+1)^0,w,c
  4034   0022E6  1452               	andwf	(floorf@u+1)^0,w,c
  4035   0022E8  6E46               	movwf	(??_floorf+1)^0,c
  4036   0022EA  504D               	movf	(floorf@m+2)^0,w,c
  4037   0022EC  1453               	andwf	(floorf@u+2)^0,w,c
  4038   0022EE  6E47               	movwf	(??_floorf+2)^0,c
  4039   0022F0  504E               	movf	(floorf@m+3)^0,w,c
  4040   0022F2  1454               	andwf	(floorf@u+3)^0,w,c
  4041   0022F4  6E48               	movwf	(??_floorf+3)^0,c
  4042   0022F6  5045               	movf	??_floorf^0,w,c
  4043   0022F8  1046               	iorwf	(??_floorf+1)^0,w,c
  4044   0022FA  1047               	iorwf	(??_floorf+2)^0,w,c
  4045   0022FC  1048               	iorwf	(??_floorf+3)^0,w,c
  4046   0022FE  A4D8               	btfss	status,2,c
  4047   002300  EF84  F011         	goto	u3151
  4048   002304  EF86  F011         	goto	u3150
  4049   002308                     u3151:
  4050   002308  EF88  F011         	goto	l3165
  4051   00230C                     u3150:
  4052   00230C  EF3F  F011         	goto	l3157
  4053   002310                     l3165:
  4054   002310  C051  F045         	movff	floorf@u,??_floorf
  4055   002314  C052  F046         	movff	floorf@u+1,??_floorf+1
  4056   002318  C053  F047         	movff	floorf@u+2,??_floorf+2
  4057   00231C  C054  F048         	movff	floorf@u+3,??_floorf+3
  4058   002320  0E20               	movlw	32
  4059   002322  EF98  F011         	goto	u3160
  4060   002326                     u3165:
  4061   002326  90D8               	bcf	status,0,c
  4062   002328  3248               	rrcf	(??_floorf+3)^0,f,c
  4063   00232A  3247               	rrcf	(??_floorf+2)^0,f,c
  4064   00232C  3246               	rrcf	(??_floorf+1)^0,f,c
  4065   00232E  3245               	rrcf	??_floorf^0,f,c
  4066   002330                     u3160:
  4067   002330  2EE8               	decfsz	wreg,f,c
  4068   002332  EF93  F011         	goto	u3165
  4069   002336  5045               	movf	??_floorf^0,w,c
  4070   002338  1046               	iorwf	(??_floorf+1)^0,w,c
  4071   00233A  1047               	iorwf	(??_floorf+2)^0,w,c
  4072   00233C  1048               	iorwf	(??_floorf+3)^0,w,c
  4073   00233E  B4D8               	btfsc	status,2,c
  4074   002340  EFA4  F011         	goto	u3171
  4075   002344  EFA6  F011         	goto	u3170
  4076   002348                     u3171:
  4077   002348  EFAE  F011         	goto	l1003
  4078   00234C                     u3170:
  4079   00234C  504B               	movf	floorf@m^0,w,c
  4080   00234E  2651               	addwf	floorf@u^0,f,c
  4081   002350  504C               	movf	(floorf@m+1)^0,w,c
  4082   002352  2252               	addwfc	(floorf@u+1)^0,f,c
  4083   002354  504D               	movf	(floorf@m+2)^0,w,c
  4084   002356  2253               	addwfc	(floorf@u+2)^0,f,c
  4085   002358  504E               	movf	(floorf@m+3)^0,w,c
  4086   00235A  2254               	addwfc	(floorf@u+3)^0,f,c
  4087   00235C                     l1003:
  4088   00235C  1C4B               	comf	floorf@m^0,w,c
  4089   00235E  6E45               	movwf	??_floorf^0,c
  4090   002360  1C4C               	comf	(floorf@m+1)^0,w,c
  4091   002362  6E46               	movwf	(??_floorf+1)^0,c
  4092   002364  1C4D               	comf	(floorf@m+2)^0,w,c
  4093   002366  6E47               	movwf	(??_floorf+2)^0,c
  4094   002368  1C4E               	comf	(floorf@m+3)^0,w,c
  4095   00236A  6E48               	movwf	(??_floorf+3)^0,c
  4096   00236C  5045               	movf	??_floorf^0,w,c
  4097   00236E  1651               	andwf	floorf@u^0,f,c
  4098   002370  5046               	movf	(??_floorf+1)^0,w,c
  4099   002372  1652               	andwf	(floorf@u+1)^0,f,c
  4100   002374  5047               	movf	(??_floorf+2)^0,w,c
  4101   002376  1653               	andwf	(floorf@u+2)^0,f,c
  4102   002378  5048               	movf	(??_floorf+3)^0,w,c
  4103   00237A  1654               	andwf	(floorf@u+3)^0,f,c
  4104   00237C  EF04  F012         	goto	l3177
  4105   002380                     l3169:
  4106   002380  C051  F045         	movff	floorf@u,??_floorf
  4107   002384  C052  F046         	movff	floorf@u+1,??_floorf+1
  4108   002388  C053  F047         	movff	floorf@u+2,??_floorf+2
  4109   00238C  C054  F048         	movff	floorf@u+3,??_floorf+3
  4110   002390  0E20               	movlw	32
  4111   002392  EFD0  F011         	goto	u3180
  4112   002396                     u3185:
  4113   002396  90D8               	bcf	status,0,c
  4114   002398  3248               	rrcf	(??_floorf+3)^0,f,c
  4115   00239A  3247               	rrcf	(??_floorf+2)^0,f,c
  4116   00239C  3246               	rrcf	(??_floorf+1)^0,f,c
  4117   00239E  3245               	rrcf	??_floorf^0,f,c
  4118   0023A0                     u3180:
  4119   0023A0  2EE8               	decfsz	wreg,f,c
  4120   0023A2  EFCB  F011         	goto	u3185
  4121   0023A6  5045               	movf	??_floorf^0,w,c
  4122   0023A8  1046               	iorwf	(??_floorf+1)^0,w,c
  4123   0023AA  1047               	iorwf	(??_floorf+2)^0,w,c
  4124   0023AC  1048               	iorwf	(??_floorf+3)^0,w,c
  4125   0023AE  A4D8               	btfss	status,2,c
  4126   0023B0  EFDC  F011         	goto	u3191
  4127   0023B4  EFDE  F011         	goto	u3190
  4128   0023B8                     u3191:
  4129   0023B8  EFE8  F011         	goto	l3173
  4130   0023BC                     u3190:
  4131   0023BC  0E00               	movlw	0
  4132   0023BE  6E51               	movwf	floorf@u^0,c
  4133   0023C0  0E00               	movlw	0
  4134   0023C2  6E52               	movwf	(floorf@u+1)^0,c
  4135   0023C4  0E00               	movlw	0
  4136   0023C6  6E53               	movwf	(floorf@u+2)^0,c
  4137   0023C8  0E00               	movlw	0
  4138   0023CA  6E54               	movwf	(floorf@u+3)^0,c
  4139   0023CC  EF04  F012         	goto	l3177
  4140   0023D0                     l3173:
  4141   0023D0  90D8               	bcf	status,0,c
  4142   0023D2  3451               	rlcf	floorf@u^0,w,c
  4143   0023D4  6E45               	movwf	??_floorf^0,c
  4144   0023D6  3452               	rlcf	(floorf@u+1)^0,w,c
  4145   0023D8  6E46               	movwf	(??_floorf+1)^0,c
  4146   0023DA  3453               	rlcf	(floorf@u+2)^0,w,c
  4147   0023DC  6E47               	movwf	(??_floorf+2)^0,c
  4148   0023DE  3454               	rlcf	(floorf@u+3)^0,w,c
  4149   0023E0  6E48               	movwf	(??_floorf+3)^0,c
  4150   0023E2  5045               	movf	??_floorf^0,w,c
  4151   0023E4  1046               	iorwf	(??_floorf+1)^0,w,c
  4152   0023E6  1047               	iorwf	(??_floorf+2)^0,w,c
  4153   0023E8  1048               	iorwf	(??_floorf+3)^0,w,c
  4154   0023EA  B4D8               	btfsc	status,2,c
  4155   0023EC  EFFA  F011         	goto	u3201
  4156   0023F0  EFFC  F011         	goto	u3200
  4157   0023F4                     u3201:
  4158   0023F4  EF04  F012         	goto	l3177
  4159   0023F8                     u3200:
  4160   0023F8  0E00               	movlw	0
  4161   0023FA  6E51               	movwf	floorf@u^0,c
  4162   0023FC  0E00               	movlw	0
  4163   0023FE  6E52               	movwf	(floorf@u+1)^0,c
  4164   002400  0E80               	movlw	128
  4165   002402  6E53               	movwf	(floorf@u+2)^0,c
  4166   002404  0EBF               	movlw	191
  4167   002406  6E54               	movwf	(floorf@u+3)^0,c
  4168   002408                     l3177:
  4169   002408  C051  F041         	movff	floorf@u,?_floorf
  4170   00240C  C052  F042         	movff	floorf@u+1,?_floorf+1
  4171   002410  C053  F043         	movff	floorf@u+2,?_floorf+2
  4172   002414  C054  F044         	movff	floorf@u+3,?_floorf+3
  4173   002418                     l1000:
  4174   002418  0012               	return		;funcret
  4175   00241A                     __end_of_floorf:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function ___fpclassifyf *****************
  4179 ;; Defined at:
  4180 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  x               4    0[COMRAM] float 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  u               4   10[COMRAM] struct .
  4185 ;;  e               2    8[COMRAM] int 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  2    0[COMRAM] int 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0
  4190 ;; Tracked objects:
  4191 ;;		On entry : 0/0
  4192 ;;		On exit  : 0/0
  4193 ;;		Unchanged: 0/0
  4194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4195 ;;      Params:         4       0       0       0       0       0       0       0       0
  4196 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4197 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4198 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4199 ;;Total ram usage:       14 bytes
  4200 ;; Hardware stack levels used: 1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_efgtoa
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text15
  4209   002978                     __ptext15:
  4210                           	callstack 0
  4211   002978                     ___fpclassifyf:
  4212                           	callstack 26
  4213   002978  C0BF  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4214   00297C  C0C0  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4215   002980  C0C1  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4216   002984  C0C2  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4217   002988  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4218   00298C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4219   002990  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4220   002994  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4221   002998  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4222   00299C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4223   0029A0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4224   0029A4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4225   0029A8  0E18               	movlw	24
  4226   0029AA  EFDC  F014         	goto	u3020
  4227   0029AE                     u3025:
  4228   0029AE  90D8               	bcf	status,0,c
  4229   0029B0  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4230   0029B2  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4231   0029B4  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4232   0029B6  3205               	rrcf	??___fpclassifyf^0,f,c
  4233   0029B8                     u3020:
  4234   0029B8  2EE8               	decfsz	wreg,f,c
  4235   0029BA  EFD7  F014         	goto	u3025
  4236   0029BE  5005               	movf	??___fpclassifyf^0,w,c
  4237   0029C0  6E09               	movwf	___fpclassifyf@e^0,c
  4238   0029C2  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4239   0029C4  5009               	movf	___fpclassifyf@e^0,w,c
  4240   0029C6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4241   0029C8  A4D8               	btfss	status,2,c
  4242   0029CA  EFE9  F014         	goto	u3031
  4243   0029CE  EFEB  F014         	goto	u3030
  4244   0029D2                     u3031:
  4245   0029D2  EF0B  F015         	goto	l3135
  4246   0029D6                     u3030:
  4247   0029D6  90D8               	bcf	status,0,c
  4248   0029D8  340B               	rlcf	___fpclassifyf@u^0,w,c
  4249   0029DA  6E05               	movwf	??___fpclassifyf^0,c
  4250   0029DC  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4251   0029DE  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4252   0029E0  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4253   0029E2  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4254   0029E4  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4255   0029E6  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4256   0029E8  5005               	movf	??___fpclassifyf^0,w,c
  4257   0029EA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4258   0029EC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4259   0029EE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4260   0029F0  A4D8               	btfss	status,2,c
  4261   0029F2  EFFD  F014         	goto	u3041
  4262   0029F6  EFFF  F014         	goto	u3040
  4263   0029FA                     u3041:
  4264   0029FA  EF05  F015         	goto	l3131
  4265   0029FE                     u3040:
  4266   0029FE  0E00               	movlw	0
  4267   002A00  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4268   002A02  0E02               	movlw	2
  4269   002A04  6E01               	movwf	?___fpclassifyf^0,c
  4270   002A06  EF3A  F015         	goto	l993
  4271   002A0A                     l3131:
  4272   002A0A  0E00               	movlw	0
  4273   002A0C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4274   002A0E  0E03               	movlw	3
  4275   002A10  6E01               	movwf	?___fpclassifyf^0,c
  4276   002A12  EF3A  F015         	goto	l993
  4277   002A16                     l3135:
  4278   002A16  2809               	incf	___fpclassifyf@e^0,w,c
  4279   002A18  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4280   002A1A  A4D8               	btfss	status,2,c
  4281   002A1C  EF12  F015         	goto	u3051
  4282   002A20  EF14  F015         	goto	u3050
  4283   002A24                     u3051:
  4284   002A24  EF36  F015         	goto	l3141
  4285   002A28                     u3050:
  4286   002A28  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4287   002A2C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4288   002A30  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4289   002A34  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4290   002A38  0E09               	movlw	9
  4291   002A3A                     u3065:
  4292   002A3A  90D8               	bcf	status,0,c
  4293   002A3C  3605               	rlcf	??___fpclassifyf^0,f,c
  4294   002A3E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4295   002A40  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4296   002A42  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4297   002A44  2EE8               	decfsz	wreg,f,c
  4298   002A46  EF1D  F015         	goto	u3065
  4299   002A4A  5005               	movf	??___fpclassifyf^0,w,c
  4300   002A4C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4301   002A4E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4302   002A50  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4303   002A52  B4D8               	btfsc	status,2,c
  4304   002A54  EF2E  F015         	goto	u3071
  4305   002A58  EF31  F015         	goto	u3070
  4306   002A5C                     u3071:
  4307   002A5C  0E01               	movlw	1
  4308   002A5E  EF32  F015         	goto	u3080
  4309   002A62                     u3070:
  4310   002A62  0E00               	movlw	0
  4311   002A64                     u3080:
  4312   002A64  6E01               	movwf	?___fpclassifyf^0,c
  4313   002A66  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4314   002A68  EF3A  F015         	goto	l993
  4315   002A6C                     l3141:
  4316   002A6C  0E00               	movlw	0
  4317   002A6E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4318   002A70  0E04               	movlw	4
  4319   002A72  6E01               	movwf	?___fpclassifyf^0,c
  4320   002A74                     l993:
  4321   002A74  0012               	return		;funcret
  4322   002A76                     __end_of___fpclassifyf:
  4323                           	callstack 0
  4324                           
  4325 ;; *************** function ___fltol *****************
  4326 ;; Defined at:
  4327 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  f1              4    0[COMRAM] int 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  exp1            1    9[COMRAM] unsigned char 
  4332 ;;  sign1           1    8[COMRAM] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  4    0[COMRAM] long 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4342 ;;      Params:         4       0       0       0       0       0       0       0       0
  4343 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4344 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4345 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4346 ;;Total ram usage:       10 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_efgtoa
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text16
  4356   00276E                     __ptext16:
  4357                           	callstack 0
  4358   00276E                     ___fltol:
  4359                           	callstack 26
  4360   00276E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4361   002770  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4362   002772  6E0A               	movwf	___fltol@exp1^0,c
  4363   002774  500A               	movf	___fltol@exp1^0,w,c
  4364   002776  A4D8               	btfss	status,2,c
  4365   002778  EFC0  F013         	goto	u2931
  4366   00277C  EFC2  F013         	goto	u2930
  4367   002780                     u2931:
  4368   002780  EFCC  F013         	goto	l3071
  4369   002784                     u2930:
  4370   002784                     l3067:
  4371   002784  0E00               	movlw	0
  4372   002786  6E01               	movwf	?___fltol^0,c
  4373   002788  0E00               	movlw	0
  4374   00278A  6E02               	movwf	(?___fltol+1)^0,c
  4375   00278C  0E00               	movlw	0
  4376   00278E  6E03               	movwf	(?___fltol+2)^0,c
  4377   002790  0E00               	movlw	0
  4378   002792  6E04               	movwf	(?___fltol+3)^0,c
  4379   002794  EF39  F014         	goto	l468
  4380   002798                     l3071:
  4381   002798  C001  F005         	movff	___fltol@f1,??___fltol
  4382   00279C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4383   0027A0  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4384   0027A4  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4385   0027A8  0E20               	movlw	32
  4386   0027AA  EFDC  F013         	goto	u2940
  4387   0027AE                     u2945:
  4388   0027AE  90D8               	bcf	status,0,c
  4389   0027B0  3208               	rrcf	(??___fltol+3)^0,f,c
  4390   0027B2  3207               	rrcf	(??___fltol+2)^0,f,c
  4391   0027B4  3206               	rrcf	(??___fltol+1)^0,f,c
  4392   0027B6  3205               	rrcf	??___fltol^0,f,c
  4393   0027B8                     u2940:
  4394   0027B8  2EE8               	decfsz	wreg,f,c
  4395   0027BA  EFD7  F013         	goto	u2945
  4396   0027BE  5005               	movf	??___fltol^0,w,c
  4397   0027C0  6E09               	movwf	___fltol@sign1^0,c
  4398   0027C2  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4399   0027C4  0EFF               	movlw	255
  4400   0027C6  1601               	andwf	___fltol@f1^0,f,c
  4401   0027C8  0EFF               	movlw	255
  4402   0027CA  1602               	andwf	(___fltol@f1+1)^0,f,c
  4403   0027CC  0EFF               	movlw	255
  4404   0027CE  1603               	andwf	(___fltol@f1+2)^0,f,c
  4405   0027D0  0E00               	movlw	0
  4406   0027D2  1604               	andwf	(___fltol@f1+3)^0,f,c
  4407   0027D4  0E96               	movlw	150
  4408   0027D6  5E0A               	subwf	___fltol@exp1^0,f,c
  4409   0027D8  BE0A               	btfsc	___fltol@exp1^0,7,c
  4410   0027DA  EFF3  F013         	goto	u2950
  4411   0027DE  EFF1  F013         	goto	u2951
  4412   0027E2                     u2951:
  4413   0027E2  EF09  F014         	goto	l3091
  4414   0027E6                     u2950:
  4415   0027E6  500A               	movf	___fltol@exp1^0,w,c
  4416   0027E8  0A80               	xorlw	128
  4417   0027EA  0F97               	addlw	151
  4418   0027EC  B0D8               	btfsc	status,0,c
  4419   0027EE  EFFB  F013         	goto	u2961
  4420   0027F2  EFFD  F013         	goto	u2960
  4421   0027F6                     u2961:
  4422   0027F6  EFFF  F013         	goto	l3087
  4423   0027FA                     u2960:
  4424   0027FA  EFC2  F013         	goto	l3067
  4425   0027FE                     l3087:
  4426   0027FE  90D8               	bcf	status,0,c
  4427   002800  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4428   002802  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4429   002804  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4430   002806  3201               	rrcf	___fltol@f1^0,f,c
  4431   002808  3E0A               	incfsz	___fltol@exp1^0,f,c
  4432   00280A  EFFF  F013         	goto	l3087
  4433   00280E  EF21  F014         	goto	l3101
  4434   002812                     l3091:
  4435   002812  0E1F               	movlw	31
  4436   002814  640A               	cpfsgt	___fltol@exp1^0,c
  4437   002816  EF0F  F014         	goto	u2971
  4438   00281A  EF11  F014         	goto	u2970
  4439   00281E                     u2971:
  4440   00281E  EF19  F014         	goto	l3099
  4441   002822                     u2970:
  4442   002822  EFC2  F013         	goto	l3067
  4443   002826                     l3097:
  4444   002826  90D8               	bcf	status,0,c
  4445   002828  3601               	rlcf	___fltol@f1^0,f,c
  4446   00282A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4447   00282C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4448   00282E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4449   002830  060A               	decf	___fltol@exp1^0,f,c
  4450   002832                     l3099:
  4451   002832  500A               	movf	___fltol@exp1^0,w,c
  4452   002834  A4D8               	btfss	status,2,c
  4453   002836  EF1F  F014         	goto	u2981
  4454   00283A  EF21  F014         	goto	u2980
  4455   00283E                     u2981:
  4456   00283E  EF13  F014         	goto	l3097
  4457   002842                     u2980:
  4458   002842                     l3101:
  4459   002842  5009               	movf	___fltol@sign1^0,w,c
  4460   002844  B4D8               	btfsc	status,2,c
  4461   002846  EF27  F014         	goto	u2991
  4462   00284A  EF29  F014         	goto	u2990
  4463   00284E                     u2991:
  4464   00284E  EF31  F014         	goto	l3105
  4465   002852                     u2990:
  4466   002852  1E04               	comf	(___fltol@f1+3)^0,f,c
  4467   002854  1E03               	comf	(___fltol@f1+2)^0,f,c
  4468   002856  1E02               	comf	(___fltol@f1+1)^0,f,c
  4469   002858  6C01               	negf	___fltol@f1^0,c
  4470   00285A  0E00               	movlw	0
  4471   00285C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4472   00285E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4473   002860  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4474   002862                     l3105:
  4475   002862  C001  F001         	movff	___fltol@f1,?___fltol
  4476   002866  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4477   00286A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4478   00286E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4479   002872                     l468:
  4480   002872  0012               	return		;funcret
  4481   002874                     __end_of___fltol:
  4482                           	callstack 0
  4483                           
  4484 ;; *************** function ___flsub *****************
  4485 ;; Defined at:
  4486 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  b               4   39[COMRAM] long 
  4489 ;;  a               4   43[COMRAM] long 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  4   39[COMRAM] long 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4501 ;;      Params:         8       0       0       0       0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4504 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4505 ;;Total ram usage:        8 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 1
  4508 ;; This function calls:
  4509 ;;		___fladd
  4510 ;; This function is called by:
  4511 ;;		_efgtoa
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text17
  4516   0030B0                     __ptext17:
  4517                           	callstack 0
  4518   0030B0                     ___flsub:
  4519                           	callstack 25
  4520   0030B0  0E00               	movlw	0
  4521   0030B2  1A2C               	xorwf	___flsub@a^0,f,c
  4522   0030B4  0E00               	movlw	0
  4523   0030B6  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4524   0030B8  0E00               	movlw	0
  4525   0030BA  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4526   0030BC  0E80               	movlw	128
  4527   0030BE  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4528   0030C0  C028  F001         	movff	___flsub@b,___fladd@b
  4529   0030C4  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4530   0030C8  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4531   0030CC  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4532   0030D0  C02C  F005         	movff	___flsub@a,___fladd@a
  4533   0030D4  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4534   0030D8  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4535   0030DC  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4536   0030E0  EC55  F009         	call	___fladd	;wreg free
  4537   0030E4  C001  F028         	movff	?___fladd,?___flsub
  4538   0030E8  C002  F029         	movff	?___fladd+1,?___flsub+1
  4539   0030EC  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4540   0030F0  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4541   0030F4  0012               	return		;funcret
  4542   0030F6                     __end_of___flsub:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function ___fladd *****************
  4546 ;; Defined at:
  4547 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  b               4    0[COMRAM] long 
  4550 ;;  a               4    4[COMRAM] long 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  grs             1   15[COMRAM] unsigned char 
  4553 ;;  bexp            1   14[COMRAM] unsigned char 
  4554 ;;  aexp            1   13[COMRAM] unsigned char 
  4555 ;;  signs           1   12[COMRAM] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  4    0[COMRAM] unsigned char 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4565 ;;      Params:         8       0       0       0       0       0       0       0       0
  4566 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4567 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4568 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4569 ;;Total ram usage:       16 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		___flsub
  4575 ;;		_efgtoa
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text18
  4580   0012AA                     __ptext18:
  4581                           	callstack 0
  4582   0012AA                     ___fladd:
  4583                           	callstack 25
  4584   0012AA  5004               	movf	(___fladd@b+3)^0,w,c
  4585   0012AC  0B80               	andlw	128
  4586   0012AE  6E0D               	movwf	___fladd@signs^0,c
  4587   0012B0  5004               	movf	(___fladd@b+3)^0,w,c
  4588   0012B2  2404               	addwf	(___fladd@b+3)^0,w,c
  4589   0012B4  6E0F               	movwf	___fladd@bexp^0,c
  4590   0012B6  AE03               	btfss	(___fladd@b+2)^0,7,c
  4591   0012B8  EF60  F009         	goto	u2021
  4592   0012BC  EF62  F009         	goto	u2020
  4593   0012C0                     u2021:
  4594   0012C0  EF63  F009         	goto	l2535
  4595   0012C4                     u2020:
  4596   0012C4  800F               	bsf	___fladd@bexp^0,0,c
  4597   0012C6                     l2535:
  4598   0012C6  500F               	movf	___fladd@bexp^0,w,c
  4599   0012C8  B4D8               	btfsc	status,2,c
  4600   0012CA  EF69  F009         	goto	u2031
  4601   0012CE  EF6B  F009         	goto	u2030
  4602   0012D2                     u2031:
  4603   0012D2  EF80  F009         	goto	l2545
  4604   0012D6                     u2030:
  4605   0012D6  280F               	incf	___fladd@bexp^0,w,c
  4606   0012D8  A4D8               	btfss	status,2,c
  4607   0012DA  EF71  F009         	goto	u2041
  4608   0012DE  EF73  F009         	goto	u2040
  4609   0012E2                     u2041:
  4610   0012E2  EF7B  F009         	goto	l2541
  4611   0012E6                     u2040:
  4612   0012E6  0E00               	movlw	0
  4613   0012E8  6E01               	movwf	___fladd@b^0,c
  4614   0012EA  0E00               	movlw	0
  4615   0012EC  6E02               	movwf	(___fladd@b+1)^0,c
  4616   0012EE  0E00               	movlw	0
  4617   0012F0  6E03               	movwf	(___fladd@b+2)^0,c
  4618   0012F2  0E00               	movlw	0
  4619   0012F4  6E04               	movwf	(___fladd@b+3)^0,c
  4620   0012F6                     l2541:
  4621   0012F6  8E03               	bsf	(___fladd@b+2)^0,7,c
  4622   0012F8  0E00               	movlw	0
  4623   0012FA  6E04               	movwf	(___fladd@b+3)^0,c
  4624   0012FC  EF88  F009         	goto	l2547
  4625   001300                     l2545:
  4626   001300  0E00               	movlw	0
  4627   001302  6E01               	movwf	___fladd@b^0,c
  4628   001304  0E00               	movlw	0
  4629   001306  6E02               	movwf	(___fladd@b+1)^0,c
  4630   001308  0E00               	movlw	0
  4631   00130A  6E03               	movwf	(___fladd@b+2)^0,c
  4632   00130C  0E00               	movlw	0
  4633   00130E  6E04               	movwf	(___fladd@b+3)^0,c
  4634   001310                     l2547:
  4635   001310  5008               	movf	(___fladd@a+3)^0,w,c
  4636   001312  0B80               	andlw	128
  4637   001314  6E0E               	movwf	___fladd@aexp^0,c
  4638   001316  500D               	movf	___fladd@signs^0,w,c
  4639   001318  180E               	xorwf	___fladd@aexp^0,w,c
  4640   00131A  B4D8               	btfsc	status,2,c
  4641   00131C  EF92  F009         	goto	u2051
  4642   001320  EF94  F009         	goto	u2050
  4643   001324                     u2051:
  4644   001324  EF95  F009         	goto	l2553
  4645   001328                     u2050:
  4646   001328  8C0D               	bsf	___fladd@signs^0,6,c
  4647   00132A                     l2553:
  4648   00132A  5008               	movf	(___fladd@a+3)^0,w,c
  4649   00132C  2408               	addwf	(___fladd@a+3)^0,w,c
  4650   00132E  6E0E               	movwf	___fladd@aexp^0,c
  4651   001330  AE07               	btfss	(___fladd@a+2)^0,7,c
  4652   001332  EF9D  F009         	goto	u2061
  4653   001336  EF9F  F009         	goto	u2060
  4654   00133A                     u2061:
  4655   00133A  EFA0  F009         	goto	l2559
  4656   00133E                     u2060:
  4657   00133E  800E               	bsf	___fladd@aexp^0,0,c
  4658   001340                     l2559:
  4659   001340  500E               	movf	___fladd@aexp^0,w,c
  4660   001342  B4D8               	btfsc	status,2,c
  4661   001344  EFA6  F009         	goto	u2071
  4662   001348  EFA8  F009         	goto	u2070
  4663   00134C                     u2071:
  4664   00134C  EFBD  F009         	goto	l2569
  4665   001350                     u2070:
  4666   001350  280E               	incf	___fladd@aexp^0,w,c
  4667   001352  A4D8               	btfss	status,2,c
  4668   001354  EFAE  F009         	goto	u2081
  4669   001358  EFB0  F009         	goto	u2080
  4670   00135C                     u2081:
  4671   00135C  EFB8  F009         	goto	l2565
  4672   001360                     u2080:
  4673   001360  0E00               	movlw	0
  4674   001362  6E05               	movwf	___fladd@a^0,c
  4675   001364  0E00               	movlw	0
  4676   001366  6E06               	movwf	(___fladd@a+1)^0,c
  4677   001368  0E00               	movlw	0
  4678   00136A  6E07               	movwf	(___fladd@a+2)^0,c
  4679   00136C  0E00               	movlw	0
  4680   00136E  6E08               	movwf	(___fladd@a+3)^0,c
  4681   001370                     l2565:
  4682   001370  8E07               	bsf	(___fladd@a+2)^0,7,c
  4683   001372  0E00               	movlw	0
  4684   001374  6E08               	movwf	(___fladd@a+3)^0,c
  4685   001376  EFC5  F009         	goto	l2571
  4686   00137A                     l2569:
  4687   00137A  0E00               	movlw	0
  4688   00137C  6E05               	movwf	___fladd@a^0,c
  4689   00137E  0E00               	movlw	0
  4690   001380  6E06               	movwf	(___fladd@a+1)^0,c
  4691   001382  0E00               	movlw	0
  4692   001384  6E07               	movwf	(___fladd@a+2)^0,c
  4693   001386  0E00               	movlw	0
  4694   001388  6E08               	movwf	(___fladd@a+3)^0,c
  4695   00138A                     l2571:
  4696   00138A  500F               	movf	___fladd@bexp^0,w,c
  4697   00138C  5C0E               	subwf	___fladd@aexp^0,w,c
  4698   00138E  B0D8               	btfsc	status,0,c
  4699   001390  EFCC  F009         	goto	u2091
  4700   001394  EFCE  F009         	goto	u2090
  4701   001398                     u2091:
  4702   001398  EFF5  F009         	goto	l2607
  4703   00139C                     u2090:
  4704   00139C  AC0D               	btfss	___fladd@signs^0,6,c
  4705   00139E  EFD3  F009         	goto	u2101
  4706   0013A2  EFD5  F009         	goto	u2100
  4707   0013A6                     u2101:
  4708   0013A6  EFD7  F009         	goto	l2577
  4709   0013AA                     u2100:
  4710   0013AA  0E80               	movlw	128
  4711   0013AC  1A0D               	xorwf	___fladd@signs^0,f,c
  4712   0013AE                     l2577:
  4713   0013AE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4714   0013B2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4715   0013B6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4716   0013BA  C001  F010         	movff	___fladd@b,___fladd@grs
  4717   0013BE  C005  F001         	movff	___fladd@a,___fladd@b
  4718   0013C2  C010  F005         	movff	___fladd@grs,___fladd@a
  4719   0013C6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4720   0013CA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4721   0013CE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4722   0013D2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4723   0013D6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4724   0013DA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4725   0013DE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4726   0013E2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4727   0013E6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4728   0013EA                     l2607:
  4729   0013EA  0E00               	movlw	0
  4730   0013EC  6E10               	movwf	___fladd@grs^0,c
  4731   0013EE  500F               	movf	___fladd@bexp^0,w,c
  4732   0013F0  C00E  F009         	movff	___fladd@aexp,??___fladd
  4733   0013F4  6A0A               	clrf	(??___fladd+1)^0,c
  4734   0013F6  5E09               	subwf	??___fladd^0,f,c
  4735   0013F8  0E00               	movlw	0
  4736   0013FA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4737   0013FC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4738   0013FE  EF0A  F00A         	goto	u2111
  4739   001402  500A               	movf	(??___fladd+1)^0,w,c
  4740   001404  E109               	bnz	u2110
  4741   001406  0E1A               	movlw	26
  4742   001408  5C09               	subwf	??___fladd^0,w,c
  4743   00140A  A0D8               	btfss	status,0,c
  4744   00140C  EF0A  F00A         	goto	u2111
  4745   001410  EF0C  F00A         	goto	u2110
  4746   001414                     u2111:
  4747   001414  EF43  F00A         	goto	l700
  4748   001418                     u2110:
  4749   001418  5001               	movf	___fladd@b^0,w,c
  4750   00141A  1002               	iorwf	(___fladd@b+1)^0,w,c
  4751   00141C  1003               	iorwf	(___fladd@b+2)^0,w,c
  4752   00141E  1004               	iorwf	(___fladd@b+3)^0,w,c
  4753   001420  A4D8               	btfss	status,2,c
  4754   001422  EF15  F00A         	goto	u2121
  4755   001426  EF18  F00A         	goto	u2120
  4756   00142A                     u2121:
  4757   00142A  0E01               	movlw	1
  4758   00142C  EF19  F00A         	goto	u2130
  4759   001430                     u2120:
  4760   001430  0E00               	movlw	0
  4761   001432                     u2130:
  4762   001432  6E10               	movwf	___fladd@grs^0,c
  4763   001434  0E00               	movlw	0
  4764   001436  6E01               	movwf	___fladd@b^0,c
  4765   001438  0E00               	movlw	0
  4766   00143A  6E02               	movwf	(___fladd@b+1)^0,c
  4767   00143C  0E00               	movlw	0
  4768   00143E  6E03               	movwf	(___fladd@b+2)^0,c
  4769   001440  0E00               	movlw	0
  4770   001442  6E04               	movwf	(___fladd@b+3)^0,c
  4771   001444  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4772   001448  EF4C  F00A         	goto	l699
  4773   00144C                     l701:
  4774   00144C  A010               	btfss	___fladd@grs^0,0,c
  4775   00144E  EF2B  F00A         	goto	u2141
  4776   001452  EF2D  F00A         	goto	u2140
  4777   001456                     u2141:
  4778   001456  EF33  F00A         	goto	l2619
  4779   00145A                     u2140:
  4780   00145A  90D8               	bcf	status,0,c
  4781   00145C  3010               	rrcf	___fladd@grs^0,w,c
  4782   00145E  0901               	iorlw	1
  4783   001460  6E10               	movwf	___fladd@grs^0,c
  4784   001462  EF35  F00A         	goto	l2621
  4785   001466                     l2619:
  4786   001466  90D8               	bcf	status,0,c
  4787   001468  3210               	rrcf	___fladd@grs^0,f,c
  4788   00146A                     l2621:
  4789   00146A  A001               	btfss	___fladd@b^0,0,c
  4790   00146C  EF3A  F00A         	goto	u2151
  4791   001470  EF3C  F00A         	goto	u2150
  4792   001474                     u2151:
  4793   001474  EF3D  F00A         	goto	l2625
  4794   001478                     u2150:
  4795   001478  8E10               	bsf	___fladd@grs^0,7,c
  4796   00147A                     l2625:
  4797   00147A  3404               	rlcf	(___fladd@b+3)^0,w,c
  4798   00147C  3204               	rrcf	(___fladd@b+3)^0,f,c
  4799   00147E  3203               	rrcf	(___fladd@b+2)^0,f,c
  4800   001480  3202               	rrcf	(___fladd@b+1)^0,f,c
  4801   001482  3201               	rrcf	___fladd@b^0,f,c
  4802   001484  2A0F               	incf	___fladd@bexp^0,f,c
  4803   001486                     l700:
  4804   001486  500E               	movf	___fladd@aexp^0,w,c
  4805   001488  5C0F               	subwf	___fladd@bexp^0,w,c
  4806   00148A  A0D8               	btfss	status,0,c
  4807   00148C  EF4A  F00A         	goto	u2161
  4808   001490  EF4C  F00A         	goto	u2160
  4809   001494                     u2161:
  4810   001494  EF26  F00A         	goto	l701
  4811   001498                     u2160:
  4812   001498                     l699:
  4813   001498  BC0D               	btfsc	___fladd@signs^0,6,c
  4814   00149A  EF51  F00A         	goto	u2171
  4815   00149E  EF53  F00A         	goto	u2170
  4816   0014A2                     u2171:
  4817   0014A2  EF93  F00A         	goto	l2653
  4818   0014A6                     u2170:
  4819   0014A6  500F               	movf	___fladd@bexp^0,w,c
  4820   0014A8  A4D8               	btfss	status,2,c
  4821   0014AA  EF59  F00A         	goto	u2181
  4822   0014AE  EF5B  F00A         	goto	u2180
  4823   0014B2                     u2181:
  4824   0014B2  EF65  F00A         	goto	l2635
  4825   0014B6                     u2180:
  4826   0014B6  0E00               	movlw	0
  4827   0014B8  6E01               	movwf	?___fladd^0,c
  4828   0014BA  0E00               	movlw	0
  4829   0014BC  6E02               	movwf	(?___fladd+1)^0,c
  4830   0014BE  0E00               	movlw	0
  4831   0014C0  6E03               	movwf	(?___fladd+2)^0,c
  4832   0014C2  0E00               	movlw	0
  4833   0014C4  6E04               	movwf	(?___fladd+3)^0,c
  4834   0014C6  EFB4  F00B         	goto	l708
  4835   0014CA                     l2635:
  4836   0014CA  5005               	movf	___fladd@a^0,w,c
  4837   0014CC  2601               	addwf	___fladd@b^0,f,c
  4838   0014CE  5006               	movf	(___fladd@a+1)^0,w,c
  4839   0014D0  2202               	addwfc	(___fladd@b+1)^0,f,c
  4840   0014D2  5007               	movf	(___fladd@a+2)^0,w,c
  4841   0014D4  2203               	addwfc	(___fladd@b+2)^0,f,c
  4842   0014D6  5008               	movf	(___fladd@a+3)^0,w,c
  4843   0014D8  2204               	addwfc	(___fladd@b+3)^0,f,c
  4844   0014DA  A004               	btfss	(___fladd@b+3)^0,0,c
  4845   0014DC  EF72  F00A         	goto	u2191
  4846   0014E0  EF74  F00A         	goto	u2190
  4847   0014E4                     u2191:
  4848   0014E4  EF20  F00B         	goto	l2689
  4849   0014E8                     u2190:
  4850   0014E8  A010               	btfss	___fladd@grs^0,0,c
  4851   0014EA  EF79  F00A         	goto	u2201
  4852   0014EE  EF7B  F00A         	goto	u2200
  4853   0014F2                     u2201:
  4854   0014F2  EF81  F00A         	goto	l2643
  4855   0014F6                     u2200:
  4856   0014F6  90D8               	bcf	status,0,c
  4857   0014F8  3010               	rrcf	___fladd@grs^0,w,c
  4858   0014FA  0901               	iorlw	1
  4859   0014FC  6E10               	movwf	___fladd@grs^0,c
  4860   0014FE  EF83  F00A         	goto	l2645
  4861   001502                     l2643:
  4862   001502  90D8               	bcf	status,0,c
  4863   001504  3210               	rrcf	___fladd@grs^0,f,c
  4864   001506                     l2645:
  4865   001506  A001               	btfss	___fladd@b^0,0,c
  4866   001508  EF88  F00A         	goto	u2211
  4867   00150C  EF8A  F00A         	goto	u2210
  4868   001510                     u2211:
  4869   001510  EF8B  F00A         	goto	l2649
  4870   001514                     u2210:
  4871   001514  8E10               	bsf	___fladd@grs^0,7,c
  4872   001516                     l2649:
  4873   001516  3404               	rlcf	(___fladd@b+3)^0,w,c
  4874   001518  3204               	rrcf	(___fladd@b+3)^0,f,c
  4875   00151A  3203               	rrcf	(___fladd@b+2)^0,f,c
  4876   00151C  3202               	rrcf	(___fladd@b+1)^0,f,c
  4877   00151E  3201               	rrcf	___fladd@b^0,f,c
  4878   001520  2A0F               	incf	___fladd@bexp^0,f,c
  4879   001522  EF20  F00B         	goto	l2689
  4880   001526                     l2653:
  4881   001526  5005               	movf	___fladd@a^0,w,c
  4882   001528  5C01               	subwf	___fladd@b^0,w,c
  4883   00152A  5006               	movf	(___fladd@a+1)^0,w,c
  4884   00152C  5802               	subwfb	(___fladd@b+1)^0,w,c
  4885   00152E  5007               	movf	(___fladd@a+2)^0,w,c
  4886   001530  5803               	subwfb	(___fladd@b+2)^0,w,c
  4887   001532  5004               	movf	(___fladd@b+3)^0,w,c
  4888   001534  0A80               	xorlw	128
  4889   001536  6E09               	movwf	??___fladd^0,c
  4890   001538  5008               	movf	(___fladd@a+3)^0,w,c
  4891   00153A  0A80               	xorlw	128
  4892   00153C  5809               	subwfb	??___fladd^0,w,c
  4893   00153E  B0D8               	btfsc	status,0,c
  4894   001540  EFA4  F00A         	goto	u2221
  4895   001544  EFA6  F00A         	goto	u2220
  4896   001548                     u2221:
  4897   001548  EFD1  F00A         	goto	l2663
  4898   00154C                     u2220:
  4899   00154C  5001               	movf	___fladd@b^0,w,c
  4900   00154E  5C05               	subwf	___fladd@a^0,w,c
  4901   001550  6E09               	movwf	??___fladd^0,c
  4902   001552  5002               	movf	(___fladd@b+1)^0,w,c
  4903   001554  5806               	subwfb	(___fladd@a+1)^0,w,c
  4904   001556  6E0A               	movwf	(??___fladd+1)^0,c
  4905   001558  5003               	movf	(___fladd@b+2)^0,w,c
  4906   00155A  5807               	subwfb	(___fladd@a+2)^0,w,c
  4907   00155C  6E0B               	movwf	(??___fladd+2)^0,c
  4908   00155E  5004               	movf	(___fladd@b+3)^0,w,c
  4909   001560  5808               	subwfb	(___fladd@a+3)^0,w,c
  4910   001562  6E0C               	movwf	(??___fladd+3)^0,c
  4911   001564  0EFF               	movlw	255
  4912   001566  2409               	addwf	??___fladd^0,w,c
  4913   001568  6E01               	movwf	___fladd@b^0,c
  4914   00156A  0EFF               	movlw	255
  4915   00156C  200A               	addwfc	(??___fladd+1)^0,w,c
  4916   00156E  6E02               	movwf	(___fladd@b+1)^0,c
  4917   001570  0EFF               	movlw	255
  4918   001572  200B               	addwfc	(??___fladd+2)^0,w,c
  4919   001574  6E03               	movwf	(___fladd@b+2)^0,c
  4920   001576  0EFF               	movlw	255
  4921   001578  200C               	addwfc	(??___fladd+3)^0,w,c
  4922   00157A  6E04               	movwf	(___fladd@b+3)^0,c
  4923   00157C  0E80               	movlw	128
  4924   00157E  1A0D               	xorwf	___fladd@signs^0,f,c
  4925   001580  6C10               	negf	___fladd@grs^0,c
  4926   001582  5010               	movf	___fladd@grs^0,w,c
  4927   001584  A4D8               	btfss	status,2,c
  4928   001586  EFC7  F00A         	goto	u2231
  4929   00158A  EFC9  F00A         	goto	u2230
  4930   00158E                     u2231:
  4931   00158E  EFD9  F00A         	goto	l716
  4932   001592                     u2230:
  4933   001592  0E01               	movlw	1
  4934   001594  2601               	addwf	___fladd@b^0,f,c
  4935   001596  0E00               	movlw	0
  4936   001598  2202               	addwfc	(___fladd@b+1)^0,f,c
  4937   00159A  2203               	addwfc	(___fladd@b+2)^0,f,c
  4938   00159C  2204               	addwfc	(___fladd@b+3)^0,f,c
  4939   00159E  EFD9  F00A         	goto	l716
  4940   0015A2                     l2663:
  4941   0015A2  5005               	movf	___fladd@a^0,w,c
  4942   0015A4  5E01               	subwf	___fladd@b^0,f,c
  4943   0015A6  5006               	movf	(___fladd@a+1)^0,w,c
  4944   0015A8  5A02               	subwfb	(___fladd@b+1)^0,f,c
  4945   0015AA  5007               	movf	(___fladd@a+2)^0,w,c
  4946   0015AC  5A03               	subwfb	(___fladd@b+2)^0,f,c
  4947   0015AE  5008               	movf	(___fladd@a+3)^0,w,c
  4948   0015B0  5A04               	subwfb	(___fladd@b+3)^0,f,c
  4949   0015B2                     l716:
  4950   0015B2  5001               	movf	___fladd@b^0,w,c
  4951   0015B4  1002               	iorwf	(___fladd@b+1)^0,w,c
  4952   0015B6  1003               	iorwf	(___fladd@b+2)^0,w,c
  4953   0015B8  1004               	iorwf	(___fladd@b+3)^0,w,c
  4954   0015BA  A4D8               	btfss	status,2,c
  4955   0015BC  EFE2  F00A         	goto	u2241
  4956   0015C0  EFE4  F00A         	goto	u2240
  4957   0015C4                     u2241:
  4958   0015C4  EF19  F00B         	goto	l2687
  4959   0015C8                     u2240:
  4960   0015C8  5010               	movf	___fladd@grs^0,w,c
  4961   0015CA  A4D8               	btfss	status,2,c
  4962   0015CC  EFEA  F00A         	goto	u2251
  4963   0015D0  EFEC  F00A         	goto	u2250
  4964   0015D4                     u2251:
  4965   0015D4  EF19  F00B         	goto	l2687
  4966   0015D8                     u2250:
  4967   0015D8  0E00               	movlw	0
  4968   0015DA  6E01               	movwf	?___fladd^0,c
  4969   0015DC  0E00               	movlw	0
  4970   0015DE  6E02               	movwf	(?___fladd+1)^0,c
  4971   0015E0  0E00               	movlw	0
  4972   0015E2  6E03               	movwf	(?___fladd+2)^0,c
  4973   0015E4  0E00               	movlw	0
  4974   0015E6  6E04               	movwf	(?___fladd+3)^0,c
  4975   0015E8  EFB4  F00B         	goto	l708
  4976   0015EC                     l2671:
  4977   0015EC  90D8               	bcf	status,0,c
  4978   0015EE  3601               	rlcf	___fladd@b^0,f,c
  4979   0015F0  3602               	rlcf	(___fladd@b+1)^0,f,c
  4980   0015F2  3603               	rlcf	(___fladd@b+2)^0,f,c
  4981   0015F4  3604               	rlcf	(___fladd@b+3)^0,f,c
  4982   0015F6  AE10               	btfss	___fladd@grs^0,7,c
  4983   0015F8  EF00  F00B         	goto	u2261
  4984   0015FC  EF02  F00B         	goto	u2260
  4985   001600                     u2261:
  4986   001600  EF03  F00B         	goto	l2677
  4987   001604                     u2260:
  4988   001604  8001               	bsf	___fladd@b^0,0,c
  4989   001606                     l2677:
  4990   001606  A010               	btfss	___fladd@grs^0,0,c
  4991   001608  EF08  F00B         	goto	u2271
  4992   00160C  EF0A  F00B         	goto	u2270
  4993   001610                     u2271:
  4994   001610  EF0E  F00B         	goto	l2681
  4995   001614                     u2270:
  4996   001614  80D8               	bsf	status,0,c
  4997   001616  3610               	rlcf	___fladd@grs^0,f,c
  4998   001618  EF10  F00B         	goto	l2683
  4999   00161C                     l2681:
  5000   00161C  90D8               	bcf	status,0,c
  5001   00161E  3610               	rlcf	___fladd@grs^0,f,c
  5002   001620                     l2683:
  5003   001620  500F               	movf	___fladd@bexp^0,w,c
  5004   001622  B4D8               	btfsc	status,2,c
  5005   001624  EF16  F00B         	goto	u2281
  5006   001628  EF18  F00B         	goto	u2280
  5007   00162C                     u2281:
  5008   00162C  EF19  F00B         	goto	l2687
  5009   001630                     u2280:
  5010   001630  060F               	decf	___fladd@bexp^0,f,c
  5011   001632                     l2687:
  5012   001632  AE03               	btfss	(___fladd@b+2)^0,7,c
  5013   001634  EF1E  F00B         	goto	u2291
  5014   001638  EF20  F00B         	goto	u2290
  5015   00163C                     u2291:
  5016   00163C  EFF6  F00A         	goto	l2671
  5017   001640                     u2290:
  5018   001640                     l2689:
  5019   001640  0E00               	movlw	0
  5020   001642  6E0E               	movwf	___fladd@aexp^0,c
  5021   001644  AE10               	btfss	___fladd@grs^0,7,c
  5022   001646  EF27  F00B         	goto	u2301
  5023   00164A  EF29  F00B         	goto	u2300
  5024   00164E                     u2301:
  5025   00164E  EF41  F00B         	goto	l725
  5026   001652                     u2300:
  5027   001652  C010  F009         	movff	___fladd@grs,??___fladd
  5028   001656  0E7F               	movlw	127
  5029   001658  1609               	andwf	??___fladd^0,f,c
  5030   00165A  B4D8               	btfsc	status,2,c
  5031   00165C  EF32  F00B         	goto	u2311
  5032   001660  EF34  F00B         	goto	u2310
  5033   001664                     u2311:
  5034   001664  EF38  F00B         	goto	l726
  5035   001668                     u2310:
  5036   001668                     l2695:
  5037   001668  0E01               	movlw	1
  5038   00166A  6E0E               	movwf	___fladd@aexp^0,c
  5039   00166C  EF41  F00B         	goto	l725
  5040   001670                     l726:
  5041   001670  A001               	btfss	___fladd@b^0,0,c
  5042   001672  EF3D  F00B         	goto	u2321
  5043   001676  EF3F  F00B         	goto	u2320
  5044   00167A                     u2321:
  5045   00167A  EF41  F00B         	goto	l725
  5046   00167E                     u2320:
  5047   00167E  EF34  F00B         	goto	l2695
  5048   001682                     l725:
  5049   001682  500E               	movf	___fladd@aexp^0,w,c
  5050   001684  B4D8               	btfsc	status,2,c
  5051   001686  EF47  F00B         	goto	u2331
  5052   00168A  EF49  F00B         	goto	u2330
  5053   00168E                     u2331:
  5054   00168E  EF74  F00B         	goto	l2707
  5055   001692                     u2330:
  5056   001692  0E01               	movlw	1
  5057   001694  2601               	addwf	___fladd@b^0,f,c
  5058   001696  0E00               	movlw	0
  5059   001698  2202               	addwfc	(___fladd@b+1)^0,f,c
  5060   00169A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5061   00169C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5062   00169E  A004               	btfss	(___fladd@b+3)^0,0,c
  5063   0016A0  EF54  F00B         	goto	u2341
  5064   0016A4  EF56  F00B         	goto	u2340
  5065   0016A8                     u2341:
  5066   0016A8  EF74  F00B         	goto	l2707
  5067   0016AC                     u2340:
  5068   0016AC  C001  F009         	movff	___fladd@b,??___fladd
  5069   0016B0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5070   0016B4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5071   0016B8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5072   0016BC  340C               	rlcf	(??___fladd+3)^0,w,c
  5073   0016BE  320C               	rrcf	(??___fladd+3)^0,f,c
  5074   0016C0  320B               	rrcf	(??___fladd+2)^0,f,c
  5075   0016C2  320A               	rrcf	(??___fladd+1)^0,f,c
  5076   0016C4  3209               	rrcf	??___fladd^0,f,c
  5077   0016C6  C009  F001         	movff	??___fladd,___fladd@b
  5078   0016CA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5079   0016CE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5080   0016D2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5081   0016D6  280F               	incf	___fladd@bexp^0,w,c
  5082   0016D8  B4D8               	btfsc	status,2,c
  5083   0016DA  EF71  F00B         	goto	u2351
  5084   0016DE  EF73  F00B         	goto	u2350
  5085   0016E2                     u2351:
  5086   0016E2  EF74  F00B         	goto	l2707
  5087   0016E6                     u2350:
  5088   0016E6  2A0F               	incf	___fladd@bexp^0,f,c
  5089   0016E8                     l2707:
  5090   0016E8  280F               	incf	___fladd@bexp^0,w,c
  5091   0016EA  B4D8               	btfsc	status,2,c
  5092   0016EC  EF7A  F00B         	goto	u2361
  5093   0016F0  EF7C  F00B         	goto	u2360
  5094   0016F4                     u2361:
  5095   0016F4  EF84  F00B         	goto	l2711
  5096   0016F8                     u2360:
  5097   0016F8  500F               	movf	___fladd@bexp^0,w,c
  5098   0016FA  A4D8               	btfss	status,2,c
  5099   0016FC  EF82  F00B         	goto	u2371
  5100   001700  EF84  F00B         	goto	u2370
  5101   001704                     u2371:
  5102   001704  EF96  F00B         	goto	l2715
  5103   001708                     u2370:
  5104   001708                     l2711:
  5105   001708  0E00               	movlw	0
  5106   00170A  6E01               	movwf	___fladd@b^0,c
  5107   00170C  0E00               	movlw	0
  5108   00170E  6E02               	movwf	(___fladd@b+1)^0,c
  5109   001710  0E00               	movlw	0
  5110   001712  6E03               	movwf	(___fladd@b+2)^0,c
  5111   001714  0E00               	movlw	0
  5112   001716  6E04               	movwf	(___fladd@b+3)^0,c
  5113   001718  500F               	movf	___fladd@bexp^0,w,c
  5114   00171A  A4D8               	btfss	status,2,c
  5115   00171C  EF92  F00B         	goto	u2381
  5116   001720  EF94  F00B         	goto	u2380
  5117   001724                     u2381:
  5118   001724  EF96  F00B         	goto	l2715
  5119   001728                     u2380:
  5120   001728  0E00               	movlw	0
  5121   00172A  6E0D               	movwf	___fladd@signs^0,c
  5122   00172C                     l2715:
  5123   00172C  A00F               	btfss	___fladd@bexp^0,0,c
  5124   00172E  EF9B  F00B         	goto	u2391
  5125   001732  EF9D  F00B         	goto	u2390
  5126   001736                     u2391:
  5127   001736  EFA0  F00B         	goto	l2719
  5128   00173A                     u2390:
  5129   00173A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5130   00173C  EFA1  F00B         	goto	l2721
  5131   001740                     l2719:
  5132   001740  9E03               	bcf	(___fladd@b+2)^0,7,c
  5133   001742                     l2721:
  5134   001742  90D8               	bcf	status,0,c
  5135   001744  300F               	rrcf	___fladd@bexp^0,w,c
  5136   001746  6E04               	movwf	(___fladd@b+3)^0,c
  5137   001748  AE0D               	btfss	___fladd@signs^0,7,c
  5138   00174A  EFA9  F00B         	goto	u2401
  5139   00174E  EFAB  F00B         	goto	u2400
  5140   001752                     u2401:
  5141   001752  EFAC  F00B         	goto	l2727
  5142   001756                     u2400:
  5143   001756  8E04               	bsf	(___fladd@b+3)^0,7,c
  5144   001758                     l2727:
  5145   001758  C001  F001         	movff	___fladd@b,?___fladd
  5146   00175C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5147   001760  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5148   001764  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5149   001768                     l708:
  5150   001768  0012               	return		;funcret
  5151   00176A                     __end_of___fladd:
  5152                           	callstack 0
  5153                           
  5154 ;; *************** function ___flneg *****************
  5155 ;; Defined at:
  5156 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  f1              4    0[COMRAM] unsigned char 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;		None
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  4    0[COMRAM] unsigned char 
  5163 ;; Registers used:
  5164 ;;		wreg, status,2, status,0
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5170 ;;      Params:         4       0       0       0       0       0       0       0       0
  5171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5173 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5174 ;;Total ram usage:        4 bytes
  5175 ;; Hardware stack levels used: 1
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_efgtoa
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           	psect	text19
  5184   00317A                     __ptext19:
  5185                           	callstack 0
  5186   00317A                     ___flneg:
  5187                           	callstack 26
  5188   00317A  5001               	movf	___flneg@f1^0,w,c
  5189   00317C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5190   00317E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5191   003180  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5192   003182  B4D8               	btfsc	status,2,c
  5193   003184  EFC6  F018         	goto	u2921
  5194   003188  EFC8  F018         	goto	u2920
  5195   00318C                     u2921:
  5196   00318C  EFD0  F018         	goto	l3061
  5197   003190                     u2920:
  5198   003190  0E00               	movlw	0
  5199   003192  1A01               	xorwf	___flneg@f1^0,f,c
  5200   003194  0E00               	movlw	0
  5201   003196  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5202   003198  0E00               	movlw	0
  5203   00319A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5204   00319C  0E80               	movlw	128
  5205   00319E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5206   0031A0                     l3061:
  5207   0031A0  C001  F001         	movff	___flneg@f1,?___flneg
  5208   0031A4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5209   0031A8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5210   0031AC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5211   0031B0  0012               	return		;funcret
  5212   0031B2                     __end_of___flneg:
  5213                           	callstack 0
  5214                           
  5215 ;; *************** function ___flmul *****************
  5216 ;; Defined at:
  5217 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5218 ;; Parameters:    Size  Location     Type
  5219 ;;  b               4   14[COMRAM] unsigned char 
  5220 ;;  a               4   18[COMRAM] unsigned char 
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;  prod            4   33[COMRAM] struct .
  5223 ;;  grs             4   27[COMRAM] unsigned long 
  5224 ;;  temp            2   37[COMRAM] struct .
  5225 ;;  bexp            1   32[COMRAM] unsigned char 
  5226 ;;  aexp            1   31[COMRAM] unsigned char 
  5227 ;;  sign            1   26[COMRAM] unsigned char 
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  4   14[COMRAM] unsigned char 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0, prodl, prodh
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5237 ;;      Params:         8       0       0       0       0       0       0       0       0
  5238 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5239 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5240 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5241 ;;Total ram usage:       25 bytes
  5242 ;; Hardware stack levels used: 1
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_main
  5247 ;;		_efgtoa
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text20
  5252   00176A                     __ptext20:
  5253                           	callstack 0
  5254   00176A                     ___flmul:
  5255                           	callstack 26
  5256   00176A  5012               	movf	(___flmul@b+3)^0,w,c
  5257   00176C  0B80               	andlw	128
  5258   00176E  6E1B               	movwf	___flmul@sign^0,c
  5259   001770  5012               	movf	(___flmul@b+3)^0,w,c
  5260   001772  2412               	addwf	(___flmul@b+3)^0,w,c
  5261   001774  6E21               	movwf	___flmul@bexp^0,c
  5262   001776  AE11               	btfss	(___flmul@b+2)^0,7,c
  5263   001778  EFC0  F00B         	goto	u2651
  5264   00177C  EFC2  F00B         	goto	u2650
  5265   001780                     u2651:
  5266   001780  EFC3  F00B         	goto	l2889
  5267   001784                     u2650:
  5268   001784  8021               	bsf	___flmul@bexp^0,0,c
  5269   001786                     l2889:
  5270   001786  5021               	movf	___flmul@bexp^0,w,c
  5271   001788  B4D8               	btfsc	status,2,c
  5272   00178A  EFC9  F00B         	goto	u2661
  5273   00178E  EFCB  F00B         	goto	u2660
  5274   001792                     u2661:
  5275   001792  EFDE  F00B         	goto	l2897
  5276   001796                     u2660:
  5277   001796  2821               	incf	___flmul@bexp^0,w,c
  5278   001798  A4D8               	btfss	status,2,c
  5279   00179A  EFD1  F00B         	goto	u2671
  5280   00179E  EFD3  F00B         	goto	u2670
  5281   0017A2                     u2671:
  5282   0017A2  EFDB  F00B         	goto	l2895
  5283   0017A6                     u2670:
  5284   0017A6  0E00               	movlw	0
  5285   0017A8  6E0F               	movwf	___flmul@b^0,c
  5286   0017AA  0E00               	movlw	0
  5287   0017AC  6E10               	movwf	(___flmul@b+1)^0,c
  5288   0017AE  0E00               	movlw	0
  5289   0017B0  6E11               	movwf	(___flmul@b+2)^0,c
  5290   0017B2  0E00               	movlw	0
  5291   0017B4  6E12               	movwf	(___flmul@b+3)^0,c
  5292   0017B6                     l2895:
  5293   0017B6  8E11               	bsf	(___flmul@b+2)^0,7,c
  5294   0017B8  EFE6  F00B         	goto	l2899
  5295   0017BC                     l2897:
  5296   0017BC  0E00               	movlw	0
  5297   0017BE  6E0F               	movwf	___flmul@b^0,c
  5298   0017C0  0E00               	movlw	0
  5299   0017C2  6E10               	movwf	(___flmul@b+1)^0,c
  5300   0017C4  0E00               	movlw	0
  5301   0017C6  6E11               	movwf	(___flmul@b+2)^0,c
  5302   0017C8  0E00               	movlw	0
  5303   0017CA  6E12               	movwf	(___flmul@b+3)^0,c
  5304   0017CC                     l2899:
  5305   0017CC  5016               	movf	(___flmul@a+3)^0,w,c
  5306   0017CE  0B80               	andlw	128
  5307   0017D0  1A1B               	xorwf	___flmul@sign^0,f,c
  5308   0017D2  5016               	movf	(___flmul@a+3)^0,w,c
  5309   0017D4  2416               	addwf	(___flmul@a+3)^0,w,c
  5310   0017D6  6E20               	movwf	___flmul@aexp^0,c
  5311   0017D8  AE15               	btfss	(___flmul@a+2)^0,7,c
  5312   0017DA  EFF1  F00B         	goto	u2681
  5313   0017DE  EFF3  F00B         	goto	u2680
  5314   0017E2                     u2681:
  5315   0017E2  EFF4  F00B         	goto	l2907
  5316   0017E6                     u2680:
  5317   0017E6  8020               	bsf	___flmul@aexp^0,0,c
  5318   0017E8                     l2907:
  5319   0017E8  5020               	movf	___flmul@aexp^0,w,c
  5320   0017EA  B4D8               	btfsc	status,2,c
  5321   0017EC  EFFA  F00B         	goto	u2691
  5322   0017F0  EFFC  F00B         	goto	u2690
  5323   0017F4                     u2691:
  5324   0017F4  EF0F  F00C         	goto	l2915
  5325   0017F8                     u2690:
  5326   0017F8  2820               	incf	___flmul@aexp^0,w,c
  5327   0017FA  A4D8               	btfss	status,2,c
  5328   0017FC  EF02  F00C         	goto	u2701
  5329   001800  EF04  F00C         	goto	u2700
  5330   001804                     u2701:
  5331   001804  EF0C  F00C         	goto	l2913
  5332   001808                     u2700:
  5333   001808  0E00               	movlw	0
  5334   00180A  6E13               	movwf	___flmul@a^0,c
  5335   00180C  0E00               	movlw	0
  5336   00180E  6E14               	movwf	(___flmul@a+1)^0,c
  5337   001810  0E00               	movlw	0
  5338   001812  6E15               	movwf	(___flmul@a+2)^0,c
  5339   001814  0E00               	movlw	0
  5340   001816  6E16               	movwf	(___flmul@a+3)^0,c
  5341   001818                     l2913:
  5342   001818  8E15               	bsf	(___flmul@a+2)^0,7,c
  5343   00181A  EF17  F00C         	goto	l785
  5344   00181E                     l2915:
  5345   00181E  0E00               	movlw	0
  5346   001820  6E13               	movwf	___flmul@a^0,c
  5347   001822  0E00               	movlw	0
  5348   001824  6E14               	movwf	(___flmul@a+1)^0,c
  5349   001826  0E00               	movlw	0
  5350   001828  6E15               	movwf	(___flmul@a+2)^0,c
  5351   00182A  0E00               	movlw	0
  5352   00182C  6E16               	movwf	(___flmul@a+3)^0,c
  5353   00182E                     l785:
  5354   00182E  5020               	movf	___flmul@aexp^0,w,c
  5355   001830  B4D8               	btfsc	status,2,c
  5356   001832  EF1D  F00C         	goto	u2711
  5357   001836  EF1F  F00C         	goto	u2710
  5358   00183A                     u2711:
  5359   00183A  EF27  F00C         	goto	l2919
  5360   00183E                     u2710:
  5361   00183E  5021               	movf	___flmul@bexp^0,w,c
  5362   001840  A4D8               	btfss	status,2,c
  5363   001842  EF25  F00C         	goto	u2721
  5364   001846  EF27  F00C         	goto	u2720
  5365   00184A                     u2721:
  5366   00184A  EF31  F00C         	goto	l2923
  5367   00184E                     u2720:
  5368   00184E                     l2919:
  5369   00184E  0E00               	movlw	0
  5370   001850  6E0F               	movwf	?___flmul^0,c
  5371   001852  0E00               	movlw	0
  5372   001854  6E10               	movwf	(?___flmul+1)^0,c
  5373   001856  0E00               	movlw	0
  5374   001858  6E11               	movwf	(?___flmul+2)^0,c
  5375   00185A  0E00               	movlw	0
  5376   00185C  6E12               	movwf	(?___flmul+3)^0,c
  5377   00185E  EFC9  F00D         	goto	l789
  5378   001862                     l2923:
  5379   001862  5015               	movf	(___flmul@a+2)^0,w,c
  5380   001864  020F               	mulwf	___flmul@b^0,c
  5381   001866  CFF3 F026          	movff	prodl,___flmul@temp
  5382   00186A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5383   00186E  5026               	movf	___flmul@temp^0,w,c
  5384   001870  6E1C               	movwf	___flmul@grs^0,c
  5385   001872  6A1D               	clrf	(___flmul@grs+1)^0,c
  5386   001874  6A1E               	clrf	(___flmul@grs+2)^0,c
  5387   001876  6A1F               	clrf	(___flmul@grs+3)^0,c
  5388   001878  5027               	movf	(___flmul@temp+1)^0,w,c
  5389   00187A  6E22               	movwf	___flmul@prod^0,c
  5390   00187C  6A23               	clrf	(___flmul@prod+1)^0,c
  5391   00187E  6A24               	clrf	(___flmul@prod+2)^0,c
  5392   001880  6A25               	clrf	(___flmul@prod+3)^0,c
  5393   001882  5014               	movf	(___flmul@a+1)^0,w,c
  5394   001884  0210               	mulwf	(___flmul@b+1)^0,c
  5395   001886  CFF3 F026          	movff	prodl,___flmul@temp
  5396   00188A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5397   00188E  5026               	movf	___flmul@temp^0,w,c
  5398   001890  261C               	addwf	___flmul@grs^0,f,c
  5399   001892  0E00               	movlw	0
  5400   001894  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5401   001896  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5402   001898  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5403   00189A  5027               	movf	(___flmul@temp+1)^0,w,c
  5404   00189C  2622               	addwf	___flmul@prod^0,f,c
  5405   00189E  0E00               	movlw	0
  5406   0018A0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5407   0018A2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5408   0018A4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5409   0018A6  5013               	movf	___flmul@a^0,w,c
  5410   0018A8  0211               	mulwf	(___flmul@b+2)^0,c
  5411   0018AA  CFF3 F026          	movff	prodl,___flmul@temp
  5412   0018AE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5413   0018B2  5026               	movf	___flmul@temp^0,w,c
  5414   0018B4  261C               	addwf	___flmul@grs^0,f,c
  5415   0018B6  0E00               	movlw	0
  5416   0018B8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5417   0018BA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5418   0018BC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5419   0018BE  5027               	movf	(___flmul@temp+1)^0,w,c
  5420   0018C0  2622               	addwf	___flmul@prod^0,f,c
  5421   0018C2  0E00               	movlw	0
  5422   0018C4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5423   0018C6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5424   0018C8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5425   0018CA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5426   0018CE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5427   0018D2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5428   0018D6  6A1C               	clrf	___flmul@grs^0,c
  5429   0018D8  5013               	movf	___flmul@a^0,w,c
  5430   0018DA  0210               	mulwf	(___flmul@b+1)^0,c
  5431   0018DC  CFF3 F026          	movff	prodl,___flmul@temp
  5432   0018E0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5433   0018E4  5026               	movf	___flmul@temp^0,w,c
  5434   0018E6  261C               	addwf	___flmul@grs^0,f,c
  5435   0018E8  5027               	movf	(___flmul@temp+1)^0,w,c
  5436   0018EA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5437   0018EC  0E00               	movlw	0
  5438   0018EE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5439   0018F0  0E00               	movlw	0
  5440   0018F2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5441   0018F4  5014               	movf	(___flmul@a+1)^0,w,c
  5442   0018F6  020F               	mulwf	___flmul@b^0,c
  5443   0018F8  CFF3 F026          	movff	prodl,___flmul@temp
  5444   0018FC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5445   001900  5026               	movf	___flmul@temp^0,w,c
  5446   001902  261C               	addwf	___flmul@grs^0,f,c
  5447   001904  5027               	movf	(___flmul@temp+1)^0,w,c
  5448   001906  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5449   001908  0E00               	movlw	0
  5450   00190A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5451   00190C  0E00               	movlw	0
  5452   00190E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5453   001910  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5454   001914  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5455   001918  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5456   00191C  6A1C               	clrf	___flmul@grs^0,c
  5457   00191E  5013               	movf	___flmul@a^0,w,c
  5458   001920  020F               	mulwf	___flmul@b^0,c
  5459   001922  CFF3 F026          	movff	prodl,___flmul@temp
  5460   001926  CFF4 F027          	movff	prodh,___flmul@temp+1
  5461   00192A  5026               	movf	___flmul@temp^0,w,c
  5462   00192C  261C               	addwf	___flmul@grs^0,f,c
  5463   00192E  5027               	movf	(___flmul@temp+1)^0,w,c
  5464   001930  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5465   001932  0E00               	movlw	0
  5466   001934  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5467   001936  0E00               	movlw	0
  5468   001938  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5469   00193A  5015               	movf	(___flmul@a+2)^0,w,c
  5470   00193C  0210               	mulwf	(___flmul@b+1)^0,c
  5471   00193E  CFF3 F026          	movff	prodl,___flmul@temp
  5472   001942  CFF4 F027          	movff	prodh,___flmul@temp+1
  5473   001946  5026               	movf	___flmul@temp^0,w,c
  5474   001948  2622               	addwf	___flmul@prod^0,f,c
  5475   00194A  5027               	movf	(___flmul@temp+1)^0,w,c
  5476   00194C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5477   00194E  0E00               	movlw	0
  5478   001950  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5479   001952  0E00               	movlw	0
  5480   001954  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5481   001956  5014               	movf	(___flmul@a+1)^0,w,c
  5482   001958  0211               	mulwf	(___flmul@b+2)^0,c
  5483   00195A  CFF3 F026          	movff	prodl,___flmul@temp
  5484   00195E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5485   001962  5026               	movf	___flmul@temp^0,w,c
  5486   001964  2622               	addwf	___flmul@prod^0,f,c
  5487   001966  5027               	movf	(___flmul@temp+1)^0,w,c
  5488   001968  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5489   00196A  0E00               	movlw	0
  5490   00196C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5491   00196E  0E00               	movlw	0
  5492   001970  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5493   001972  5015               	movf	(___flmul@a+2)^0,w,c
  5494   001974  0211               	mulwf	(___flmul@b+2)^0,c
  5495   001976  CFF3 F026          	movff	prodl,___flmul@temp
  5496   00197A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5497   00197E  5026               	movf	___flmul@temp^0,w,c
  5498   001980  6E17               	movwf	??___flmul^0,c
  5499   001982  5027               	movf	(___flmul@temp+1)^0,w,c
  5500   001984  6E18               	movwf	(??___flmul+1)^0,c
  5501   001986  6A19               	clrf	(??___flmul+2)^0,c
  5502   001988  6A1A               	clrf	(??___flmul+3)^0,c
  5503   00198A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5504   00198E  C018  F019         	movff	??___flmul+1,??___flmul+2
  5505   001992  C017  F018         	movff	??___flmul,??___flmul+1
  5506   001996  6A17               	clrf	??___flmul^0,c
  5507   001998  5017               	movf	??___flmul^0,w,c
  5508   00199A  2622               	addwf	___flmul@prod^0,f,c
  5509   00199C  5018               	movf	(??___flmul+1)^0,w,c
  5510   00199E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5511   0019A0  5019               	movf	(??___flmul+2)^0,w,c
  5512   0019A2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5513   0019A4  501A               	movf	(??___flmul+3)^0,w,c
  5514   0019A6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5515   0019A8  C01C  F017         	movff	___flmul@grs,??___flmul
  5516   0019AC  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5517   0019B0  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5518   0019B4  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5519   0019B8  0E19               	movlw	25
  5520   0019BA  EFE4  F00C         	goto	u2730
  5521   0019BE                     u2735:
  5522   0019BE  90D8               	bcf	status,0,c
  5523   0019C0  321A               	rrcf	(??___flmul+3)^0,f,c
  5524   0019C2  3219               	rrcf	(??___flmul+2)^0,f,c
  5525   0019C4  3218               	rrcf	(??___flmul+1)^0,f,c
  5526   0019C6  3217               	rrcf	??___flmul^0,f,c
  5527   0019C8                     u2730:
  5528   0019C8  2EE8               	decfsz	wreg,f,c
  5529   0019CA  EFDF  F00C         	goto	u2735
  5530   0019CE  5017               	movf	??___flmul^0,w,c
  5531   0019D0  2622               	addwf	___flmul@prod^0,f,c
  5532   0019D2  5018               	movf	(??___flmul+1)^0,w,c
  5533   0019D4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5534   0019D6  5019               	movf	(??___flmul+2)^0,w,c
  5535   0019D8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5536   0019DA  501A               	movf	(??___flmul+3)^0,w,c
  5537   0019DC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5538   0019DE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5539   0019E2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5540   0019E6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5541   0019EA  6A1C               	clrf	___flmul@grs^0,c
  5542   0019EC  5020               	movf	___flmul@aexp^0,w,c
  5543   0019EE  C021  F017         	movff	___flmul@bexp,??___flmul
  5544   0019F2  6A18               	clrf	(??___flmul+1)^0,c
  5545   0019F4  2617               	addwf	??___flmul^0,f,c
  5546   0019F6  0E00               	movlw	0
  5547   0019F8  2218               	addwfc	(??___flmul+1)^0,f,c
  5548   0019FA  0E82               	movlw	130
  5549   0019FC  2417               	addwf	??___flmul^0,w,c
  5550   0019FE  6E26               	movwf	___flmul@temp^0,c
  5551   001A00  0EFF               	movlw	255
  5552   001A02  2018               	addwfc	(??___flmul+1)^0,w,c
  5553   001A04  6E27               	movwf	(___flmul@temp+1)^0,c
  5554   001A06  EF1A  F00D         	goto	l2971
  5555   001A0A                     l2965:
  5556   001A0A  90D8               	bcf	status,0,c
  5557   001A0C  3622               	rlcf	___flmul@prod^0,f,c
  5558   001A0E  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5559   001A10  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5560   001A12  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5561   001A14  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5562   001A16  EF0F  F00D         	goto	u2741
  5563   001A1A  EF11  F00D         	goto	u2740
  5564   001A1E                     u2741:
  5565   001A1E  EF12  F00D         	goto	l792
  5566   001A22                     u2740:
  5567   001A22  8022               	bsf	___flmul@prod^0,0,c
  5568   001A24                     l792:
  5569   001A24  90D8               	bcf	status,0,c
  5570   001A26  361C               	rlcf	___flmul@grs^0,f,c
  5571   001A28  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5572   001A2A  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5573   001A2C  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5574   001A2E  0626               	decf	___flmul@temp^0,f,c
  5575   001A30  A0D8               	btfss	status,0,c
  5576   001A32  0627               	decf	(___flmul@temp+1)^0,f,c
  5577   001A34                     l2971:
  5578   001A34  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5579   001A36  EF1F  F00D         	goto	u2751
  5580   001A3A  EF21  F00D         	goto	u2750
  5581   001A3E                     u2751:
  5582   001A3E  EF05  F00D         	goto	l2965
  5583   001A42                     u2750:
  5584   001A42  0E00               	movlw	0
  5585   001A44  6E20               	movwf	___flmul@aexp^0,c
  5586   001A46  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5587   001A48  EF28  F00D         	goto	u2761
  5588   001A4C  EF2A  F00D         	goto	u2760
  5589   001A50                     u2761:
  5590   001A50  EF4E  F00D         	goto	l794
  5591   001A54                     u2760:
  5592   001A54  0EFF               	movlw	255
  5593   001A56  141C               	andwf	___flmul@grs^0,w,c
  5594   001A58  6E17               	movwf	??___flmul^0,c
  5595   001A5A  0EFF               	movlw	255
  5596   001A5C  141D               	andwf	(___flmul@grs+1)^0,w,c
  5597   001A5E  6E18               	movwf	(??___flmul+1)^0,c
  5598   001A60  0EFF               	movlw	255
  5599   001A62  141E               	andwf	(___flmul@grs+2)^0,w,c
  5600   001A64  6E19               	movwf	(??___flmul+2)^0,c
  5601   001A66  0E7F               	movlw	127
  5602   001A68  141F               	andwf	(___flmul@grs+3)^0,w,c
  5603   001A6A  6E1A               	movwf	(??___flmul+3)^0,c
  5604   001A6C  5017               	movf	??___flmul^0,w,c
  5605   001A6E  1018               	iorwf	(??___flmul+1)^0,w,c
  5606   001A70  1019               	iorwf	(??___flmul+2)^0,w,c
  5607   001A72  101A               	iorwf	(??___flmul+3)^0,w,c
  5608   001A74  B4D8               	btfsc	status,2,c
  5609   001A76  EF3F  F00D         	goto	u2771
  5610   001A7A  EF41  F00D         	goto	u2770
  5611   001A7E                     u2771:
  5612   001A7E  EF45  F00D         	goto	l795
  5613   001A82                     u2770:
  5614   001A82                     l2979:
  5615   001A82  0E01               	movlw	1
  5616   001A84  6E20               	movwf	___flmul@aexp^0,c
  5617   001A86  EF4E  F00D         	goto	l794
  5618   001A8A                     l795:
  5619   001A8A  A022               	btfss	___flmul@prod^0,0,c
  5620   001A8C  EF4A  F00D         	goto	u2781
  5621   001A90  EF4C  F00D         	goto	u2780
  5622   001A94                     u2781:
  5623   001A94  EF4E  F00D         	goto	l794
  5624   001A98                     u2780:
  5625   001A98  EF41  F00D         	goto	l2979
  5626   001A9C                     l794:
  5627   001A9C  5020               	movf	___flmul@aexp^0,w,c
  5628   001A9E  B4D8               	btfsc	status,2,c
  5629   001AA0  EF54  F00D         	goto	u2791
  5630   001AA4  EF56  F00D         	goto	u2790
  5631   001AA8                     u2791:
  5632   001AA8  EF7A  F00D         	goto	l2991
  5633   001AAC                     u2790:
  5634   001AAC  0E01               	movlw	1
  5635   001AAE  2622               	addwf	___flmul@prod^0,f,c
  5636   001AB0  0E00               	movlw	0
  5637   001AB2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5638   001AB4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5639   001AB6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5640   001AB8  A025               	btfss	(___flmul@prod+3)^0,0,c
  5641   001ABA  EF61  F00D         	goto	u2801
  5642   001ABE  EF63  F00D         	goto	u2800
  5643   001AC2                     u2801:
  5644   001AC2  EF7A  F00D         	goto	l2991
  5645   001AC6                     u2800:
  5646   001AC6  C022  F017         	movff	___flmul@prod,??___flmul
  5647   001ACA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5648   001ACE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5649   001AD2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5650   001AD6  341A               	rlcf	(??___flmul+3)^0,w,c
  5651   001AD8  321A               	rrcf	(??___flmul+3)^0,f,c
  5652   001ADA  3219               	rrcf	(??___flmul+2)^0,f,c
  5653   001ADC  3218               	rrcf	(??___flmul+1)^0,f,c
  5654   001ADE  3217               	rrcf	??___flmul^0,f,c
  5655   001AE0  C017  F022         	movff	??___flmul,___flmul@prod
  5656   001AE4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5657   001AE8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5658   001AEC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5659   001AF0  4A26               	infsnz	___flmul@temp^0,f,c
  5660   001AF2  2A27               	incf	(___flmul@temp+1)^0,f,c
  5661   001AF4                     l2991:
  5662   001AF4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5663   001AF6  EF85  F00D         	goto	u2811
  5664   001AFA  5027               	movf	(___flmul@temp+1)^0,w,c
  5665   001AFC  E108               	bnz	u2810
  5666   001AFE  2826               	incf	___flmul@temp^0,w,c
  5667   001B00  A0D8               	btfss	status,0,c
  5668   001B02  EF85  F00D         	goto	u2811
  5669   001B06  EF87  F00D         	goto	u2810
  5670   001B0A                     u2811:
  5671   001B0A  EF91  F00D         	goto	l2995
  5672   001B0E                     u2810:
  5673   001B0E  0E00               	movlw	0
  5674   001B10  6E22               	movwf	___flmul@prod^0,c
  5675   001B12  0E00               	movlw	0
  5676   001B14  6E23               	movwf	(___flmul@prod+1)^0,c
  5677   001B16  0E80               	movlw	128
  5678   001B18  6E24               	movwf	(___flmul@prod+2)^0,c
  5679   001B1A  0E7F               	movlw	127
  5680   001B1C  6E25               	movwf	(___flmul@prod+3)^0,c
  5681   001B1E  EFBF  F00D         	goto	l3007
  5682   001B22                     l2995:
  5683   001B22  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5684   001B24  EF9E  F00D         	goto	u2820
  5685   001B28  5027               	movf	(___flmul@temp+1)^0,w,c
  5686   001B2A  E106               	bnz	u2821
  5687   001B2C  0426               	decf	___flmul@temp^0,w,c
  5688   001B2E  B0D8               	btfsc	status,0,c
  5689   001B30  EF9C  F00D         	goto	u2821
  5690   001B34  EF9E  F00D         	goto	u2820
  5691   001B38                     u2821:
  5692   001B38  EFAA  F00D         	goto	l802
  5693   001B3C                     u2820:
  5694   001B3C  0E00               	movlw	0
  5695   001B3E  6E22               	movwf	___flmul@prod^0,c
  5696   001B40  0E00               	movlw	0
  5697   001B42  6E23               	movwf	(___flmul@prod+1)^0,c
  5698   001B44  0E00               	movlw	0
  5699   001B46  6E24               	movwf	(___flmul@prod+2)^0,c
  5700   001B48  0E00               	movlw	0
  5701   001B4A  6E25               	movwf	(___flmul@prod+3)^0,c
  5702   001B4C  0E00               	movlw	0
  5703   001B4E  6E1B               	movwf	___flmul@sign^0,c
  5704   001B50  EFBF  F00D         	goto	l3007
  5705   001B54                     l802:
  5706   001B54  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5707   001B58  0EFF               	movlw	255
  5708   001B5A  1622               	andwf	___flmul@prod^0,f,c
  5709   001B5C  0EFF               	movlw	255
  5710   001B5E  1623               	andwf	(___flmul@prod+1)^0,f,c
  5711   001B60  0E7F               	movlw	127
  5712   001B62  1624               	andwf	(___flmul@prod+2)^0,f,c
  5713   001B64  0E00               	movlw	0
  5714   001B66  1625               	andwf	(___flmul@prod+3)^0,f,c
  5715   001B68  A021               	btfss	___flmul@bexp^0,0,c
  5716   001B6A  EFB9  F00D         	goto	u2831
  5717   001B6E  EFBB  F00D         	goto	u2830
  5718   001B72                     u2831:
  5719   001B72  EFBC  F00D         	goto	l3005
  5720   001B76                     u2830:
  5721   001B76  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5722   001B78                     l3005:
  5723   001B78  90D8               	bcf	status,0,c
  5724   001B7A  3021               	rrcf	___flmul@bexp^0,w,c
  5725   001B7C  6E25               	movwf	(___flmul@prod+3)^0,c
  5726   001B7E                     l3007:
  5727   001B7E  501B               	movf	___flmul@sign^0,w,c
  5728   001B80  1225               	iorwf	(___flmul@prod+3)^0,f,c
  5729   001B82  C022  F00F         	movff	___flmul@prod,?___flmul
  5730   001B86  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  5731   001B8A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  5732   001B8E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  5733   001B92                     l789:
  5734   001B92  0012               	return		;funcret
  5735   001B94                     __end_of___flmul:
  5736                           	callstack 0
  5737                           
  5738 ;; *************** function ___flge *****************
  5739 ;; Defined at:
  5740 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  ff1             4   39[COMRAM] unsigned char 
  5743 ;;  ff2             4   43[COMRAM] unsigned char 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;		None
  5746 ;; Return value:  Size  Location     Type
  5747 ;;		None               void
  5748 ;; Registers used:
  5749 ;;		wreg, status,2, status,0
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5755 ;;      Params:         8       0       0       0       0       0       0       0       0
  5756 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5757 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5758 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5759 ;;Total ram usage:       12 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_efgtoa
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text21
  5769   002874                     __ptext21:
  5770                           	callstack 0
  5771   002874                     ___flge:
  5772                           	callstack 26
  5773   002874  0E00               	movlw	0
  5774   002876  1428               	andwf	___flge@ff1^0,w,c
  5775   002878  6E30               	movwf	??___flge^0,c
  5776   00287A  0E00               	movlw	0
  5777   00287C  1429               	andwf	(___flge@ff1+1)^0,w,c
  5778   00287E  6E31               	movwf	(??___flge+1)^0,c
  5779   002880  0E80               	movlw	128
  5780   002882  142A               	andwf	(___flge@ff1+2)^0,w,c
  5781   002884  6E32               	movwf	(??___flge+2)^0,c
  5782   002886  0E7F               	movlw	127
  5783   002888  142B               	andwf	(___flge@ff1+3)^0,w,c
  5784   00288A  6E33               	movwf	(??___flge+3)^0,c
  5785   00288C  5030               	movf	??___flge^0,w,c
  5786   00288E  1031               	iorwf	(??___flge+1)^0,w,c
  5787   002890  1032               	iorwf	(??___flge+2)^0,w,c
  5788   002892  1033               	iorwf	(??___flge+3)^0,w,c
  5789   002894  A4D8               	btfss	status,2,c
  5790   002896  EF4F  F014         	goto	u2871
  5791   00289A  EF51  F014         	goto	u2870
  5792   00289E                     u2871:
  5793   00289E  EF59  F014         	goto	l3039
  5794   0028A2                     u2870:
  5795   0028A2  0E00               	movlw	0
  5796   0028A4  6E28               	movwf	___flge@ff1^0,c
  5797   0028A6  0E00               	movlw	0
  5798   0028A8  6E29               	movwf	(___flge@ff1+1)^0,c
  5799   0028AA  0E00               	movlw	0
  5800   0028AC  6E2A               	movwf	(___flge@ff1+2)^0,c
  5801   0028AE  0E00               	movlw	0
  5802   0028B0  6E2B               	movwf	(___flge@ff1+3)^0,c
  5803   0028B2                     l3039:
  5804   0028B2  0E00               	movlw	0
  5805   0028B4  142C               	andwf	___flge@ff2^0,w,c
  5806   0028B6  6E30               	movwf	??___flge^0,c
  5807   0028B8  0E00               	movlw	0
  5808   0028BA  142D               	andwf	(___flge@ff2+1)^0,w,c
  5809   0028BC  6E31               	movwf	(??___flge+1)^0,c
  5810   0028BE  0E80               	movlw	128
  5811   0028C0  142E               	andwf	(___flge@ff2+2)^0,w,c
  5812   0028C2  6E32               	movwf	(??___flge+2)^0,c
  5813   0028C4  0E7F               	movlw	127
  5814   0028C6  142F               	andwf	(___flge@ff2+3)^0,w,c
  5815   0028C8  6E33               	movwf	(??___flge+3)^0,c
  5816   0028CA  5030               	movf	??___flge^0,w,c
  5817   0028CC  1031               	iorwf	(??___flge+1)^0,w,c
  5818   0028CE  1032               	iorwf	(??___flge+2)^0,w,c
  5819   0028D0  1033               	iorwf	(??___flge+3)^0,w,c
  5820   0028D2  A4D8               	btfss	status,2,c
  5821   0028D4  EF6E  F014         	goto	u2881
  5822   0028D8  EF70  F014         	goto	u2880
  5823   0028DC                     u2881:
  5824   0028DC  EF78  F014         	goto	l3043
  5825   0028E0                     u2880:
  5826   0028E0  0E00               	movlw	0
  5827   0028E2  6E2C               	movwf	___flge@ff2^0,c
  5828   0028E4  0E00               	movlw	0
  5829   0028E6  6E2D               	movwf	(___flge@ff2+1)^0,c
  5830   0028E8  0E00               	movlw	0
  5831   0028EA  6E2E               	movwf	(___flge@ff2+2)^0,c
  5832   0028EC  0E00               	movlw	0
  5833   0028EE  6E2F               	movwf	(___flge@ff2+3)^0,c
  5834   0028F0                     l3043:
  5835   0028F0  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5836   0028F2  EF7D  F014         	goto	u2891
  5837   0028F6  EF7F  F014         	goto	u2890
  5838   0028FA                     u2891:
  5839   0028FA  EF88  F014         	goto	l3047
  5840   0028FE                     u2890:
  5841   0028FE  6C28               	negf	___flge@ff1^0,c
  5842   002900  1E29               	comf	(___flge@ff1+1)^0,f,c
  5843   002902  B0D8               	btfsc	status,0,c
  5844   002904  2A29               	incf	(___flge@ff1+1)^0,f,c
  5845   002906  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5846   002908  B0D8               	btfsc	status,0,c
  5847   00290A  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5848   00290C  0E80               	movlw	128
  5849   00290E  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5850   002910                     l3047:
  5851   002910  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5852   002912  EF8D  F014         	goto	u2901
  5853   002916  EF8F  F014         	goto	u2900
  5854   00291A                     u2901:
  5855   00291A  EF98  F014         	goto	l436
  5856   00291E                     u2900:
  5857   00291E  6C2C               	negf	___flge@ff2^0,c
  5858   002920  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5859   002922  B0D8               	btfsc	status,0,c
  5860   002924  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5861   002926  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5862   002928  B0D8               	btfsc	status,0,c
  5863   00292A  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5864   00292C  0E80               	movlw	128
  5865   00292E  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5866   002930                     l436:
  5867   002930  0E00               	movlw	0
  5868   002932  1A28               	xorwf	___flge@ff1^0,f,c
  5869   002934  0E00               	movlw	0
  5870   002936  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5871   002938  0E00               	movlw	0
  5872   00293A  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5873   00293C  0E80               	movlw	128
  5874   00293E  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5875   002940  0E00               	movlw	0
  5876   002942  1A2C               	xorwf	___flge@ff2^0,f,c
  5877   002944  0E00               	movlw	0
  5878   002946  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5879   002948  0E00               	movlw	0
  5880   00294A  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5881   00294C  0E80               	movlw	128
  5882   00294E  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5883   002950  502C               	movf	___flge@ff2^0,w,c
  5884   002952  5C28               	subwf	___flge@ff1^0,w,c
  5885   002954  502D               	movf	(___flge@ff2+1)^0,w,c
  5886   002956  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5887   002958  502E               	movf	(___flge@ff2+2)^0,w,c
  5888   00295A  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5889   00295C  502F               	movf	(___flge@ff2+3)^0,w,c
  5890   00295E  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5891   002960  B0D8               	btfsc	status,0,c
  5892   002962  EFB5  F014         	goto	u2911
  5893   002966  EFB7  F014         	goto	u2910
  5894   00296A                     u2911:
  5895   00296A  EFBA  F014         	goto	l3053
  5896   00296E                     u2910:
  5897   00296E  90D8               	bcf	status,0,c
  5898   002970  EFBB  F014         	goto	l441
  5899   002974                     l3053:
  5900   002974  80D8               	bsf	status,0,c
  5901   002976                     l441:
  5902   002976  0012               	return		;funcret
  5903   002978                     __end_of___flge:
  5904                           	callstack 0
  5905                           
  5906 ;; *************** function ___fleq *****************
  5907 ;; Defined at:
  5908 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  ff1             4    0[COMRAM] unsigned char 
  5911 ;;  ff2             4    4[COMRAM] unsigned char 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;		None               void
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5923 ;;      Params:         8       0       0       0       0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5925 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5926 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5927 ;;Total ram usage:       12 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_efgtoa
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text22
  5937   002CD8                     __ptext22:
  5938                           	callstack 0
  5939   002CD8                     ___fleq:
  5940                           	callstack 26
  5941   002CD8  0E00               	movlw	0
  5942   002CDA  1401               	andwf	___fleq@ff1^0,w,c
  5943   002CDC  6E09               	movwf	??___fleq^0,c
  5944   002CDE  0E00               	movlw	0
  5945   002CE0  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5946   002CE2  6E0A               	movwf	(??___fleq+1)^0,c
  5947   002CE4  0E80               	movlw	128
  5948   002CE6  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5949   002CE8  6E0B               	movwf	(??___fleq+2)^0,c
  5950   002CEA  0E7F               	movlw	127
  5951   002CEC  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5952   002CEE  6E0C               	movwf	(??___fleq+3)^0,c
  5953   002CF0  5009               	movf	??___fleq^0,w,c
  5954   002CF2  100A               	iorwf	(??___fleq+1)^0,w,c
  5955   002CF4  100B               	iorwf	(??___fleq+2)^0,w,c
  5956   002CF6  100C               	iorwf	(??___fleq+3)^0,w,c
  5957   002CF8  A4D8               	btfss	status,2,c
  5958   002CFA  EF81  F016         	goto	u2841
  5959   002CFE  EF83  F016         	goto	u2840
  5960   002D02                     u2841:
  5961   002D02  EF8B  F016         	goto	l3023
  5962   002D06                     u2840:
  5963   002D06  0E00               	movlw	0
  5964   002D08  6E01               	movwf	___fleq@ff1^0,c
  5965   002D0A  0E00               	movlw	0
  5966   002D0C  6E02               	movwf	(___fleq@ff1+1)^0,c
  5967   002D0E  0E00               	movlw	0
  5968   002D10  6E03               	movwf	(___fleq@ff1+2)^0,c
  5969   002D12  0E00               	movlw	0
  5970   002D14  6E04               	movwf	(___fleq@ff1+3)^0,c
  5971   002D16                     l3023:
  5972   002D16  0E00               	movlw	0
  5973   002D18  1405               	andwf	___fleq@ff2^0,w,c
  5974   002D1A  6E09               	movwf	??___fleq^0,c
  5975   002D1C  0E00               	movlw	0
  5976   002D1E  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5977   002D20  6E0A               	movwf	(??___fleq+1)^0,c
  5978   002D22  0E80               	movlw	128
  5979   002D24  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5980   002D26  6E0B               	movwf	(??___fleq+2)^0,c
  5981   002D28  0E7F               	movlw	127
  5982   002D2A  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5983   002D2C  6E0C               	movwf	(??___fleq+3)^0,c
  5984   002D2E  5009               	movf	??___fleq^0,w,c
  5985   002D30  100A               	iorwf	(??___fleq+1)^0,w,c
  5986   002D32  100B               	iorwf	(??___fleq+2)^0,w,c
  5987   002D34  100C               	iorwf	(??___fleq+3)^0,w,c
  5988   002D36  A4D8               	btfss	status,2,c
  5989   002D38  EFA0  F016         	goto	u2851
  5990   002D3C  EFA2  F016         	goto	u2850
  5991   002D40                     u2851:
  5992   002D40  EFAA  F016         	goto	l3027
  5993   002D44                     u2850:
  5994   002D44  0E00               	movlw	0
  5995   002D46  6E05               	movwf	___fleq@ff2^0,c
  5996   002D48  0E00               	movlw	0
  5997   002D4A  6E06               	movwf	(___fleq@ff2+1)^0,c
  5998   002D4C  0E00               	movlw	0
  5999   002D4E  6E07               	movwf	(___fleq@ff2+2)^0,c
  6000   002D50  0E00               	movlw	0
  6001   002D52  6E08               	movwf	(___fleq@ff2+3)^0,c
  6002   002D54                     l3027:
  6003   002D54  5005               	movf	___fleq@ff2^0,w,c
  6004   002D56  1801               	xorwf	___fleq@ff1^0,w,c
  6005   002D58  E10F               	bnz	u2860
  6006   002D5A  5006               	movf	(___fleq@ff2+1)^0,w,c
  6007   002D5C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6008   002D5E  E10C               	bnz	u2860
  6009   002D60  5007               	movf	(___fleq@ff2+2)^0,w,c
  6010   002D62  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6011   002D64  E109               	bnz	u2860
  6012   002D66  5008               	movf	(___fleq@ff2+3)^0,w,c
  6013   002D68  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6014   002D6A  B4D8               	btfsc	status,2,c
  6015   002D6C  EFBA  F016         	goto	u2861
  6016   002D70  EFBC  F016         	goto	u2860
  6017   002D74                     u2861:
  6018   002D74  EFBF  F016         	goto	l3031
  6019   002D78                     u2860:
  6020   002D78  90D8               	bcf	status,0,c
  6021   002D7A  EFC0  F016         	goto	l430
  6022   002D7E                     l3031:
  6023   002D7E  80D8               	bsf	status,0,c
  6024   002D80                     l430:
  6025   002D80  0012               	return		;funcret
  6026   002D82                     __end_of___fleq:
  6027                           	callstack 0
  6028                           
  6029 ;; *************** function ___fldiv *****************
  6030 ;; Defined at:
  6031 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  b               4   39[COMRAM] unsigned char 
  6034 ;;  a               4   43[COMRAM] unsigned char 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  grs             4   58[COMRAM] unsigned long 
  6037 ;;  rem             4   51[COMRAM] unsigned long 
  6038 ;;  new_exp         2   56[COMRAM] short 
  6039 ;;  aexp            1   63[COMRAM] unsigned char 
  6040 ;;  bexp            1   62[COMRAM] unsigned char 
  6041 ;;  sign            1   55[COMRAM] unsigned char 
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  4   39[COMRAM] unsigned char 
  6044 ;; Registers used:
  6045 ;;		wreg, status,2, status,0
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6051 ;;      Params:         8       0       0       0       0       0       0       0       0
  6052 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6053 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6054 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6055 ;;Total ram usage:       25 bytes
  6056 ;; Hardware stack levels used: 1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_main
  6061 ;;		_efgtoa
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text23
  6066   001B94                     __ptext23:
  6067                           	callstack 0
  6068   001B94                     ___fldiv:
  6069                           	callstack 26
  6070   001B94  502B               	movf	(___fldiv@b+3)^0,w,c
  6071   001B96  0B80               	andlw	128
  6072   001B98  6E38               	movwf	___fldiv@sign^0,c
  6073   001B9A  502B               	movf	(___fldiv@b+3)^0,w,c
  6074   001B9C  242B               	addwf	(___fldiv@b+3)^0,w,c
  6075   001B9E  6E3F               	movwf	___fldiv@bexp^0,c
  6076   001BA0  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6077   001BA2  EFD5  F00D         	goto	u2421
  6078   001BA6  EFD7  F00D         	goto	u2420
  6079   001BAA                     u2421:
  6080   001BAA  EFD8  F00D         	goto	l2751
  6081   001BAE                     u2420:
  6082   001BAE  803F               	bsf	___fldiv@bexp^0,0,c
  6083   001BB0                     l2751:
  6084   001BB0  503F               	movf	___fldiv@bexp^0,w,c
  6085   001BB2  B4D8               	btfsc	status,2,c
  6086   001BB4  EFDE  F00D         	goto	u2431
  6087   001BB8  EFE0  F00D         	goto	u2430
  6088   001BBC                     u2431:
  6089   001BBC  EFF5  F00D         	goto	l2761
  6090   001BC0                     u2430:
  6091   001BC0  283F               	incf	___fldiv@bexp^0,w,c
  6092   001BC2  A4D8               	btfss	status,2,c
  6093   001BC4  EFE6  F00D         	goto	u2441
  6094   001BC8  EFE8  F00D         	goto	u2440
  6095   001BCC                     u2441:
  6096   001BCC  EFF0  F00D         	goto	l2757
  6097   001BD0                     u2440:
  6098   001BD0  0E00               	movlw	0
  6099   001BD2  6E28               	movwf	___fldiv@b^0,c
  6100   001BD4  0E00               	movlw	0
  6101   001BD6  6E29               	movwf	(___fldiv@b+1)^0,c
  6102   001BD8  0E00               	movlw	0
  6103   001BDA  6E2A               	movwf	(___fldiv@b+2)^0,c
  6104   001BDC  0E00               	movlw	0
  6105   001BDE  6E2B               	movwf	(___fldiv@b+3)^0,c
  6106   001BE0                     l2757:
  6107   001BE0  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6108   001BE2  0E00               	movlw	0
  6109   001BE4  6E2B               	movwf	(___fldiv@b+3)^0,c
  6110   001BE6  EFFD  F00D         	goto	l2763
  6111   001BEA                     l2761:
  6112   001BEA  0E00               	movlw	0
  6113   001BEC  6E28               	movwf	___fldiv@b^0,c
  6114   001BEE  0E00               	movlw	0
  6115   001BF0  6E29               	movwf	(___fldiv@b+1)^0,c
  6116   001BF2  0E00               	movlw	0
  6117   001BF4  6E2A               	movwf	(___fldiv@b+2)^0,c
  6118   001BF6  0E00               	movlw	0
  6119   001BF8  6E2B               	movwf	(___fldiv@b+3)^0,c
  6120   001BFA                     l2763:
  6121   001BFA  502F               	movf	(___fldiv@a+3)^0,w,c
  6122   001BFC  0B80               	andlw	128
  6123   001BFE  1A38               	xorwf	___fldiv@sign^0,f,c
  6124   001C00  502F               	movf	(___fldiv@a+3)^0,w,c
  6125   001C02  242F               	addwf	(___fldiv@a+3)^0,w,c
  6126   001C04  6E40               	movwf	___fldiv@aexp^0,c
  6127   001C06  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6128   001C08  EF08  F00E         	goto	u2451
  6129   001C0C  EF0A  F00E         	goto	u2450
  6130   001C10                     u2451:
  6131   001C10  EF0B  F00E         	goto	l2771
  6132   001C14                     u2450:
  6133   001C14  8040               	bsf	___fldiv@aexp^0,0,c
  6134   001C16                     l2771:
  6135   001C16  5040               	movf	___fldiv@aexp^0,w,c
  6136   001C18  B4D8               	btfsc	status,2,c
  6137   001C1A  EF11  F00E         	goto	u2461
  6138   001C1E  EF13  F00E         	goto	u2460
  6139   001C22                     u2461:
  6140   001C22  EF28  F00E         	goto	l2781
  6141   001C26                     u2460:
  6142   001C26  2840               	incf	___fldiv@aexp^0,w,c
  6143   001C28  A4D8               	btfss	status,2,c
  6144   001C2A  EF19  F00E         	goto	u2471
  6145   001C2E  EF1B  F00E         	goto	u2470
  6146   001C32                     u2471:
  6147   001C32  EF23  F00E         	goto	l2777
  6148   001C36                     u2470:
  6149   001C36  0E00               	movlw	0
  6150   001C38  6E2C               	movwf	___fldiv@a^0,c
  6151   001C3A  0E00               	movlw	0
  6152   001C3C  6E2D               	movwf	(___fldiv@a+1)^0,c
  6153   001C3E  0E00               	movlw	0
  6154   001C40  6E2E               	movwf	(___fldiv@a+2)^0,c
  6155   001C42  0E00               	movlw	0
  6156   001C44  6E2F               	movwf	(___fldiv@a+3)^0,c
  6157   001C46                     l2777:
  6158   001C46  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6159   001C48  0E00               	movlw	0
  6160   001C4A  6E2F               	movwf	(___fldiv@a+3)^0,c
  6161   001C4C  EF30  F00E         	goto	l2783
  6162   001C50                     l2781:
  6163   001C50  0E00               	movlw	0
  6164   001C52  6E2C               	movwf	___fldiv@a^0,c
  6165   001C54  0E00               	movlw	0
  6166   001C56  6E2D               	movwf	(___fldiv@a+1)^0,c
  6167   001C58  0E00               	movlw	0
  6168   001C5A  6E2E               	movwf	(___fldiv@a+2)^0,c
  6169   001C5C  0E00               	movlw	0
  6170   001C5E  6E2F               	movwf	(___fldiv@a+3)^0,c
  6171   001C60                     l2783:
  6172   001C60  502C               	movf	___fldiv@a^0,w,c
  6173   001C62  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6174   001C64  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6175   001C66  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6176   001C68  A4D8               	btfss	status,2,c
  6177   001C6A  EF39  F00E         	goto	u2481
  6178   001C6E  EF3B  F00E         	goto	u2480
  6179   001C72                     u2481:
  6180   001C72  EF53  F00E         	goto	l2795
  6181   001C76                     u2480:
  6182   001C76  0E00               	movlw	0
  6183   001C78  6E28               	movwf	___fldiv@b^0,c
  6184   001C7A  0E00               	movlw	0
  6185   001C7C  6E29               	movwf	(___fldiv@b+1)^0,c
  6186   001C7E  0E00               	movlw	0
  6187   001C80  6E2A               	movwf	(___fldiv@b+2)^0,c
  6188   001C82  0E00               	movlw	0
  6189   001C84  6E2B               	movwf	(___fldiv@b+3)^0,c
  6190   001C86  0E80               	movlw	128
  6191   001C88  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6192   001C8A  0E7F               	movlw	127
  6193   001C8C  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6194   001C8E                     l2789:
  6195   001C8E  5038               	movf	___fldiv@sign^0,w,c
  6196   001C90  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6197   001C92  C028  F028         	movff	___fldiv@b,?___fldiv
  6198   001C96  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6199   001C9A  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6200   001C9E  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6201   001CA2  EF96  F00F         	goto	l753
  6202   001CA6                     l2795:
  6203   001CA6  503F               	movf	___fldiv@bexp^0,w,c
  6204   001CA8  A4D8               	btfss	status,2,c
  6205   001CAA  EF59  F00E         	goto	u2491
  6206   001CAE  EF5B  F00E         	goto	u2490
  6207   001CB2                     u2491:
  6208   001CB2  EF65  F00E         	goto	l2803
  6209   001CB6                     u2490:
  6210   001CB6  0E00               	movlw	0
  6211   001CB8  6E28               	movwf	?___fldiv^0,c
  6212   001CBA  0E00               	movlw	0
  6213   001CBC  6E29               	movwf	(?___fldiv+1)^0,c
  6214   001CBE  0E00               	movlw	0
  6215   001CC0  6E2A               	movwf	(?___fldiv+2)^0,c
  6216   001CC2  0E00               	movlw	0
  6217   001CC4  6E2B               	movwf	(?___fldiv+3)^0,c
  6218   001CC6  EF96  F00F         	goto	l753
  6219   001CCA                     l2803:
  6220   001CCA  5040               	movf	___fldiv@aexp^0,w,c
  6221   001CCC  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6222   001CD0  6A31               	clrf	(??___fldiv+1)^0,c
  6223   001CD2  5E30               	subwf	??___fldiv^0,f,c
  6224   001CD4  0E00               	movlw	0
  6225   001CD6  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6226   001CD8  0E7F               	movlw	127
  6227   001CDA  2430               	addwf	??___fldiv^0,w,c
  6228   001CDC  6E39               	movwf	___fldiv@new_exp^0,c
  6229   001CDE  0E00               	movlw	0
  6230   001CE0  2031               	addwfc	(??___fldiv+1)^0,w,c
  6231   001CE2  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6232   001CE4  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6233   001CE8  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6234   001CEC  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6235   001CF0  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6236   001CF4  0E00               	movlw	0
  6237   001CF6  6E28               	movwf	___fldiv@b^0,c
  6238   001CF8  0E00               	movlw	0
  6239   001CFA  6E29               	movwf	(___fldiv@b+1)^0,c
  6240   001CFC  0E00               	movlw	0
  6241   001CFE  6E2A               	movwf	(___fldiv@b+2)^0,c
  6242   001D00  0E00               	movlw	0
  6243   001D02  6E2B               	movwf	(___fldiv@b+3)^0,c
  6244   001D04  0E00               	movlw	0
  6245   001D06  6E3B               	movwf	___fldiv@grs^0,c
  6246   001D08  0E00               	movlw	0
  6247   001D0A  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6248   001D0C  0E00               	movlw	0
  6249   001D0E  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6250   001D10  0E00               	movlw	0
  6251   001D12  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6252   001D14  0E00               	movlw	0
  6253   001D16  6E40               	movwf	___fldiv@aexp^0,c
  6254   001D18  EFC6  F00E         	goto	l755
  6255   001D1C                     l2813:
  6256   001D1C  5040               	movf	___fldiv@aexp^0,w,c
  6257   001D1E  B4D8               	btfsc	status,2,c
  6258   001D20  EF94  F00E         	goto	u2501
  6259   001D24  EF96  F00E         	goto	u2500
  6260   001D28                     u2501:
  6261   001D28  EFAD  F00E         	goto	l2821
  6262   001D2C                     u2500:
  6263   001D2C  90D8               	bcf	status,0,c
  6264   001D2E  3634               	rlcf	___fldiv@rem^0,f,c
  6265   001D30  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6266   001D32  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6267   001D34  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6268   001D36  90D8               	bcf	status,0,c
  6269   001D38  3628               	rlcf	___fldiv@b^0,f,c
  6270   001D3A  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6271   001D3C  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6272   001D3E  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6273   001D40  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6274   001D42  EFA5  F00E         	goto	u2511
  6275   001D46  EFA7  F00E         	goto	u2510
  6276   001D4A                     u2511:
  6277   001D4A  EFA8  F00E         	goto	l758
  6278   001D4E                     u2510:
  6279   001D4E  8028               	bsf	___fldiv@b^0,0,c
  6280   001D50                     l758:
  6281   001D50  90D8               	bcf	status,0,c
  6282   001D52  363B               	rlcf	___fldiv@grs^0,f,c
  6283   001D54  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6284   001D56  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6285   001D58  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6286   001D5A                     l2821:
  6287   001D5A  502C               	movf	___fldiv@a^0,w,c
  6288   001D5C  5C34               	subwf	___fldiv@rem^0,w,c
  6289   001D5E  502D               	movf	(___fldiv@a+1)^0,w,c
  6290   001D60  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6291   001D62  502E               	movf	(___fldiv@a+2)^0,w,c
  6292   001D64  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6293   001D66  502F               	movf	(___fldiv@a+3)^0,w,c
  6294   001D68  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6295   001D6A  A0D8               	btfss	status,0,c
  6296   001D6C  EFBA  F00E         	goto	u2521
  6297   001D70  EFBC  F00E         	goto	u2520
  6298   001D74                     u2521:
  6299   001D74  EFC5  F00E         	goto	l2827
  6300   001D78                     u2520:
  6301   001D78  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6302   001D7A  502C               	movf	___fldiv@a^0,w,c
  6303   001D7C  5E34               	subwf	___fldiv@rem^0,f,c
  6304   001D7E  502D               	movf	(___fldiv@a+1)^0,w,c
  6305   001D80  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6306   001D82  502E               	movf	(___fldiv@a+2)^0,w,c
  6307   001D84  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6308   001D86  502F               	movf	(___fldiv@a+3)^0,w,c
  6309   001D88  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6310   001D8A                     l2827:
  6311   001D8A  2A40               	incf	___fldiv@aexp^0,f,c
  6312   001D8C                     l755:
  6313   001D8C  0E19               	movlw	25
  6314   001D8E  6440               	cpfsgt	___fldiv@aexp^0,c
  6315   001D90  EFCC  F00E         	goto	u2531
  6316   001D94  EFCE  F00E         	goto	u2530
  6317   001D98                     u2531:
  6318   001D98  EF8E  F00E         	goto	l2813
  6319   001D9C                     u2530:
  6320   001D9C  5034               	movf	___fldiv@rem^0,w,c
  6321   001D9E  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6322   001DA0  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6323   001DA2  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6324   001DA4  B4D8               	btfsc	status,2,c
  6325   001DA6  EFD7  F00E         	goto	u2541
  6326   001DAA  EFD9  F00E         	goto	u2540
  6327   001DAE                     u2541:
  6328   001DAE  EFF1  F00E         	goto	l2839
  6329   001DB2                     u2540:
  6330   001DB2  803B               	bsf	___fldiv@grs^0,0,c
  6331   001DB4  EFF1  F00E         	goto	l2839
  6332   001DB8                     l2833:
  6333   001DB8  90D8               	bcf	status,0,c
  6334   001DBA  3628               	rlcf	___fldiv@b^0,f,c
  6335   001DBC  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6336   001DBE  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6337   001DC0  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6338   001DC2  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6339   001DC4  EFE6  F00E         	goto	u2551
  6340   001DC8  EFE8  F00E         	goto	u2550
  6341   001DCC                     u2551:
  6342   001DCC  EFE9  F00E         	goto	l764
  6343   001DD0                     u2550:
  6344   001DD0  8028               	bsf	___fldiv@b^0,0,c
  6345   001DD2                     l764:
  6346   001DD2  90D8               	bcf	status,0,c
  6347   001DD4  363B               	rlcf	___fldiv@grs^0,f,c
  6348   001DD6  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6349   001DD8  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6350   001DDA  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6351   001DDC  0639               	decf	___fldiv@new_exp^0,f,c
  6352   001DDE  A0D8               	btfss	status,0,c
  6353   001DE0  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6354   001DE2                     l2839:
  6355   001DE2  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6356   001DE4  EFF6  F00E         	goto	u2561
  6357   001DE8  EFF8  F00E         	goto	u2560
  6358   001DEC                     u2561:
  6359   001DEC  EFDC  F00E         	goto	l2833
  6360   001DF0                     u2560:
  6361   001DF0  0E00               	movlw	0
  6362   001DF2  6E40               	movwf	___fldiv@aexp^0,c
  6363   001DF4  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6364   001DF6  EFFF  F00E         	goto	u2571
  6365   001DFA  EF01  F00F         	goto	u2570
  6366   001DFE                     u2571:
  6367   001DFE  EF25  F00F         	goto	l766
  6368   001E02                     u2570:
  6369   001E02  0EFF               	movlw	255
  6370   001E04  143B               	andwf	___fldiv@grs^0,w,c
  6371   001E06  6E30               	movwf	??___fldiv^0,c
  6372   001E08  0EFF               	movlw	255
  6373   001E0A  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6374   001E0C  6E31               	movwf	(??___fldiv+1)^0,c
  6375   001E0E  0EFF               	movlw	255
  6376   001E10  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6377   001E12  6E32               	movwf	(??___fldiv+2)^0,c
  6378   001E14  0E7F               	movlw	127
  6379   001E16  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6380   001E18  6E33               	movwf	(??___fldiv+3)^0,c
  6381   001E1A  5030               	movf	??___fldiv^0,w,c
  6382   001E1C  1031               	iorwf	(??___fldiv+1)^0,w,c
  6383   001E1E  1032               	iorwf	(??___fldiv+2)^0,w,c
  6384   001E20  1033               	iorwf	(??___fldiv+3)^0,w,c
  6385   001E22  B4D8               	btfsc	status,2,c
  6386   001E24  EF16  F00F         	goto	u2581
  6387   001E28  EF18  F00F         	goto	u2580
  6388   001E2C                     u2581:
  6389   001E2C  EF1C  F00F         	goto	l767
  6390   001E30                     u2580:
  6391   001E30                     l2847:
  6392   001E30  0E01               	movlw	1
  6393   001E32  6E40               	movwf	___fldiv@aexp^0,c
  6394   001E34  EF25  F00F         	goto	l766
  6395   001E38                     l767:
  6396   001E38  A028               	btfss	___fldiv@b^0,0,c
  6397   001E3A  EF21  F00F         	goto	u2591
  6398   001E3E  EF23  F00F         	goto	u2590
  6399   001E42                     u2591:
  6400   001E42  EF25  F00F         	goto	l766
  6401   001E46                     u2590:
  6402   001E46  EF18  F00F         	goto	l2847
  6403   001E4A                     l766:
  6404   001E4A  5040               	movf	___fldiv@aexp^0,w,c
  6405   001E4C  B4D8               	btfsc	status,2,c
  6406   001E4E  EF2B  F00F         	goto	u2601
  6407   001E52  EF2D  F00F         	goto	u2600
  6408   001E56                     u2601:
  6409   001E56  EF51  F00F         	goto	l2859
  6410   001E5A                     u2600:
  6411   001E5A  0E01               	movlw	1
  6412   001E5C  2628               	addwf	___fldiv@b^0,f,c
  6413   001E5E  0E00               	movlw	0
  6414   001E60  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6415   001E62  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6416   001E64  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6417   001E66  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6418   001E68  EF38  F00F         	goto	u2611
  6419   001E6C  EF3A  F00F         	goto	u2610
  6420   001E70                     u2611:
  6421   001E70  EF51  F00F         	goto	l2859
  6422   001E74                     u2610:
  6423   001E74  C028  F030         	movff	___fldiv@b,??___fldiv
  6424   001E78  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6425   001E7C  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6426   001E80  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6427   001E84  3433               	rlcf	(??___fldiv+3)^0,w,c
  6428   001E86  3233               	rrcf	(??___fldiv+3)^0,f,c
  6429   001E88  3232               	rrcf	(??___fldiv+2)^0,f,c
  6430   001E8A  3231               	rrcf	(??___fldiv+1)^0,f,c
  6431   001E8C  3230               	rrcf	??___fldiv^0,f,c
  6432   001E8E  C030  F028         	movff	??___fldiv,___fldiv@b
  6433   001E92  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6434   001E96  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6435   001E9A  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6436   001E9E  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6437   001EA0  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6438   001EA2                     l2859:
  6439   001EA2  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6440   001EA4  EF5C  F00F         	goto	u2621
  6441   001EA8  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6442   001EAA  E108               	bnz	u2620
  6443   001EAC  2839               	incf	___fldiv@new_exp^0,w,c
  6444   001EAE  A0D8               	btfss	status,0,c
  6445   001EB0  EF5C  F00F         	goto	u2621
  6446   001EB4  EF5E  F00F         	goto	u2620
  6447   001EB8                     u2621:
  6448   001EB8  EF69  F00F         	goto	l2863
  6449   001EBC                     u2620:
  6450   001EBC  0E00               	movlw	0
  6451   001EBE  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6452   001EC0  6839               	setf	___fldiv@new_exp^0,c
  6453   001EC2  0E00               	movlw	0
  6454   001EC4  6E28               	movwf	___fldiv@b^0,c
  6455   001EC6  0E00               	movlw	0
  6456   001EC8  6E29               	movwf	(___fldiv@b+1)^0,c
  6457   001ECA  0E00               	movlw	0
  6458   001ECC  6E2A               	movwf	(___fldiv@b+2)^0,c
  6459   001ECE  0E00               	movlw	0
  6460   001ED0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6461   001ED2                     l2863:
  6462   001ED2  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6463   001ED4  EF76  F00F         	goto	u2630
  6464   001ED8  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6465   001EDA  E106               	bnz	u2631
  6466   001EDC  0439               	decf	___fldiv@new_exp^0,w,c
  6467   001EDE  B0D8               	btfsc	status,0,c
  6468   001EE0  EF74  F00F         	goto	u2631
  6469   001EE4  EF76  F00F         	goto	u2630
  6470   001EE8                     u2631:
  6471   001EE8  EF84  F00F         	goto	l2867
  6472   001EEC                     u2630:
  6473   001EEC  0E00               	movlw	0
  6474   001EEE  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6475   001EF0  0E00               	movlw	0
  6476   001EF2  6E39               	movwf	___fldiv@new_exp^0,c
  6477   001EF4  0E00               	movlw	0
  6478   001EF6  6E28               	movwf	___fldiv@b^0,c
  6479   001EF8  0E00               	movlw	0
  6480   001EFA  6E29               	movwf	(___fldiv@b+1)^0,c
  6481   001EFC  0E00               	movlw	0
  6482   001EFE  6E2A               	movwf	(___fldiv@b+2)^0,c
  6483   001F00  0E00               	movlw	0
  6484   001F02  6E2B               	movwf	(___fldiv@b+3)^0,c
  6485   001F04  0E00               	movlw	0
  6486   001F06  6E38               	movwf	___fldiv@sign^0,c
  6487   001F08                     l2867:
  6488   001F08  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6489   001F0C  A03F               	btfss	___fldiv@bexp^0,0,c
  6490   001F0E  EF8B  F00F         	goto	u2641
  6491   001F12  EF8D  F00F         	goto	u2640
  6492   001F16                     u2641:
  6493   001F16  EF90  F00F         	goto	l2873
  6494   001F1A                     u2640:
  6495   001F1A  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6496   001F1C  EF91  F00F         	goto	l2875
  6497   001F20                     l2873:
  6498   001F20  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6499   001F22                     l2875:
  6500   001F22  90D8               	bcf	status,0,c
  6501   001F24  303F               	rrcf	___fldiv@bexp^0,w,c
  6502   001F26  6E2B               	movwf	(___fldiv@b+3)^0,c
  6503   001F28  EF47  F00E         	goto	l2789
  6504   001F2C                     l753:
  6505   001F2C  0012               	return		;funcret
  6506   001F2E                     __end_of___fldiv:
  6507                           	callstack 0
  6508                           
  6509 ;; *************** function _set_adc *****************
  6510 ;; Defined at:
  6511 ;;		line 107 in file "mainselec.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;		None
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  1    wreg      void 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6525 ;;      Params:         0       0       0       0       0       0       0       0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6528 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6529 ;;Total ram usage:        0 bytes
  6530 ;; Hardware stack levels used: 1
  6531 ;; This function calls:
  6532 ;;		Nothing
  6533 ;; This function is called by:
  6534 ;;		_main
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537                           
  6538                           	psect	text24
  6539   00324E                     __ptext24:
  6540                           	callstack 0
  6541   00324E                     _set_adc:
  6542                           	callstack 30
  6543   00324E                     
  6544                           ;mainselec.c: 108:     ANSELAbits.ANSA0 = 1;
  6545   00324E  010F               	movlb	15	; () banked
  6546   003250  815B               	bsf	91,0,b	;volatile
  6547                           
  6548                           ;mainselec.c: 109:     TRISAbits.RA0 = 1;
  6549   003252  8092               	bsf	146,0,c	;volatile
  6550   003254                     
  6551                           ; BSR set to: 15
  6552                           ;mainselec.c: 110:     ADCON0 = 0x00;
  6553   003254  0E00               	movlw	0
  6554   003256  6EC2               	movwf	194,c	;volatile
  6555                           
  6556                           ;mainselec.c: 111:     ADCON1 = 0x00;
  6557   003258  0E00               	movlw	0
  6558   00325A  6EC1               	movwf	193,c	;volatile
  6559                           
  6560                           ;mainselec.c: 112:     ADCON2 = 0b10011101;
  6561   00325C  0E9D               	movlw	157
  6562   00325E  6EC0               	movwf	192,c	;volatile
  6563   003260                     
  6564                           ; BSR set to: 15
  6565                           ;mainselec.c: 113:     ADCON0bits.ADON = 1;
  6566   003260  80C2               	bsf	194,0,c	;volatile
  6567   003262                     
  6568                           ; BSR set to: 15
  6569   003262  0012               	return		;funcret
  6570   003264                     __end_of_set_adc:
  6571                           	callstack 0
  6572                           
  6573 ;; *************** function ___xxtofl *****************
  6574 ;; Defined at:
  6575 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  sign            1    wreg     unsigned char 
  6578 ;;  val             4    0[COMRAM] long 
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;  sign            1    8[COMRAM] unsigned char 
  6581 ;;  arg             4   10[COMRAM] unsigned long 
  6582 ;;  exp             1    9[COMRAM] unsigned char 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  4    0[COMRAM] unsigned char 
  6585 ;; Registers used:
  6586 ;;		wreg, status,2, status,0
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6592 ;;      Params:         4       0       0       0       0       0       0       0       0
  6593 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6594 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6595 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6596 ;;Total ram usage:       14 bytes
  6597 ;; Hardware stack levels used: 1
  6598 ;; This function calls:
  6599 ;;		Nothing
  6600 ;; This function is called by:
  6601 ;;		_main
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text25
  6606   00241A                     __ptext25:
  6607                           	callstack 0
  6608   00241A                     ___xxtofl:
  6609                           	callstack 30
  6610                           
  6611                           ; BSR set to: 15
  6612                           ;incstack = 0
  6613                           ;___xxtofl@sign stored from wreg
  6614   00241A  6E09               	movwf	___xxtofl@sign^0,c
  6615   00241C  5009               	movf	___xxtofl@sign^0,w,c
  6616   00241E  B4D8               	btfsc	status,2,c
  6617   002420  EF14  F012         	goto	u3751
  6618   002424  EF16  F012         	goto	u3750
  6619   002428                     u3751:
  6620   002428  EF38  F012         	goto	l826
  6621   00242C                     u3750:
  6622   00242C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6623   00242E  EF1D  F012         	goto	u3760
  6624   002432  EF1B  F012         	goto	u3761
  6625   002436                     u3761:
  6626   002436  EF38  F012         	goto	l826
  6627   00243A                     u3760:
  6628   00243A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  6629   00243E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  6630   002442  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  6631   002446  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  6632   00244A  1E05               	comf	??___xxtofl^0,f,c
  6633   00244C  1E06               	comf	(??___xxtofl+1)^0,f,c
  6634   00244E  1E07               	comf	(??___xxtofl+2)^0,f,c
  6635   002450  1E08               	comf	(??___xxtofl+3)^0,f,c
  6636   002452  2A05               	incf	??___xxtofl^0,f,c
  6637   002454  0E00               	movlw	0
  6638   002456  2206               	addwfc	(??___xxtofl+1)^0,f,c
  6639   002458  2207               	addwfc	(??___xxtofl+2)^0,f,c
  6640   00245A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  6641   00245C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  6642   002460  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  6643   002464  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  6644   002468  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  6645   00246C  EF40  F012         	goto	l3695
  6646   002470                     l826:
  6647   002470  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  6648   002474  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6649   002478  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6650   00247C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6651   002480                     l3695:
  6652   002480  5001               	movf	___xxtofl@val^0,w,c
  6653   002482  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  6654   002484  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  6655   002486  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  6656   002488  A4D8               	btfss	status,2,c
  6657   00248A  EF49  F012         	goto	u3771
  6658   00248E  EF4B  F012         	goto	u3770
  6659   002492                     u3771:
  6660   002492  EF55  F012         	goto	l3701
  6661   002496                     u3770:
  6662   002496  0E00               	movlw	0
  6663   002498  6E01               	movwf	?___xxtofl^0,c
  6664   00249A  0E00               	movlw	0
  6665   00249C  6E02               	movwf	(?___xxtofl+1)^0,c
  6666   00249E  0E00               	movlw	0
  6667   0024A0  6E03               	movwf	(?___xxtofl+2)^0,c
  6668   0024A2  0E00               	movlw	0
  6669   0024A4  6E04               	movwf	(?___xxtofl+3)^0,c
  6670   0024A6  EFE6  F012         	goto	l829
  6671   0024AA                     l3701:
  6672   0024AA  0E96               	movlw	150
  6673   0024AC  6E0A               	movwf	___xxtofl@exp^0,c
  6674   0024AE  EF5F  F012         	goto	l3705
  6675   0024B2                     l3703:
  6676   0024B2  2A0A               	incf	___xxtofl@exp^0,f,c
  6677   0024B4  90D8               	bcf	status,0,c
  6678   0024B6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6679   0024B8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6680   0024BA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6681   0024BC  320B               	rrcf	___xxtofl@arg^0,f,c
  6682   0024BE                     l3705:
  6683   0024BE  0E00               	movlw	0
  6684   0024C0  140B               	andwf	___xxtofl@arg^0,w,c
  6685   0024C2  6E05               	movwf	??___xxtofl^0,c
  6686   0024C4  0E00               	movlw	0
  6687   0024C6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6688   0024C8  6E06               	movwf	(??___xxtofl+1)^0,c
  6689   0024CA  0E00               	movlw	0
  6690   0024CC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6691   0024CE  6E07               	movwf	(??___xxtofl+2)^0,c
  6692   0024D0  0EFE               	movlw	254
  6693   0024D2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6694   0024D4  6E08               	movwf	(??___xxtofl+3)^0,c
  6695   0024D6  5005               	movf	??___xxtofl^0,w,c
  6696   0024D8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6697   0024DA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6698   0024DC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6699   0024DE  A4D8               	btfss	status,2,c
  6700   0024E0  EF74  F012         	goto	u3781
  6701   0024E4  EF76  F012         	goto	u3780
  6702   0024E8                     u3781:
  6703   0024E8  EF59  F012         	goto	l3703
  6704   0024EC                     u3780:
  6705   0024EC  EF84  F012         	goto	l833
  6706   0024F0                     l3707:
  6707   0024F0  2A0A               	incf	___xxtofl@exp^0,f,c
  6708   0024F2  0E01               	movlw	1
  6709   0024F4  260B               	addwf	___xxtofl@arg^0,f,c
  6710   0024F6  0E00               	movlw	0
  6711   0024F8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  6712   0024FA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  6713   0024FC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  6714   0024FE  90D8               	bcf	status,0,c
  6715   002500  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  6716   002502  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  6717   002504  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  6718   002506  320B               	rrcf	___xxtofl@arg^0,f,c
  6719   002508                     l833:
  6720   002508  0E00               	movlw	0
  6721   00250A  140B               	andwf	___xxtofl@arg^0,w,c
  6722   00250C  6E05               	movwf	??___xxtofl^0,c
  6723   00250E  0E00               	movlw	0
  6724   002510  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  6725   002512  6E06               	movwf	(??___xxtofl+1)^0,c
  6726   002514  0E00               	movlw	0
  6727   002516  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  6728   002518  6E07               	movwf	(??___xxtofl+2)^0,c
  6729   00251A  0EFF               	movlw	255
  6730   00251C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  6731   00251E  6E08               	movwf	(??___xxtofl+3)^0,c
  6732   002520  5005               	movf	??___xxtofl^0,w,c
  6733   002522  1006               	iorwf	(??___xxtofl+1)^0,w,c
  6734   002524  1007               	iorwf	(??___xxtofl+2)^0,w,c
  6735   002526  1008               	iorwf	(??___xxtofl+3)^0,w,c
  6736   002528  A4D8               	btfss	status,2,c
  6737   00252A  EF99  F012         	goto	u3791
  6738   00252E  EF9B  F012         	goto	u3790
  6739   002532                     u3791:
  6740   002532  EF78  F012         	goto	l3707
  6741   002536                     u3790:
  6742   002536  EFA3  F012         	goto	l3715
  6743   00253A                     l3713:
  6744   00253A  060A               	decf	___xxtofl@exp^0,f,c
  6745   00253C  90D8               	bcf	status,0,c
  6746   00253E  360B               	rlcf	___xxtofl@arg^0,f,c
  6747   002540  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  6748   002542  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  6749   002544  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  6750   002546                     l3715:
  6751   002546  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  6752   002548  EFA8  F012         	goto	u3801
  6753   00254C  EFAA  F012         	goto	u3800
  6754   002550                     u3801:
  6755   002550  EFB2  F012         	goto	l840
  6756   002554                     u3800:
  6757   002554  0E02               	movlw	2
  6758   002556  600A               	cpfslt	___xxtofl@exp^0,c
  6759   002558  EFB0  F012         	goto	u3811
  6760   00255C  EFB2  F012         	goto	u3810
  6761   002560                     u3811:
  6762   002560  EF9D  F012         	goto	l3713
  6763   002564                     u3810:
  6764   002564                     l840:
  6765   002564  B00A               	btfsc	___xxtofl@exp^0,0,c
  6766   002566  EFB7  F012         	goto	u3821
  6767   00256A  EFB9  F012         	goto	u3820
  6768   00256E                     u3821:
  6769   00256E  EFBA  F012         	goto	l3721
  6770   002572                     u3820:
  6771   002572  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  6772   002574                     l3721:
  6773   002574  90D8               	bcf	status,0,c
  6774   002576  320A               	rrcf	___xxtofl@exp^0,f,c
  6775   002578  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  6776   00257C  6A06               	clrf	(??___xxtofl+1)^0,c
  6777   00257E  6A07               	clrf	(??___xxtofl+2)^0,c
  6778   002580  6A08               	clrf	(??___xxtofl+3)^0,c
  6779   002582  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  6780   002586  6A07               	clrf	(??___xxtofl+2)^0,c
  6781   002588  6A06               	clrf	(??___xxtofl+1)^0,c
  6782   00258A  6A05               	clrf	??___xxtofl^0,c
  6783   00258C  5005               	movf	??___xxtofl^0,w,c
  6784   00258E  120B               	iorwf	___xxtofl@arg^0,f,c
  6785   002590  5006               	movf	(??___xxtofl+1)^0,w,c
  6786   002592  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  6787   002594  5007               	movf	(??___xxtofl+2)^0,w,c
  6788   002596  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  6789   002598  5008               	movf	(??___xxtofl+3)^0,w,c
  6790   00259A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  6791   00259C  5009               	movf	___xxtofl@sign^0,w,c
  6792   00259E  B4D8               	btfsc	status,2,c
  6793   0025A0  EFD4  F012         	goto	u3831
  6794   0025A4  EFD6  F012         	goto	u3830
  6795   0025A8                     u3831:
  6796   0025A8  EFDE  F012         	goto	l3731
  6797   0025AC                     u3830:
  6798   0025AC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  6799   0025AE  EFDD  F012         	goto	u3840
  6800   0025B2  EFDB  F012         	goto	u3841
  6801   0025B6                     u3841:
  6802   0025B6  EFDE  F012         	goto	l3731
  6803   0025BA                     u3840:
  6804   0025BA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  6805   0025BC                     l3731:
  6806   0025BC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  6807   0025C0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  6808   0025C4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  6809   0025C8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  6810   0025CC                     l829:
  6811   0025CC  0012               	return		;funcret
  6812   0025CE                     __end_of___xxtofl:
  6813                           	callstack 0
  6814                           
  6815 ;; *************** function _Lcd_Write_String *****************
  6816 ;; Defined at:
  6817 ;;		line 104 in file "lcd.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  a               2    4[COMRAM] PTR const unsigned char 
  6820 ;;		 -> buffer(20), STR_4(13), STR_3(11), STR_2(11), 
  6821 ;;		 -> STR_1(12), 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  i               2    8[COMRAM] int 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6833 ;;      Params:         2       0       0       0       0       0       0       0       0
  6834 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6835 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6836 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6837 ;;Total ram usage:        6 bytes
  6838 ;; Hardware stack levels used: 1
  6839 ;; Hardware stack levels required when called: 2
  6840 ;; This function calls:
  6841 ;;		_Lcd_Write_Char
  6842 ;; This function is called by:
  6843 ;;		_main
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           	psect	text26
  6848   002E04                     __ptext26:
  6849                           	callstack 0
  6850   002E04                     _Lcd_Write_String:
  6851                           	callstack 28
  6852   002E04                     
  6853                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  6854   002E04  0E00               	movlw	0
  6855   002E06  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  6856   002E08  0E00               	movlw	0
  6857   002E0A  6E09               	movwf	Lcd_Write_String@i^0,c
  6858   002E0C  EF22  F017         	goto	l3675
  6859   002E10                     l3671:
  6860                           
  6861                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  6862   002E10  5009               	movf	Lcd_Write_String@i^0,w,c
  6863   002E12  2405               	addwf	Lcd_Write_String@a^0,w,c
  6864   002E14  6E07               	movwf	??_Lcd_Write_String^0,c
  6865   002E16  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  6866   002E18  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6867   002E1A  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  6868   002E1C  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  6869   002E20  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  6870   002E24  6AF8               	clrf	tblptru,c
  6871   002E26  0E07               	movlw	(high __ramtop+-1)
  6872   002E28  64F7               	cpfsgt	tblptrh,c
  6873   002E2A  D003               	bra	u3727
  6874   002E2C  0008               	tblrd		*
  6875   002E2E  50F5               	movf	tablat,w,c
  6876   002E30  D005               	bra	u3720
  6877   002E32                     u3727:
  6878   002E32  CFF6 FFE1          	movff	tblptrl,fsr1l
  6879   002E36  CFF7 FFE2          	movff	tblptrh,fsr1h
  6880   002E3A  50E7               	movf	indf1,w,c
  6881   002E3C                     u3720:
  6882   002E3C  ECD9  F018         	call	_Lcd_Write_Char
  6883   002E40  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  6884   002E42  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  6885   002E44                     l3675:
  6886   002E44  5009               	movf	Lcd_Write_String@i^0,w,c
  6887   002E46  2405               	addwf	Lcd_Write_String@a^0,w,c
  6888   002E48  6E07               	movwf	??_Lcd_Write_String^0,c
  6889   002E4A  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  6890   002E4C  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  6891   002E4E  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  6892   002E50  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  6893   002E54  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  6894   002E58  6AF8               	clrf	tblptru,c
  6895   002E5A  0E07               	movlw	(high __ramtop+-1)
  6896   002E5C  64F7               	cpfsgt	tblptrh,c
  6897   002E5E  D003               	bra	u3737
  6898   002E60  0008               	tblrd		*
  6899   002E62  50F5               	movf	tablat,w,c
  6900   002E64  D005               	bra	u3730
  6901   002E66                     u3737:
  6902   002E66  CFF6 FFE1          	movff	tblptrl,fsr1l
  6903   002E6A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6904   002E6E  50E7               	movf	indf1,w,c
  6905   002E70                     u3730:
  6906   002E70  0900               	iorlw	0
  6907   002E72  A4D8               	btfss	status,2,c
  6908   002E74  EF3E  F017         	goto	u3741
  6909   002E78  EF40  F017         	goto	u3740
  6910   002E7C                     u3741:
  6911   002E7C  EF08  F017         	goto	l3671
  6912   002E80                     u3740:
  6913   002E80  0012               	return		;funcret
  6914   002E82                     __end_of_Lcd_Write_String:
  6915                           	callstack 0
  6916                           
  6917 ;; *************** function _Lcd_Write_Char *****************
  6918 ;; Defined at:
  6919 ;;		line 88 in file "lcd.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  a               1    wreg     unsigned char 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;  a               1    3[COMRAM] unsigned char 
  6924 ;;  y               1    2[COMRAM] unsigned char 
  6925 ;;  temp            1    1[COMRAM] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0
  6936 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6938 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6939 ;;Total ram usage:        3 bytes
  6940 ;; Hardware stack levels used: 1
  6941 ;; Hardware stack levels required when called: 1
  6942 ;; This function calls:
  6943 ;;		_Lcd_Port
  6944 ;; This function is called by:
  6945 ;;		_Lcd_Write_String
  6946 ;;		_Lcd_CGRAM_CreateChar
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           	psect	text27
  6951   0031B2                     __ptext27:
  6952                           	callstack 0
  6953   0031B2                     _Lcd_Write_Char:
  6954                           	callstack 28
  6955                           
  6956                           ;incstack = 0
  6957                           ;Lcd_Write_Char@a stored from wreg
  6958   0031B2  6E04               	movwf	Lcd_Write_Char@a^0,c
  6959   0031B4                     
  6960                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  6961   0031B4  5004               	movf	Lcd_Write_Char@a^0,w,c
  6962   0031B6  0B0F               	andlw	15
  6963   0031B8  6E02               	movwf	Lcd_Write_Char@temp^0,c
  6964                           
  6965                           ;lcd.c: 92:     y = a&0xF0;
  6966   0031BA  5004               	movf	Lcd_Write_Char@a^0,w,c
  6967   0031BC  0BF0               	andlw	240
  6968   0031BE  6E03               	movwf	Lcd_Write_Char@y^0,c
  6969   0031C0                     
  6970                           ;lcd.c: 93:     LATDbits.LD2 = 1;
  6971   0031C0  848C               	bsf	140,2,c	;volatile
  6972   0031C2                     
  6973                           ;lcd.c: 94:     Lcd_Port(y>>4);
  6974   0031C2  3803               	swapf	Lcd_Write_Char@y^0,w,c
  6975   0031C4  0B0F               	andlw	15
  6976   0031C6  ECB1  F017         	call	_Lcd_Port
  6977   0031CA                     
  6978                           ;lcd.c: 95:     LATDbits.LD3 = 1;
  6979   0031CA  868C               	bsf	140,3,c	;volatile
  6980   0031CC                     
  6981                           ;lcd.c: 96:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  6982   0031CC  0E28               	movlw	40
  6983   0031CE                     u3987:
  6984   0031CE  2EE8               	decfsz	wreg,f,c
  6985   0031D0  D7FE               	bra	u3987
  6986   0031D2                     
  6987                           ;lcd.c: 97:     LATDbits.LD3 = 0;
  6988   0031D2  968C               	bcf	140,3,c	;volatile
  6989   0031D4                     
  6990                           ;lcd.c: 98:     Lcd_Port(temp);
  6991   0031D4  5002               	movf	Lcd_Write_Char@temp^0,w,c
  6992   0031D6  ECB1  F017         	call	_Lcd_Port
  6993   0031DA                     
  6994                           ;lcd.c: 99:     LATDbits.LD3 = 1;
  6995   0031DA  868C               	bsf	140,3,c	;volatile
  6996   0031DC                     
  6997                           ;lcd.c: 100:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  6998   0031DC  0E28               	movlw	40
  6999   0031DE                     u3997:
  7000   0031DE  2EE8               	decfsz	wreg,f,c
  7001   0031E0  D7FE               	bra	u3997
  7002   0031E2                     
  7003                           ;lcd.c: 101:     LATDbits.LD3 = 0;
  7004   0031E2  968C               	bcf	140,3,c	;volatile
  7005   0031E4  0012               	return		;funcret
  7006   0031E6                     __end_of_Lcd_Write_Char:
  7007                           	callstack 0
  7008                           
  7009 ;; *************** function _Lcd_Set_Cursor *****************
  7010 ;; Defined at:
  7011 ;;		line 26 in file "lcd.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  a               1    wreg     unsigned char 
  7014 ;;  b               1    3[COMRAM] unsigned char 
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;  a               1    4[COMRAM] unsigned char 
  7017 ;;  temp            1    7[COMRAM] unsigned char 
  7018 ;;  y               1    6[COMRAM] unsigned char 
  7019 ;;  z               1    5[COMRAM] unsigned char 
  7020 ;; Return value:  Size  Location     Type
  7021 ;;                  1    wreg      void 
  7022 ;; Registers used:
  7023 ;;		wreg, status,2, status,0, cstack
  7024 ;; Tracked objects:
  7025 ;;		On entry : 0/0
  7026 ;;		On exit  : 0/0
  7027 ;;		Unchanged: 0/0
  7028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7029 ;;      Params:         1       0       0       0       0       0       0       0       0
  7030 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7032 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7033 ;;Total ram usage:        5 bytes
  7034 ;; Hardware stack levels used: 1
  7035 ;; Hardware stack levels required when called: 2
  7036 ;; This function calls:
  7037 ;;		_Lcd_Cmd
  7038 ;; This function is called by:
  7039 ;;		_main
  7040 ;; This function uses a non-reentrant model
  7041 ;;
  7042                           
  7043                           	psect	text28
  7044   002A76                     __ptext28:
  7045                           	callstack 0
  7046   002A76                     _Lcd_Set_Cursor:
  7047                           	callstack 28
  7048                           
  7049                           ;incstack = 0
  7050                           ;Lcd_Set_Cursor@a stored from wreg
  7051   002A76  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7052   002A78                     
  7053                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  7054   002A78  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7055   002A7A  A4D8               	btfss	status,2,c
  7056   002A7C  EF42  F015         	goto	u3681
  7057   002A80  EF44  F015         	goto	u3680
  7058   002A84                     u3681:
  7059   002A84  EF55  F015         	goto	l3645
  7060   002A88                     u3680:
  7061   002A88                     
  7062                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  7063   002A88  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7064   002A8A  0F7F               	addlw	127
  7065   002A8C  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7066                           
  7067                           ;lcd.c: 32:         z = temp>>4;
  7068   002A8E  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7069   002A90  0B0F               	andlw	15
  7070   002A92  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7071                           
  7072                           ;lcd.c: 33:         y = temp & 0x0F;
  7073   002A94  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7074   002A96  0B0F               	andlw	15
  7075   002A98  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7076   002A9A                     
  7077                           ;lcd.c: 34:         Lcd_Cmd(z);
  7078   002A9A  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7079   002A9C  EC17  F019         	call	_Lcd_Cmd
  7080   002AA0                     
  7081                           ;lcd.c: 35:         Lcd_Cmd(y);
  7082   002AA0  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7083   002AA2  EC17  F019         	call	_Lcd_Cmd
  7084                           
  7085                           ;lcd.c: 36:     }
  7086   002AA6  EFA3  F015         	goto	l109
  7087   002AAA                     l3645:
  7088   002AAA  0E02               	movlw	2
  7089   002AAC  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7090   002AAE  A4D8               	btfss	status,2,c
  7091   002AB0  EF5C  F015         	goto	u3691
  7092   002AB4  EF5E  F015         	goto	u3690
  7093   002AB8                     u3691:
  7094   002AB8  EF6F  F015         	goto	l3653
  7095   002ABC                     u3690:
  7096   002ABC                     
  7097                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  7098   002ABC  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7099   002ABE  0FBF               	addlw	191
  7100   002AC0  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7101                           
  7102                           ;lcd.c: 40:         z = temp>>4;
  7103   002AC2  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7104   002AC4  0B0F               	andlw	15
  7105   002AC6  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7106                           
  7107                           ;lcd.c: 41:         y = temp & 0x0F;
  7108   002AC8  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7109   002ACA  0B0F               	andlw	15
  7110   002ACC  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7111   002ACE                     
  7112                           ;lcd.c: 42:         Lcd_Cmd(z);
  7113   002ACE  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7114   002AD0  EC17  F019         	call	_Lcd_Cmd
  7115   002AD4                     
  7116                           ;lcd.c: 43:         Lcd_Cmd(y);
  7117   002AD4  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7118   002AD6  EC17  F019         	call	_Lcd_Cmd
  7119                           
  7120                           ;lcd.c: 44:     }
  7121   002ADA  EFA3  F015         	goto	l109
  7122   002ADE                     l3653:
  7123   002ADE  0E03               	movlw	3
  7124   002AE0  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7125   002AE2  A4D8               	btfss	status,2,c
  7126   002AE4  EF76  F015         	goto	u3701
  7127   002AE8  EF78  F015         	goto	u3700
  7128   002AEC                     u3701:
  7129   002AEC  EF89  F015         	goto	l3661
  7130   002AF0                     u3700:
  7131   002AF0                     
  7132                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  7133   002AF0  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7134   002AF2  0F93               	addlw	147
  7135   002AF4  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7136                           
  7137                           ;lcd.c: 48:         z = temp>>4;
  7138   002AF6  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7139   002AF8  0B0F               	andlw	15
  7140   002AFA  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7141                           
  7142                           ;lcd.c: 49:         y = temp & 0x0F;
  7143   002AFC  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7144   002AFE  0B0F               	andlw	15
  7145   002B00  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7146   002B02                     
  7147                           ;lcd.c: 50:         Lcd_Cmd(z);
  7148   002B02  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7149   002B04  EC17  F019         	call	_Lcd_Cmd
  7150   002B08                     
  7151                           ;lcd.c: 51:         Lcd_Cmd(y);
  7152   002B08  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7153   002B0A  EC17  F019         	call	_Lcd_Cmd
  7154                           
  7155                           ;lcd.c: 52:     }
  7156   002B0E  EFA3  F015         	goto	l109
  7157   002B12                     l3661:
  7158   002B12  0E04               	movlw	4
  7159   002B14  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7160   002B16  A4D8               	btfss	status,2,c
  7161   002B18  EF90  F015         	goto	u3711
  7162   002B1C  EF92  F015         	goto	u3710
  7163   002B20                     u3711:
  7164   002B20  EFA3  F015         	goto	l105
  7165   002B24                     u3710:
  7166   002B24                     
  7167                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  7168   002B24  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7169   002B26  0FD3               	addlw	211
  7170   002B28  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7171                           
  7172                           ;lcd.c: 56:         z = temp>>4;
  7173   002B2A  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7174   002B2C  0B0F               	andlw	15
  7175   002B2E  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7176                           
  7177                           ;lcd.c: 57:         y = temp & 0x0F;
  7178   002B30  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7179   002B32  0B0F               	andlw	15
  7180   002B34  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7181   002B36                     
  7182                           ;lcd.c: 58:         Lcd_Cmd(z);
  7183   002B36  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7184   002B38  EC17  F019         	call	_Lcd_Cmd
  7185   002B3C                     
  7186                           ;lcd.c: 59:         Lcd_Cmd(y);
  7187   002B3C  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7188   002B3E  EC17  F019         	call	_Lcd_Cmd
  7189   002B42  EFA3  F015         	goto	l109
  7190   002B46                     l105:
  7191   002B46                     l109:
  7192   002B46  0012               	return		;funcret
  7193   002B48                     __end_of_Lcd_Set_Cursor:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _Lcd_Init *****************
  7197 ;; Defined at:
  7198 ;;		line 63 in file "lcd.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;		None
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;		None
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  1    wreg      void 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7212 ;;      Params:         0       0       0       0       0       0       0       0       0
  7213 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7214 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7215 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7216 ;;Total ram usage:        1 bytes
  7217 ;; Hardware stack levels used: 1
  7218 ;; Hardware stack levels required when called: 3
  7219 ;; This function calls:
  7220 ;;		_Lcd_Clear
  7221 ;;		_Lcd_Cmd
  7222 ;;		_Lcd_Port
  7223 ;; This function is called by:
  7224 ;;		_main
  7225 ;; This function uses a non-reentrant model
  7226 ;;
  7227                           
  7228                           	psect	text29
  7229   002D82                     __ptext29:
  7230                           	callstack 0
  7231   002D82                     _Lcd_Init:
  7232                           	callstack 27
  7233   002D82                     
  7234                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  7235   002D82  9495               	bcf	149,2,c	;volatile
  7236                           
  7237                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  7238   002D84  9695               	bcf	149,3,c	;volatile
  7239                           
  7240                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  7241   002D86  9895               	bcf	149,4,c	;volatile
  7242                           
  7243                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  7244   002D88  9A95               	bcf	149,5,c	;volatile
  7245                           
  7246                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  7247   002D8A  9C95               	bcf	149,6,c	;volatile
  7248                           
  7249                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  7250   002D8C  9E95               	bcf	149,7,c	;volatile
  7251   002D8E                     
  7252                           ;lcd.c: 71:     Lcd_Port(0x00);
  7253   002D8E  0E00               	movlw	0
  7254   002D90  ECB1  F017         	call	_Lcd_Port
  7255   002D94                     
  7256                           ;lcd.c: 72:     _delay((unsigned long)((20)*(12000000/4000.0)));
  7257   002D94  0E4E               	movlw	78
  7258   002D96  6E04               	movwf	??_Lcd_Init^0,c
  7259   002D98  0EEB               	movlw	235
  7260   002D9A                     u4007:
  7261   002D9A  2EE8               	decfsz	wreg,f,c
  7262   002D9C  D7FE               	bra	u4007
  7263   002D9E  2E04               	decfsz	??_Lcd_Init^0,f,c
  7264   002DA0  D7FC               	bra	u4007
  7265   002DA2  F000               	nop	
  7266   002DA4                     
  7267                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  7268   002DA4  0E03               	movlw	3
  7269   002DA6  EC17  F019         	call	_Lcd_Cmd
  7270   002DAA                     
  7271                           ;lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000.0)));
  7272   002DAA  0E14               	movlw	20
  7273   002DAC  6E04               	movwf	??_Lcd_Init^0,c
  7274   002DAE  0E7A               	movlw	122
  7275   002DB0                     u4017:
  7276   002DB0  2EE8               	decfsz	wreg,f,c
  7277   002DB2  D7FE               	bra	u4017
  7278   002DB4  2E04               	decfsz	??_Lcd_Init^0,f,c
  7279   002DB6  D7FC               	bra	u4017
  7280   002DB8                     
  7281                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  7282   002DB8  0E03               	movlw	3
  7283   002DBA  EC17  F019         	call	_Lcd_Cmd
  7284   002DBE                     
  7285                           ;lcd.c: 76:     _delay((unsigned long)((11)*(12000000/4000.0)));
  7286   002DBE  0E2B               	movlw	43
  7287   002DC0  6E04               	movwf	??_Lcd_Init^0,c
  7288   002DC2  0EDA               	movlw	218
  7289   002DC4                     u4027:
  7290   002DC4  2EE8               	decfsz	wreg,f,c
  7291   002DC6  D7FE               	bra	u4027
  7292   002DC8  2E04               	decfsz	??_Lcd_Init^0,f,c
  7293   002DCA  D7FC               	bra	u4027
  7294   002DCC  D000               	nop2	
  7295   002DCE                     
  7296                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  7297   002DCE  0E03               	movlw	3
  7298   002DD0  EC17  F019         	call	_Lcd_Cmd
  7299   002DD4                     
  7300                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  7301   002DD4  0E02               	movlw	2
  7302   002DD6  EC17  F019         	call	_Lcd_Cmd
  7303   002DDA                     
  7304                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  7305   002DDA  0E02               	movlw	2
  7306   002DDC  EC17  F019         	call	_Lcd_Cmd
  7307   002DE0                     
  7308                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  7309   002DE0  0E08               	movlw	8
  7310   002DE2  EC17  F019         	call	_Lcd_Cmd
  7311   002DE6                     
  7312                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  7313   002DE6  0E00               	movlw	0
  7314   002DE8  EC17  F019         	call	_Lcd_Cmd
  7315   002DEC                     
  7316                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  7317   002DEC  0E0C               	movlw	12
  7318   002DEE  EC17  F019         	call	_Lcd_Cmd
  7319   002DF2                     
  7320                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  7321   002DF2  0E00               	movlw	0
  7322   002DF4  EC17  F019         	call	_Lcd_Cmd
  7323   002DF8                     
  7324                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  7325   002DF8  0E06               	movlw	6
  7326   002DFA  EC17  F019         	call	_Lcd_Cmd
  7327   002DFE                     
  7328                           ;lcd.c: 85:     Lcd_Clear();
  7329   002DFE  EC3A  F019         	call	_Lcd_Clear	;wreg free
  7330   002E02  0012               	return		;funcret
  7331   002E04                     __end_of_Lcd_Init:
  7332                           	callstack 0
  7333                           
  7334 ;; *************** function _Lcd_Clear *****************
  7335 ;; Defined at:
  7336 ;;		line 20 in file "lcd.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;		None
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      void 
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, cstack
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7350 ;;      Params:         0       0       0       0       0       0       0       0       0
  7351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7353 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7354 ;;Total ram usage:        0 bytes
  7355 ;; Hardware stack levels used: 1
  7356 ;; Hardware stack levels required when called: 2
  7357 ;; This function calls:
  7358 ;;		_Lcd_Cmd
  7359 ;; This function is called by:
  7360 ;;		_main
  7361 ;;		_Lcd_Init
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text30
  7366   003274                     __ptext30:
  7367                           	callstack 0
  7368   003274                     _Lcd_Clear:
  7369                           	callstack 27
  7370   003274                     
  7371                           ;lcd.c: 22:     Lcd_Cmd(0);
  7372   003274  0E00               	movlw	0
  7373   003276  EC17  F019         	call	_Lcd_Cmd
  7374                           
  7375                           ;lcd.c: 23:     Lcd_Cmd(1);
  7376   00327A  0E01               	movlw	1
  7377   00327C  EC17  F019         	call	_Lcd_Cmd
  7378   003280  0012               	return		;funcret
  7379   003282                     __end_of_Lcd_Clear:
  7380                           	callstack 0
  7381                           
  7382 ;; *************** function _Lcd_Cmd *****************
  7383 ;; Defined at:
  7384 ;;		line 11 in file "lcd.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  a               1    wreg     unsigned char 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;  a               1    2[COMRAM] unsigned char 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0
  7399 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7400 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7401 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7402 ;;Total ram usage:        2 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 1
  7405 ;; This function calls:
  7406 ;;		_Lcd_Port
  7407 ;; This function is called by:
  7408 ;;		_Lcd_Clear
  7409 ;;		_Lcd_Set_Cursor
  7410 ;;		_Lcd_Init
  7411 ;;		_Lcd_Shift_Right
  7412 ;;		_Lcd_Shift_Left
  7413 ;;		_Lcd_Blink
  7414 ;;		_Lcd_NoBlink
  7415 ;;		_Lcd_CGRAM_Init
  7416 ;;		_Lcd_CGRAM_Close
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text31
  7421   00322E                     __ptext31:
  7422                           	callstack 0
  7423   00322E                     _Lcd_Cmd:
  7424                           	callstack 28
  7425                           
  7426                           ;incstack = 0
  7427                           ;Lcd_Cmd@a stored from wreg
  7428   00322E  6E03               	movwf	Lcd_Cmd@a^0,c
  7429   003230                     
  7430                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD2 = 0;
  7431   003230  948C               	bcf	140,2,c	;volatile
  7432   003232                     
  7433                           ;lcd.c: 14:     Lcd_Port(a);
  7434   003232  5003               	movf	Lcd_Cmd@a^0,w,c
  7435   003234  ECB1  F017         	call	_Lcd_Port
  7436   003238                     
  7437                           ;lcd.c: 15:     LATDbits.LD3 = 1;
  7438   003238  868C               	bsf	140,3,c	;volatile
  7439   00323A                     
  7440                           ;lcd.c: 16:     _delay((unsigned long)((4)*(12000000/4000.0)));
  7441   00323A  0E10               	movlw	16
  7442   00323C  6E02               	movwf	??_Lcd_Cmd^0,c
  7443   00323E  0E94               	movlw	148
  7444   003240                     u4037:
  7445   003240  2EE8               	decfsz	wreg,f,c
  7446   003242  D7FE               	bra	u4037
  7447   003244  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7448   003246  D7FC               	bra	u4037
  7449   003248  D000               	nop2	
  7450   00324A                     
  7451                           ;lcd.c: 17:     LATDbits.LD3 = 0;
  7452   00324A  968C               	bcf	140,3,c	;volatile
  7453   00324C  0012               	return		;funcret
  7454   00324E                     __end_of_Lcd_Cmd:
  7455                           	callstack 0
  7456                           
  7457 ;; *************** function _Lcd_Port *****************
  7458 ;; Defined at:
  7459 ;;		line 3 in file "lcd.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;  a               1    wreg     unsigned char 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  a               1    0[COMRAM] unsigned char 
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0
  7474 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7476 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7477 ;;Total ram usage:        1 bytes
  7478 ;; Hardware stack levels used: 1
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_Lcd_Cmd
  7483 ;;		_Lcd_Init
  7484 ;;		_Lcd_Write_Char
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text32
  7489   002F62                     __ptext32:
  7490                           	callstack 0
  7491   002F62                     _Lcd_Port:
  7492                           	callstack 28
  7493                           
  7494                           ;incstack = 0
  7495                           ;Lcd_Port@a stored from wreg
  7496   002F62  6E01               	movwf	Lcd_Port@a^0,c
  7497   002F64                     
  7498                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  7499   002F64  A001               	btfss	Lcd_Port@a^0,0,c
  7500   002F66  EFB7  F017         	goto	u3221
  7501   002F6A  EFB9  F017         	goto	u3220
  7502   002F6E                     u3221:
  7503   002F6E  EFBC  F017         	goto	l78
  7504   002F72                     u3220:
  7505   002F72  888C               	bsf	140,4,c	;volatile
  7506   002F74  EFBD  F017         	goto	l3197
  7507   002F78                     l78:
  7508   002F78  988C               	bcf	140,4,c	;volatile
  7509   002F7A                     l3197:
  7510                           
  7511                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  7512   002F7A  A201               	btfss	Lcd_Port@a^0,1,c
  7513   002F7C  EFC2  F017         	goto	u3231
  7514   002F80  EFC4  F017         	goto	u3230
  7515   002F84                     u3231:
  7516   002F84  EFC7  F017         	goto	l82
  7517   002F88                     u3230:
  7518   002F88  8A8C               	bsf	140,5,c	;volatile
  7519   002F8A  EFC8  F017         	goto	l3201
  7520   002F8E                     l82:
  7521   002F8E  9A8C               	bcf	140,5,c	;volatile
  7522   002F90                     l3201:
  7523                           
  7524                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  7525   002F90  A401               	btfss	Lcd_Port@a^0,2,c
  7526   002F92  EFCD  F017         	goto	u3241
  7527   002F96  EFCF  F017         	goto	u3240
  7528   002F9A                     u3241:
  7529   002F9A  EFD2  F017         	goto	l86
  7530   002F9E                     u3240:
  7531   002F9E  8C8C               	bsf	140,6,c	;volatile
  7532   002FA0  EFD3  F017         	goto	l3205
  7533   002FA4                     l86:
  7534   002FA4  9C8C               	bcf	140,6,c	;volatile
  7535   002FA6                     l3205:
  7536                           
  7537                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  7538   002FA6  A601               	btfss	Lcd_Port@a^0,3,c
  7539   002FA8  EFD8  F017         	goto	u3251
  7540   002FAC  EFDA  F017         	goto	u3250
  7541   002FB0                     u3251:
  7542   002FB0  EFDD  F017         	goto	l90
  7543   002FB4                     u3250:
  7544   002FB4  8E8C               	bsf	140,7,c	;volatile
  7545   002FB6  EFDE  F017         	goto	l93
  7546   002FBA                     l90:
  7547   002FBA  9E8C               	bcf	140,7,c	;volatile
  7548   002FBC                     l93:
  7549   002FBC  0012               	return		;funcret
  7550   002FBE                     __end_of_Lcd_Port:
  7551                           	callstack 0
  7552                           
  7553 ;; *************** function _InitPort *****************
  7554 ;; Defined at:
  7555 ;;		line 99 in file "mainselec.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;		None
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  1    wreg      void 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7569 ;;      Params:         0       0       0       0       0       0       0       0       0
  7570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7572 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7573 ;;Total ram usage:        0 bytes
  7574 ;; Hardware stack levels used: 1
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_main
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text33
  7583   003264                     __ptext33:
  7584                           	callstack 0
  7585   003264                     _InitPort:
  7586                           	callstack 30
  7587   003264                     
  7588                           ;mainselec.c: 100:     LATB = 0x00;
  7589   003264  0E00               	movlw	0
  7590   003266  6E8A               	movwf	138,c	;volatile
  7591                           
  7592                           ;mainselec.c: 101:     ANSELB = 0x00;
  7593   003268  0E00               	movlw	0
  7594   00326A  010F               	movlb	15	; () banked
  7595   00326C  6F5C               	movwf	92,b	;volatile
  7596   00326E                     
  7597                           ; BSR set to: 15
  7598                           ;mainselec.c: 102:     TRISB = 0xFF;
  7599   00326E  6893               	setf	147,c	;volatile
  7600   003270                     
  7601                           ; BSR set to: 15
  7602                           ;mainselec.c: 103:     INTCON2bits.RBPU = 0;
  7603   003270  9EF1               	bcf	241,7,c	;volatile
  7604   003272                     
  7605                           ; BSR set to: 15
  7606   003272  0012               	return		;funcret
  7607   003274                     __end_of_InitPort:
  7608                           	callstack 0
  7609                           
  7610                           	psect	rparam
  7611   000000                     
  7612                           	psect	config
  7613                           
  7614                           ;Config register CONFIG1L @ 0x300000
  7615                           ;	PLL Selection
  7616                           ;	PLLSEL = PLL4X, 4x clock multiplier
  7617                           ;	PLL Enable Configuration bit
  7618                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  7619                           ;	CPU System Clock Postscaler
  7620                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  7621                           ;	Low Speed USB mode with 48 MHz system clock
  7622                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  7623   300000                     	org	3145728
  7624   300000  00                 	db	0
  7625                           
  7626                           ;Config register CONFIG1H @ 0x300001
  7627                           ;	Oscillator Selection
  7628                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  7629                           ;	Primary Oscillator Shutdown
  7630                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  7631                           ;	Fail-Safe Clock Monitor
  7632                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7633                           ;	Internal/External Oscillator Switchover
  7634                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7635   300001                     	org	3145729
  7636   300001  03                 	db	3
  7637                           
  7638                           ;Config register CONFIG2L @ 0x300002
  7639                           ;	Power-up Timer Enable
  7640                           ;	nPWRTEN = ON, Power up timer enabled
  7641                           ;	Brown-out Reset Enable
  7642                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  7643                           ;	Brown-out Reset Voltage
  7644                           ;	BORV = 190, BOR set to 1.9V nominal
  7645                           ;	Low-Power Brown-out Reset
  7646                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  7647   300002                     	org	3145730
  7648   300002  58                 	db	88
  7649                           
  7650                           ;Config register CONFIG2H @ 0x300003
  7651                           ;	Watchdog Timer Enable bits
  7652                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  7653                           ;	Watchdog Timer Postscaler
  7654                           ;	WDTPS = 32768, 1:32768
  7655   300003                     	org	3145731
  7656   300003  3C                 	db	60
  7657                           
  7658                           ; Padding undefined space
  7659   300004                     	org	3145732
  7660   300004  FF                 	db	255
  7661                           
  7662                           ;Config register CONFIG3H @ 0x300005
  7663                           ;	CCP2 MUX bit
  7664                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  7665                           ;	PORTB A/D Enable bit
  7666                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  7667                           ;	Timer3 Clock Input MUX bit
  7668                           ;	T3CMX = RC0, T3CKI function is on RC0
  7669                           ;	SDO Output MUX bit
  7670                           ;	SDOMX = RB3, SDO function is on RB3
  7671                           ;	Master Clear Reset Pin Enable
  7672                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  7673   300005                     	org	3145733
  7674   300005  D1                 	db	209
  7675                           
  7676                           ;Config register CONFIG4L @ 0x300006
  7677                           ;	Stack Full/Underflow Reset
  7678                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7679                           ;	Single-Supply ICSP Enable bit
  7680                           ;	LVP = OFF, Single-Supply ICSP disabled
  7681                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  7682                           ;	ICPRT = OFF, ICPORT disabled
  7683                           ;	Extended Instruction Set Enable bit
  7684                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  7685                           ;	Background Debugger Enable bit
  7686                           ;	DEBUG = 0x1, unprogrammed default
  7687   300006                     	org	3145734
  7688   300006  80                 	db	128
  7689                           
  7690                           ; Padding undefined space
  7691   300007                     	org	3145735
  7692   300007  FF                 	db	255
  7693                           
  7694                           ;Config register CONFIG5L @ 0x300008
  7695                           ;	Block 0 Code Protect
  7696                           ;	CP0 = OFF, Block 0 is not code-protected
  7697                           ;	Block 1 Code Protect
  7698                           ;	CP1 = OFF, Block 1 is not code-protected
  7699                           ;	Block 2 Code Protect
  7700                           ;	CP2 = OFF, Block 2 is not code-protected
  7701                           ;	Block 3 Code Protect
  7702                           ;	CP3 = OFF, Block 3 is not code-protected
  7703   300008                     	org	3145736
  7704   300008  0F                 	db	15
  7705                           
  7706                           ;Config register CONFIG5H @ 0x300009
  7707                           ;	Boot Block Code Protect
  7708                           ;	CPB = OFF, Boot block is not code-protected
  7709                           ;	Data EEPROM Code Protect
  7710                           ;	CPD = OFF, Data EEPROM is not code-protected
  7711   300009                     	org	3145737
  7712   300009  C0                 	db	192
  7713                           
  7714                           ;Config register CONFIG6L @ 0x30000A
  7715                           ;	Block 0 Write Protect
  7716                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  7717                           ;	Block 1 Write Protect
  7718                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  7719                           ;	Block 2 Write Protect
  7720                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  7721                           ;	Block 3 Write Protect
  7722                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  7723   30000A                     	org	3145738
  7724   30000A  0F                 	db	15
  7725                           
  7726                           ;Config register CONFIG6H @ 0x30000B
  7727                           ;	Configuration Registers Write Protect
  7728                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7729                           ;	Boot Block Write Protect
  7730                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  7731                           ;	Data EEPROM Write Protect
  7732                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7733   30000B                     	org	3145739
  7734   30000B  E0                 	db	224
  7735                           
  7736                           ;Config register CONFIG7L @ 0x30000C
  7737                           ;	Block 0 Table Read Protect
  7738                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  7739                           ;	Block 1 Table Read Protect
  7740                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  7741                           ;	Block 2 Table Read Protect
  7742                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  7743                           ;	Block 3 Table Read Protect
  7744                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  7745   30000C                     	org	3145740
  7746   30000C  0F                 	db	15
  7747                           
  7748                           ;Config register CONFIG7H @ 0x30000D
  7749                           ;	Boot Block Table Read Protect
  7750                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  7751   30000D                     	org	3145741
  7752   30000D  40                 	db	64
  7753                           tosu	equ	0xFFF
  7754                           tosh	equ	0xFFE
  7755                           tosl	equ	0xFFD
  7756                           stkptr	equ	0xFFC
  7757                           pclatu	equ	0xFFB
  7758                           pclath	equ	0xFFA
  7759                           pcl	equ	0xFF9
  7760                           tblptru	equ	0xFF8
  7761                           tblptrh	equ	0xFF7
  7762                           tblptrl	equ	0xFF6
  7763                           tablat	equ	0xFF5
  7764                           prodh	equ	0xFF4
  7765                           prodl	equ	0xFF3
  7766                           indf0	equ	0xFEF
  7767                           postinc0	equ	0xFEE
  7768                           postdec0	equ	0xFED
  7769                           preinc0	equ	0xFEC
  7770                           plusw0	equ	0xFEB
  7771                           fsr0h	equ	0xFEA
  7772                           fsr0l	equ	0xFE9
  7773                           wreg	equ	0xFE8
  7774                           indf1	equ	0xFE7
  7775                           postinc1	equ	0xFE6
  7776                           postdec1	equ	0xFE5
  7777                           preinc1	equ	0xFE4
  7778                           plusw1	equ	0xFE3
  7779                           fsr1h	equ	0xFE2
  7780                           fsr1l	equ	0xFE1
  7781                           bsr	equ	0xFE0
  7782                           indf2	equ	0xFDF
  7783                           postinc2	equ	0xFDE
  7784                           postdec2	equ	0xFDD
  7785                           preinc2	equ	0xFDC
  7786                           plusw2	equ	0xFDB
  7787                           fsr2h	equ	0xFDA
  7788                           fsr2l	equ	0xFD9
  7789                           status	equ	0xFD8

Data Sizes:
    Strings     69
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     91     130
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_6(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_9(CODE[4]), STR_6(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S973$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S888$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S888$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), STR_4(CODE[13]), STR_3(CODE[11]), STR_2(CODE[11]), 
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   29156
                                             89 BANK0      2     2      0
                           _InitPort
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _set_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8   21847
                                             67 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   21492
                                             59 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   21130
                                             93 COMRAM     2     2      0
                                             44 BANK0     15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     643
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   18996
                                             84 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _set_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     648
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1    1030
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPort
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _set_adc
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      82       5       81.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhlhh      2C      0       0      21        0.0%
BITBIGSFRhhllh      2A      0       0      22        0.0%
BITBIGSFRlhl        24      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRlhh         8      0       0      26        0.0%
BITBIGSFRll          8      0       0      28        0.0%
BITBIGSFRhlh         5      0       0      24        0.0%
BITBIGSFRhhlll       1      0       0      23        0.0%
BITBIGSFRhll         1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     131      29        0.0%
DATA                 0      0     131       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jul 08 20:17:45 2023

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l50 3262                          l61 25CE                          l47 3272  
                        l63 2668                          l90 2FBA                          l82 2F8E  
                        l93 2FBC                          l86 2FA4                          l78 2F78  
                        l96 324C                          l99 3280         ___wmul@multiplicand 0003  
                       l112 2E02                         l105 2B46                         l121 2E80  
                       l115 31E4                         l109 2B46                         l171 320A  
                       l430 2D80                         l441 2976                         l436 2930  
                       l700 1486                         l445 31B0                         l701 144C  
                       l802 1B54                         l716 15B2                         l708 1768  
                       l468 2872                         l725 1682                         l741 30F4  
                       l726 1670                         l840 2564                         l833 2508  
                       l753 1F2C                         l826 2470                         l755 1D8C  
                       l764 1DD2                         l829 25CC                         l766 1E4A  
                       l758 1D50                         l767 1E38                         l927 1022  
                       l792 1A24                         l785 182E                         l945 2CCE  
                       l849 305E                         l794 1A9C                         l795 1A8A  
                       l699 1498                         l883 2EFA                         l789 1B92  
                       l949 2CD6                         l894 12A8                         l879 2EA4  
                       l983 300E                         l976 2206                         l993 2A74  
                       l897 0BDA                         l899 0A20                         _pad 2E82  
                       wreg 0FE8                ___flmul@aexp 0020                ___flmul@bexp 0021  
              ___flmul@sign 001B                ___flmul@temp 0026                ___flmul@prod 0022  
              ___fltol@exp1 000A                        l1000 2418                        l1003 235C  
                      l1011 2F50                        l1020 30AE                        l1014 2F60  
                      l1032 2C10                        l1040 3138                        l1043 3282  
                      l3001 1B68                        l1049 3178                        l3003 1B76  
                      l3021 2D06                        l3005 1B78                        l3013 30B0  
                      l3101 2842                        l3031 2D7E                        l3023 2D16  
                      l3007 1B7E                        l3015 30C0                        l3103 2852  
                      l3111 2E90                        l3201 2F90                        l3025 2D44  
                      l3041 28E0                        l3009 1B82                        l3105 2862  
                      l3121 2EE6                        l3113 2E9C                        l3203 2F9E  
                      l3027 2D54                        l3019 2CD8                        l3051 296E  
                      l3043 28F0                        l3035 2874                        l3131 2A0A  
                      l3123 2978                        l3115 2EB0                        l3211 084E  
                      l3205 2FA6                        l3029 2D78                        l3053 2974  
                      l3045 28FE                        l3037 28A2                        l3061 31A0  
                      l3141 2A6C                        l3125 2998                        l3117 2EC4  
                      l3109 2E82                        l3301 0BFE                        l3221 089E  
                      l3213 085E                        l4021 21BE                        l3207 2FB4  
                      l3047 2910                        l3039 28B2                        l3071 2798  
                      l3127 29D6                        l3135 2A16                        l3151 2F1A  
                      l3119 2EC8                        l3311 0C32                        l3303 0C06  
                      l3231 08DA                        l3223 08A6                        l3215 086C  
                      l4015 1FC4                        l3049 291E                        l3057 317A  
                      l2601 13DE                        l3081 27E6                        l3073 27C2  
                      l3065 276E                        l3137 2A28                        l3129 29FE  
                      l3161 22A0                        l3153 2208                        l2521 2B76  
                      l3145 313A                        l3401 110A                        l3321 0C7C  
                      l3313 0C4A                        l3305 0C0E                        l3241 0920  
                      l3225 08B6                        l3233 08DE                        l3217 0870  
                      l3209 0848                        l4017 2082                        l3059 3190  
                      l2611 1418                        l2603 13E2                        l2531 12B6  
                      l3091 2812                        l3075 27C4                        l3067 2784  
                      l3171 23BC                        l3155 2228                        l2523 2B94  
                      l2515 2B48                        l3147 314A                        l3411 1184  
                      l3403 113E                        l3323 0C90                        l3331 0D86  
                      l3315 0C5C                        l3307 0C12                        l3243 0928  
                      l3235 0904                        l3251 096A                        l3227 08C6  
                      l3219 0894                        l4019 213C                        l2701 169E  
                      l2621 146A                        l2613 1434                        l2605 13E6  
                      l2541 12F6                        l2533 12C4                        l3077 27D4  
                      l3173 23D0                        l3165 2310                        l3157 227E  
                      l3149 2EFC                        l3181 3060                        l2525 2BCA  
                      l2517 2B5A                        l3421 11F0                        l3413 118C  
                      l3405 1146                        l3341 0E52                        l3333 0DA4  
                      l3325 0CF4                        l3309 0C24                        l3317 0C64  
                      l3261 09B4                        l3253 0990                        l3245 0940  
                      l3237 0916                        l3229 08D2                        l3501 2064  
                      l2711 1708                        l2703 16AC                        l2631 14B6  
                      l2623 1478                        l2615 1444                        l2607 13EA  
                      l2551 1328                        l2543 12F8                        l2535 12C6  
                      l3087 27FE                        l3079 27D8                        l3175 23F8  
                      l3167 234C                        l3159 2292                        l3183 3074  
                      l3191 3094                        l2519 2B6C                        l3431 123C  
                      l3415 119A                        l3407 114A                        l3351 0F02  
                      l3343 0E62                        l3335 0DD8                        l3327 0D4C  
                      l3319 0C6C                        l3271 09EA                        l3255 09A2  
                      l3247 094A                        l3239 091A                        l3511 20F4  
                      l3193 2F64                        l3601 3254                        l2721 1742  
                      l2713 1728                        l2705 16E6                        l2641 14F6  
                      l2625 147A                        l2617 145A                        l2609 13EE  
                      l2561 1350                        l2553 132A                        l2537 12D6  
                      l2545 1300                        l2529 12AA                        l3097 2826  
                      l3089 2808                        l3177 2408                        l3169 2380  
                      l3185 3080                        l3425 1202                        l3433 125A  
                      l3417 11CA                        l3409 1168                        l3361 0F66  
                      l3353 0F36                        l3345 0E72                        l3337 0E0A  
                      l3329 0D80                        l3281 0AA8                        l3257 09A6  
                      l3505 206C                        l3195 2F72                        l3611 2DA4  
                      l3603 3260                        l2811 1D14                        l2803 1CCA  
                      l2723 1748                        l2715 172C                        l2707 16E8  
                      l2651 1520                        l2643 1502                        l2635 14CA  
                      l2627 1484                        l2619 1466                        l2571 138A  
                      l2563 1360                        l2555 1330                        l2547 1310  
                      l2539 12E6                        l3099 2832                        l3187 3084  
                      l2731 30F6                        l3435 126A                        l3427 1218  
                      l3419 11D8                        l3371 1018                        l3363 0F6C  
                      l3355 0F4A                        l3347 0EA6                        l3339 0E20  
                      l3291 0B68                        l3283 0ADA                        l3275 0A30  
                      l3259 09AC                        l3451 2C98                        l3443 2C12  
                      l3515 2128                        l3507 20A0                        l3531 21DE  
                      l3197 2F7A                        l3461 323A                        l3621 2DD4  
                      l3613 2DAA                        l3605 2D82                        l3701 24AA  
                      l2821 1D5A                        l2813 1D1C                        l2805 1CE4  
                      l2901 17D2                        l2725 1756                        l2717 173A  
                      l2709 16F8                        l2661 1592                        l2645 1506  
                      l2637 14DA                        l2629 14A6                        l2653 1526  
                      l2581 13B6                        l2573 139C                        l2565 1370  
                      l2557 133E                        l2549 1316                        l3189 3090  
                      l2733 3102                        l3437 1280                        l3429 121E  
                      l3381 105C                        l3373 1034                        l3365 0F74  
                      l3349 0EFC                        l3357 0F4E                        l3285 0B18  
                      l3277 0A36                        l3269 09D0                        l2741 3202  
                      l3453 2CA6                        l3445 2C1A                        l3525 21A0  
                      l3517 2152                        l3509 20C0                        l3199 2F88  
                      l3463 324A                        l3455 3230                        l3631 2DF2  
                      l3623 2DDA                        l3615 2DB8                        l3607 2D8E  
                      l3711 24FE                        l3703 24B2                        l2831 1DB2  
                      l2823 1D78                        l2815 1D2C                        l2807 1CF4  
                      l2751 1BB0                        l2911 1808                        l2903 17D8  
                      l2727 1758                        l2719 1740                        l2671 15EC  
                      l2655 154C                        l2663 15A2                        l2647 1514  
                      l2639 14E8                        l2591 13CA                        l2583 13BA  
                      l2575 13AA                        l2567 1372                        l2559 1340  
                      l2735 3114                        l3439 1288                        l3383 1064  
                      l3375 1042                        l3391 1084                        l3367 0F80  
                      l3359 0F5E                        l3287 0B2C                        l3295 0BA8  
                      l3279 0A6A                        l3447 2C3E                        l3519 2172  
                      l3527 21CC                        l3471 1F6E                        l3457 3232  
                      l3561 3274                        l3633 2DF8                        l3625 2DE0  
                      l3617 2DBE                        l3609 2D94                        l3641 2A9A  
                      l3721 2574                        l3713 253A                        l3705 24BE  
                      l2841 1DF0                        l2833 1DB8                        l2825 1D7A  
                      l2817 1D40                        l2809 1D04                        l2753 1BC0  
                      l2761 1BEA                        l2745 1B94                        l2913 1818  
                      l2905 17E6                        l2681 161C                        l2673 15F6  
                      l2665 15C8                        l2657 1580                        l2649 1516  
                      l2593 13CE                        l2585 13BE                        l2577 13AE  
                      l2569 137A                        l2737 3118                        l3393 1096  
                      l3385 1074                        l3377 1052                        l3369 0FF8  
                      l3297 0BE2                        l3289 0B60                        l3449 2C78  
                      l3473 1F72                        l3465 1F2E                        l3459 3238  
                      l3635 2DFE                        l3627 2DE6                        l3619 2DCE  
                      l3651 2AD4                        l3643 2AA0                        l3571 31CC  
                      l3563 31B4                        l3731 25BC                        l3723 2578  
                      l3715 2546                        l3707 24F0                        l2851 1E5A  
                      l2843 1DF4                        l2835 1DC2                        l2827 1D8A  
                      l2819 1D4E                        l2771 1C16                        l2763 1BFA  
                      l2755 1BD0                        l2747 1BA0                        l2931 189A  
                      l2923 1862                        l2915 181E                        l2907 17E8  
                      l2691 1644                        l2683 1620                        l2675 1604  
                      l2667 15D8                        l2659 1582                        l2595 13D2  
                      l2587 13C2                        l2579 13B2                        l3395 10A8  
                      l3387 1078                        l3379 1056                        l3299 0BF2  
                      l2739 31E6                        l3491 2016                        l3483 1F9E  
                      l3475 1F7E                        l3467 1F52                        l3629 2DEC  
                      l3661 2B12                        l3653 2ADE                        l3645 2AAA  
                      l3637 2A78                        l3581 31E2                        l3573 31D2  
                      l3565 31C0                        l3725 259C                        l3717 2554  
                      l3709 24F2                        l2861 1EBC                        l2853 1E66  
                      l2845 1E02                        l2837 1DD0                        l2829 1D9C  
                      l2773 1C26                        l2781 1C50                        l2765 1C00  
                      l2757 1BE0                        l2749 1BAE                        l2941 18E4  
                      l2933 18B2                        l2925 186E                        l2917 183E  
                      l2909 17F8                        l2693 1652                        l2685 1630  
                      l2677 1606                        l2597 13D6                        l2589 13C6  
                      l3397 10AC                        l3389 107E                        l3493 2032  
                      l3477 1F80                        l3485 1FD2                        l3469 1F60  
                      l3741 25F0                        ?_pad 0011                        l3663 2B24  
                      l3655 2AF0                        l3647 2ABC                        l3639 2A88  
                      l3575 31D4                        l3567 31C2                        l3671 2E10  
                      l3727 25AC                        l3719 2572                        l2871 1F1A  
                      l2863 1ED2                        l2855 1E74                        l2847 1E30  
                      l2839 1DE2                        l2791 1C92                        l2783 1C60  
                      l2775 1C36                        l2767 1C06                        l2759 1BE2  
                      l2951 193A                        l2943 18F4                        l2935 18BE  
                      l2927 1878                        l2919 184E                        l2695 1668  
                      l2679 1614                        l2687 1632                        l2599 13DA  
                      l3399 10B2                        l3495 2042                        l3487 1FE4  
                      l3479 1F92                        l3583 2FBE                        l3751 262E  
                      l3743 25FA                        l3735 25CE                        l3593 3264  
                      l3665 2B36                        l3657 2B02                        l3649 2ACE  
                      l3577 31DA                        l3569 31CA                        l3673 2E40  
                      l3729 25BA                        l2873 1F20                        l2865 1EEC  
                      l2857 1E9E                        l2785 1C76                        l2777 1C46  
                      l2769 1C14                        l2961 19DE                        l2953 1956  
                      l2945 1900                        l2937 18CA                        l2929 188E  
                      l2689 1640                        l3497 2054                        l3489 2008  
                      l3585 2FCA                        l3681 302A                        l3761 2676  
                      l3753 263A                        l3745 2606                        l3737 25DA  
                      l3595 326E                        l3667 2B3C                        l3659 2B08  
                      l3579 31DC                        l3675 2E44                        l3691 242C  
                      l2875 1F22                        l2867 1F08                        l2859 1EA2  
                      l2787 1C86                        l2795 1CA6                        l2779 1C48  
                      l2971 1A34                        l2963 19EC                        l2955 1962  
                      l2947 1910                        l2939 18D8                        l2891 1796  
                      l2883 176A                        l2699 1692                        l3499 205C  
                      l3587 2FE8                        l3683 3032                        l3771 271A  
                      l3763 268A                        l3755 2654                        l3747 2620  
                      l3739 25E4                        l3597 3270                        l3669 2E04  
                      l3693 243A                        l2869 1F0C                        l2797 1CB6  
                      l2789 1C8E                        l2973 1A42                        l2965 1A0A  
                      l2957 197E                        l2949 192A                        l2893 17A6  
                      l2885 1776                        l3589 3004                        l3685 304E  
                      l3677 3010                        l3773 2740                        l3765 26FA  
                      l3757 2662                        l3749 2624                        l3695 2480  
                      l3599 324E                        l2799 1CB6                        l2983 1AAC  
                      l2991 1AF4                        l2975 1A46                        l2967 1A14  
                      l2959 19A8                        l2895 17B6                        l2887 1784  
                      l3679 3022                        l3775 274C                        l3767 2704  
                      l3759 2666                        l3697 2496                        l3689 241C  
                      l2993 1B0E                        l2985 1AB8                        l2977 1A54  
                      l2969 1A22                        l2897 17BC                        l2889 1786  
                      l3769 2710                        l2995 1B22                        l2987 1AC6  
                      l2979 1A82                        l2899 17CC                        l2997 1B3C  
                      l2989 1AF0                        l2999 1B58                        STR_1 081C  
                      STR_2 0828                        STR_3 0833                        STR_4 080F  
                      STR_5 0801                        STR_6 083E                        STR_9 0842  
                      u2000 2B94                        u2001 2B90                        u2010 2BCA  
                      u2011 2BC6                        u2100 13AA                        u2020 12C4  
                      u2101 13A6                        u2021 12C0                        u2110 1418  
                      u2030 12D6                        u2111 1414                        u2031 12D2  
                      u2200 14F6                        u2120 1430                        u2040 12E6  
                      u3000 2E90                        u2201 14F2                        u2121 142A  
                      u2041 12E2                        u3001 2E8C                        u2210 1514  
                      u2130 1432                        u2050 1328                        u3010 2EE6  
                      u2211 1510                        u2051 1324                        u3011 2EE2  
                      u2300 1652                        u2220 154C                        u2140 145A  
                      u2060 133E                        u3020 29B8                        u3100 2F1A  
                      u2301 164E                        u2221 1548                        u2141 1456  
                      u2061 133A                        u3101 2F16                        u2310 1668  
                      u2230 1592                        u2150 1478                        u2070 1350  
                      u3030 29D6                        u3110 2250                        _LATB 0F8A  
                      u2311 1664                        u2231 158E                        u2151 1474  
                      u2071 134C                        u3031 29D2                        u2400 1756  
                      u2320 167E                        u2240 15C8                        u2160 1498  
                      u2080 1360                        u3040 29FE                        u3200 23F8  
                      u3120 227E                        u2401 1752                        u2321 167A  
                      u2241 15C4                        u2161 1494                        u2081 135C  
                      u3041 29FA                        u3025 29AE                        u3201 23F4  
                      u3121 227A                        u2330 1692                        u2250 15D8  
                      u2170 14A6                        u2090 139C                        u3050 2A28  
                      u3130 22A0                        u3210 30AE                        u2410 3138  
                      u2331 168E                        u2251 15D4                        u2171 14A2  
                      u2091 1398                        u3051 2A24                        u3131 229C  
                      u3115 2246                        u3211 30AA                        u2411 3134  
                      u3220 2F72                        u2500 1D2C                        u2420 1BAE  
                      u2340 16AC                        u2260 1604                        u2180 14B6  
                      u3300 0916                        u3221 2F6E                        u2501 1D28  
                      u2421 1BAA                        u2341 16A8                        u2261 1600  
                      u2181 14B2                        u3301 0912                        u3230 2F88  
                      u2510 1D4E                        u2430 1BC0                        u2350 16E6  
                      u2270 1614                        u2190 14E8                        u3070 2A62  
                      u3150 230C                        u3310 0990                        u3231 2F84  
                      u4007 2D9A                        u2511 1D4A                        u2431 1BBC  
                      u2351 16E2                        u2271 1610                        u2191 14E4  
                      u3071 2A5C                        u3151 2308                        u3311 098C  
                      u3240 2F9E                        u2600 1E5A                        u2520 1D78  
                      u2440 1BD0                        u2360 16F8                        u2280 1630  
                      u3080 2A64                        u3160 2330                        u3400 0C24  
                      u3320 09A2                        u3241 2F9A                        u4017 2DB0  
                      u2601 1E56                        u2521 1D74                        u2441 1BCC  
                      u2361 16F4                        u2281 162C                        u3065 2A3A  
                      u3145 22B4                        u3401 0C20                        u3321 099E  
                      u3250 2FB4                        u2610 1E74                        u2530 1D9C  
                      u2450 1C14                        u2370 1708                        u2290 1640  
                      u3170 234C                        u3146 22BE                        u3090 3178  
                      u3410 0C32                        u3330 0A1C                        u3251 2FB0  
                      u4027 2DC4                        u2611 1E70                        u2531 1D98  
                      u2451 1C10                        u2371 1704                        u2291 163C  
                      u3171 2348                        u3147 22CE                        u3091 3174  
                      u3411 0C2E                        u3331 0A18                        u2620 1EBC  
                      u2540 1DB2                        u2460 1C26                        u2700 1808  
                      u2380 1728                        u3180 23A0                        u3500 1034  
                      u3420 0C5C                        u3340 0AA8                        u3260 086C  
                      u4037 3240                        u2621 1EB8                        u2541 1DAE  
                      u2461 1C22                        u2701 1804                        u2381 1724  
                      u3165 2326                        u3501 1030                        u3421 0C58  
                      u3341 0AA4                        u3261 0868                        u2630 1EEC  
                      u2550 1DD0                        u2470 1C36                        u2710 183E  
                      u2390 173A                        u3190 23BC                        u3510 1042  
                      u3430 0DA4                        u3350 0ADA                        u3270 08B6  
                      u2631 1EE8                        u2551 1DCC                        u2471 1C32  
                      u2711 183A                        u2391 1736                        u3191 23B8  
                      u3511 103E                        u3431 0DA0                        u3351 0AD6  
                      u3271 08B2                        u2640 1F1A                        u2560 1DF0  
                      u2480 1C76                        u2800 1AC6                        u2720 184E  
                      u3600 126A                        u3520 1096                        u3440 0E0A  
                      u3360 0B18                        u3280 08C6                        u2641 1F16  
                      u2561 1DEC                        u2481 1C72                        u2801 1AC2  
                      u2721 184A                        u3185 2396                        u3601 1266  
                      u3521 1092                        u3441 0E06                        u3361 0B14  
                      u3281 08C2                        u2570 1E02                        u2490 1CB6  
                      u2810 1B0E                        u2730 19C8                        u2650 1784  
                      u3530 1168                        u3450 0E52                        u3370 0BA4  
                      u3290 0904                        u3610 2C3E                        u2571 1DFE  
                      u2491 1CB2                        u2811 1B0A                        u2651 1780  
                      u3531 1164                        u3451 0E4E                        u3371 0BA0  
                      u3291 0900                        u3611 2C3A                        u3700 2AF0  
                      u2580 1E30                        u2900 291E                        u2820 1B3C  
                      u2740 1A22                        u2660 1796                        u3540 1184  
                      u3460 0E62                        u3380 0BDA                        u3620 2CCE  
                      u3701 2AEC                        u2581 1E2C                        u2901 291A  
                      u2821 1B38                        u2741 1A1E                        u2661 1792  
                      u3541 1180                        u3461 0E5E                        u3381 0BD6  
                      u3621 2CCA                        u3710 2B24                        u2590 1E46  
                      u2910 296E                        u2830 1B76                        u2750 1A42  
                      u2670 17A6                        u3550 11EA                        u3470 0EFC  
                      u3390 0BF2                        u3630 1F52                        u3711 2B20  
                      u2591 1E42                        u2911 296A                        u2831 1B72  
                      u2751 1A3E                        u2735 19BE                        u2671 17A2  
                      u3551 11E4                        u3471 0EF8                        u3391 0BEE  
                      u3631 1F4E                        u3720 2E3C                        u3800 2554  
                      u2840 2D06                        u2760 1A54                        u2680 17E6  
                      u2920 3190                        u3560 11EC                        u3480 0F4A  
                      u3640 1FE4                        u3801 2550                        u2841 2D02  
                      u2761 1A50                        u2681 17E2                        u2921 318C  
                      u3481 0F46                        u3641 1FE0                        u3730 2E70  
                      u3810 2564                        u2850 2D44                        u2770 1A82  
                      u2690 17F8                        u2930 2784                        u3570 11FE  
                      u3490 0FF8                        u3650 2008                        u3811 2560  
                      u2851 2D40                        u2771 1A7E                        u2691 17F4  
                      u2931 2780                        u3571 11FA                        u3491 0FF4  
                      u3651 2004                        u3740 2E80                        u3820 2572  
                      u2860 2D78                        u2780 1A98                        u2940 27B8  
                      u1980 2B5A                        u3580 123C                        u3660 20BC  
                      u3741 2E7C                        u3821 256E                        u2861 2D74  
                      u2781 1A94                        u1981 2B56                        u3581 1238  
                      u3661 20B8                        u3830 25AC                        u3750 242C  
                      u2870 28A2                        u2790 1AAC                        u2950 27E6  
                      u1990 2B6C                        u3590 125A                        u3670 3004  
                      u3727 2E32                        u3831 25A8                        u3751 2428  
                      u2871 289E                        u2791 1AA8                        u2951 27E2  
                      u1991 2B68                        u3591 1256                        u3671 3000  
                      u3680 2A88                        u3840 25BA                        u3760 243A  
                      u2880 28E0                        u2960 27FA                        u3681 2A84  
                      u3737 2E66                        u3841 25B6                        u3761 2436  
                      u2881 28DC                        u2961 27F6                        u2945 27AE  
                      u3690 2ABC                        u3770 2496                        u2890 28FE  
                      u2970 2822                        u3850 2662                        u3691 2AB8  
                      u3771 2492                        u2891 28FA                        u2971 281E  
                      u3851 265E                        u3780 24EC                        u2980 2842  
                      u3860 2676                        u3781 24E8                        u2981 283E  
                      u3861 2672                        u3790 2536                        u2990 2852  
                      u3791 2532                        u2991 284E                        u3957 2612  
                      u3967 2646                        u3977 2758                        u3987 31CE  
                      u3997 31DE           ?_Lcd_Write_String 0005                        _dbuf 0100  
                      _labs 2EFC                        _main 25CE                        _prec 00C9  
                      pad@i 0018                        pad@p 0015                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        pad@w 001A                        fsr2l 0FD9  
                      _volt 00C3               ___fpclassifyf 2978                        prodh 0FF4  
                      prodl 0FF3                        start 0000          ??_Lcd_Write_String 0007  
           ___fldiv@new_exp 0039             __end_of_Lcd_Cmd 324E                ___param_bank 0000  
                     ??_pad 0017               ___fltol@sign1 0009                       ?_labs 0001  
           __end_of___fladd 176A                       ?_main 0001             __end_of___fldiv 1F2E  
           __end_of___flneg 31B2             __end_of___flmul 1B94             __end_of___flsub 30F6  
           __end_of___fltol 2874                vfpfcnvrt@fmt 008E                       _TRISB 0F93  
                     _flags 00CD         read_prec_or_width@c 000D         read_prec_or_width@n 000E  
                     _fputc 2B48                       _v_adc 00CB                       _fputs 30F6  
                     labs@a 0001                       pad@fp 0011                       _width 00C7  
                     _putch 3282             __end_of_set_adc 3264                       tablat 0FF5  
                     status 0FD8             __end_of_sprintf 3060              ?___fpclassifyf 0001  
          __end_of_Lcd_Init 2E04            __end_of_Lcd_Port 2FBE             __initialization 320C  
              __end_of_labs 2F62                __end_of_main 276E            __end_of_InitPort 3274  
                    ??_labs 0005                      ??_main 00B9               __activetblptr 0002  
__end_of_read_prec_or_width 2CD8                      _ADCON0 0FC2                      _ADCON1 0FC1  
                    _ADCON2 0FC0                      ?_fputc 0001                      ?_fputs 000A  
                    _ADRESH 0FC4                      _ADRESL 0FC3                      ?_putch 0001  
                    _ANSELB 0F5C                   ??_Lcd_Cmd 0002               vfpfcnvrt@done 0096  
          __end_of___xxtofl 25CE                vfprintf@cfmt 00A1                      ___flge 2874  
                    ___fleq 2CD8                   ??___fladd 0009                      ___wmul 31E6  
                 ??___fldiv 0030                   ??___flneg 0005                   ??___flmul 0017  
                 ??___flsub 0030                   ??___fltol 0005                      _efgtoa 0848  
                    _buffer 00CE                      _floorf 2208                      _memcpy 3060  
      read_prec_or_width@ap 0009                      clear_0 3212                      clear_1 321E  
                    isa$std 0001                      pad@buf 0013                      _strcpy 313A  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
                    fputs@s 000A             ___fpclassifyf@e 0009             ___fpclassifyf@u 000B  
           ___fpclassifyf@x 0001                __mediumconst 0000                   ??_set_adc 0001  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
                    putch@c 0001            __end_of_vfprintf 3010                   ??_sprintf 0060  
           Lcd_Set_Cursor@a 0005             Lcd_Set_Cursor@b 0004             Lcd_Set_Cursor@y 0007  
           Lcd_Set_Cursor@z 0006                  ___flge@ff1 0028                  ___flge@ff2 002C  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 3224                  ___flneg@f1 0001  
         __end_of_Lcd_Clear 3282               ___rparam_used 0001                  ___fltol@f1 0001  
            __pcstackCOMRAM 0001               __end_of_fputc 2C12               __end_of_fputs 313A  
             __end_of_putch 3284              _Lcd_Set_Cursor 2A76                   ?_Lcd_Init 0001  
                 ?_Lcd_Port 0001                     ??_fputc 0005                     ??_fputs 000E  
                   ??_putch 0001                  __pbssBANK0 00BB                  __pbssBANK1 0100  
                 ?_InitPort 0001                     ?___flge 0028                     ?___fleq 0001  
                   ?___wmul 0001                     ?_efgtoa 0055                     ?_floorf 0041  
                   ?_memcpy 0001      __end_of_Lcd_Set_Cursor 2B48                     ?_strcpy 0001  
                 ?___xxtofl 0001                  ??_Lcd_Init 0004                  ??_Lcd_Port 0001  
            _Lcd_Write_Char 31B2                  ??_InitPort 0001                     _Lcd_Cmd 322E  
                   __Hparam 0000                     __Lparam 0000                     ___fladd 12AA  
                   ___fldiv 1B94                     ___flneg 317A                     ___flmul 176A  
                   ___flsub 30B0                     ___fltol 276E                   ?_vfprintf 009B  
              __psmallconst 0800                     __pcinit 320C                     __ramtop 0800  
           ?_Lcd_Set_Cursor 0004                     __ptext0 25CE                     __ptext1 3010  
                   __ptext2 2FBE                     __ptext3 1F2E                     __ptext4 2C12  
                   __ptext5 31E6                     __ptext6 0848                     __ptext7 313A  
                   __ptext8 2E82                     __ptext9 30F6       read_prec_or_width@fmt 0007  
                ??___xxtofl 0005                     _set_adc 324E                     efgtoa@c 005B  
                   efgtoa@d 006B                     efgtoa@e 006F                     efgtoa@f 0057  
                   efgtoa@g 0082                     efgtoa@h 0077                     efgtoa@i 007F  
                   efgtoa@l 007B                     efgtoa@m 006D                     efgtoa@n 0086  
                   efgtoa@p 0062                     efgtoa@t 0064                     efgtoa@u 0088  
                   efgtoa@w 0071                     _sprintf 3010      __end_of_Lcd_Write_Char 31E6  
      end_of_initialization 3224                     floorf@e 004F                     floorf@m 004B  
                   floorf@u 0051                     floorf@x 0041                     memcpy@d 0007  
                   memcpy@n 0005                     memcpy@s 0009                     fputc@fp 0003  
             __Lmediumconst 0000                     fputs@fp 000C          _read_prec_or_width 2C12  
         __end_of_vfpfcnvrt 2208                  efgtoa@mode 0069                  efgtoa@sign 0081  
                   postdec2 0FDD         ?_read_prec_or_width 0007                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0092  
                 Lcd_Port@a 0001                  ??_vfprintf 0060                     strcpy@d 0007  
                   strcpy@s 0005                   _PORTBbits 0F81                 ___fladd@grs 0010  
             ___xxtofl@sign 0009                   _TRISAbits 0F92                   _TRISDbits 0F95  
      ??_read_prec_or_width 000B                 ___fldiv@grs 003B                 ___fldiv@rem 0034  
           ?_Lcd_Write_Char 0001           Lcd_Write_String@a 0005           Lcd_Write_String@i 0009  
               ___flmul@grs 001C                   _Lcd_Clear 3274              __end_of___flge 2978  
            __end_of___fleq 2D82                 vfpfcnvrt@ap 0090                 vfpfcnvrt@cp 0099  
               vfpfcnvrt@fp 008C              __end_of___wmul 320C            _Lcd_Write_String 2E04  
            __end_of_efgtoa 12AA              __end_of_floorf 241A              __end_of_memcpy 30B0  
                floorf@F526 00BB              __end_of_strcpy 317A         start_initialization 320C  
               __end_of_pad 2EFC       __end_of___fpclassifyf 2A76                 vfprintf@fmt 009D  
                ?_Lcd_Clear 0001                    ??___flge 0030                    ??___fleq 0009  
                  ??___wmul 0005                    ??_efgtoa 005C                    ??_floorf 0045  
                  ??_memcpy 0007             Lcd_Write_Char@a 0004             Lcd_Write_Char@y 0003  
                  ??_strcpy 0005                   ___fladd@a 0005                   ___fladd@b 0001  
                 ___fldiv@a 002C                   ___fldiv@b 0028                   ___flmul@a 0013  
                 ___flmul@b 000F                   ___flsub@a 002C                   ___flsub@b 0028  
             __pcstackBANK0 0060                    ?_Lcd_Cmd 0001                 _efgtoa$1015 0066  
          ??_Lcd_Set_Cursor 0005                    ?___fladd 0001                    ?___fldiv 0028  
                  ?___flneg 0001                    ?___flmul 000F                    ?___flsub 0028  
                  ?___fltol 0001                 __smallconst 0800                    ?_set_adc 0001  
                  ?_sprintf 00A3              ___wmul@product 0005                    _LATDbits 0F8C  
                  Lcd_Cmd@a 0003                 ??_Lcd_Clear 0004                   _vfpfcnvrt 1F2E  
                _ADCON0bits 0FC2           ___wmul@multiplier 0001            ??_Lcd_Write_Char 0002  
                  _Lcd_Init 2D82                    _Lcd_Port 2F62                  vfpfcnvrt@c 0098  
               _INTCON2bits 0FF1    __end_of_Lcd_Write_String 2E82                    _InitPort 3264  
                  __Hrparam 0000                   memcpy@tmp 000B                  vfprintf@ap 009F  
                  __Lrparam 0000                  vfprintf@fp 009B                  ?_vfpfcnvrt 008C  
                _ANSELAbits 0F5B          ___fpclassifyf@F465 00BF                  sprintf@fmt 00A5  
                  ___xxtofl 241A                    __ptext10 2B48                    __ptext11 3282  
                  __ptext20 176A                    __ptext12 3060                    __ptext21 2874  
                  __ptext13 2EFC                    __ptext30 3274                    __ptext22 2CD8  
                  __ptext14 2208                    __ptext31 322E                    __ptext23 1B94  
                  __ptext15 2978                    __ptext32 2F62                    __ptext24 324E  
                  __ptext16 276E                    __ptext33 3264                    __ptext25 241A  
                  __ptext17 30B0                    __ptext26 2E04                    __ptext18 12AA  
                  __ptext27 31B2                    __ptext19 317A                    __ptext28 2A76  
                  __ptext29 2D82                  strcpy@dest 0001                    efgtoa@fp 0055  
                  efgtoa@ne 0060                    efgtoa@pp 0068                    efgtoa@ou 0073  
                  isa$xinst 0000                    _vfprintf 2FBE                    memcpy@d1 0001  
                  memcpy@s1 0003          Lcd_Write_Char@temp 0002                   sprintf@ap 00AB  
                 strcpy@src 0003                 efgtoa@nmode 006A                 ??_vfpfcnvrt 005E  
        Lcd_Set_Cursor@temp 0008                    sprintf@f 00AD                    sprintf@s 00A3  
             ___fladd@signs 000D                ___fladd@aexp 000E                ___fladd@bexp 000F  
