

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jul 09 10:46:36 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50   000000                     
    51                           ; Generated 14/06/2023 GMT
    52                           ; 
    53                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F45K50 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     _ADRESL	set	4035
    86   000000                     _ADRESH	set	4036
    87   000000                     _ADCON0bits	set	4034
    88   000000                     _ANSELAbits	set	3931
    89   000000                     _ANSELB	set	3932
    90   000000                     _LATB	set	3978
    91   000000                     _LATDbits	set	3980
    92   000000                     _TRISAbits	set	3986
    93   000000                     _TRISB	set	3987
    94   000000                     _PORTBbits	set	3969
    95   000000                     _TRISDbits	set	3989
    96   000000                     _ADCON2	set	4032
    97   000000                     _ADCON1	set	4033
    98   000000                     _ADCON0	set	4034
    99   000000                     _INTCON2bits	set	4081
   100                           
   101                           	psect	smallconst
   102   000800                     __psmallconst:
   103                           	callstack 0
   104   000800  00                 	db	0
   105   000801                     STR_5:
   106                           
   107                           ; BSR set to: 15
   108   000801  56                 	db	86	;'V'
   109   000802  6F                 	db	111	;'o'
   110   000803  6C                 	db	108	;'l'
   111   000804  74                 	db	116	;'t'
   112   000805  61                 	db	97	;'a'
   113   000806  6A                 	db	106	;'j'
   114   000807  65                 	db	101	;'e'
   115   000808  20                 	db	32
   116   000809  25                 	db	37
   117   00080A  30                 	db	48	;'0'
   118   00080B  2E                 	db	46
   119   00080C  32                 	db	50	;'2'
   120   00080D  66                 	db	102	;'f'
   121   00080E  00                 	db	0
   122   00080F                     STR_4:
   123                           
   124                           ; BSR set to: 15
   125   00080F  4C                 	db	76	;'L'
   126   000810  61                 	db	97	;'a'
   127   000811  20                 	db	32
   128   000812  4C                 	db	76	;'L'
   129   000813  65                 	db	101	;'e'
   130   000814  63                 	db	99	;'c'
   131   000815  74                 	db	116	;'t'
   132   000816  75                 	db	117	;'u'
   133   000817  72                 	db	114	;'r'
   134   000818  61                 	db	97	;'a'
   135   000819  3A                 	db	58	;':'
   136   00081A  20                 	db	32
   137   00081B  00                 	db	0
   138   00081C                     STR_1:
   139                           
   140                           ; BSR set to: 15
   141   00081C  41                 	db	65	;'A'
   142   00081D  44                 	db	68	;'D'
   143   00081E  43                 	db	67	;'C'
   144   00081F  30                 	db	48	;'0'
   145   000820  20                 	db	32
   146   000821  20                 	db	32
   147   000822  42                 	db	66	;'B'
   148   000823  54                 	db	84	;'T'
   149   000824  4E                 	db	78	;'N'
   150   000825  20                 	db	32
   151   000826  30                 	db	48	;'0'
   152   000827  00                 	db	0
   153   000828                     STR_2:
   154                           
   155                           ; BSR set to: 15
   156   000828  41                 	db	65	;'A'
   157   000829  44                 	db	68	;'D'
   158   00082A  43                 	db	67	;'C'
   159   00082B  31                 	db	49	;'1'
   160   00082C  20                 	db	32
   161   00082D  42                 	db	66	;'B'
   162   00082E  54                 	db	84	;'T'
   163   00082F  4E                 	db	78	;'N'
   164   000830  20                 	db	32
   165   000831  31                 	db	49	;'1'
   166   000832  00                 	db	0
   167   000833                     STR_3:
   168                           
   169                           ; BSR set to: 15
   170   000833  41                 	db	65	;'A'
   171   000834  44                 	db	68	;'D'
   172   000835  43                 	db	67	;'C'
   173   000836  32                 	db	50	;'2'
   174   000837  20                 	db	32
   175   000838  42                 	db	66	;'B'
   176   000839  54                 	db	84	;'T'
   177   00083A  4E                 	db	78	;'N'
   178   00083B  20                 	db	32
   179   00083C  32                 	db	50	;'2'
   180   00083D  00                 	db	0
   181   00083E                     STR_10:
   182                           
   183                           ; BSR set to: 15
   184   00083E  69                 	db	105	;'i'
   185   00083F  6E                 	db	110	;'n'
   186   000840  66                 	db	102	;'f'
   187   000841  00                 	db	0
   188   000842                     STR_13:
   189                           
   190                           ; BSR set to: 15
   191   000842  6E                 	db	110	;'n'
   192   000843  61                 	db	97	;'a'
   193   000844  6E                 	db	110	;'n'
   194   000845  00                 	db	0
   195   000846  00                 	db	0	; dummy byte at the end
   196   000000                     
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   003436                     __pcinit:
   201                           	callstack 0
   202   003436                     start_initialization:
   203                           	callstack 0
   204   003436                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Clear objects allocated to BANK1 (80 bytes)
   208   003436  EE01  F000         	lfsr	0,__pbssBANK1
   209   00343A  0E50               	movlw	80
   210   00343C                     clear_0:
   211   00343C  6AEE               	clrf	postinc0,c
   212   00343E  06E8               	decf	wreg,f,c
   213   003440  E1FD               	bnz	clear_0
   214                           
   215                           ; Clear objects allocated to BANK0 (39 bytes)
   216   003442  EE00  F0BB         	lfsr	0,__pbssBANK0
   217   003446  0E27               	movlw	39
   218   003448                     clear_1:
   219   003448  6AEE               	clrf	postinc0,c
   220   00344A  06E8               	decf	wreg,f,c
   221   00344C  E1FD               	bnz	clear_1
   222   00344E                     end_of_initialization:
   223                           	callstack 0
   224   00344E                     __end_of__initialization:
   225                           	callstack 0
   226   00344E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   227   003450  6EF8               	movwf	tblptru,c
   228   003452  0100               	movlb	0
   229   003454  EFCA  F00D         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssBANK0
   232   0000BB                     __pbssBANK0:
   233                           	callstack 0
   234   0000BB                     floorf@F526:
   235                           	callstack 0
   236   0000BB                     	ds	4
   237   0000BF                     ___fpclassifyf@F465:
   238                           	callstack 0
   239   0000BF                     	ds	4
   240   0000C3                     _volt:
   241                           	callstack 0
   242   0000C3                     	ds	4
   243   0000C7                     _width:
   244                           	callstack 0
   245   0000C7                     	ds	2
   246   0000C9                     _prec:
   247                           	callstack 0
   248   0000C9                     	ds	2
   249   0000CB                     _v_adc:
   250                           	callstack 0
   251   0000CB                     	ds	2
   252   0000CD                     _flags:
   253                           	callstack 0
   254   0000CD                     	ds	1
   255   0000CE                     _buffer:
   256                           	callstack 0
   257   0000CE                     	ds	20
   258                           
   259                           	psect	bssBANK1
   260   000100                     __pbssBANK1:
   261                           	callstack 0
   262   000100                     _dbuf:
   263                           	callstack 0
   264   000100                     	ds	80
   265                           
   266                           	psect	cstackBANK0
   267   000060                     __pcstackBANK0:
   268                           	callstack 0
   269   000060                     efgtoa@ne:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x0
   273   000060                     	ds	2
   274   000062                     efgtoa@p:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x2
   278   000062                     	ds	2
   279   000064                     efgtoa@t:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x4
   283   000064                     	ds	2
   284   000066                     _efgtoa$1021:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x6
   288   000066                     	ds	2
   289   000068                     efgtoa@pp:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x8
   293   000068                     	ds	1
   294   000069                     efgtoa@mode:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x9
   298   000069                     	ds	1
   299   00006A                     efgtoa@nmode:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0xA
   303   00006A                     	ds	1
   304   00006B                     efgtoa@d:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0xB
   308   00006B                     	ds	2
   309   00006D                     efgtoa@m:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0xD
   313   00006D                     	ds	2
   314   00006F                     efgtoa@e:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0xF
   318   00006F                     	ds	2
   319   000071                     efgtoa@w:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x11
   323   000071                     	ds	2
   324   000073                     efgtoa@ou:
   325                           	callstack 0
   326                           
   327                           ; 4 bytes @ 0x13
   328   000073                     	ds	4
   329   000077                     efgtoa@h:
   330                           	callstack 0
   331                           
   332                           ; 4 bytes @ 0x17
   333   000077                     	ds	4
   334   00007B                     efgtoa@l:
   335                           	callstack 0
   336                           
   337                           ; 4 bytes @ 0x1B
   338   00007B                     	ds	4
   339   00007F                     efgtoa@i:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x1F
   343   00007F                     	ds	2
   344   000081                     efgtoa@sign:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x21
   348   000081                     	ds	1
   349   000082                     efgtoa@g:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x22
   353   000082                     	ds	4
   354   000086                     efgtoa@n:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x26
   358   000086                     	ds	2
   359   000088                     efgtoa@u:
   360                           	callstack 0
   361                           
   362                           ; 4 bytes @ 0x28
   363   000088                     	ds	4
   364   00008C                     vfpfcnvrt@fp:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x2C
   368   00008C                     	ds	2
   369   00008E                     vfpfcnvrt@fmt:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x2E
   373   00008E                     	ds	2
   374   000090                     vfpfcnvrt@ap:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x30
   378   000090                     	ds	2
   379   000092                     vfpfcnvrt@convarg:
   380                           	callstack 0
   381                           
   382                           ; 4 bytes @ 0x32
   383   000092                     	ds	4
   384   000096                     vfpfcnvrt@done:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x36
   388   000096                     	ds	2
   389   000098                     vfpfcnvrt@c:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x38
   393   000098                     	ds	1
   394   000099                     vfpfcnvrt@cp:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x39
   398   000099                     	ds	2
   399   00009B                     ?_vfprintf:
   400                           	callstack 0
   401   00009B                     vfprintf@fp:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x3B
   405   00009B                     	ds	2
   406   00009D                     vfprintf@fmt:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x3D
   410   00009D                     	ds	2
   411   00009F                     vfprintf@ap:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x3F
   415   00009F                     	ds	2
   416   0000A1                     vfprintf@cfmt:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x41
   420   0000A1                     	ds	2
   421   0000A3                     ?_sprintf:
   422                           	callstack 0
   423   0000A3                     sprintf@s:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x43
   427   0000A3                     	ds	2
   428   0000A5                     sprintf@fmt:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x45
   432   0000A5                     	ds	6
   433   0000AB                     sprintf@ap:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x4B
   437   0000AB                     	ds	2
   438   0000AD                     sprintf@f:
   439                           	callstack 0
   440                           
   441                           ; 12 bytes @ 0x4D
   442   0000AD                     	ds	12
   443   0000B9                     ??_main:
   444                           
   445                           ; 1 bytes @ 0x59
   446   0000B9                     	ds	2
   447                           
   448                           	psect	cstackCOMRAM
   449   000001                     __pcstackCOMRAM:
   450                           	callstack 0
   451   000001                     ?___fpclassifyf:
   452                           	callstack 0
   453   000001                     ?___wmul:
   454                           	callstack 0
   455   000001                     ?___fladd:
   456                           	callstack 0
   457   000001                     ?_labs:
   458                           	callstack 0
   459   000001                     ?___flneg:
   460                           	callstack 0
   461   000001                     ?___fltol:
   462                           	callstack 0
   463   000001                     ?___xxtofl:
   464                           	callstack 0
   465   000001                     Lcd_Port@a:
   466                           	callstack 0
   467   000001                     ___wmul@multiplier:
   468                           	callstack 0
   469   000001                     memcpy@d1:
   470                           	callstack 0
   471   000001                     fputc@c:
   472                           	callstack 0
   473   000001                     strcpy@dest:
   474                           	callstack 0
   475   000001                     ___fleq@ff1:
   476                           	callstack 0
   477   000001                     ___flneg@f1:
   478                           	callstack 0
   479   000001                     ___fltol@f1:
   480                           	callstack 0
   481   000001                     ___fladd@b:
   482                           	callstack 0
   483   000001                     ___xxtofl@val:
   484                           	callstack 0
   485   000001                     ___fpclassifyf@x:
   486                           	callstack 0
   487   000001                     labs@a:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x0
   491   000001                     	ds	1
   492   000002                     ??_Lcd_Cmd:
   493   000002                     Lcd_Write_Char@temp:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x1
   497   000002                     	ds	1
   498   000003                     Lcd_Cmd@a:
   499                           	callstack 0
   500   000003                     Lcd_Write_Char@y:
   501                           	callstack 0
   502   000003                     ___wmul@multiplicand:
   503                           	callstack 0
   504   000003                     memcpy@s1:
   505                           	callstack 0
   506   000003                     fputc@fp:
   507                           	callstack 0
   508   000003                     strcpy@src:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x2
   512   000003                     	ds	1
   513   000004                     ??_Lcd_Init:
   514   000004                     Lcd_Set_Cursor@b:
   515                           	callstack 0
   516   000004                     Lcd_Write_Char@a:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x3
   520   000004                     	ds	1
   521   000005                     ??_fputc:
   522   000005                     ??___fpclassifyf:
   523   000005                     ??_labs:
   524   000005                     ??___fltol:
   525   000005                     ??___xxtofl:
   526   000005                     Lcd_Set_Cursor@a:
   527                           	callstack 0
   528   000005                     Lcd_Write_String@a:
   529                           	callstack 0
   530   000005                     ___wmul@product:
   531                           	callstack 0
   532   000005                     memcpy@n:
   533                           	callstack 0
   534   000005                     strcpy@s:
   535                           	callstack 0
   536   000005                     ___fleq@ff2:
   537                           	callstack 0
   538   000005                     ___fladd@a:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x4
   542   000005                     	ds	1
   543   000006                     Lcd_Set_Cursor@z:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x5
   547   000006                     	ds	1
   548   000007                     ??_Lcd_Write_String:
   549   000007                     ?_read_prec_or_width:
   550                           	callstack 0
   551   000007                     Lcd_Set_Cursor@y:
   552                           	callstack 0
   553   000007                     read_prec_or_width@fmt:
   554                           	callstack 0
   555   000007                     memcpy@d:
   556                           	callstack 0
   557   000007                     strcpy@d:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x6
   561   000007                     	ds	1
   562   000008                     Lcd_Set_Cursor@temp:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x7
   566   000008                     	ds	1
   567   000009                     ??___fladd:
   568   000009                     ??___fleq:
   569   000009                     ___fltol@sign1:
   570                           	callstack 0
   571   000009                     ___xxtofl@sign:
   572                           	callstack 0
   573   000009                     Lcd_Write_String@i:
   574                           	callstack 0
   575   000009                     read_prec_or_width@ap:
   576                           	callstack 0
   577   000009                     ___fpclassifyf@e:
   578                           	callstack 0
   579   000009                     memcpy@s:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x8
   583   000009                     	ds	1
   584   00000A                     ___fltol@exp1:
   585                           	callstack 0
   586   00000A                     ___xxtofl@exp:
   587                           	callstack 0
   588   00000A                     fputs@s:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x9
   592   00000A                     	ds	1
   593   00000B                     ??_read_prec_or_width:
   594   00000B                     memcpy@tmp:
   595                           	callstack 0
   596   00000B                     ___xxtofl@arg:
   597                           	callstack 0
   598   00000B                     ___fpclassifyf@u:
   599                           	callstack 0
   600                           
   601                           ; 4 bytes @ 0xA
   602   00000B                     	ds	1
   603   00000C                     fputs@fp:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0xB
   607   00000C                     	ds	1
   608   00000D                     ___fladd@signs:
   609                           	callstack 0
   610   00000D                     read_prec_or_width@c:
   611                           	callstack 0
   612                           
   613                           ; 1 bytes @ 0xC
   614   00000D                     	ds	1
   615   00000E                     ___fladd@aexp:
   616                           	callstack 0
   617   00000E                     fputs@c:
   618                           	callstack 0
   619   00000E                     read_prec_or_width@n:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0xD
   623   00000E                     	ds	1
   624   00000F                     ?___flmul:
   625                           	callstack 0
   626   00000F                     ___fladd@bexp:
   627                           	callstack 0
   628   00000F                     fputs@i:
   629                           	callstack 0
   630   00000F                     ___flmul@b:
   631                           	callstack 0
   632                           
   633                           ; 4 bytes @ 0xE
   634   00000F                     	ds	1
   635   000010                     ___fladd@grs:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0xF
   639   000010                     	ds	1
   640   000011                     pad@fp:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x10
   644   000011                     	ds	2
   645   000013                     pad@buf:
   646                           	callstack 0
   647   000013                     ___flmul@a:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x12
   651   000013                     	ds	2
   652   000015                     pad@p:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x14
   656   000015                     	ds	2
   657   000017                     ??___flmul:
   658   000017                     ??_pad:
   659                           
   660                           ; 1 bytes @ 0x16
   661   000017                     	ds	1
   662   000018                     pad@i:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x17
   666   000018                     	ds	2
   667   00001A                     pad@w:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x19
   671   00001A                     	ds	1
   672   00001B                     ___flmul@sign:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x1A
   676   00001B                     	ds	1
   677   00001C                     ___flmul@grs:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x1B
   681   00001C                     	ds	4
   682   000020                     ___flmul@aexp:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x1F
   686   000020                     	ds	1
   687   000021                     ___flmul@bexp:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x20
   691   000021                     	ds	1
   692   000022                     ___flmul@prod:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0x21
   696   000022                     	ds	4
   697   000026                     ___flmul@temp:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x25
   701   000026                     	ds	2
   702   000028                     ?___fldiv:
   703                           	callstack 0
   704   000028                     ?___flsub:
   705                           	callstack 0
   706   000028                     ___flge@ff1:
   707                           	callstack 0
   708   000028                     ___flsub@b:
   709                           	callstack 0
   710   000028                     ___fldiv@b:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x27
   714   000028                     	ds	4
   715   00002C                     ___flge@ff2:
   716                           	callstack 0
   717   00002C                     ___flsub@a:
   718                           	callstack 0
   719   00002C                     ___fldiv@a:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x2B
   723   00002C                     	ds	4
   724   000030                     ??___fldiv:
   725   000030                     ??___flge:
   726                           
   727                           ; 1 bytes @ 0x2F
   728   000030                     	ds	4
   729   000034                     ___fldiv@rem:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x33
   733   000034                     	ds	4
   734   000038                     ___fldiv@sign:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x37
   738   000038                     	ds	1
   739   000039                     ___fldiv@new_exp:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x38
   743   000039                     	ds	2
   744   00003B                     ___fldiv@grs:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x3A
   748   00003B                     	ds	4
   749   00003F                     ___fldiv@bexp:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x3E
   753   00003F                     	ds	1
   754   000040                     ___fldiv@aexp:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x3F
   758   000040                     	ds	1
   759   000041                     ?_floorf:
   760                           	callstack 0
   761   000041                     floorf@x:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x40
   765   000041                     	ds	4
   766   000045                     ??_floorf:
   767                           
   768                           ; 1 bytes @ 0x44
   769   000045                     	ds	6
   770   00004B                     floorf@m:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x4A
   774   00004B                     	ds	4
   775   00004F                     floorf@e:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x4E
   779   00004F                     	ds	2
   780   000051                     floorf@u:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x50
   784   000051                     	ds	4
   785   000055                     efgtoa@fp:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x54
   789   000055                     	ds	2
   790   000057                     efgtoa@f:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x56
   794   000057                     	ds	4
   795   00005B                     efgtoa@c:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x5A
   799   00005B                     	ds	1
   800   00005C                     ??_efgtoa:
   801                           
   802                           ; 1 bytes @ 0x5B
   803   00005C                     	ds	2
   804   00005E                     ??_vfpfcnvrt:
   805                           
   806                           ; 1 bytes @ 0x5D
   807   00005E                     	ds	2
   808   000060                     
   809                           ; 1 bytes @ 0x5F
   810 ;;
   811 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   812 ;;
   813 ;; *************** function _main *****************
   814 ;; Defined at:
   815 ;;		line 133 in file "mainselec.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         0       0       0       0       0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0       0       0
   831 ;;      Temps:          0       2       0       0       0       0       0       0       0
   832 ;;      Totals:         0       2       0       0       0       0       0       0       0
   833 ;;Total ram usage:        2 bytes
   834 ;; Hardware stack levels required when called: 8
   835 ;; This function calls:
   836 ;;		_InitPort
   837 ;;		_Lcd_Clear
   838 ;;		_Lcd_Init
   839 ;;		_Lcd_Set_Cursor
   840 ;;		_Lcd_Write_String
   841 ;;		___fldiv
   842 ;;		___flmul
   843 ;;		___xxtofl
   844 ;;		_set_adc
   845 ;;		_set_adc1
   846 ;;		_set_adc2
   847 ;;		_sprintf
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text0
   854   001B94                     __ptext0:
   855                           	callstack 0
   856   001B94                     _main:
   857                           	callstack 23
   858   001B94                     
   859                           ;mainselec.c: 134:         InitPort();
   860   001B94  EC5D  F01A         	call	_InitPort	;wreg free
   861                           
   862                           ;mainselec.c: 135:         Lcd_Init();
   863   001B98  ECD6  F017         	call	_Lcd_Init	;wreg free
   864                           
   865                           ;mainselec.c: 136:         Lcd_Clear();
   866   001B9C  EC65  F01A         	call	_Lcd_Clear	;wreg free
   867   001BA0                     
   868                           ;mainselec.c: 137:         Lcd_Set_Cursor(1,1);
   869   001BA0  0E01               	movlw	1
   870   001BA2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   871   001BA4  0E01               	movlw	1
   872   001BA6  EC50  F016         	call	_Lcd_Set_Cursor
   873   001BAA                     
   874                           ;mainselec.c: 138:         Lcd_Write_String("ADC0  BTN 0");
   875   001BAA  0E1C               	movlw	low STR_1
   876   001BAC  6E05               	movwf	Lcd_Write_String@a^0,c
   877   001BAE  0E08               	movlw	high STR_1
   878   001BB0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   879   001BB2  EC17  F018         	call	_Lcd_Write_String	;wreg free
   880   001BB6                     
   881                           ;mainselec.c: 139:         Lcd_Set_Cursor(2,1);
   882   001BB6  0E01               	movlw	1
   883   001BB8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   884   001BBA  0E02               	movlw	2
   885   001BBC  EC50  F016         	call	_Lcd_Set_Cursor
   886   001BC0                     
   887                           ;mainselec.c: 140:         Lcd_Write_String("ADC1 BTN 1");
   888   001BC0  0E28               	movlw	low STR_2
   889   001BC2  6E05               	movwf	Lcd_Write_String@a^0,c
   890   001BC4  0E08               	movlw	high STR_2
   891   001BC6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   892   001BC8  EC17  F018         	call	_Lcd_Write_String	;wreg free
   893   001BCC                     
   894                           ;mainselec.c: 141:         _delay((unsigned long)((500)*(12000000/4000.0)));
   895   001BCC  0E08               	movlw	8
   896   001BCE  0100               	movlb	0	; () banked
   897   001BD0  6FBA               	movwf	(??_main+1)& (0+255),b
   898   001BD2  0E9D               	movlw	157
   899   001BD4  6FB9               	movwf	??_main& (0+255),b
   900   001BD6  0E05               	movlw	5
   901   001BD8                     u4037:
   902   001BD8  2EE8               	decfsz	wreg,f,c
   903   001BDA  D7FE               	bra	u4037
   904   001BDC  2FB9               	decfsz	??_main& (0+255),f,b
   905   001BDE  D7FC               	bra	u4037
   906   001BE0  2FBA               	decfsz	(??_main+1)& (0+255),f,b
   907   001BE2  D7FA               	bra	u4037
   908   001BE4  D000               	nop2	
   909   001BE6                     
   910                           ;mainselec.c: 142:         Lcd_Clear();
   911   001BE6  EC65  F01A         	call	_Lcd_Clear	;wreg free
   912   001BEA                     
   913                           ;mainselec.c: 143:         Lcd_Set_Cursor(1,1);
   914   001BEA  0E01               	movlw	1
   915   001BEC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
   916   001BEE  0E01               	movlw	1
   917   001BF0  EC50  F016         	call	_Lcd_Set_Cursor
   918   001BF4                     
   919                           ;mainselec.c: 144:         Lcd_Write_String("ADC2 BTN 2");
   920   001BF4  0E33               	movlw	low STR_3
   921   001BF6  6E05               	movwf	Lcd_Write_String@a^0,c
   922   001BF8  0E08               	movlw	high STR_3
   923   001BFA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
   924   001BFC  EC17  F018         	call	_Lcd_Write_String	;wreg free
   925   001C00                     
   926                           ;mainselec.c: 145:         _delay((unsigned long)((500)*(12000000/4000.0)));
   927   001C00  0E08               	movlw	8
   928   001C02  0100               	movlb	0	; () banked
   929   001C04  6FBA               	movwf	(??_main+1)& (0+255),b
   930   001C06  0E9D               	movlw	157
   931   001C08  6FB9               	movwf	??_main& (0+255),b
   932   001C0A  0E05               	movlw	5
   933   001C0C                     u4047:
   934   001C0C  2EE8               	decfsz	wreg,f,c
   935   001C0E  D7FE               	bra	u4047
   936   001C10  2FB9               	decfsz	??_main& (0+255),f,b
   937   001C12  D7FC               	bra	u4047
   938   001C14  2FBA               	decfsz	(??_main+1)& (0+255),f,b
   939   001C16  D7FA               	bra	u4047
   940   001C18  D000               	nop2	
   941   001C1A                     
   942                           ;mainselec.c: 146:         Lcd_Clear();
   943   001C1A  EC65  F01A         	call	_Lcd_Clear	;wreg free
   944   001C1E                     
   945                           ;mainselec.c: 147:     if(PORTBbits.RB0 == 0){
   946   001C1E  B081               	btfsc	129,0,c	;volatile
   947   001C20  EF14  F00E         	goto	u3891
   948   001C24  EF16  F00E         	goto	u3890
   949   001C28                     u3891:
   950   001C28  EF99  F00E         	goto	l61
   951   001C2C                     u3890:
   952   001C2C                     l3829:
   953                           
   954                           ;mainselec.c: 149:         set_adc();
   955   001C2C  EC52  F01A         	call	_set_adc	;wreg free
   956   001C30                     
   957                           ;mainselec.c: 150:         ADCON0bits.GO_DONE = 1;
   958   001C30  82C2               	bsf	194,1,c	;volatile
   959   001C32                     l63:
   960   001C32  B2C2               	btfsc	194,1,c	;volatile
   961   001C34  EF1E  F00E         	goto	u3901
   962   001C38  EF20  F00E         	goto	u3900
   963   001C3C                     u3901:
   964   001C3C  EF19  F00E         	goto	l63
   965   001C40                     u3900:
   966   001C40                     
   967                           ;mainselec.c: 152:         v_adc = (int)((ADRESH << 8) + ADRESL);
   968   001C40  50C4               	movf	196,w,c	;volatile
   969   001C42  0100               	movlb	0	; () banked
   970   001C44  6FBA               	movwf	(??_main+1)& (0+255),b
   971   001C46  6BB9               	clrf	??_main& (0+255),b
   972   001C48  50C3               	movf	195,w,c	;volatile
   973   001C4A  25B9               	addwf	??_main& (0+255),w,b
   974   001C4C  6FCB               	movwf	_v_adc& (0+255),b
   975   001C4E  0E00               	movlw	0
   976   001C50  21BA               	addwfc	(??_main+1)& (0+255),w,b
   977   001C52  6FCC               	movwf	(_v_adc+1)& (0+255),b
   978   001C54                     
   979                           ; BSR set to: 0
   980                           ;mainselec.c: 153:         volt = (float)((v_adc*5.0)/1023.0);
   981   001C54  0E00               	movlw	0
   982   001C56  6E13               	movwf	___flmul@a^0,c
   983   001C58  0E00               	movlw	0
   984   001C5A  6E14               	movwf	(___flmul@a+1)^0,c
   985   001C5C  0EA0               	movlw	160
   986   001C5E  6E15               	movwf	(___flmul@a+2)^0,c
   987   001C60  0E40               	movlw	64
   988   001C62  6E16               	movwf	(___flmul@a+3)^0,c
   989   001C64  C0CB  F001         	movff	_v_adc,___xxtofl@val
   990   001C68  C0CC  F002         	movff	_v_adc+1,___xxtofl@val+1
   991   001C6C  0E00               	movlw	0
   992   001C6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
   993   001C70  0EFF               	movlw	-1
   994   001C72  6E03               	movwf	(___xxtofl@val+2)^0,c
   995   001C74  6E04               	movwf	(___xxtofl@val+3)^0,c
   996   001C76  0E01               	movlw	1
   997   001C78  ECF2  F013         	call	___xxtofl
   998   001C7C  C001  F00F         	movff	?___xxtofl,___flmul@b
   999   001C80  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1000   001C84  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1001   001C88  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1002   001C8C  ECB5  F00B         	call	___flmul	;wreg free
  1003   001C90  C00F  F028         	movff	?___flmul,___fldiv@b
  1004   001C94  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1005   001C98  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1006   001C9C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1007   001CA0  0E00               	movlw	0
  1008   001CA2  6E2C               	movwf	___fldiv@a^0,c
  1009   001CA4  0EC0               	movlw	192
  1010   001CA6  6E2D               	movwf	(___fldiv@a+1)^0,c
  1011   001CA8  0E7F               	movlw	127
  1012   001CAA  6E2E               	movwf	(___fldiv@a+2)^0,c
  1013   001CAC  0E44               	movlw	68
  1014   001CAE  6E2F               	movwf	(___fldiv@a+3)^0,c
  1015   001CB0  ECAF  F00F         	call	___fldiv	;wreg free
  1016   001CB4  C028  F0C3         	movff	?___fldiv,_volt
  1017   001CB8  C029  F0C4         	movff	?___fldiv+1,_volt+1
  1018   001CBC  C02A  F0C5         	movff	?___fldiv+2,_volt+2
  1019   001CC0  C02B  F0C6         	movff	?___fldiv+3,_volt+3
  1020   001CC4                     
  1021                           ;mainselec.c: 154:         Lcd_Set_Cursor(1,1);
  1022   001CC4  0E01               	movlw	1
  1023   001CC6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1024   001CC8  0E01               	movlw	1
  1025   001CCA  EC50  F016         	call	_Lcd_Set_Cursor
  1026   001CCE                     
  1027                           ;mainselec.c: 155:         Lcd_Write_String("La Lectura: ");
  1028   001CCE  0E0F               	movlw	low STR_4
  1029   001CD0  6E05               	movwf	Lcd_Write_String@a^0,c
  1030   001CD2  0E08               	movlw	high STR_4
  1031   001CD4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1032   001CD6  EC17  F018         	call	_Lcd_Write_String	;wreg free
  1033   001CDA                     
  1034                           ;mainselec.c: 156:         Lcd_Set_Cursor(2,1);
  1035   001CDA  0E01               	movlw	1
  1036   001CDC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1037   001CDE  0E02               	movlw	2
  1038   001CE0  EC50  F016         	call	_Lcd_Set_Cursor
  1039   001CE4                     
  1040                           ;mainselec.c: 157:         sprintf(buffer,"Voltaje %0.2f", volt);
  1041   001CE4  0ECE               	movlw	low _buffer
  1042   001CE6  0100               	movlb	0	; () banked
  1043   001CE8  6FA3               	movwf	sprintf@s& (0+255),b
  1044   001CEA  0E00               	movlw	high _buffer
  1045   001CEC  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  1046   001CEE  0E01               	movlw	low STR_5
  1047   001CF0  6FA5               	movwf	sprintf@fmt& (0+255),b
  1048   001CF2  0E08               	movlw	high STR_5
  1049   001CF4  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  1050   001CF6  C0C3  F0A7         	movff	_volt,?_sprintf+4
  1051   001CFA  C0C4  F0A8         	movff	_volt+1,?_sprintf+5
  1052   001CFE  C0C5  F0A9         	movff	_volt+2,?_sprintf+6
  1053   001D02  C0C6  F0AA         	movff	_volt+3,?_sprintf+7
  1054   001D06  EC1D  F019         	call	_sprintf	;wreg free
  1055   001D0A                     
  1056                           ;mainselec.c: 158:         Lcd_Write_String(buffer);
  1057   001D0A  0ECE               	movlw	low _buffer
  1058   001D0C  6E05               	movwf	Lcd_Write_String@a^0,c
  1059   001D0E  0E00               	movlw	high _buffer
  1060   001D10  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1061   001D12  EC17  F018         	call	_Lcd_Write_String	;wreg free
  1062   001D16                     
  1063                           ;mainselec.c: 159:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1064   001D16  0E02               	movlw	2
  1065   001D18  0100               	movlb	0	; () banked
  1066   001D1A  6FBA               	movwf	(??_main+1)& (0+255),b
  1067   001D1C  0E86               	movlw	134
  1068   001D1E  6FB9               	movwf	??_main& (0+255),b
  1069   001D20  0E99               	movlw	153
  1070   001D22                     u4057:
  1071   001D22  2EE8               	decfsz	wreg,f,c
  1072   001D24  D7FE               	bra	u4057
  1073   001D26  2FB9               	decfsz	??_main& (0+255),f,b
  1074   001D28  D7FC               	bra	u4057
  1075   001D2A  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1076   001D2C  D7FA               	bra	u4057
  1077   001D2E  EF16  F00E         	goto	l3829
  1078   001D32                     l61:
  1079   001D32  B281               	btfsc	129,1,c	;volatile
  1080   001D34  EF9E  F00E         	goto	u3911
  1081   001D38  EFA0  F00E         	goto	u3910
  1082   001D3C                     u3911:
  1083   001D3C  EF23  F00F         	goto	l69
  1084   001D40                     u3910:
  1085   001D40                     l3849:
  1086                           
  1087                           ;mainselec.c: 164:         set_adc1();
  1088   001D40  EC47  F01A         	call	_set_adc1	;wreg free
  1089   001D44                     
  1090                           ;mainselec.c: 165:         ADCON0bits.GO_DONE = 1;
  1091   001D44  82C2               	bsf	194,1,c	;volatile
  1092   001D46                     l71:
  1093   001D46  B2C2               	btfsc	194,1,c	;volatile
  1094   001D48  EFA8  F00E         	goto	u3921
  1095   001D4C  EFAA  F00E         	goto	u3920
  1096   001D50                     u3921:
  1097   001D50  EFA3  F00E         	goto	l71
  1098   001D54                     u3920:
  1099   001D54                     
  1100                           ;mainselec.c: 167:         v_adc = (int)((ADRESH << 8) + ADRESL);
  1101   001D54  50C4               	movf	196,w,c	;volatile
  1102   001D56  0100               	movlb	0	; () banked
  1103   001D58  6FBA               	movwf	(??_main+1)& (0+255),b
  1104   001D5A  6BB9               	clrf	??_main& (0+255),b
  1105   001D5C  50C3               	movf	195,w,c	;volatile
  1106   001D5E  25B9               	addwf	??_main& (0+255),w,b
  1107   001D60  6FCB               	movwf	_v_adc& (0+255),b
  1108   001D62  0E00               	movlw	0
  1109   001D64  21BA               	addwfc	(??_main+1)& (0+255),w,b
  1110   001D66  6FCC               	movwf	(_v_adc+1)& (0+255),b
  1111   001D68                     
  1112                           ; BSR set to: 0
  1113                           ;mainselec.c: 168:         volt = (float)((v_adc*5.0)/1023.0);
  1114   001D68  0E00               	movlw	0
  1115   001D6A  6E13               	movwf	___flmul@a^0,c
  1116   001D6C  0E00               	movlw	0
  1117   001D6E  6E14               	movwf	(___flmul@a+1)^0,c
  1118   001D70  0EA0               	movlw	160
  1119   001D72  6E15               	movwf	(___flmul@a+2)^0,c
  1120   001D74  0E40               	movlw	64
  1121   001D76  6E16               	movwf	(___flmul@a+3)^0,c
  1122   001D78  C0CB  F001         	movff	_v_adc,___xxtofl@val
  1123   001D7C  C0CC  F002         	movff	_v_adc+1,___xxtofl@val+1
  1124   001D80  0E00               	movlw	0
  1125   001D82  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1126   001D84  0EFF               	movlw	-1
  1127   001D86  6E03               	movwf	(___xxtofl@val+2)^0,c
  1128   001D88  6E04               	movwf	(___xxtofl@val+3)^0,c
  1129   001D8A  0E01               	movlw	1
  1130   001D8C  ECF2  F013         	call	___xxtofl
  1131   001D90  C001  F00F         	movff	?___xxtofl,___flmul@b
  1132   001D94  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1133   001D98  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1134   001D9C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1135   001DA0  ECB5  F00B         	call	___flmul	;wreg free
  1136   001DA4  C00F  F028         	movff	?___flmul,___fldiv@b
  1137   001DA8  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1138   001DAC  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1139   001DB0  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1140   001DB4  0E00               	movlw	0
  1141   001DB6  6E2C               	movwf	___fldiv@a^0,c
  1142   001DB8  0EC0               	movlw	192
  1143   001DBA  6E2D               	movwf	(___fldiv@a+1)^0,c
  1144   001DBC  0E7F               	movlw	127
  1145   001DBE  6E2E               	movwf	(___fldiv@a+2)^0,c
  1146   001DC0  0E44               	movlw	68
  1147   001DC2  6E2F               	movwf	(___fldiv@a+3)^0,c
  1148   001DC4  ECAF  F00F         	call	___fldiv	;wreg free
  1149   001DC8  C028  F0C3         	movff	?___fldiv,_volt
  1150   001DCC  C029  F0C4         	movff	?___fldiv+1,_volt+1
  1151   001DD0  C02A  F0C5         	movff	?___fldiv+2,_volt+2
  1152   001DD4  C02B  F0C6         	movff	?___fldiv+3,_volt+3
  1153   001DD8                     
  1154                           ;mainselec.c: 169:         Lcd_Set_Cursor(1,1);
  1155   001DD8  0E01               	movlw	1
  1156   001DDA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1157   001DDC  0E01               	movlw	1
  1158   001DDE  EC50  F016         	call	_Lcd_Set_Cursor
  1159   001DE2                     
  1160                           ;mainselec.c: 170:         Lcd_Write_String("La Lectura: ");
  1161   001DE2  0E0F               	movlw	low STR_4
  1162   001DE4  6E05               	movwf	Lcd_Write_String@a^0,c
  1163   001DE6  0E08               	movlw	high STR_4
  1164   001DE8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1165   001DEA  EC17  F018         	call	_Lcd_Write_String	;wreg free
  1166   001DEE                     
  1167                           ;mainselec.c: 171:         Lcd_Set_Cursor(2,1);
  1168   001DEE  0E01               	movlw	1
  1169   001DF0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1170   001DF2  0E02               	movlw	2
  1171   001DF4  EC50  F016         	call	_Lcd_Set_Cursor
  1172   001DF8                     
  1173                           ;mainselec.c: 172:         sprintf(buffer,"Voltaje %0.2f", volt);
  1174   001DF8  0ECE               	movlw	low _buffer
  1175   001DFA  0100               	movlb	0	; () banked
  1176   001DFC  6FA3               	movwf	sprintf@s& (0+255),b
  1177   001DFE  0E00               	movlw	high _buffer
  1178   001E00  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  1179   001E02  0E01               	movlw	low STR_5
  1180   001E04  6FA5               	movwf	sprintf@fmt& (0+255),b
  1181   001E06  0E08               	movlw	high STR_5
  1182   001E08  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  1183   001E0A  C0C3  F0A7         	movff	_volt,?_sprintf+4
  1184   001E0E  C0C4  F0A8         	movff	_volt+1,?_sprintf+5
  1185   001E12  C0C5  F0A9         	movff	_volt+2,?_sprintf+6
  1186   001E16  C0C6  F0AA         	movff	_volt+3,?_sprintf+7
  1187   001E1A  EC1D  F019         	call	_sprintf	;wreg free
  1188   001E1E                     
  1189                           ;mainselec.c: 173:         Lcd_Write_String(buffer);
  1190   001E1E  0ECE               	movlw	low _buffer
  1191   001E20  6E05               	movwf	Lcd_Write_String@a^0,c
  1192   001E22  0E00               	movlw	high _buffer
  1193   001E24  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1194   001E26  EC17  F018         	call	_Lcd_Write_String	;wreg free
  1195   001E2A                     
  1196                           ;mainselec.c: 174:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1197   001E2A  0E02               	movlw	2
  1198   001E2C  0100               	movlb	0	; () banked
  1199   001E2E  6FBA               	movwf	(??_main+1)& (0+255),b
  1200   001E30  0E86               	movlw	134
  1201   001E32  6FB9               	movwf	??_main& (0+255),b
  1202   001E34  0E99               	movlw	153
  1203   001E36                     u4067:
  1204   001E36  2EE8               	decfsz	wreg,f,c
  1205   001E38  D7FE               	bra	u4067
  1206   001E3A  2FB9               	decfsz	??_main& (0+255),f,b
  1207   001E3C  D7FC               	bra	u4067
  1208   001E3E  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1209   001E40  D7FA               	bra	u4067
  1210   001E42  EFA0  F00E         	goto	l3849
  1211   001E46                     l69:
  1212   001E46  B481               	btfsc	129,2,c	;volatile
  1213   001E48  EF28  F00F         	goto	u3931
  1214   001E4C  EF2A  F00F         	goto	u3930
  1215   001E50                     u3931:
  1216   001E50  EFAD  F00F         	goto	l84
  1217   001E54                     u3930:
  1218   001E54                     l3869:
  1219                           
  1220                           ;mainselec.c: 179:         set_adc2();
  1221   001E54  EC3C  F01A         	call	_set_adc2	;wreg free
  1222   001E58                     
  1223                           ;mainselec.c: 180:         ADCON0bits.GO_DONE = 1;
  1224   001E58  82C2               	bsf	194,1,c	;volatile
  1225   001E5A                     l79:
  1226   001E5A  B2C2               	btfsc	194,1,c	;volatile
  1227   001E5C  EF32  F00F         	goto	u3941
  1228   001E60  EF34  F00F         	goto	u3940
  1229   001E64                     u3941:
  1230   001E64  EF2D  F00F         	goto	l79
  1231   001E68                     u3940:
  1232   001E68                     
  1233                           ;mainselec.c: 182:         v_adc = (int)((ADRESH << 8) + ADRESL);
  1234   001E68  50C4               	movf	196,w,c	;volatile
  1235   001E6A  0100               	movlb	0	; () banked
  1236   001E6C  6FBA               	movwf	(??_main+1)& (0+255),b
  1237   001E6E  6BB9               	clrf	??_main& (0+255),b
  1238   001E70  50C3               	movf	195,w,c	;volatile
  1239   001E72  25B9               	addwf	??_main& (0+255),w,b
  1240   001E74  6FCB               	movwf	_v_adc& (0+255),b
  1241   001E76  0E00               	movlw	0
  1242   001E78  21BA               	addwfc	(??_main+1)& (0+255),w,b
  1243   001E7A  6FCC               	movwf	(_v_adc+1)& (0+255),b
  1244   001E7C                     
  1245                           ; BSR set to: 0
  1246                           ;mainselec.c: 183:         volt = (float)((v_adc*5.0)/1023.0);
  1247   001E7C  0E00               	movlw	0
  1248   001E7E  6E13               	movwf	___flmul@a^0,c
  1249   001E80  0E00               	movlw	0
  1250   001E82  6E14               	movwf	(___flmul@a+1)^0,c
  1251   001E84  0EA0               	movlw	160
  1252   001E86  6E15               	movwf	(___flmul@a+2)^0,c
  1253   001E88  0E40               	movlw	64
  1254   001E8A  6E16               	movwf	(___flmul@a+3)^0,c
  1255   001E8C  C0CB  F001         	movff	_v_adc,___xxtofl@val
  1256   001E90  C0CC  F002         	movff	_v_adc+1,___xxtofl@val+1
  1257   001E94  0E00               	movlw	0
  1258   001E96  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1259   001E98  0EFF               	movlw	-1
  1260   001E9A  6E03               	movwf	(___xxtofl@val+2)^0,c
  1261   001E9C  6E04               	movwf	(___xxtofl@val+3)^0,c
  1262   001E9E  0E01               	movlw	1
  1263   001EA0  ECF2  F013         	call	___xxtofl
  1264   001EA4  C001  F00F         	movff	?___xxtofl,___flmul@b
  1265   001EA8  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1266   001EAC  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1267   001EB0  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1268   001EB4  ECB5  F00B         	call	___flmul	;wreg free
  1269   001EB8  C00F  F028         	movff	?___flmul,___fldiv@b
  1270   001EBC  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  1271   001EC0  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  1272   001EC4  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  1273   001EC8  0E00               	movlw	0
  1274   001ECA  6E2C               	movwf	___fldiv@a^0,c
  1275   001ECC  0EC0               	movlw	192
  1276   001ECE  6E2D               	movwf	(___fldiv@a+1)^0,c
  1277   001ED0  0E7F               	movlw	127
  1278   001ED2  6E2E               	movwf	(___fldiv@a+2)^0,c
  1279   001ED4  0E44               	movlw	68
  1280   001ED6  6E2F               	movwf	(___fldiv@a+3)^0,c
  1281   001ED8  ECAF  F00F         	call	___fldiv	;wreg free
  1282   001EDC  C028  F0C3         	movff	?___fldiv,_volt
  1283   001EE0  C029  F0C4         	movff	?___fldiv+1,_volt+1
  1284   001EE4  C02A  F0C5         	movff	?___fldiv+2,_volt+2
  1285   001EE8  C02B  F0C6         	movff	?___fldiv+3,_volt+3
  1286   001EEC                     
  1287                           ;mainselec.c: 184:         Lcd_Set_Cursor(1,1);
  1288   001EEC  0E01               	movlw	1
  1289   001EEE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1290   001EF0  0E01               	movlw	1
  1291   001EF2  EC50  F016         	call	_Lcd_Set_Cursor
  1292   001EF6                     
  1293                           ;mainselec.c: 185:         Lcd_Write_String("La Lectura: ");
  1294   001EF6  0E0F               	movlw	low STR_4
  1295   001EF8  6E05               	movwf	Lcd_Write_String@a^0,c
  1296   001EFA  0E08               	movlw	high STR_4
  1297   001EFC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1298   001EFE  EC17  F018         	call	_Lcd_Write_String	;wreg free
  1299   001F02                     
  1300                           ;mainselec.c: 186:         Lcd_Set_Cursor(2,1);
  1301   001F02  0E01               	movlw	1
  1302   001F04  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  1303   001F06  0E02               	movlw	2
  1304   001F08  EC50  F016         	call	_Lcd_Set_Cursor
  1305   001F0C                     
  1306                           ;mainselec.c: 187:         sprintf(buffer,"Voltaje %0.2f", volt);
  1307   001F0C  0ECE               	movlw	low _buffer
  1308   001F0E  0100               	movlb	0	; () banked
  1309   001F10  6FA3               	movwf	sprintf@s& (0+255),b
  1310   001F12  0E00               	movlw	high _buffer
  1311   001F14  6FA4               	movwf	(sprintf@s+1)& (0+255),b
  1312   001F16  0E01               	movlw	low STR_5
  1313   001F18  6FA5               	movwf	sprintf@fmt& (0+255),b
  1314   001F1A  0E08               	movlw	high STR_5
  1315   001F1C  6FA6               	movwf	(sprintf@fmt+1)& (0+255),b
  1316   001F1E  C0C3  F0A7         	movff	_volt,?_sprintf+4
  1317   001F22  C0C4  F0A8         	movff	_volt+1,?_sprintf+5
  1318   001F26  C0C5  F0A9         	movff	_volt+2,?_sprintf+6
  1319   001F2A  C0C6  F0AA         	movff	_volt+3,?_sprintf+7
  1320   001F2E  EC1D  F019         	call	_sprintf	;wreg free
  1321   001F32                     
  1322                           ;mainselec.c: 188:         Lcd_Write_String(buffer);
  1323   001F32  0ECE               	movlw	low _buffer
  1324   001F34  6E05               	movwf	Lcd_Write_String@a^0,c
  1325   001F36  0E00               	movlw	high _buffer
  1326   001F38  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  1327   001F3A  EC17  F018         	call	_Lcd_Write_String	;wreg free
  1328   001F3E                     
  1329                           ;mainselec.c: 189:         _delay((unsigned long)((100)*(12000000/4000.0)));
  1330   001F3E  0E02               	movlw	2
  1331   001F40  0100               	movlb	0	; () banked
  1332   001F42  6FBA               	movwf	(??_main+1)& (0+255),b
  1333   001F44  0E86               	movlw	134
  1334   001F46  6FB9               	movwf	??_main& (0+255),b
  1335   001F48  0E99               	movlw	153
  1336   001F4A                     u4077:
  1337   001F4A  2EE8               	decfsz	wreg,f,c
  1338   001F4C  D7FE               	bra	u4077
  1339   001F4E  2FB9               	decfsz	??_main& (0+255),f,b
  1340   001F50  D7FC               	bra	u4077
  1341   001F52  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1342   001F54  D7FA               	bra	u4077
  1343   001F56  EF2A  F00F         	goto	l3869
  1344   001F5A                     l84:
  1345   001F5A  EF00  F000         	goto	start
  1346   001F5E                     __end_of_main:
  1347                           	callstack 0
  1348                           
  1349 ;; *************** function _sprintf *****************
  1350 ;; Defined at:
  1351 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  s               2   67[BANK0 ] PTR unsigned char 
  1354 ;;		 -> buffer(20), 
  1355 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
  1356 ;;		 -> STR_9(14), STR_7(14), STR_5(14), 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  f              12   77[BANK0 ] struct _IO_FILE
  1359 ;;  ap              2   75[BANK0 ] PTR void [1]
  1360 ;;		 -> ?_sprintf(2), 
  1361 ;;  ret             2    0        int 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  2   67[BANK0 ] int 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1371 ;;      Params:         0       8       0       0       0       0       0       0       0
  1372 ;;      Locals:         0      14       0       0       0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1374 ;;      Totals:         0      22       0       0       0       0       0       0       0
  1375 ;;Total ram usage:       22 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 7
  1378 ;; This function calls:
  1379 ;;		_vfprintf
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text1
  1386   00323A                     __ptext1:
  1387                           	callstack 0
  1388   00323A                     _sprintf:
  1389                           	callstack 23
  1390   00323A  0EA7               	movlw	low (?_sprintf+4)
  1391   00323C  0100               	movlb	0	; () banked
  1392   00323E  6FAB               	movwf	sprintf@ap& (0+255),b
  1393   003240  0E00               	movlw	high (?_sprintf+4)
  1394   003242  6FAC               	movwf	(sprintf@ap+1)& (0+255),b
  1395   003244  C0A3  F0AD         	movff	sprintf@s,sprintf@f
  1396   003248  C0A4  F0AE         	movff	sprintf@s+1,sprintf@f+1
  1397   00324C                     
  1398                           ; BSR set to: 0
  1399   00324C  0E00               	movlw	0
  1400   00324E  6FB1               	movwf	(sprintf@f+4)& (0+255),b
  1401   003250  0E00               	movlw	0
  1402   003252  6FB0               	movwf	(sprintf@f+3)& (0+255),b
  1403   003254                     
  1404                           ; BSR set to: 0
  1405   003254  0E00               	movlw	0
  1406   003256  6FB8               	movwf	(sprintf@f+11)& (0+255),b
  1407   003258  0E00               	movlw	0
  1408   00325A  6FB7               	movwf	(sprintf@f+10)& (0+255),b
  1409   00325C                     
  1410                           ; BSR set to: 0
  1411   00325C  0EAD               	movlw	low sprintf@f
  1412   00325E  6F9B               	movwf	vfprintf@fp& (0+255),b
  1413   003260  0E00               	movlw	high sprintf@f
  1414   003262  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
  1415   003264  C0A5  F09D         	movff	sprintf@fmt,vfprintf@fmt
  1416   003268  C0A6  F09E         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1417   00326C  0EAB               	movlw	low sprintf@ap
  1418   00326E  6F9F               	movwf	vfprintf@ap& (0+255),b
  1419   003270  0E00               	movlw	high sprintf@ap
  1420   003272  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
  1421   003274  ECF4  F018         	call	_vfprintf	;wreg free
  1422   003278  0100               	movlb	0	; () banked
  1423   00327A  51B0               	movf	(sprintf@f+3)& (0+255),w,b
  1424   00327C  25A3               	addwf	sprintf@s& (0+255),w,b
  1425   00327E  6ED9               	movwf	fsr2l,c
  1426   003280  51B1               	movf	(sprintf@f+4)& (0+255),w,b
  1427   003282  21A4               	addwfc	(sprintf@s+1)& (0+255),w,b
  1428   003284  6EDA               	movwf	fsr2h,c
  1429   003286  6ADF               	clrf	indf2,c
  1430   003288                     
  1431                           ; BSR set to: 0
  1432   003288  0012               	return		;funcret
  1433   00328A                     __end_of_sprintf:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _vfprintf *****************
  1437 ;; Defined at:
  1438 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  1441 ;;		 -> sprintf@f(12), 
  1442 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  1443 ;;		 -> STR_9(14), STR_7(14), STR_5(14), 
  1444 ;;  ap              2   63[BANK0 ] PTR PTR void 
  1445 ;;		 -> sprintf@ap(2), 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  1448 ;;		 -> STR_9(14), STR_7(14), STR_5(14), 
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  2   59[BANK0 ] int 
  1451 ;; Registers used:
  1452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1458 ;;      Params:         0       6       0       0       0       0       0       0       0
  1459 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1461 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1462 ;;Total ram usage:        8 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 6
  1465 ;; This function calls:
  1466 ;;		_vfpfcnvrt
  1467 ;; This function is called by:
  1468 ;;		_sprintf
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text2
  1473   0031E8                     __ptext2:
  1474                           	callstack 0
  1475   0031E8                     _vfprintf:
  1476                           	callstack 23
  1477   0031E8                     
  1478                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1479   0031E8  C09D  F0A1         	movff	vfprintf@fmt,vfprintf@cfmt
  1480   0031EC  C09E  F0A2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1483   0031F0  EF09  F019         	goto	l3645
  1484   0031F4                     l3643:
  1485                           
  1486                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1487   0031F4  C09B  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1488   0031F8  C09C  F08D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1489   0031FC  0EA1               	movlw	low vfprintf@cfmt
  1490   0031FE  0100               	movlb	0	; () banked
  1491   003200  6F8E               	movwf	vfpfcnvrt@fmt& (0+255),b
  1492   003202  0E00               	movlw	high vfprintf@cfmt
  1493   003204  6F8F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1494   003206  C09F  F090         	movff	vfprintf@ap,vfpfcnvrt@ap
  1495   00320A  C0A0  F091         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1496   00320E  EC7C  F011         	call	_vfpfcnvrt	;wreg free
  1497   003212                     l3645:
  1498                           
  1499                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1500   003212  C0A1  FFF6         	movff	vfprintf@cfmt,tblptrl
  1501   003216  C0A2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1502   00321A                     	if	0	;tblptru may be non-zero
  1503   00321A                     	endif
  1504   00321A                     	if	0	;tblptru may be non-zero
  1505   00321A                     	endif
  1506   00321A  0008               	tblrd		*
  1507   00321C  50F5               	movf	tablat,w,c
  1508   00321E  0900               	iorlw	0
  1509   003220  A4D8               	btfss	status,2,c
  1510   003222  EF15  F019         	goto	u3711
  1511   003226  EF17  F019         	goto	u3710
  1512   00322A                     u3711:
  1513   00322A  EFFA  F018         	goto	l3643
  1514   00322E                     u3710:
  1515   00322E                     
  1516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1517   00322E  0E00               	movlw	0
  1518   003230  0100               	movlb	0	; () banked
  1519   003232  6F9C               	movwf	(?_vfprintf+1)& (0+255),b
  1520   003234  0E00               	movlw	0
  1521   003236  6F9B               	movwf	?_vfprintf& (0+255),b
  1522   003238                     
  1523                           ; BSR set to: 0
  1524   003238  0012               	return		;funcret
  1525   00323A                     __end_of_vfprintf:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _vfpfcnvrt *****************
  1529 ;; Defined at:
  1530 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1533 ;;		 -> sprintf@f(12), 
  1534 ;;  fmt             2   46[BANK0 ] PTR PTR unsigned char 
  1535 ;;		 -> vfprintf@cfmt(2), 
  1536 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1537 ;;		 -> sprintf@ap(2), 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  convarg         4   50[BANK0 ] struct .
  1540 ;;  cp              2   57[BANK0 ] PTR unsigned char 
  1541 ;;		 -> STR_9(14), STR_7(14), STR_5(14), 
  1542 ;;  done            2   54[BANK0 ] int 
  1543 ;;  i               2    0        int 
  1544 ;;  c               1   56[BANK0 ] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1554 ;;      Params:         0       6       0       0       0       0       0       0       0
  1555 ;;      Locals:         0       9       0       0       0       0       0       0       0
  1556 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1557 ;;      Totals:         2      15       0       0       0       0       0       0       0
  1558 ;;Total ram usage:       17 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 5
  1561 ;; This function calls:
  1562 ;;		_efgtoa
  1563 ;;		_fputc
  1564 ;;		_read_prec_or_width
  1565 ;; This function is called by:
  1566 ;;		_vfprintf
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text3
  1571   0022F8                     __ptext3:
  1572                           	callstack 0
  1573   0022F8                     _vfpfcnvrt:
  1574                           	callstack 23
  1575   0022F8                     
  1576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1577   0022F8  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1578   0022FC  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1579   002300  CFDE FFF6          	movff	postinc2,tblptrl
  1580   002304  CFDD FFF7          	movff	postdec2,tblptrh
  1581   002308                     	if	0	;tblptru may be non-zero
  1582   002308                     	endif
  1583   002308                     	if	0	;tblptru may be non-zero
  1584   002308                     	endif
  1585   002308  0008               	tblrd		*
  1586   00230A  50F5               	movf	tablat,w,c
  1587   00230C  0A25               	xorlw	37
  1588   00230E  A4D8               	btfss	status,2,c
  1589   002310  EF8C  F011         	goto	u3671
  1590   002314  EF8E  F011         	goto	u3670
  1591   002318                     u3671:
  1592   002318  EFD4  F012         	goto	l3589
  1593   00231C                     u3670:
  1594   00231C                     
  1595                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1596   00231C  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1597   002320  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1598   002324  2ADE               	incf	postinc2,f,c
  1599   002326  0E00               	movlw	0
  1600   002328  22DD               	addwfc	postdec2,f,c
  1601   00232A                     
  1602                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1603   00232A  0E00               	movlw	0
  1604   00232C  0100               	movlb	0	; () banked
  1605   00232E  6FC8               	movwf	(_width+1)& (0+255),b
  1606   002330  0E00               	movlw	0
  1607   002332  6FC7               	movwf	_width& (0+255),b
  1608   002334  C0C7  F0CD         	movff	_width,_flags
  1609   002338                     
  1610                           ; BSR set to: 0
  1611                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1612   002338  69C9               	setf	_prec& (0+255),b
  1613   00233A  69CA               	setf	(_prec+1)& (0+255),b
  1614   00233C                     
  1615                           ; BSR set to: 0
  1616                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1070:         don
      +                          e = 0;
  1617   00233C  0E00               	movlw	0
  1618   00233E  6F97               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1619   002340  0E00               	movlw	0
  1620   002342  6F96               	movwf	vfpfcnvrt@done& (0+255),b
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1623   002344  EFCE  F011         	goto	l3543
  1624   002348                     l3533:
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1081:            
      +                                   flags |= (1 << 1);
  1628   002348  83CD               	bsf	_flags& (0+255),1,b
  1629   00234A                     
  1630                           ; BSR set to: 0
  1631                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1082:            
      +                                   ++*fmt;
  1632   00234A  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1633   00234E  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1634   002352  2ADE               	incf	postinc2,f,c
  1635   002354  0E00               	movlw	0
  1636   002356  22DD               	addwfc	postdec2,f,c
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1083:            
      +                                   break;
  1639   002358  EFCE  F011         	goto	l3543
  1640   00235C                     l3537:
  1641                           
  1642                           ; BSR set to: 0
  1643                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1104:            
      +                                   done = 1;
  1644   00235C  0E00               	movlw	0
  1645   00235E  6F97               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1646   002360  0E01               	movlw	1
  1647   002362  6F96               	movwf	vfpfcnvrt@done& (0+255),b
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1105:            
      +                                   break;
  1650   002364  EFCE  F011         	goto	l3543
  1651   002368                     l3541:
  1652                           
  1653                           ; BSR set to: 0
  1654   002368  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1655   00236C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1656   002370  CFDE FFF6          	movff	postinc2,tblptrl
  1657   002374  CFDD FFF7          	movff	postdec2,tblptrh
  1658   002378                     	if	0	;tblptru may be non-zero
  1659   002378                     	endif
  1660   002378                     	if	0	;tblptru may be non-zero
  1661   002378                     	endif
  1662   002378  0008               	tblrd		*
  1663   00237A  50F5               	movf	tablat,w,c
  1664   00237C  6E5E               	movwf	??_vfpfcnvrt^0,c
  1665   00237E  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1666                           
  1667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1668                           ; Switch size 1, requested type "simple"
  1669                           ; Number of cases is 1, Range of values is 0 to 0
  1670                           ; switch strategies available:
  1671                           ; Name         Instructions Cycles
  1672                           ; simple_byte            4     3 (average)
  1673                           ;	Chosen strategy is simple_byte
  1674   002380  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1675   002382  0A00               	xorlw	0	; case 0
  1676   002384  B4D8               	btfsc	status,2,c
  1677   002386  EFC7  F011         	goto	l4127
  1678   00238A  EFAE  F011         	goto	l3537
  1679   00238E                     l4127:
  1680                           
  1681                           ; BSR set to: 0
  1682                           ; Switch size 1, requested type "simple"
  1683                           ; Number of cases is 1, Range of values is 48 to 48
  1684                           ; switch strategies available:
  1685                           ; Name         Instructions Cycles
  1686                           ; simple_byte            4     3 (average)
  1687                           ;	Chosen strategy is simple_byte
  1688   00238E  505E               	movf	??_vfpfcnvrt^0,w,c
  1689   002390  0A30               	xorlw	48	; case 48
  1690   002392  B4D8               	btfsc	status,2,c
  1691   002394  EFA4  F011         	goto	l3533
  1692   002398  EFAE  F011         	goto	l3537
  1693   00239C                     l3543:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1071:         whi
      +                          le (!done) {
  1697   00239C  5196               	movf	vfpfcnvrt@done& (0+255),w,b
  1698   00239E  1197               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1699   0023A0  B4D8               	btfsc	status,2,c
  1700   0023A2  EFD5  F011         	goto	u3681
  1701   0023A6  EFD7  F011         	goto	u3680
  1702   0023AA                     u3681:
  1703   0023AA  EFB4  F011         	goto	l3541
  1704   0023AE                     u3680:
  1705   0023AE                     
  1706                           ; BSR set to: 0
  1707                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1126:         if 
      +                          ((*fmt)[0] == '.') {
  1708   0023AE  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1709   0023B2  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1710   0023B6  CFDE FFF6          	movff	postinc2,tblptrl
  1711   0023BA  CFDD FFF7          	movff	postdec2,tblptrh
  1712   0023BE                     	if	0	;tblptru may be non-zero
  1713   0023BE                     	endif
  1714   0023BE                     	if	0	;tblptru may be non-zero
  1715   0023BE                     	endif
  1716   0023BE  0008               	tblrd		*
  1717   0023C0  50F5               	movf	tablat,w,c
  1718   0023C2  0A2E               	xorlw	46
  1719   0023C4  A4D8               	btfss	status,2,c
  1720   0023C6  EFE7  F011         	goto	u3691
  1721   0023CA  EFE9  F011         	goto	u3690
  1722   0023CE                     u3691:
  1723   0023CE  EFFE  F011         	goto	l3551
  1724   0023D2                     u3690:
  1725   0023D2                     
  1726                           ; BSR set to: 0
  1727                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1127:            
      +                           ++*fmt;
  1728   0023D2  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1729   0023D6  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1730   0023DA  2ADE               	incf	postinc2,f,c
  1731   0023DC  0E00               	movlw	0
  1732   0023DE  22DD               	addwfc	postdec2,f,c
  1733   0023E0                     
  1734                           ; BSR set to: 0
  1735                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1128:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1736   0023E0  C08E  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1737   0023E4  C08F  F008         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  1738   0023E8  C090  F009         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1739   0023EC  C091  F00A         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  1740   0023F0  EC1E  F017         	call	_read_prec_or_width	;wreg free
  1741   0023F4  C007  F0C9         	movff	?_read_prec_or_width,_prec
  1742   0023F8  C008  F0CA         	movff	?_read_prec_or_width+1,_prec+1
  1743   0023FC                     l3551:
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1418:   cp = *fmt
      +                          ;
  1746   0023FC  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1747   002400  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1748   002404  CFDE F099          	movff	postinc2,vfpfcnvrt@cp
  1749   002408  CFDD F09A          	movff	postdec2,vfpfcnvrt@cp+1
  1750   00240C                     
  1751                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1419:   c = *cp;
  1752   00240C  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1753   002410  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1754   002414                     	if	0	;tblptru may be non-zero
  1755   002414                     	endif
  1756   002414                     	if	0	;tblptru may be non-zero
  1757   002414                     	endif
  1758   002414  0008               	tblrd		*
  1759   002416  CFF5 F098          	movff	tablat,vfpfcnvrt@c
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1420:   switch(c)
      +                           {
  1762   00241A  EF1B  F012         	goto	l3563
  1763   00241E                     l3555:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1424:     cp++;
  1767   00241E  4B99               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  1768   002420  2B9A               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1425:     break;
  1771   002422  EF35  F012         	goto	l3565
  1772   002426                     l3557:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1450:     c = 'l'
      +                          ;
  1776   002426  0E6C               	movlw	108
  1777   002428  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1451:     break;
  1780   00242A  EF35  F012         	goto	l3565
  1781   00242E                     l3559:
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1453:     c = 0;
  1785   00242E  0E00               	movlw	0
  1786   002430  6F98               	movwf	vfpfcnvrt@c& (0+255),b
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1454:     break;
  1789   002432  EF35  F012         	goto	l3565
  1790   002436                     l3563:
  1791   002436  0100               	movlb	0	; () banked
  1792   002438  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1793   00243A  6E5E               	movwf	??_vfpfcnvrt^0,c
  1794   00243C  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1795                           
  1796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1797                           ; Switch size 1, requested type "simple"
  1798                           ; Number of cases is 1, Range of values is 0 to 0
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte            4     3 (average)
  1802                           ;	Chosen strategy is simple_byte
  1803   00243E  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1804   002440  0A00               	xorlw	0	; case 0
  1805   002442  B4D8               	btfsc	status,2,c
  1806   002444  EF26  F012         	goto	l4129
  1807   002448  EF17  F012         	goto	l3559
  1808   00244C                     l4129:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ; Switch size 1, requested type "simple"
  1812                           ; Number of cases is 3, Range of values is 76 to 108
  1813                           ; switch strategies available:
  1814                           ; Name         Instructions Cycles
  1815                           ; simple_byte           10     6 (average)
  1816                           ;	Chosen strategy is simple_byte
  1817   00244C  505E               	movf	??_vfpfcnvrt^0,w,c
  1818   00244E  0A4C               	xorlw	76	; case 76
  1819   002450  B4D8               	btfsc	status,2,c
  1820   002452  EF0F  F012         	goto	l3555
  1821   002456  0A2A               	xorlw	42	; case 102
  1822   002458  B4D8               	btfsc	status,2,c
  1823   00245A  EF13  F012         	goto	l3557
  1824   00245E  0A0A               	xorlw	10	; case 108
  1825   002460  B4D8               	btfsc	status,2,c
  1826   002462  EF0F  F012         	goto	l3555
  1827   002466  EF17  F012         	goto	l3559
  1828   00246A                     l3565:
  1829                           
  1830                           ; BSR set to: 0
  1831   00246A  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1832   00246E  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1833   002472                     	if	0	;tblptru may be non-zero
  1834   002472                     	endif
  1835   002472                     	if	0	;tblptru may be non-zero
  1836   002472                     	endif
  1837   002472  0008               	tblrd		*
  1838   002474  50F5               	movf	tablat,w,c
  1839   002476  0A66               	xorlw	102
  1840   002478  A4D8               	btfss	status,2,c
  1841   00247A  EF41  F012         	goto	u3701
  1842   00247E  EF43  F012         	goto	u3700
  1843   002482                     u3701:
  1844   002482  EFCB  F012         	goto	l3585
  1845   002486                     u3700:
  1846   002486  EF79  F012         	goto	l3573
  1847   00248A                     l3567:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1485:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1851   00248A  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1852   00248E  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1853   002492  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  1854   002496  0E04               	movlw	4
  1855   002498  26DE               	addwf	postinc2,f,c
  1856   00249A  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  1857   00249E  0E00               	movlw	0
  1858   0024A0  22DD               	addwfc	postdec2,f,c
  1859   0024A2  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1860   0024A6  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1861   0024AA  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  1862   0024AE  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  1863   0024B2  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  1864   0024B6  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1486:      break;
  1867   0024BA  EF8E  F012         	goto	l3575
  1868   0024BE                     l3569:
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1488:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1872   0024BE  C090  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1873   0024C2  C091  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1874   0024C6  CFDF F05E          	movff	indf2,??_vfpfcnvrt
  1875   0024CA  0E04               	movlw	4
  1876   0024CC  26DE               	addwf	postinc2,f,c
  1877   0024CE  CFDF F05F          	movff	indf2,??_vfpfcnvrt+1
  1878   0024D2  0E00               	movlw	0
  1879   0024D4  22DD               	addwfc	postdec2,f,c
  1880   0024D6  C05E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1881   0024DA  C05F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1882   0024DE  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg
  1883   0024E2  CFDE F093          	movff	postinc2,vfpfcnvrt@convarg+1
  1884   0024E6  CFDE F094          	movff	postinc2,vfpfcnvrt@convarg+2
  1885   0024EA  CFDE F095          	movff	postinc2,vfpfcnvrt@convarg+3
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1489:      break;
  1888   0024EE  EF8E  F012         	goto	l3575
  1889   0024F2                     l3573:
  1890                           
  1891                           ; BSR set to: 0
  1892   0024F2  5198               	movf	vfpfcnvrt@c& (0+255),w,b
  1893   0024F4  6E5E               	movwf	??_vfpfcnvrt^0,c
  1894   0024F6  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1895                           
  1896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1897                           ; Switch size 1, requested type "simple"
  1898                           ; Number of cases is 1, Range of values is 0 to 0
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; simple_byte            4     3 (average)
  1902                           ;	Chosen strategy is simple_byte
  1903   0024F8  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1904   0024FA  0A00               	xorlw	0	; case 0
  1905   0024FC  B4D8               	btfsc	status,2,c
  1906   0024FE  EF83  F012         	goto	l4131
  1907   002502  EF8E  F012         	goto	l3575
  1908   002506                     l4131:
  1909                           
  1910                           ; BSR set to: 0
  1911                           ; Switch size 1, requested type "simple"
  1912                           ; Number of cases is 2, Range of values is 76 to 108
  1913                           ; switch strategies available:
  1914                           ; Name         Instructions Cycles
  1915                           ; simple_byte            7     4 (average)
  1916                           ;	Chosen strategy is simple_byte
  1917   002506  505E               	movf	??_vfpfcnvrt^0,w,c
  1918   002508  0A4C               	xorlw	76	; case 76
  1919   00250A  B4D8               	btfsc	status,2,c
  1920   00250C  EF5F  F012         	goto	l3569
  1921   002510  0A20               	xorlw	32	; case 108
  1922   002512  B4D8               	btfsc	status,2,c
  1923   002514  EF45  F012         	goto	l3567
  1924   002518  EF8E  F012         	goto	l3575
  1925   00251C                     l3575:
  1926                           
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1491:    *fmt = c
      +                          p+1;
  1929   00251C  0E01               	movlw	1
  1930   00251E  2599               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1931   002520  6E5E               	movwf	??_vfpfcnvrt^0,c
  1932   002522  0E00               	movlw	0
  1933   002524  219A               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1934   002526  6E5F               	movwf	(??_vfpfcnvrt+1)^0,c
  1935   002528  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1936   00252C  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1937   002530  C05E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1938   002534  C05F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1939                           
  1940                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1492:    switch (
      +                          *cp) {
  1941   002538  EFB5  F012         	goto	l3583
  1942   00253C                     l3577:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1519:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1946   00253C  C08C  F055         	movff	vfpfcnvrt@fp,efgtoa@fp
  1947   002540  C08D  F056         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1948   002544  C092  F057         	movff	vfpfcnvrt@convarg,efgtoa@f
  1949   002548  C093  F058         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1950   00254C  C094  F059         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1951   002550  C095  F05A         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1952   002554  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1953   002558  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1954   00255C                     	if	0	;tblptru may be non-zero
  1955   00255C                     	endif
  1956   00255C                     	if	0	;tblptru may be non-zero
  1957   00255C                     	endif
  1958   00255C  0008               	tblrd		*
  1959   00255E  CFF5 F05B          	movff	tablat,efgtoa@c
  1960   002562  EC24  F004         	call	_efgtoa	;wreg free
  1961   002566  EFE8  F012         	goto	l992
  1962   00256A                     l3583:
  1963                           
  1964                           ; BSR set to: 0
  1965   00256A  C099  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1966   00256E  C09A  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1967   002572                     	if	0	;tblptru may be non-zero
  1968   002572                     	endif
  1969   002572                     	if	0	;tblptru may be non-zero
  1970   002572                     	endif
  1971   002572  0008               	tblrd		*
  1972   002574  50F5               	movf	tablat,w,c
  1973   002576  6E5E               	movwf	??_vfpfcnvrt^0,c
  1974   002578  6A5F               	clrf	(??_vfpfcnvrt+1)^0,c
  1975                           
  1976                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1977                           ; Switch size 1, requested type "simple"
  1978                           ; Number of cases is 1, Range of values is 0 to 0
  1979                           ; switch strategies available:
  1980                           ; Name         Instructions Cycles
  1981                           ; simple_byte            4     3 (average)
  1982                           ;	Chosen strategy is simple_byte
  1983   00257A  505F               	movf	(??_vfpfcnvrt+1)^0,w,c
  1984   00257C  0A00               	xorlw	0	; case 0
  1985   00257E  B4D8               	btfsc	status,2,c
  1986   002580  EFC4  F012         	goto	l4133
  1987   002584  EFCB  F012         	goto	l3585
  1988   002588                     l4133:
  1989                           
  1990                           ; BSR set to: 0
  1991                           ; Switch size 1, requested type "simple"
  1992                           ; Number of cases is 1, Range of values is 102 to 102
  1993                           ; switch strategies available:
  1994                           ; Name         Instructions Cycles
  1995                           ; simple_byte            4     3 (average)
  1996                           ;	Chosen strategy is simple_byte
  1997   002588  505E               	movf	??_vfpfcnvrt^0,w,c
  1998   00258A  0A66               	xorlw	102	; case 102
  1999   00258C  B4D8               	btfsc	status,2,c
  2000   00258E  EF9E  F012         	goto	l3577
  2001   002592  EFCB  F012         	goto	l3585
  2002   002596                     l3585:
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2005   002596  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2006   00259A  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2007   00259E  2ADE               	incf	postinc2,f,c
  2008   0025A0  0E00               	movlw	0
  2009   0025A2  22DD               	addwfc	postdec2,f,c
  2010   0025A4  EFE8  F012         	goto	l992
  2011   0025A8                     l3589:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2014   0025A8  C08E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2015   0025AC  C08F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2016   0025B0  CFDE FFF6          	movff	postinc2,tblptrl
  2017   0025B4  CFDD FFF7          	movff	postdec2,tblptrh
  2018   0025B8                     	if	0	;tblptru may be non-zero
  2019   0025B8                     	endif
  2020   0025B8                     	if	0	;tblptru may be non-zero
  2021   0025B8                     	endif
  2022   0025B8  0008               	tblrd		*
  2023   0025BA  50F5               	movf	tablat,w,c
  2024   0025BC  6E01               	movwf	fputc@c^0,c
  2025   0025BE  6A02               	clrf	(fputc@c+1)^0,c
  2026   0025C0  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2027   0025C4  C08D  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2028   0025C8  ECB9  F016         	call	_fputc	;wreg free
  2029   0025CC  EFCB  F012         	goto	l3585
  2030   0025D0                     l992:
  2031   0025D0  0012               	return		;funcret
  2032   0025D2                     __end_of_vfpfcnvrt:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _read_prec_or_width *****************
  2036 ;; Defined at:
  2037 ;;		line 1029 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  fmt             2    6[COMRAM] PTR PTR const unsigned c
  2040 ;;		 -> vfprintf@cfmt(2), 
  2041 ;;  ap              2    8[COMRAM] PTR PTR void [1]
  2042 ;;		 -> sprintf@ap(2), 
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  c               1   12[COMRAM] unsigned char 
  2045 ;;  n               2   13[COMRAM] int 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  2    6[COMRAM] int 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2055 ;;      Params:         4       0       0       0       0       0       0       0       0
  2056 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2057 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2058 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2059 ;;Total ram usage:        9 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 1
  2062 ;; This function calls:
  2063 ;;		___wmul
  2064 ;; This function is called by:
  2065 ;;		_vfpfcnvrt
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text4
  2070   002E3C                     __ptext4:
  2071                           	callstack 0
  2072   002E3C                     _read_prec_or_width:
  2073                           	callstack 26
  2074   002E3C                     
  2075                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1030:     int n =
      +                           0;
  2076   002E3C  0E00               	movlw	0
  2077   002E3E  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2078   002E40  0E00               	movlw	0
  2079   002E42  6E0E               	movwf	read_prec_or_width@n^0,c
  2080   002E44                     
  2081                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1031:     if ((*f
      +                          mt)[0] == '*') {
  2082   002E44  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2083   002E48  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2084   002E4C  CFDE FFF6          	movff	postinc2,tblptrl
  2085   002E50  CFDD FFF7          	movff	postdec2,tblptrh
  2086   002E54                     	if	0	;tblptru may be non-zero
  2087   002E54                     	endif
  2088   002E54                     	if	0	;tblptru may be non-zero
  2089   002E54                     	endif
  2090   002E54  0008               	tblrd		*
  2091   002E56  50F5               	movf	tablat,w,c
  2092   002E58  0A2A               	xorlw	42
  2093   002E5A  A4D8               	btfss	status,2,c
  2094   002E5C  EF32  F017         	goto	u3651
  2095   002E60  EF34  F017         	goto	u3650
  2096   002E64                     u3651:
  2097   002E64  EF68  F017         	goto	l3511
  2098   002E68                     u3650:
  2099   002E68                     
  2100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1032:         ++*
      +                          fmt;
  2101   002E68  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2102   002E6C  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2103   002E70  2ADE               	incf	postinc2,f,c
  2104   002E72  0E00               	movlw	0
  2105   002E74  22DD               	addwfc	postdec2,f,c
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1033:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2108   002E76  C009  FFD9         	movff	read_prec_or_width@ap,fsr2l
  2109   002E7A  C00A  FFDA         	movff	read_prec_or_width@ap+1,fsr2h
  2110   002E7E  CFDF F00B          	movff	indf2,??_read_prec_or_width
  2111   002E82  0E02               	movlw	2
  2112   002E84  26DE               	addwf	postinc2,f,c
  2113   002E86  CFDF F00C          	movff	indf2,??_read_prec_or_width+1
  2114   002E8A  0E00               	movlw	0
  2115   002E8C  22DD               	addwfc	postdec2,f,c
  2116   002E8E  C00B  FFD9         	movff	??_read_prec_or_width,fsr2l
  2117   002E92  C00C  FFDA         	movff	??_read_prec_or_width+1,fsr2h
  2118   002E96  CFDE F00E          	movff	postinc2,read_prec_or_width@n
  2119   002E9A  CFDD F00F          	movff	postdec2,read_prec_or_width@n+1
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1034:     } else 
      +                          {
  2122   002E9E  EF7C  F017         	goto	l961
  2123   002EA2                     l3507:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1037:            
      +                           n = n * 10 + c;
  2126   002EA2  C00E  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  2127   002EA6  C00F  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  2128   002EAA  0E00               	movlw	0
  2129   002EAC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2130   002EAE  0E0A               	movlw	10
  2131   002EB0  6E03               	movwf	___wmul@multiplicand^0,c
  2132   002EB2  EC08  F01A         	call	___wmul	;wreg free
  2133   002EB6  500D               	movf	read_prec_or_width@c^0,w,c
  2134   002EB8  2401               	addwf	?___wmul^0,w,c
  2135   002EBA  6E0E               	movwf	read_prec_or_width@n^0,c
  2136   002EBC  0E00               	movlw	0
  2137   002EBE  2002               	addwfc	(?___wmul+1)^0,w,c
  2138   002EC0  6E0F               	movwf	(read_prec_or_width@n+1)^0,c
  2139   002EC2                     
  2140                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1038:            
      +                           ++*fmt;
  2141   002EC2  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2142   002EC6  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2143   002ECA  2ADE               	incf	postinc2,f,c
  2144   002ECC  0E00               	movlw	0
  2145   002ECE  22DD               	addwfc	postdec2,f,c
  2146   002ED0                     l3511:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1036:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2149   002ED0  C007  FFD9         	movff	read_prec_or_width@fmt,fsr2l
  2150   002ED4  C008  FFDA         	movff	read_prec_or_width@fmt+1,fsr2h
  2151   002ED8  CFDE FFF6          	movff	postinc2,tblptrl
  2152   002EDC  CFDD FFF7          	movff	postdec2,tblptrh
  2153   002EE0                     	if	0	;tblptru may be non-zero
  2154   002EE0                     	endif
  2155   002EE0                     	if	0	;tblptru may be non-zero
  2156   002EE0                     	endif
  2157   002EE0  0008               	tblrd		*
  2158   002EE2  50F5               	movf	tablat,w,c
  2159   002EE4  0FD0               	addlw	208
  2160   002EE6  6E0D               	movwf	read_prec_or_width@c^0,c
  2161   002EE8  0E09               	movlw	9
  2162   002EEA  640D               	cpfsgt	read_prec_or_width@c^0,c
  2163   002EEC  EF7A  F017         	goto	u3661
  2164   002EF0  EF7C  F017         	goto	u3660
  2165   002EF4                     u3661:
  2166   002EF4  EF51  F017         	goto	l3507
  2167   002EF8                     u3660:
  2168   002EF8                     l961:
  2169                           
  2170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1041:     return 
      +                          n;
  2171   002EF8  C00E  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  2172   002EFC  C00F  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2173   002F00  0012               	return		;funcret
  2174   002F02                     __end_of_read_prec_or_width:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function ___wmul *****************
  2178 ;; Defined at:
  2179 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  multiplier      2    0[COMRAM] unsigned int 
  2182 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  product         2    4[COMRAM] unsigned int 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  2    0[COMRAM] unsigned int 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, prodl, prodh
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2194 ;;      Params:         4       0       0       0       0       0       0       0       0
  2195 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2197 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2198 ;;Total ram usage:        6 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_read_prec_or_width
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text5
  2208   003410                     __ptext5:
  2209                           	callstack 0
  2210   003410                     ___wmul:
  2211                           	callstack 26
  2212   003410  5001               	movf	___wmul@multiplier^0,w,c
  2213   003412  0203               	mulwf	___wmul@multiplicand^0,c
  2214   003414  CFF3 F005          	movff	prodl,___wmul@product
  2215   003418  CFF4 F006          	movff	prodh,___wmul@product+1
  2216   00341C  5001               	movf	___wmul@multiplier^0,w,c
  2217   00341E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2218   003420  50F3               	movf	243,w,c
  2219   003422  2606               	addwf	(___wmul@product+1)^0,f,c
  2220   003424  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2221   003426  0203               	mulwf	___wmul@multiplicand^0,c
  2222   003428  50F3               	movf	243,w,c
  2223   00342A  2606               	addwf	(___wmul@product+1)^0,f,c
  2224   00342C  C005  F001         	movff	___wmul@product,?___wmul
  2225   003430  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2226   003434  0012               	return		;funcret
  2227   003436                     __end_of___wmul:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _efgtoa *****************
  2231 ;; Defined at:
  2232 ;;		line 531 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  fp              2   84[COMRAM] PTR struct _IO_FILE
  2235 ;;		 -> sprintf@f(12), 
  2236 ;;  f               4   86[COMRAM] PTR struct _IO_FILE
  2237 ;;  c               1   90[COMRAM] unsigned char 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  u               4   40[BANK0 ] struct flui
  2240 ;;  g               4   34[BANK0 ] struct flui
  2241 ;;  l               4   27[BANK0 ] struct flui
  2242 ;;  h               4   23[BANK0 ] struct flui
  2243 ;;  ou              4   19[BANK0 ] struct flui
  2244 ;;  n               2   38[BANK0 ] int 
  2245 ;;  i               2   31[BANK0 ] int 
  2246 ;;  w               2   17[BANK0 ] int 
  2247 ;;  e               2   15[BANK0 ] int 
  2248 ;;  m               2   13[BANK0 ] int 
  2249 ;;  d               2   11[BANK0 ] int 
  2250 ;;  t               2    4[BANK0 ] int 
  2251 ;;  p               2    2[BANK0 ] int 
  2252 ;;  ne              2    0[BANK0 ] int 
  2253 ;;  sign            1   33[BANK0 ] unsigned char 
  2254 ;;  nmode           1   10[BANK0 ] unsigned char 
  2255 ;;  mode            1    9[BANK0 ] unsigned char 
  2256 ;;  pp              1    8[BANK0 ] unsigned char 
  2257 ;;  esign           1    0        unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2267 ;;      Params:         7       0       0       0       0       0       0       0       0
  2268 ;;      Locals:         0      44       0       0       0       0       0       0       0
  2269 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2270 ;;      Totals:         9      44       0       0       0       0       0       0       0
  2271 ;;Total ram usage:       53 bytes
  2272 ;; Hardware stack levels used: 1
  2273 ;; Hardware stack levels required when called: 4
  2274 ;; This function calls:
  2275 ;;		___fladd
  2276 ;;		___fldiv
  2277 ;;		___fleq
  2278 ;;		___flge
  2279 ;;		___flmul
  2280 ;;		___flneg
  2281 ;;		___flsub
  2282 ;;		___fltol
  2283 ;;		___fpclassifyf
  2284 ;;		_floorf
  2285 ;;		_labs
  2286 ;;		_memcpy
  2287 ;;		_pad
  2288 ;;		_strcpy
  2289 ;; This function is called by:
  2290 ;;		_vfpfcnvrt
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           	psect	text6
  2295   000848                     __ptext6:
  2296                           	callstack 0
  2297   000848                     _efgtoa:
  2298                           	callstack 23
  2299   000848                     
  2300                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 531: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.41\pic\sources
      +                          \c99\common\doprnt.c: 532: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 533:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .41\pic\sources\c99\common\doprnt.c: 534:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 535:     long double h, l;
  2301   000848  0E00               	movlw	0
  2302   00084A  0100               	movlb	0	; () banked
  2303   00084C  6F81               	movwf	efgtoa@sign& (0+255),b
  2304   00084E                     
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 540:     g.f = f;
  2307   00084E  C057  F082         	movff	efgtoa@f,efgtoa@g
  2308   000852  C058  F083         	movff	efgtoa@f+1,efgtoa@g+1
  2309   000856  C059  F084         	movff	efgtoa@f+2,efgtoa@g+2
  2310   00085A  C05A  F085         	movff	efgtoa@f+3,efgtoa@g+3
  2311   00085E                     
  2312                           ; BSR set to: 0
  2313                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 541:     if (g.f 
      +                          < 0.0) {
  2314   00085E  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2315   000860  EF36  F004         	goto	u3300
  2316   000864  EF34  F004         	goto	u3301
  2317   000868                     u3301:
  2318   000868  EF4A  F004         	goto	l3277
  2319   00086C                     u3300:
  2320   00086C                     
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 542:         sign
      +                           = 1;
  2323   00086C  0E01               	movlw	1
  2324   00086E  6F81               	movwf	efgtoa@sign& (0+255),b
  2325   000870                     
  2326                           ; BSR set to: 0
  2327                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 543:         g.f 
      +                          = -g.f;
  2328   000870  C082  F001         	movff	efgtoa@g,___flneg@f1
  2329   000874  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2330   000878  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2331   00087C  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2332   000880  ECD2  F019         	call	___flneg	;wreg free
  2333   000884  C001  F082         	movff	?___flneg,efgtoa@g
  2334   000888  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  2335   00088C  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  2336   000890  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  2337   000894                     l3277:
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 547:     n = 0;
  2340   000894  0E00               	movlw	0
  2341   000896  0100               	movlb	0	; () banked
  2342   000898  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2343   00089A  0E00               	movlw	0
  2344   00089C  6F86               	movwf	efgtoa@n& (0+255),b
  2345   00089E                     
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 548:     w = widt
      +                          h;
  2348   00089E  C0C7  F071         	movff	_width,efgtoa@w
  2349   0008A2  C0C8  F072         	movff	_width+1,efgtoa@w+1
  2350   0008A6                     
  2351                           ; BSR set to: 0
  2352                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 549:     if (sign
  2353   0008A6  5181               	movf	efgtoa@sign& (0+255),w,b
  2354   0008A8  B4D8               	btfsc	status,2,c
  2355   0008AA  EF59  F004         	goto	u3311
  2356   0008AE  EF5B  F004         	goto	u3310
  2357   0008B2                     u3311:
  2358   0008B2  EF6F  F004         	goto	l3291
  2359   0008B6                     u3310:
  2360   0008B6                     
  2361                           ; BSR set to: 0
  2362                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 553:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 554:   sign = sign ? '-
      +                          ' : '+';
  2363   0008B6  5181               	movf	efgtoa@sign& (0+255),w,b
  2364   0008B8  A4D8               	btfss	status,2,c
  2365   0008BA  EF61  F004         	goto	u3321
  2366   0008BE  EF63  F004         	goto	u3320
  2367   0008C2                     u3321:
  2368   0008C2  EF69  F004         	goto	l3287
  2369   0008C6                     u3320:
  2370   0008C6                     
  2371                           ; BSR set to: 0
  2372   0008C6  0E00               	movlw	0
  2373   0008C8  6F67               	movwf	(_efgtoa$1021+1)& (0+255),b
  2374   0008CA  0E2B               	movlw	43
  2375   0008CC  6F66               	movwf	_efgtoa$1021& (0+255),b
  2376   0008CE  EF6D  F004         	goto	l3289
  2377   0008D2                     l3287:
  2378                           
  2379                           ; BSR set to: 0
  2380   0008D2  0E00               	movlw	0
  2381   0008D4  6F67               	movwf	(_efgtoa$1021+1)& (0+255),b
  2382   0008D6  0E2D               	movlw	45
  2383   0008D8  6F66               	movwf	_efgtoa$1021& (0+255),b
  2384   0008DA                     l3289:
  2385                           
  2386                           ; BSR set to: 0
  2387   0008DA  C066  F081         	movff	_efgtoa$1021,efgtoa@sign
  2388   0008DE                     l3291:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 563:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2392   0008DE  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2393   0008E2  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2394   0008E6  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2395   0008EA  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2396   0008EE  ECD1  F015         	call	___fpclassifyf	;wreg free
  2397   0008F2  0401               	decf	?___fpclassifyf^0,w,c
  2398   0008F4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2399   0008F6  A4D8               	btfss	status,2,c
  2400   0008F8  EF80  F004         	goto	u3331
  2401   0008FC  EF82  F004         	goto	u3330
  2402   000900                     u3331:
  2403   000900  EFB5  F004         	goto	l3309
  2404   000904                     u3330:
  2405   000904                     
  2406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 564:   if (sign) 
      +                          {
  2407   000904  0100               	movlb	0	; () banked
  2408   000906  5181               	movf	efgtoa@sign& (0+255),w,b
  2409   000908  B4D8               	btfsc	status,2,c
  2410   00090A  EF89  F004         	goto	u3341
  2411   00090E  EF8B  F004         	goto	u3340
  2412   000912                     u3341:
  2413   000912  EF94  F004         	goto	l3301
  2414   000916                     u3340:
  2415   000916                     
  2416                           ; BSR set to: 0
  2417                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 565:    dbuf[0] =
      +                           sign;
  2418   000916  C081  F100         	movff	efgtoa@sign,_dbuf
  2419   00091A                     
  2420                           ; BSR set to: 0
  2421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 566:    w--;
  2422   00091A  0771               	decf	efgtoa@w& (0+255),f,b
  2423   00091C  A0D8               	btfss	status,0,c
  2424   00091E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2425   000920                     
  2426                           ; BSR set to: 0
  2427                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 567:    n = 1;
  2428   000920  0E00               	movlw	0
  2429   000922  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2430   000924  0E01               	movlw	1
  2431   000926  6F86               	movwf	efgtoa@n& (0+255),b
  2432   000928                     l3301:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 575:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 576:             strcpy(&d
      +                          buf[n], "inf");
  2436   000928  0E00               	movlw	low _dbuf
  2437   00092A  2586               	addwf	efgtoa@n& (0+255),w,b
  2438   00092C  6E01               	movwf	strcpy@dest^0,c
  2439   00092E  0E01               	movlw	high _dbuf
  2440   000930  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2441   000932  6E02               	movwf	(strcpy@dest+1)^0,c
  2442   000934  0E3E               	movlw	low STR_10
  2443   000936  6E03               	movwf	strcpy@src^0,c
  2444   000938  0E08               	movlw	high STR_10
  2445   00093A  6E04               	movwf	(strcpy@src+1)^0,c
  2446   00093C  ECB2  F019         	call	_strcpy	;wreg free
  2447   000940                     l3303:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 577:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 578:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2450   000940  0100               	movlb	0	; () banked
  2451   000942  0EFD               	movlw	253
  2452   000944  2771               	addwf	efgtoa@w& (0+255),f,b
  2453   000946  0EFF               	movlw	255
  2454   000948  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2455   00094A                     
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 579:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2458   00094A  C055  F011         	movff	efgtoa@fp,pad@fp
  2459   00094E  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  2460   000952  0E00               	movlw	low _dbuf
  2461   000954  6E13               	movwf	pad@buf^0,c
  2462   000956  0E01               	movlw	high _dbuf
  2463   000958  6E14               	movwf	(pad@buf+1)^0,c
  2464   00095A  C071  F015         	movff	efgtoa@w,pad@p
  2465   00095E  C072  F016         	movff	efgtoa@w+1,pad@p+1
  2466   000962  EC56  F018         	call	_pad	;wreg free
  2467   000966  EF54  F009         	goto	l910
  2468   00096A                     l3309:
  2469                           
  2470                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 581:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2471   00096A  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  2472   00096E  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2473   000972  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2474   000976  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2475   00097A  ECD1  F015         	call	___fpclassifyf	;wreg free
  2476   00097E  5001               	movf	?___fpclassifyf^0,w,c
  2477   000980  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2478   000982  A4D8               	btfss	status,2,c
  2479   000984  EFC6  F004         	goto	u3351
  2480   000988  EFC8  F004         	goto	u3350
  2481   00098C                     u3351:
  2482   00098C  EFE8  F004         	goto	l3327
  2483   000990                     u3350:
  2484   000990                     
  2485                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 582:   if (sign) 
      +                          {
  2486   000990  0100               	movlb	0	; () banked
  2487   000992  5181               	movf	efgtoa@sign& (0+255),w,b
  2488   000994  B4D8               	btfsc	status,2,c
  2489   000996  EFCF  F004         	goto	u3361
  2490   00099A  EFD1  F004         	goto	u3360
  2491   00099E                     u3361:
  2492   00099E  EFDA  F004         	goto	l3319
  2493   0009A2                     u3360:
  2494   0009A2                     
  2495                           ; BSR set to: 0
  2496                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 583:    dbuf[0] =
      +                           sign;
  2497   0009A2  C081  F100         	movff	efgtoa@sign,_dbuf
  2498   0009A6                     
  2499                           ; BSR set to: 0
  2500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 584:    w--;
  2501   0009A6  0771               	decf	efgtoa@w& (0+255),f,b
  2502   0009A8  A0D8               	btfss	status,0,c
  2503   0009AA  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2504   0009AC                     
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 585:    n = 1;
  2507   0009AC  0E00               	movlw	0
  2508   0009AE  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2509   0009B0  0E01               	movlw	1
  2510   0009B2  6F86               	movwf	efgtoa@n& (0+255),b
  2511   0009B4                     l3319:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 593:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 594:             strcpy(&d
      +                          buf[n], "nan");
  2515   0009B4  0E00               	movlw	low _dbuf
  2516   0009B6  2586               	addwf	efgtoa@n& (0+255),w,b
  2517   0009B8  6E01               	movwf	strcpy@dest^0,c
  2518   0009BA  0E01               	movlw	high _dbuf
  2519   0009BC  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2520   0009BE  6E02               	movwf	(strcpy@dest+1)^0,c
  2521   0009C0  0E42               	movlw	low STR_13
  2522   0009C2  6E03               	movwf	strcpy@src^0,c
  2523   0009C4  0E08               	movlw	high STR_13
  2524   0009C6  6E04               	movwf	(strcpy@src+1)^0,c
  2525   0009C8  ECB2  F019         	call	_strcpy	;wreg free
  2526   0009CC  EFA0  F004         	goto	l3303
  2527   0009D0                     l3327:
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 601:     u.f = 1.
      +                          0;
  2530   0009D0  0E00               	movlw	0
  2531   0009D2  0100               	movlb	0	; () banked
  2532   0009D4  6F88               	movwf	efgtoa@u& (0+255),b
  2533   0009D6  0E00               	movlw	0
  2534   0009D8  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2535   0009DA  0E80               	movlw	128
  2536   0009DC  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2537   0009DE  0E3F               	movlw	63
  2538   0009E0  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 602:     e = 0;
  2541   0009E2  0E00               	movlw	0
  2542   0009E4  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2543   0009E6  0E00               	movlw	0
  2544   0009E8  6F6F               	movwf	efgtoa@e& (0+255),b
  2545   0009EA                     
  2546                           ; BSR set to: 0
  2547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 603:  if (!(g.f =
      +                          = 0.0)) {
  2548   0009EA  C082  F001         	movff	efgtoa@g,___fleq@ff1
  2549   0009EE  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2550   0009F2  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2551   0009F6  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2552   0009FA  0E00               	movlw	0
  2553   0009FC  6E05               	movwf	___fleq@ff2^0,c
  2554   0009FE  0E00               	movlw	0
  2555   000A00  6E06               	movwf	(___fleq@ff2+1)^0,c
  2556   000A02  0E00               	movlw	0
  2557   000A04  6E07               	movwf	(___fleq@ff2+2)^0,c
  2558   000A06  0E00               	movlw	0
  2559   000A08  6E08               	movwf	(___fleq@ff2+3)^0,c
  2560   000A0A  EC81  F017         	call	___fleq	;wreg free
  2561   000A0E  B0D8               	btfsc	status,0,c
  2562   000A10  EF0C  F005         	goto	u3371
  2563   000A14  EF0E  F005         	goto	u3370
  2564   000A18                     u3371:
  2565   000A18  EFED  F005         	goto	l913
  2566   000A1C                     u3370:
  2567   000A1C  EF1B  F005         	goto	l3335
  2568   000A20                     l915:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 605:    u = ou;
  2571   000A20  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2572   000A24  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2573   000A28  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2574   000A2C  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2575   000A30                     
  2576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 606:    ++e;
  2577   000A30  0100               	movlb	0	; () banked
  2578   000A32  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2579   000A34  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2580   000A36                     l3335:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 604:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2583   000A36  C088  F00F         	movff	efgtoa@u,___flmul@b
  2584   000A3A  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2585   000A3E  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2586   000A42  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2587   000A46  0E00               	movlw	0
  2588   000A48  6E13               	movwf	___flmul@a^0,c
  2589   000A4A  0E00               	movlw	0
  2590   000A4C  6E14               	movwf	(___flmul@a+1)^0,c
  2591   000A4E  0E20               	movlw	32
  2592   000A50  6E15               	movwf	(___flmul@a+2)^0,c
  2593   000A52  0E41               	movlw	65
  2594   000A54  6E16               	movwf	(___flmul@a+3)^0,c
  2595   000A56  ECB5  F00B         	call	___flmul	;wreg free
  2596   000A5A  C00F  F073         	movff	?___flmul,efgtoa@ou
  2597   000A5E  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  2598   000A62  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  2599   000A66  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  2600   000A6A  0100               	movlb	0	; () banked
  2601   000A6C  5173               	movf	efgtoa@ou& (0+255),w,b
  2602   000A6E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2603   000A70  6E01               	movwf	labs@a^0,c
  2604   000A72  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2605   000A74  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2606   000A76  6E02               	movwf	(labs@a+1)^0,c
  2607   000A78  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2608   000A7A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2609   000A7C  6E03               	movwf	(labs@a+2)^0,c
  2610   000A7E  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2611   000A80  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2612   000A82  6E04               	movwf	(labs@a+3)^0,c
  2613   000A84  EC93  F018         	call	_labs	;wreg free
  2614   000A88  BE04               	btfsc	(?_labs+3)^0,7,c
  2615   000A8A  EF52  F005         	goto	u3381
  2616   000A8E  5004               	movf	(?_labs+3)^0,w,c
  2617   000A90  1003               	iorwf	(?_labs+2)^0,w,c
  2618   000A92  1002               	iorwf	(?_labs+1)^0,w,c
  2619   000A94  E109               	bnz	u3380
  2620   000A96  0E02               	movlw	2
  2621   000A98  5C01               	subwf	?_labs^0,w,c
  2622   000A9A  A0D8               	btfss	status,0,c
  2623   000A9C  EF52  F005         	goto	u3381
  2624   000AA0  EF54  F005         	goto	u3380
  2625   000AA4                     u3381:
  2626   000AA4  EF10  F005         	goto	l915
  2627   000AA8                     u3380:
  2628   000AA8  C073  F028         	movff	efgtoa@ou,___flge@ff1
  2629   000AAC  C074  F029         	movff	efgtoa@ou+1,___flge@ff1+1
  2630   000AB0  C075  F02A         	movff	efgtoa@ou+2,___flge@ff1+2
  2631   000AB4  C076  F02B         	movff	efgtoa@ou+3,___flge@ff1+3
  2632   000AB8  C082  F02C         	movff	efgtoa@g,___flge@ff2
  2633   000ABC  C083  F02D         	movff	efgtoa@g+1,___flge@ff2+1
  2634   000AC0  C084  F02E         	movff	efgtoa@g+2,___flge@ff2+2
  2635   000AC4  C085  F02F         	movff	efgtoa@g+3,___flge@ff2+3
  2636   000AC8  EC4F  F015         	call	___flge	;wreg free
  2637   000ACC  A0D8               	btfss	status,0,c
  2638   000ACE  EF6B  F005         	goto	u3391
  2639   000AD2  EF6D  F005         	goto	u3390
  2640   000AD6                     u3391:
  2641   000AD6  EF10  F005         	goto	l915
  2642   000ADA                     u3390:
  2643   000ADA                     
  2644                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 608:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2645   000ADA  0100               	movlb	0	; () banked
  2646   000ADC  5188               	movf	efgtoa@u& (0+255),w,b
  2647   000ADE  5D82               	subwf	efgtoa@g& (0+255),w,b
  2648   000AE0  6E01               	movwf	labs@a^0,c
  2649   000AE2  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2650   000AE4  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2651   000AE6  6E02               	movwf	(labs@a+1)^0,c
  2652   000AE8  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2653   000AEA  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2654   000AEC  6E03               	movwf	(labs@a+2)^0,c
  2655   000AEE  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2656   000AF0  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2657   000AF2  6E04               	movwf	(labs@a+3)^0,c
  2658   000AF4  EC93  F018         	call	_labs	;wreg free
  2659   000AF8  BE04               	btfsc	(?_labs+3)^0,7,c
  2660   000AFA  EF8C  F005         	goto	u3400
  2661   000AFE  5004               	movf	(?_labs+3)^0,w,c
  2662   000B00  1003               	iorwf	(?_labs+2)^0,w,c
  2663   000B02  1002               	iorwf	(?_labs+1)^0,w,c
  2664   000B04  E107               	bnz	u3401
  2665   000B06  0E02               	movlw	2
  2666   000B08  5C01               	subwf	?_labs^0,w,c
  2667   000B0A  B0D8               	btfsc	status,0,c
  2668   000B0C  EF8A  F005         	goto	u3401
  2669   000B10  EF8C  F005         	goto	u3400
  2670   000B14                     u3401:
  2671   000B14  EFD4  F005         	goto	l3353
  2672   000B18                     u3400:
  2673   000B18                     l3343:
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 609:    g = u;
  2676   000B18  C088  F082         	movff	efgtoa@u,efgtoa@g
  2677   000B1C  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2678   000B20  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2679   000B24  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2680                           
  2681                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 610:   }
  2682   000B28  EFED  F005         	goto	l913
  2683   000B2C                     l3345:
  2684                           
  2685                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 613:     u.f = u.
      +                          f/10.0;
  2686   000B2C  C088  F028         	movff	efgtoa@u,___fldiv@b
  2687   000B30  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2688   000B34  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2689   000B38  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2690   000B3C  0E00               	movlw	0
  2691   000B3E  6E2C               	movwf	___fldiv@a^0,c
  2692   000B40  0E00               	movlw	0
  2693   000B42  6E2D               	movwf	(___fldiv@a+1)^0,c
  2694   000B44  0E20               	movlw	32
  2695   000B46  6E2E               	movwf	(___fldiv@a+2)^0,c
  2696   000B48  0E41               	movlw	65
  2697   000B4A  6E2F               	movwf	(___fldiv@a+3)^0,c
  2698   000B4C  ECAF  F00F         	call	___fldiv	;wreg free
  2699   000B50  C028  F088         	movff	?___fldiv,efgtoa@u
  2700   000B54  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2701   000B58  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2702   000B5C  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2703   000B60                     
  2704                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 614:     --e;
  2705   000B60  0100               	movlb	0	; () banked
  2706   000B62  076F               	decf	efgtoa@e& (0+255),f,b
  2707   000B64  A0D8               	btfss	status,0,c
  2708   000B66  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2709   000B68                     
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 615:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2712   000B68  5188               	movf	efgtoa@u& (0+255),w,b
  2713   000B6A  5D82               	subwf	efgtoa@g& (0+255),w,b
  2714   000B6C  6E01               	movwf	labs@a^0,c
  2715   000B6E  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2716   000B70  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2717   000B72  6E02               	movwf	(labs@a+1)^0,c
  2718   000B74  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2719   000B76  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2720   000B78  6E03               	movwf	(labs@a+2)^0,c
  2721   000B7A  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2722   000B7C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2723   000B7E  6E04               	movwf	(labs@a+3)^0,c
  2724   000B80  EC93  F018         	call	_labs	;wreg free
  2725   000B84  BE04               	btfsc	(?_labs+3)^0,7,c
  2726   000B86  EFD2  F005         	goto	u3410
  2727   000B8A  5004               	movf	(?_labs+3)^0,w,c
  2728   000B8C  1003               	iorwf	(?_labs+2)^0,w,c
  2729   000B8E  1002               	iorwf	(?_labs+1)^0,w,c
  2730   000B90  E107               	bnz	u3411
  2731   000B92  0E02               	movlw	2
  2732   000B94  5C01               	subwf	?_labs^0,w,c
  2733   000B96  B0D8               	btfsc	status,0,c
  2734   000B98  EFD0  F005         	goto	u3411
  2735   000B9C  EFD2  F005         	goto	u3410
  2736   000BA0                     u3411:
  2737   000BA0  EFD4  F005         	goto	l3353
  2738   000BA4                     u3410:
  2739   000BA4  EF8C  F005         	goto	l3343
  2740   000BA8                     l3353:
  2741                           
  2742                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 612:    while (g.
      +                          f < u.f) {
  2743   000BA8  C082  F028         	movff	efgtoa@g,___flge@ff1
  2744   000BAC  C083  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2745   000BB0  C084  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2746   000BB4  C085  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2747   000BB8  C088  F02C         	movff	efgtoa@u,___flge@ff2
  2748   000BBC  C089  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2749   000BC0  C08A  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2750   000BC4  C08B  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2751   000BC8  EC4F  F015         	call	___flge	;wreg free
  2752   000BCC  A0D8               	btfss	status,0,c
  2753   000BCE  EFEB  F005         	goto	u3421
  2754   000BD2  EFED  F005         	goto	u3420
  2755   000BD6                     u3421:
  2756   000BD6  EF96  F005         	goto	l3345
  2757   000BDA                     u3420:
  2758   000BDA                     l913:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 627:  mode = c;
  2761   000BDA  C05B  F069         	movff	efgtoa@c,efgtoa@mode
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 629:     nmode = 
      +                          mode;
  2764   000BDE  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2765   000BE2                     
  2766                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 639:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 640:         p = (prec < 0)
      +                           ? 6 : prec;
  2767   000BE2  0100               	movlb	0	; () banked
  2768   000BE4  BFCA               	btfsc	(_prec+1)& (0+255),7,b
  2769   000BE6  EFF7  F005         	goto	u3431
  2770   000BEA  EFF9  F005         	goto	u3430
  2771   000BEE                     u3431:
  2772   000BEE  EFFF  F005         	goto	l3359
  2773   000BF2                     u3430:
  2774   000BF2                     
  2775                           ; BSR set to: 0
  2776   000BF2  C0C9  F062         	movff	_prec,efgtoa@p
  2777   000BF6  C0CA  F063         	movff	_prec+1,efgtoa@p+1
  2778   000BFA  EF03  F006         	goto	l3361
  2779   000BFE                     l3359:
  2780                           
  2781                           ; BSR set to: 0
  2782   000BFE  0E00               	movlw	0
  2783   000C00  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2784   000C02  0E06               	movlw	6
  2785   000C04  6F62               	movwf	efgtoa@p& (0+255),b
  2786   000C06                     l3361:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 641:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 655:     m = p;
  2790   000C06  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2791   000C0A  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2792   000C0E                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 659:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 660:         ++m;
  2795   000C0E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2796   000C10  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2797   000C12                     
  2798                           ; BSR set to: 0
  2799                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 661:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 665:     if (nmode == 'f
      +                          ') {
  2800   000C12  0E66               	movlw	102
  2801   000C14  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2802   000C16  A4D8               	btfss	status,2,c
  2803   000C18  EF10  F006         	goto	u3441
  2804   000C1C  EF12  F006         	goto	u3440
  2805   000C20                     u3441:
  2806   000C20  EF32  F006         	goto	l3375
  2807   000C24                     u3440:
  2808   000C24                     
  2809                           ; BSR set to: 0
  2810                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 666:         if (
      +                          e < 0) {
  2811   000C24  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2812   000C26  EF19  F006         	goto	u3450
  2813   000C2A  EF17  F006         	goto	u3451
  2814   000C2E                     u3451:
  2815   000C2E  EF25  F006         	goto	l3371
  2816   000C32                     u3450:
  2817   000C32                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 667:             
      +                          u.f = 1.0;
  2820   000C32  0E00               	movlw	0
  2821   000C34  6F88               	movwf	efgtoa@u& (0+255),b
  2822   000C36  0E00               	movlw	0
  2823   000C38  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2824   000C3A  0E80               	movlw	128
  2825   000C3C  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2826   000C3E  0E3F               	movlw	63
  2827   000C40  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2828                           
  2829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 668:             
      +                          e = 0;
  2830   000C42  0E00               	movlw	0
  2831   000C44  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2832   000C46  0E00               	movlw	0
  2833   000C48  6F6F               	movwf	efgtoa@e& (0+255),b
  2834   000C4A                     l3371:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 670:         if (
      +                          !(mode == 'g')) {
  2838   000C4A  0E67               	movlw	103
  2839   000C4C  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2840   000C4E  B4D8               	btfsc	status,2,c
  2841   000C50  EF2C  F006         	goto	u3461
  2842   000C54  EF2E  F006         	goto	u3460
  2843   000C58                     u3461:
  2844   000C58  EF32  F006         	goto	l3375
  2845   000C5C                     u3460:
  2846   000C5C                     
  2847                           ; BSR set to: 0
  2848                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 671:             
      +                          m += e;
  2849   000C5C  516F               	movf	efgtoa@e& (0+255),w,b
  2850   000C5E  276D               	addwf	efgtoa@m& (0+255),f,b
  2851   000C60  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2852   000C62  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2853   000C64                     l3375:
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 677:     i = 0;
  2857   000C64  0E00               	movlw	0
  2858   000C66  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  2859   000C68  0E00               	movlw	0
  2860   000C6A  6F7F               	movwf	efgtoa@i& (0+255),b
  2861   000C6C                     
  2862                           ; BSR set to: 0
  2863                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 678:     h = g.f;
  2864   000C6C  C082  F077         	movff	efgtoa@g,efgtoa@h
  2865   000C70  C083  F078         	movff	efgtoa@g+1,efgtoa@h+1
  2866   000C74  C084  F079         	movff	efgtoa@g+2,efgtoa@h+2
  2867   000C78  C085  F07A         	movff	efgtoa@g+3,efgtoa@h+3
  2868   000C7C                     
  2869                           ; BSR set to: 0
  2870                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 679:     ou = u;
  2871   000C7C  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2872   000C80  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2873   000C84  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2874   000C88  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2877   000C8C  EFC3  F006         	goto	l3389
  2878   000C90                     l3381:
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 681:         l = 
      +                          floorf(h/u.f);
  2882   000C90  C077  F028         	movff	efgtoa@h,___fldiv@b
  2883   000C94  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  2884   000C98  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  2885   000C9C  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  2886   000CA0  C088  F02C         	movff	efgtoa@u,___fldiv@a
  2887   000CA4  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  2888   000CA8  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  2889   000CAC  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  2890   000CB0  ECAF  F00F         	call	___fldiv	;wreg free
  2891   000CB4  C028  F041         	movff	?___fldiv,floorf@x
  2892   000CB8  C029  F042         	movff	?___fldiv+1,floorf@x+1
  2893   000CBC  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  2894   000CC0  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  2895   000CC4  ECE9  F012         	call	_floorf	;wreg free
  2896   000CC8  C041  F07B         	movff	?_floorf,efgtoa@l
  2897   000CCC  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  2898   000CD0  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  2899   000CD4  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 682:         d = 
      +                          (int)l;
  2902   000CD8  C07B  F001         	movff	efgtoa@l,___fltol@f1
  2903   000CDC  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2904   000CE0  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2905   000CE4  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2906   000CE8  ECCC  F014         	call	___fltol	;wreg free
  2907   000CEC  C001  F06B         	movff	?___fltol,efgtoa@d
  2908   000CF0  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  2909   000CF4                     
  2910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 683:         h -=
      +                           l*u.f;
  2911   000CF4  C077  F028         	movff	efgtoa@h,___flsub@b
  2912   000CF8  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  2913   000CFC  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  2914   000D00  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  2915   000D04  C07B  F013         	movff	efgtoa@l,___flmul@a
  2916   000D08  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  2917   000D0C  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  2918   000D10  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  2919   000D14  C088  F00F         	movff	efgtoa@u,___flmul@b
  2920   000D18  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2921   000D1C  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2922   000D20  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2923   000D24  ECB5  F00B         	call	___flmul	;wreg free
  2924   000D28  C00F  F02C         	movff	?___flmul,___flsub@a
  2925   000D2C  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  2926   000D30  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  2927   000D34  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  2928   000D38  EC6D  F019         	call	___flsub	;wreg free
  2929   000D3C  C028  F077         	movff	?___flsub,efgtoa@h
  2930   000D40  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  2931   000D44  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  2932   000D48  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  2933   000D4C                     
  2934                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 684:         u.f 
      +                          = u.f/10.0;
  2935   000D4C  C088  F028         	movff	efgtoa@u,___fldiv@b
  2936   000D50  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  2937   000D54  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  2938   000D58  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  2939   000D5C  0E00               	movlw	0
  2940   000D5E  6E2C               	movwf	___fldiv@a^0,c
  2941   000D60  0E00               	movlw	0
  2942   000D62  6E2D               	movwf	(___fldiv@a+1)^0,c
  2943   000D64  0E20               	movlw	32
  2944   000D66  6E2E               	movwf	(___fldiv@a+2)^0,c
  2945   000D68  0E41               	movlw	65
  2946   000D6A  6E2F               	movwf	(___fldiv@a+3)^0,c
  2947   000D6C  ECAF  F00F         	call	___fldiv	;wreg free
  2948   000D70  C028  F088         	movff	?___fldiv,efgtoa@u
  2949   000D74  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  2950   000D78  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2951   000D7C  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2952   000D80                     
  2953                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 685:         ++i;
  2954   000D80  0100               	movlb	0	; () banked
  2955   000D82  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  2956   000D84  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  2957   000D86                     l3389:
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 680:     while (i
      +                           < m) {
  2961   000D86  516D               	movf	efgtoa@m& (0+255),w,b
  2962   000D88  5D7F               	subwf	efgtoa@i& (0+255),w,b
  2963   000D8A  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  2964   000D8C  0A80               	xorlw	128
  2965   000D8E  6E5C               	movwf	??_efgtoa^0,c
  2966   000D90  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2967   000D92  0A80               	xorlw	128
  2968   000D94  585C               	subwfb	??_efgtoa^0,w,c
  2969   000D96  A0D8               	btfss	status,0,c
  2970   000D98  EFD0  F006         	goto	u3471
  2971   000D9C  EFD2  F006         	goto	u3470
  2972   000DA0                     u3471:
  2973   000DA0  EF48  F006         	goto	l3381
  2974   000DA4                     u3470:
  2975   000DA4                     
  2976                           ; BSR set to: 0
  2977                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 689:     l = u.f*
      +                          5.0;
  2978   000DA4  C088  F00F         	movff	efgtoa@u,___flmul@b
  2979   000DA8  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  2980   000DAC  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  2981   000DB0  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  2982   000DB4  0E00               	movlw	0
  2983   000DB6  6E13               	movwf	___flmul@a^0,c
  2984   000DB8  0E00               	movlw	0
  2985   000DBA  6E14               	movwf	(___flmul@a+1)^0,c
  2986   000DBC  0EA0               	movlw	160
  2987   000DBE  6E15               	movwf	(___flmul@a+2)^0,c
  2988   000DC0  0E40               	movlw	64
  2989   000DC2  6E16               	movwf	(___flmul@a+3)^0,c
  2990   000DC4  ECB5  F00B         	call	___flmul	;wreg free
  2991   000DC8  C00F  F07B         	movff	?___flmul,efgtoa@l
  2992   000DCC  C010  F07C         	movff	?___flmul+1,efgtoa@l+1
  2993   000DD0  C011  F07D         	movff	?___flmul+2,efgtoa@l+2
  2994   000DD4  C012  F07E         	movff	?___flmul+3,efgtoa@l+3
  2995   000DD8                     
  2996                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 690:     if (h < 
      +                          l) {
  2997   000DD8  C077  F028         	movff	efgtoa@h,___flge@ff1
  2998   000DDC  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2999   000DE0  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3000   000DE4  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3001   000DE8  C07B  F02C         	movff	efgtoa@l,___flge@ff2
  3002   000DEC  C07C  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  3003   000DF0  C07D  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  3004   000DF4  C07E  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  3005   000DF8  EC4F  F015         	call	___flge	;wreg free
  3006   000DFC  B0D8               	btfsc	status,0,c
  3007   000DFE  EF03  F007         	goto	u3481
  3008   000E02  EF05  F007         	goto	u3480
  3009   000E06                     u3481:
  3010   000E06  EF10  F007         	goto	l3397
  3011   000E0A                     u3480:
  3012   000E0A                     
  3013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 691:         l = 
      +                          0.0;
  3014   000E0A  0E00               	movlw	0
  3015   000E0C  0100               	movlb	0	; () banked
  3016   000E0E  6F7B               	movwf	efgtoa@l& (0+255),b
  3017   000E10  0E00               	movlw	0
  3018   000E12  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3019   000E14  0E00               	movlw	0
  3020   000E16  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3021   000E18  0E00               	movlw	0
  3022   000E1A  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3023                           
  3024                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 692:     } else {
  3025   000E1C  EF39  F007         	goto	l3403
  3026   000E20                     l3397:
  3027                           
  3028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 694:         if (
      +                          (h == l) && !(d % 2)) {
  3029   000E20  C077  F001         	movff	efgtoa@h,___fleq@ff1
  3030   000E24  C078  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3031   000E28  C079  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3032   000E2C  C07A  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3033   000E30  C07B  F005         	movff	efgtoa@l,___fleq@ff2
  3034   000E34  C07C  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3035   000E38  C07D  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3036   000E3C  C07E  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3037   000E40  EC81  F017         	call	___fleq	;wreg free
  3038   000E44  A0D8               	btfss	status,0,c
  3039   000E46  EF27  F007         	goto	u3491
  3040   000E4A  EF29  F007         	goto	u3490
  3041   000E4E                     u3491:
  3042   000E4E  EF39  F007         	goto	l3403
  3043   000E52                     u3490:
  3044   000E52  0100               	movlb	0	; () banked
  3045   000E54  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3046   000E56  EF2F  F007         	goto	u3501
  3047   000E5A  EF31  F007         	goto	u3500
  3048   000E5E                     u3501:
  3049   000E5E  EF39  F007         	goto	l3403
  3050   000E62                     u3500:
  3051   000E62                     
  3052                           ; BSR set to: 0
  3053                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 695:             
      +                          l = 0.0;
  3054   000E62  0E00               	movlw	0
  3055   000E64  6F7B               	movwf	efgtoa@l& (0+255),b
  3056   000E66  0E00               	movlw	0
  3057   000E68  6F7C               	movwf	(efgtoa@l+1)& (0+255),b
  3058   000E6A  0E00               	movlw	0
  3059   000E6C  6F7D               	movwf	(efgtoa@l+2)& (0+255),b
  3060   000E6E  0E00               	movlw	0
  3061   000E70  6F7E               	movwf	(efgtoa@l+3)& (0+255),b
  3062   000E72                     l3403:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 700:     h = g.f 
      +                          + l;
  3065   000E72  C082  F001         	movff	efgtoa@g,___fladd@b
  3066   000E76  C083  F002         	movff	efgtoa@g+1,___fladd@b+1
  3067   000E7A  C084  F003         	movff	efgtoa@g+2,___fladd@b+2
  3068   000E7E  C085  F004         	movff	efgtoa@g+3,___fladd@b+3
  3069   000E82  C07B  F005         	movff	efgtoa@l,___fladd@a
  3070   000E86  C07C  F006         	movff	efgtoa@l+1,___fladd@a+1
  3071   000E8A  C07D  F007         	movff	efgtoa@l+2,___fladd@a+2
  3072   000E8E  C07E  F008         	movff	efgtoa@l+3,___fladd@a+3
  3073   000E92  EC55  F009         	call	___fladd	;wreg free
  3074   000E96  C001  F077         	movff	?___fladd,efgtoa@h
  3075   000E9A  C002  F078         	movff	?___fladd+1,efgtoa@h+1
  3076   000E9E  C003  F079         	movff	?___fladd+2,efgtoa@h+2
  3077   000EA2  C004  F07A         	movff	?___fladd+3,efgtoa@h+3
  3078   000EA6                     
  3079                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 702:  if (h >= (o
      +                          u.f*10.0)) {
  3080   000EA6  C077  F028         	movff	efgtoa@h,___flge@ff1
  3081   000EAA  C078  F029         	movff	efgtoa@h+1,___flge@ff1+1
  3082   000EAE  C079  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  3083   000EB2  C07A  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  3084   000EB6  0E00               	movlw	0
  3085   000EB8  6E13               	movwf	___flmul@a^0,c
  3086   000EBA  0E00               	movlw	0
  3087   000EBC  6E14               	movwf	(___flmul@a+1)^0,c
  3088   000EBE  0E20               	movlw	32
  3089   000EC0  6E15               	movwf	(___flmul@a+2)^0,c
  3090   000EC2  0E41               	movlw	65
  3091   000EC4  6E16               	movwf	(___flmul@a+3)^0,c
  3092   000EC6  C073  F00F         	movff	efgtoa@ou,___flmul@b
  3093   000ECA  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3094   000ECE  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3095   000ED2  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3096   000ED6  ECB5  F00B         	call	___flmul	;wreg free
  3097   000EDA  C00F  F02C         	movff	?___flmul,___flge@ff2
  3098   000EDE  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  3099   000EE2  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  3100   000EE6  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  3101   000EEA  EC4F  F015         	call	___flge	;wreg free
  3102   000EEE  A0D8               	btfss	status,0,c
  3103   000EF0  EF7C  F007         	goto	u3511
  3104   000EF4  EF7E  F007         	goto	u3510
  3105   000EF8                     u3511:
  3106   000EF8  EFA7  F007         	goto	l3415
  3107   000EFC                     u3510:
  3108   000EFC                     
  3109                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 703:   e++;
  3110   000EFC  0100               	movlb	0	; () banked
  3111   000EFE  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3112   000F00  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3113   000F02                     
  3114                           ; BSR set to: 0
  3115                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 704:   ou.f *= 10
      +                          .0;
  3116   000F02  C073  F00F         	movff	efgtoa@ou,___flmul@b
  3117   000F06  C074  F010         	movff	efgtoa@ou+1,___flmul@b+1
  3118   000F0A  C075  F011         	movff	efgtoa@ou+2,___flmul@b+2
  3119   000F0E  C076  F012         	movff	efgtoa@ou+3,___flmul@b+3
  3120   000F12  0E00               	movlw	0
  3121   000F14  6E13               	movwf	___flmul@a^0,c
  3122   000F16  0E00               	movlw	0
  3123   000F18  6E14               	movwf	(___flmul@a+1)^0,c
  3124   000F1A  0E20               	movlw	32
  3125   000F1C  6E15               	movwf	(___flmul@a+2)^0,c
  3126   000F1E  0E41               	movlw	65
  3127   000F20  6E16               	movwf	(___flmul@a+3)^0,c
  3128   000F22  ECB5  F00B         	call	___flmul	;wreg free
  3129   000F26  C00F  F073         	movff	?___flmul,efgtoa@ou
  3130   000F2A  C010  F074         	movff	?___flmul+1,efgtoa@ou+1
  3131   000F2E  C011  F075         	movff	?___flmul+2,efgtoa@ou+2
  3132   000F32  C012  F076         	movff	?___flmul+3,efgtoa@ou+3
  3133   000F36                     
  3134                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 706:   if (nmode 
      +                          == 'f') {
  3135   000F36  0E66               	movlw	102
  3136   000F38  0100               	movlb	0	; () banked
  3137   000F3A  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3138   000F3C  A4D8               	btfss	status,2,c
  3139   000F3E  EFA3  F007         	goto	u3521
  3140   000F42  EFA5  F007         	goto	u3520
  3141   000F46                     u3521:
  3142   000F46  EFA7  F007         	goto	l3415
  3143   000F4A                     u3520:
  3144   000F4A                     
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 708:    m++;
  3147   000F4A  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3148   000F4C  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3149   000F4E                     l3415:
  3150                           
  3151                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 714:     u = ou;
  3152   000F4E  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3153   000F52  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3154   000F56  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3155   000F5A  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3156   000F5E                     
  3157                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 718:  ne = e;
  3158   000F5E  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  3159   000F62  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  3160   000F66                     
  3161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 720:     pp = 0;
  3162   000F66  0E00               	movlw	0
  3163   000F68  0100               	movlb	0	; () banked
  3164   000F6A  6F68               	movwf	efgtoa@pp& (0+255),b
  3165   000F6C                     
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 721:     t = 0;
  3168   000F6C  0E00               	movlw	0
  3169   000F6E  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  3170   000F70  0E00               	movlw	0
  3171   000F72  6F64               	movwf	efgtoa@t& (0+255),b
  3172   000F74                     
  3173                           ; BSR set to: 0
  3174                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 722:     i = 0;
  3175   000F74  0E00               	movlw	0
  3176   000F76  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3177   000F78  0E00               	movlw	0
  3178   000F7A  6F7F               	movwf	efgtoa@i& (0+255),b
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3181   000F7C  EFA5  F008         	goto	l3465
  3182   000F80                     l3425:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 724:         l = 
      +                          floorf(h/u.f);
  3186   000F80  C077  F028         	movff	efgtoa@h,___fldiv@b
  3187   000F84  C078  F029         	movff	efgtoa@h+1,___fldiv@b+1
  3188   000F88  C079  F02A         	movff	efgtoa@h+2,___fldiv@b+2
  3189   000F8C  C07A  F02B         	movff	efgtoa@h+3,___fldiv@b+3
  3190   000F90  C088  F02C         	movff	efgtoa@u,___fldiv@a
  3191   000F94  C089  F02D         	movff	efgtoa@u+1,___fldiv@a+1
  3192   000F98  C08A  F02E         	movff	efgtoa@u+2,___fldiv@a+2
  3193   000F9C  C08B  F02F         	movff	efgtoa@u+3,___fldiv@a+3
  3194   000FA0  ECAF  F00F         	call	___fldiv	;wreg free
  3195   000FA4  C028  F041         	movff	?___fldiv,floorf@x
  3196   000FA8  C029  F042         	movff	?___fldiv+1,floorf@x+1
  3197   000FAC  C02A  F043         	movff	?___fldiv+2,floorf@x+2
  3198   000FB0  C02B  F044         	movff	?___fldiv+3,floorf@x+3
  3199   000FB4  ECE9  F012         	call	_floorf	;wreg free
  3200   000FB8  C041  F07B         	movff	?_floorf,efgtoa@l
  3201   000FBC  C042  F07C         	movff	?_floorf+1,efgtoa@l+1
  3202   000FC0  C043  F07D         	movff	?_floorf+2,efgtoa@l+2
  3203   000FC4  C044  F07E         	movff	?_floorf+3,efgtoa@l+3
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 725:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3206   000FC8  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3207   000FCC  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3208   000FD0  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3209   000FD4  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3210   000FD8  ECCC  F014         	call	___fltol	;wreg free
  3211   000FDC  BE02               	btfsc	(?___fltol+1)^0,7,c
  3212   000FDE  EFFC  F007         	goto	u3530
  3213   000FE2  5002               	movf	(?___fltol+1)^0,w,c
  3214   000FE4  E107               	bnz	u3531
  3215   000FE6  0E0A               	movlw	10
  3216   000FE8  5C01               	subwf	?___fltol^0,w,c
  3217   000FEA  B0D8               	btfsc	status,0,c
  3218   000FEC  EFFA  F007         	goto	u3531
  3219   000FF0  EFFC  F007         	goto	u3530
  3220   000FF4                     u3531:
  3221   000FF4  EF0C  F008         	goto	l3429
  3222   000FF8                     u3530:
  3223   000FF8  C07B  F001         	movff	efgtoa@l,___fltol@f1
  3224   000FFC  C07C  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3225   001000  C07D  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3226   001004  C07E  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3227   001008  ECCC  F014         	call	___fltol	;wreg free
  3228   00100C  C001  F06B         	movff	?___fltol,efgtoa@d
  3229   001010  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3230   001014  EF11  F008         	goto	l943
  3231   001018                     l3429:
  3232   001018  0E00               	movlw	0
  3233   00101A  0100               	movlb	0	; () banked
  3234   00101C  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  3235   00101E  0E09               	movlw	9
  3236   001020  6F6B               	movwf	efgtoa@d& (0+255),b
  3237   001022                     l943:
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 736:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 737:             if (!pp &
      +                          & (ne < 0)) {
  3240   001022  0100               	movlb	0	; () banked
  3241   001024  5168               	movf	efgtoa@pp& (0+255),w,b
  3242   001026  A4D8               	btfss	status,2,c
  3243   001028  EF18  F008         	goto	u3541
  3244   00102C  EF1A  F008         	goto	u3540
  3245   001030                     u3541:
  3246   001030  EF42  F008         	goto	l3449
  3247   001034                     u3540:
  3248   001034                     
  3249                           ; BSR set to: 0
  3250   001034  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3251   001036  EF21  F008         	goto	u3550
  3252   00103A  EF1F  F008         	goto	u3551
  3253   00103E                     u3551:
  3254   00103E  EF42  F008         	goto	l3449
  3255   001042                     u3550:
  3256   001042                     
  3257                           ; BSR set to: 0
  3258                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 738:             
      +                              dbuf[n++] = '.';
  3259   001042  0E00               	movlw	low _dbuf
  3260   001044  2586               	addwf	efgtoa@n& (0+255),w,b
  3261   001046  6ED9               	movwf	fsr2l,c
  3262   001048  0E01               	movlw	high _dbuf
  3263   00104A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3264   00104C  6EDA               	movwf	fsr2h,c
  3265   00104E  0E2E               	movlw	46
  3266   001050  6EDF               	movwf	indf2,c
  3267   001052                     
  3268                           ; BSR set to: 0
  3269   001052  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3270   001054  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3271   001056                     
  3272                           ; BSR set to: 0
  3273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 739:             
      +                              --w;
  3274   001056  0771               	decf	efgtoa@w& (0+255),f,b
  3275   001058  A0D8               	btfss	status,0,c
  3276   00105A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3277   00105C                     
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 740:             
      +                              pp = 1;
  3280   00105C  0E01               	movlw	1
  3281   00105E  6F68               	movwf	efgtoa@pp& (0+255),b
  3282   001060  EF42  F008         	goto	l3449
  3283   001064                     l3441:
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 743:             
      +                              dbuf[n++] = '0';
  3287   001064  0E00               	movlw	low _dbuf
  3288   001066  2586               	addwf	efgtoa@n& (0+255),w,b
  3289   001068  6ED9               	movwf	fsr2l,c
  3290   00106A  0E01               	movlw	high _dbuf
  3291   00106C  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3292   00106E  6EDA               	movwf	fsr2h,c
  3293   001070  0E30               	movlw	48
  3294   001072  6EDF               	movwf	indf2,c
  3295   001074                     
  3296                           ; BSR set to: 0
  3297   001074  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3298   001076  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3299   001078                     
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 744:             
      +                              --w;
  3302   001078  0771               	decf	efgtoa@w& (0+255),f,b
  3303   00107A  A0D8               	btfss	status,0,c
  3304   00107C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3305   00107E                     
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 745:             
      +                              --t;
  3308   00107E  0764               	decf	efgtoa@t& (0+255),f,b
  3309   001080  A0D8               	btfss	status,0,c
  3310   001082  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  3311   001084                     l3449:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 742:             
      +                          while (t) {
  3315   001084  5164               	movf	efgtoa@t& (0+255),w,b
  3316   001086  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3317   001088  A4D8               	btfss	status,2,c
  3318   00108A  EF49  F008         	goto	u3561
  3319   00108E  EF4B  F008         	goto	u3560
  3320   001092                     u3561:
  3321   001092  EF32  F008         	goto	l3441
  3322   001096                     u3560:
  3323   001096                     
  3324                           ; BSR set to: 0
  3325                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 747:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3326   001096  0E00               	movlw	low _dbuf
  3327   001098  2586               	addwf	efgtoa@n& (0+255),w,b
  3328   00109A  6ED9               	movwf	fsr2l,c
  3329   00109C  0E01               	movlw	high _dbuf
  3330   00109E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3331   0010A0  6EDA               	movwf	fsr2h,c
  3332   0010A2  516B               	movf	efgtoa@d& (0+255),w,b
  3333   0010A4  0F30               	addlw	48
  3334   0010A6  6EDF               	movwf	indf2,c
  3335   0010A8                     
  3336                           ; BSR set to: 0
  3337   0010A8  4B86               	infsnz	efgtoa@n& (0+255),f,b
  3338   0010AA  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  3339   0010AC                     
  3340                           ; BSR set to: 0
  3341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 748:             
      +                          --w;
  3342   0010AC  0771               	decf	efgtoa@w& (0+255),f,b
  3343   0010AE  A0D8               	btfss	status,0,c
  3344   0010B0  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3345   0010B2                     
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 749:         };C:
      +                          \Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 750:         h -= l*
      +                          u.f;
  3348   0010B2  C077  F028         	movff	efgtoa@h,___flsub@b
  3349   0010B6  C078  F029         	movff	efgtoa@h+1,___flsub@b+1
  3350   0010BA  C079  F02A         	movff	efgtoa@h+2,___flsub@b+2
  3351   0010BE  C07A  F02B         	movff	efgtoa@h+3,___flsub@b+3
  3352   0010C2  C07B  F013         	movff	efgtoa@l,___flmul@a
  3353   0010C6  C07C  F014         	movff	efgtoa@l+1,___flmul@a+1
  3354   0010CA  C07D  F015         	movff	efgtoa@l+2,___flmul@a+2
  3355   0010CE  C07E  F016         	movff	efgtoa@l+3,___flmul@a+3
  3356   0010D2  C088  F00F         	movff	efgtoa@u,___flmul@b
  3357   0010D6  C089  F010         	movff	efgtoa@u+1,___flmul@b+1
  3358   0010DA  C08A  F011         	movff	efgtoa@u+2,___flmul@b+2
  3359   0010DE  C08B  F012         	movff	efgtoa@u+3,___flmul@b+3
  3360   0010E2  ECB5  F00B         	call	___flmul	;wreg free
  3361   0010E6  C00F  F02C         	movff	?___flmul,___flsub@a
  3362   0010EA  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  3363   0010EE  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  3364   0010F2  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  3365   0010F6  EC6D  F019         	call	___flsub	;wreg free
  3366   0010FA  C028  F077         	movff	?___flsub,efgtoa@h
  3367   0010FE  C029  F078         	movff	?___flsub+1,efgtoa@h+1
  3368   001102  C02A  F079         	movff	?___flsub+2,efgtoa@h+2
  3369   001106  C02B  F07A         	movff	?___flsub+3,efgtoa@h+3
  3370   00110A                     
  3371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 751:         u.f 
      +                          = u.f/10.0;
  3372   00110A  C088  F028         	movff	efgtoa@u,___fldiv@b
  3373   00110E  C089  F029         	movff	efgtoa@u+1,___fldiv@b+1
  3374   001112  C08A  F02A         	movff	efgtoa@u+2,___fldiv@b+2
  3375   001116  C08B  F02B         	movff	efgtoa@u+3,___fldiv@b+3
  3376   00111A  0E00               	movlw	0
  3377   00111C  6E2C               	movwf	___fldiv@a^0,c
  3378   00111E  0E00               	movlw	0
  3379   001120  6E2D               	movwf	(___fldiv@a+1)^0,c
  3380   001122  0E20               	movlw	32
  3381   001124  6E2E               	movwf	(___fldiv@a+2)^0,c
  3382   001126  0E41               	movlw	65
  3383   001128  6E2F               	movwf	(___fldiv@a+3)^0,c
  3384   00112A  ECAF  F00F         	call	___fldiv	;wreg free
  3385   00112E  C028  F088         	movff	?___fldiv,efgtoa@u
  3386   001132  C029  F089         	movff	?___fldiv+1,efgtoa@u+1
  3387   001136  C02A  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3388   00113A  C02B  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3389   00113E                     
  3390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 752:         --ne
      +                          ;
  3391   00113E  0100               	movlb	0	; () banked
  3392   001140  0760               	decf	efgtoa@ne& (0+255),f,b
  3393   001142  A0D8               	btfss	status,0,c
  3394   001144  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  3395   001146                     
  3396                           ; BSR set to: 0
  3397                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 753:         ++i;
  3398   001146  4B7F               	infsnz	efgtoa@i& (0+255),f,b
  3399   001148  2B80               	incf	(efgtoa@i+1)& (0+255),f,b
  3400   00114A                     l3465:
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 723:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3404   00114A  516D               	movf	efgtoa@m& (0+255),w,b
  3405   00114C  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3406   00114E  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3407   001150  0A80               	xorlw	128
  3408   001152  6E5C               	movwf	??_efgtoa^0,c
  3409   001154  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3410   001156  0A80               	xorlw	128
  3411   001158  585C               	subwfb	??_efgtoa^0,w,c
  3412   00115A  B0D8               	btfsc	status,0,c
  3413   00115C  EFB2  F008         	goto	u3571
  3414   001160  EFB4  F008         	goto	u3570
  3415   001164                     u3571:
  3416   001164  EFC2  F008         	goto	l3469
  3417   001168                     u3570:
  3418   001168                     
  3419                           ; BSR set to: 0
  3420   001168  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3421   00116A  EFC0  F008         	goto	u3581
  3422   00116E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3423   001170  E109               	bnz	u3580
  3424   001172  0E4B               	movlw	75
  3425   001174  5D86               	subwf	efgtoa@n& (0+255),w,b
  3426   001176  A0D8               	btfss	status,0,c
  3427   001178  EFC0  F008         	goto	u3581
  3428   00117C  EFC2  F008         	goto	u3580
  3429   001180                     u3581:
  3430   001180  EFC0  F007         	goto	l3425
  3431   001184                     u3580:
  3432   001184                     l3469:
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 760:  i = sizeof(
      +                          dbuf) - 1;
  3436   001184  0E00               	movlw	0
  3437   001186  6F80               	movwf	(efgtoa@i+1)& (0+255),b
  3438   001188  0E4F               	movlw	79
  3439   00118A  6F7F               	movwf	efgtoa@i& (0+255),b
  3440   00118C                     
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 761:     dbuf[i] 
      +                          = '\0';
  3443   00118C  0E00               	movlw	low _dbuf
  3444   00118E  257F               	addwf	efgtoa@i& (0+255),w,b
  3445   001190  6ED9               	movwf	fsr2l,c
  3446   001192  0E01               	movlw	high _dbuf
  3447   001194  2180               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3448   001196  6EDA               	movwf	fsr2h,c
  3449   001198  6ADF               	clrf	indf2,c
  3450   00119A                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 792:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3453   00119A  0E00               	movlw	low _dbuf
  3454   00119C  6E5C               	movwf	??_efgtoa^0,c
  3455   00119E  0E01               	movlw	high _dbuf
  3456   0011A0  6E5D               	movwf	(??_efgtoa+1)^0,c
  3457   0011A2  5186               	movf	efgtoa@n& (0+255),w,b
  3458   0011A4  5E5C               	subwf	??_efgtoa^0,f,c
  3459   0011A6  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3460   0011A8  5A5D               	subwfb	(??_efgtoa+1)^0,f,c
  3461   0011AA  517F               	movf	efgtoa@i& (0+255),w,b
  3462   0011AC  245C               	addwf	??_efgtoa^0,w,c
  3463   0011AE  6E01               	movwf	memcpy@d1^0,c
  3464   0011B0  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3465   0011B2  205D               	addwfc	(??_efgtoa+1)^0,w,c
  3466   0011B4  6E02               	movwf	(memcpy@d1+1)^0,c
  3467   0011B6  0E00               	movlw	low _dbuf
  3468   0011B8  6E03               	movwf	memcpy@s1^0,c
  3469   0011BA  0E01               	movlw	high _dbuf
  3470   0011BC  6E04               	movwf	(memcpy@s1+1)^0,c
  3471   0011BE  C086  F005         	movff	efgtoa@n,memcpy@n
  3472   0011C2  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  3473   0011C6  EC45  F019         	call	_memcpy	;wreg free
  3474   0011CA                     
  3475                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 793:  n = i-n;
  3476   0011CA  0100               	movlb	0	; () banked
  3477   0011CC  5186               	movf	efgtoa@n& (0+255),w,b
  3478   0011CE  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3479   0011D0  6F86               	movwf	efgtoa@n& (0+255),b
  3480   0011D2  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3481   0011D4  5980               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3482   0011D6  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3483   0011D8                     
  3484                           ; BSR set to: 0
  3485                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 794:  i = sign ==
      +                           0 ? 0 : 1;
  3486   0011D8  5181               	movf	efgtoa@sign& (0+255),w,b
  3487   0011DA  A4D8               	btfss	status,2,c
  3488   0011DC  EFF2  F008         	goto	u3591
  3489   0011E0  EFF5  F008         	goto	u3590
  3490   0011E4                     u3591:
  3491   0011E4  0E01               	movlw	1
  3492   0011E6  EFF6  F008         	goto	u3600
  3493   0011EA                     u3590:
  3494   0011EA  0E00               	movlw	0
  3495   0011EC                     u3600:
  3496   0011EC  6F7F               	movwf	efgtoa@i& (0+255),b
  3497   0011EE  6B80               	clrf	(efgtoa@i+1)& (0+255),b
  3498   0011F0                     
  3499                           ; BSR set to: 0
  3500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 797:  if (flags &
      +                           (1 << 1)) {
  3501   0011F0  A3CD               	btfss	_flags& (0+255),1,b
  3502   0011F2  EFFD  F008         	goto	u3611
  3503   0011F6  EFFF  F008         	goto	u3610
  3504   0011FA                     u3611:
  3505   0011FA  EF2D  F009         	goto	l3491
  3506   0011FE                     u3610:
  3507   0011FE  EF0F  F009         	goto	l3487
  3508   001202                     l3483:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 799:    dbuf[--n]
      +                           = '0';
  3512   001202  0786               	decf	efgtoa@n& (0+255),f,b
  3513   001204  A0D8               	btfss	status,0,c
  3514   001206  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3515   001208  0E00               	movlw	low _dbuf
  3516   00120A  2586               	addwf	efgtoa@n& (0+255),w,b
  3517   00120C  6ED9               	movwf	fsr2l,c
  3518   00120E  0E01               	movlw	high _dbuf
  3519   001210  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3520   001212  6EDA               	movwf	fsr2h,c
  3521   001214  0E30               	movlw	48
  3522   001216  6EDF               	movwf	indf2,c
  3523   001218                     
  3524                           ; BSR set to: 0
  3525                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 800:    w--;
  3526   001218  0771               	decf	efgtoa@w& (0+255),f,b
  3527   00121A  A0D8               	btfss	status,0,c
  3528   00121C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3529   00121E                     l3487:
  3530                           
  3531                           ; BSR set to: 0
  3532                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 798:   while (w >
      +                           i && n > i) {
  3533   00121E  5171               	movf	efgtoa@w& (0+255),w,b
  3534   001220  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3535   001222  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3536   001224  0A80               	xorlw	128
  3537   001226  6E5C               	movwf	??_efgtoa^0,c
  3538   001228  5172               	movf	(efgtoa@w+1)& (0+255),w,b
  3539   00122A  0A80               	xorlw	128
  3540   00122C  585C               	subwfb	??_efgtoa^0,w,c
  3541   00122E  B0D8               	btfsc	status,0,c
  3542   001230  EF1C  F009         	goto	u3621
  3543   001234  EF1E  F009         	goto	u3620
  3544   001238                     u3621:
  3545   001238  EF2D  F009         	goto	l3491
  3546   00123C                     u3620:
  3547   00123C                     
  3548                           ; BSR set to: 0
  3549   00123C  5186               	movf	efgtoa@n& (0+255),w,b
  3550   00123E  5D7F               	subwf	efgtoa@i& (0+255),w,b
  3551   001240  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3552   001242  0A80               	xorlw	128
  3553   001244  6E5C               	movwf	??_efgtoa^0,c
  3554   001246  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3555   001248  0A80               	xorlw	128
  3556   00124A  585C               	subwfb	??_efgtoa^0,w,c
  3557   00124C  A0D8               	btfss	status,0,c
  3558   00124E  EF2B  F009         	goto	u3631
  3559   001252  EF2D  F009         	goto	u3630
  3560   001256                     u3631:
  3561   001256  EF01  F009         	goto	l3483
  3562   00125A                     u3630:
  3563   00125A                     l3491:
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 805:  if (sign) {
  3567   00125A  5181               	movf	efgtoa@sign& (0+255),w,b
  3568   00125C  B4D8               	btfsc	status,2,c
  3569   00125E  EF33  F009         	goto	u3641
  3570   001262  EF35  F009         	goto	u3640
  3571   001266                     u3641:
  3572   001266  EF40  F009         	goto	l3495
  3573   00126A                     u3640:
  3574   00126A                     
  3575                           ; BSR set to: 0
  3576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 806:   dbuf[--n] 
      +                          = sign;
  3577   00126A  0786               	decf	efgtoa@n& (0+255),f,b
  3578   00126C  A0D8               	btfss	status,0,c
  3579   00126E  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3580   001270  0E00               	movlw	low _dbuf
  3581   001272  2586               	addwf	efgtoa@n& (0+255),w,b
  3582   001274  6ED9               	movwf	fsr2l,c
  3583   001276  0E01               	movlw	high _dbuf
  3584   001278  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3585   00127A  6EDA               	movwf	fsr2h,c
  3586   00127C  C081  FFDF         	movff	efgtoa@sign,indf2
  3587   001280                     l3495:
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 808:  w -= i;
  3591   001280  517F               	movf	efgtoa@i& (0+255),w,b
  3592   001282  5F71               	subwf	efgtoa@w& (0+255),f,b
  3593   001284  5180               	movf	(efgtoa@i+1)& (0+255),w,b
  3594   001286  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3595   001288                     
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 811:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3598   001288  C055  F011         	movff	efgtoa@fp,pad@fp
  3599   00128C  C056  F012         	movff	efgtoa@fp+1,pad@fp+1
  3600   001290  0E00               	movlw	low _dbuf
  3601   001292  2586               	addwf	efgtoa@n& (0+255),w,b
  3602   001294  6E13               	movwf	pad@buf^0,c
  3603   001296  0E01               	movlw	high _dbuf
  3604   001298  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3605   00129A  6E14               	movwf	(pad@buf+1)^0,c
  3606   00129C  C071  F015         	movff	efgtoa@w,pad@p
  3607   0012A0  C072  F016         	movff	efgtoa@w+1,pad@p+1
  3608   0012A4  EC56  F018         	call	_pad	;wreg free
  3609   0012A8                     l910:
  3610   0012A8  0012               	return		;funcret
  3611   0012AA                     __end_of_efgtoa:
  3612                           	callstack 0
  3613                           
  3614 ;; *************** function _strcpy *****************
  3615 ;; Defined at:
  3616 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strcpy.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3619 ;;		 -> dbuf(80), 
  3620 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3621 ;;		 -> STR_13(4), STR_10(4), 
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;  d               2    6[COMRAM] PTR unsigned char 
  3624 ;;		 -> dbuf(80), 
  3625 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3626 ;;		 -> STR_13(4), STR_10(4), 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  2    0[COMRAM] PTR unsigned char 
  3629 ;; Registers used:
  3630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3636 ;;      Params:         4       0       0       0       0       0       0       0       0
  3637 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3639 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3640 ;;Total ram usage:        8 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_efgtoa
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text7
  3650   003364                     __ptext7:
  3651                           	callstack 0
  3652   003364                     _strcpy:
  3653                           	callstack 26
  3654   003364  C003  F005         	movff	strcpy@src,strcpy@s
  3655   003368  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3656   00336C  C001  F007         	movff	strcpy@dest,strcpy@d
  3657   003370  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3658   003374                     l3205:
  3659   003374  C005  FFF6         	movff	strcpy@s,tblptrl
  3660   003378  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3661   00337C  4A05               	infsnz	strcpy@s^0,f,c
  3662   00337E  2A06               	incf	(strcpy@s+1)^0,f,c
  3663   003380                     	if	0	;tblptru may be non-zero
  3664   003380                     	endif
  3665   003380                     	if	0	;tblptru may be non-zero
  3666   003380                     	endif
  3667   003380  C007  FFD9         	movff	strcpy@d,fsr2l
  3668   003384  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3669   003388  4A07               	infsnz	strcpy@d^0,f,c
  3670   00338A  2A08               	incf	(strcpy@d+1)^0,f,c
  3671   00338C  0008               	tblrd		*
  3672   00338E  CFF5 FFDF          	movff	tablat,indf2
  3673   003392  50DF               	movf	indf2,w,c
  3674   003394  A4D8               	btfss	status,2,c
  3675   003396  EFCF  F019         	goto	u3131
  3676   00339A  EFD1  F019         	goto	u3130
  3677   00339E                     u3131:
  3678   00339E  EFBA  F019         	goto	l3205
  3679   0033A2                     u3130:
  3680   0033A2  0012               	return		;funcret
  3681   0033A4                     __end_of_strcpy:
  3682                           	callstack 0
  3683                           
  3684 ;; *************** function _pad *****************
  3685 ;; Defined at:
  3686 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3689 ;;		 -> sprintf@f(12), 
  3690 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3691 ;;		 -> dbuf(80), 
  3692 ;;  p               2   20[COMRAM] int 
  3693 ;; Auto vars:     Size  Location     Type
  3694 ;;  w               2   25[COMRAM] int 
  3695 ;;  i               2   23[COMRAM] int 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3705 ;;      Params:         6       0       0       0       0       0       0       0       0
  3706 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3707 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3708 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3709 ;;Total ram usage:       11 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 3
  3712 ;; This function calls:
  3713 ;;		_fputc
  3714 ;;		_fputs
  3715 ;; This function is called by:
  3716 ;;		_efgtoa
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text8
  3721   0030AC                     __ptext8:
  3722                           	callstack 0
  3723   0030AC                     _pad:
  3724                           	callstack 23
  3725   0030AC                     
  3726                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  3727   0030AC  BE16               	btfsc	(pad@p+1)^0,7,c
  3728   0030AE  EF5B  F018         	goto	u3041
  3729   0030B2  EF5D  F018         	goto	u3040
  3730   0030B6                     u3041:
  3731   0030B6  EF63  F018         	goto	l3171
  3732   0030BA                     u3040:
  3733   0030BA  C015  F01A         	movff	pad@p,pad@w
  3734   0030BE  C016  F01B         	movff	pad@p+1,pad@w+1
  3735   0030C2  EF67  F018         	goto	l895
  3736   0030C6                     l3171:
  3737   0030C6  0E00               	movlw	0
  3738   0030C8  6E1B               	movwf	(pad@w+1)^0,c
  3739   0030CA  0E00               	movlw	0
  3740   0030CC  6E1A               	movwf	pad@w^0,c
  3741   0030CE                     l895:
  3742                           
  3743                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  3744   0030CE  0E00               	movlw	0
  3745   0030D0  6E19               	movwf	(pad@i+1)^0,c
  3746   0030D2  0E00               	movlw	0
  3747   0030D4  6E18               	movwf	pad@i^0,c
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3750   0030D6  EF79  F018         	goto	l3177
  3751   0030DA                     l3173:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  3754   0030DA  0E00               	movlw	0
  3755   0030DC  6E02               	movwf	(fputc@c+1)^0,c
  3756   0030DE  0E20               	movlw	32
  3757   0030E0  6E01               	movwf	fputc@c^0,c
  3758   0030E2  C011  F003         	movff	pad@fp,fputc@fp
  3759   0030E6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3760   0030EA  ECB9  F016         	call	_fputc	;wreg free
  3761   0030EE                     
  3762                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  3763   0030EE  4A18               	infsnz	pad@i^0,f,c
  3764   0030F0  2A19               	incf	(pad@i+1)^0,f,c
  3765   0030F2                     l3177:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  3768   0030F2  501A               	movf	pad@w^0,w,c
  3769   0030F4  5C18               	subwf	pad@i^0,w,c
  3770   0030F6  5019               	movf	(pad@i+1)^0,w,c
  3771   0030F8  0A80               	xorlw	128
  3772   0030FA  6E17               	movwf	??_pad^0,c
  3773   0030FC  501B               	movf	(pad@w+1)^0,w,c
  3774   0030FE  0A80               	xorlw	128
  3775   003100  5817               	subwfb	??_pad^0,w,c
  3776   003102  A0D8               	btfss	status,0,c
  3777   003104  EF86  F018         	goto	u3051
  3778   003108  EF88  F018         	goto	u3050
  3779   00310C                     u3051:
  3780   00310C  EF6D  F018         	goto	l3173
  3781   003110                     u3050:
  3782   003110                     
  3783                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  3784   003110  C013  F00A         	movff	pad@buf,fputs@s
  3785   003114  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3786   003118  C011  F00C         	movff	pad@fp,fputs@fp
  3787   00311C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3788   003120  EC90  F019         	call	_fputs	;wreg free
  3789   003124  0012               	return		;funcret
  3790   003126                     __end_of_pad:
  3791                           	callstack 0
  3792                           
  3793 ;; *************** function _fputs *****************
  3794 ;; Defined at:
  3795 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3798 ;;		 -> dbuf(80), 
  3799 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3800 ;;		 -> sprintf@f(12), 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  i               2   14[COMRAM] int 
  3803 ;;  c               1   13[COMRAM] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  2    9[COMRAM] int 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3813 ;;      Params:         4       0       0       0       0       0       0       0       0
  3814 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3816 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3817 ;;Total ram usage:        7 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 2
  3820 ;; This function calls:
  3821 ;;		_fputc
  3822 ;; This function is called by:
  3823 ;;		_pad
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text9
  3828   003320                     __ptext9:
  3829                           	callstack 0
  3830   003320                     _fputs:
  3831                           	callstack 23
  3832   003320  0E00               	movlw	0
  3833   003322  6E10               	movwf	(fputs@i+1)^0,c
  3834   003324  0E00               	movlw	0
  3835   003326  6E0F               	movwf	fputs@i^0,c
  3836   003328  EFA1  F019         	goto	l2795
  3837   00332C                     l2791:
  3838   00332C  C00E  F001         	movff	fputs@c,fputc@c
  3839   003330  6A02               	clrf	(fputc@c+1)^0,c
  3840   003332  C00C  F003         	movff	fputs@fp,fputc@fp
  3841   003336  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3842   00333A  ECB9  F016         	call	_fputc	;wreg free
  3843   00333E  4A0F               	infsnz	fputs@i^0,f,c
  3844   003340  2A10               	incf	(fputs@i+1)^0,f,c
  3845   003342                     l2795:
  3846   003342  500F               	movf	fputs@i^0,w,c
  3847   003344  240A               	addwf	fputs@s^0,w,c
  3848   003346  6ED9               	movwf	fsr2l,c
  3849   003348  5010               	movf	(fputs@i+1)^0,w,c
  3850   00334A  200B               	addwfc	(fputs@s+1)^0,w,c
  3851   00334C  6EDA               	movwf	fsr2h,c
  3852   00334E  50DF               	movf	indf2,w,c
  3853   003350  6E0E               	movwf	fputs@c^0,c
  3854   003352  500E               	movf	fputs@c^0,w,c
  3855   003354  A4D8               	btfss	status,2,c
  3856   003356  EFAF  F019         	goto	u2451
  3857   00335A  EFB1  F019         	goto	u2450
  3858   00335E                     u2451:
  3859   00335E  EF96  F019         	goto	l2791
  3860   003362                     u2450:
  3861   003362  0012               	return		;funcret
  3862   003364                     __end_of_fputs:
  3863                           	callstack 0
  3864                           
  3865 ;; *************** function _fputc *****************
  3866 ;; Defined at:
  3867 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  c               2    0[COMRAM] int 
  3870 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3871 ;;		 -> sprintf@f(12), 
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  2    0[COMRAM] int 
  3876 ;; Registers used:
  3877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3883 ;;      Params:         4       0       0       0       0       0       0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3885 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3886 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3887 ;;Total ram usage:        9 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 1
  3890 ;; This function calls:
  3891 ;;		_putch
  3892 ;; This function is called by:
  3893 ;;		_pad
  3894 ;;		_vfpfcnvrt
  3895 ;;		_fputs
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text10
  3900   002D72                     __ptext10:
  3901                           	callstack 0
  3902   002D72                     _fputc:
  3903                           	callstack 26
  3904   002D72  5003               	movf	fputc@fp^0,w,c
  3905   002D74  1004               	iorwf	(fputc@fp+1)^0,w,c
  3906   002D76  B4D8               	btfsc	status,2,c
  3907   002D78  EFC0  F016         	goto	u2021
  3908   002D7C  EFC2  F016         	goto	u2020
  3909   002D80                     u2021:
  3910   002D80  EFCB  F016         	goto	l2577
  3911   002D84                     u2020:
  3912   002D84  5003               	movf	fputc@fp^0,w,c
  3913   002D86  1004               	iorwf	(fputc@fp+1)^0,w,c
  3914   002D88  A4D8               	btfss	status,2,c
  3915   002D8A  EFC9  F016         	goto	u2031
  3916   002D8E  EFCB  F016         	goto	u2030
  3917   002D92                     u2031:
  3918   002D92  EFD0  F016         	goto	l2579
  3919   002D96                     u2030:
  3920   002D96                     l2577:
  3921   002D96  5001               	movf	fputc@c^0,w,c
  3922   002D98  EC6C  F01A         	call	_putch
  3923   002D9C  EF1D  F017         	goto	l1048
  3924   002DA0                     l2579:
  3925   002DA0  EE20 F00A          	lfsr	2,10
  3926   002DA4  5003               	movf	fputc@fp^0,w,c
  3927   002DA6  26D9               	addwf	fsr2l,f,c
  3928   002DA8  5004               	movf	(fputc@fp+1)^0,w,c
  3929   002DAA  22DA               	addwfc	fsr2h,f,c
  3930   002DAC  50DE               	movf	postinc2,w,c
  3931   002DAE  10DE               	iorwf	postinc2,w,c
  3932   002DB0  B4D8               	btfsc	status,2,c
  3933   002DB2  EFDD  F016         	goto	u2041
  3934   002DB6  EFDF  F016         	goto	u2040
  3935   002DBA                     u2041:
  3936   002DBA  EFFA  F016         	goto	l2583
  3937   002DBE                     u2040:
  3938   002DBE  EE20 F00A          	lfsr	2,10
  3939   002DC2  5003               	movf	fputc@fp^0,w,c
  3940   002DC4  26D9               	addwf	fsr2l,f,c
  3941   002DC6  5004               	movf	(fputc@fp+1)^0,w,c
  3942   002DC8  22DA               	addwfc	fsr2h,f,c
  3943   002DCA  EE10 F003          	lfsr	1,3
  3944   002DCE  5003               	movf	fputc@fp^0,w,c
  3945   002DD0  26E1               	addwf	fsr1l,f,c
  3946   002DD2  5004               	movf	(fputc@fp+1)^0,w,c
  3947   002DD4  22E2               	addwfc	fsr1h,f,c
  3948   002DD6  50DE               	movf	postinc2,w,c
  3949   002DD8  5CE6               	subwf	postinc1,w,c
  3950   002DDA  50E6               	movf	postinc1,w,c
  3951   002DDC  0A80               	xorlw	128
  3952   002DDE  6E09               	movwf	(??_fputc+4)^0,c
  3953   002DE0  50DE               	movf	postinc2,w,c
  3954   002DE2  0A80               	xorlw	128
  3955   002DE4  5809               	subwfb	(??_fputc+4)^0,w,c
  3956   002DE6  B0D8               	btfsc	status,0,c
  3957   002DE8  EFF8  F016         	goto	u2051
  3958   002DEC  EFFA  F016         	goto	u2050
  3959   002DF0                     u2051:
  3960   002DF0  EF1D  F017         	goto	l1048
  3961   002DF4                     u2050:
  3962   002DF4                     l2583:
  3963   002DF4  EE20 F003          	lfsr	2,3
  3964   002DF8  5003               	movf	fputc@fp^0,w,c
  3965   002DFA  26D9               	addwf	fsr2l,f,c
  3966   002DFC  5004               	movf	(fputc@fp+1)^0,w,c
  3967   002DFE  22DA               	addwfc	fsr2h,f,c
  3968   002E00  CFDE F005          	movff	postinc2,??_fputc
  3969   002E04  CFDD F006          	movff	postdec2,??_fputc+1
  3970   002E08  C003  FFD9         	movff	fputc@fp,fsr2l
  3971   002E0C  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3972   002E10  CFDE F007          	movff	postinc2,??_fputc+2
  3973   002E14  CFDD F008          	movff	postdec2,??_fputc+3
  3974   002E18  5005               	movf	??_fputc^0,w,c
  3975   002E1A  2407               	addwf	(??_fputc+2)^0,w,c
  3976   002E1C  6ED9               	movwf	fsr2l,c
  3977   002E1E  5006               	movf	(??_fputc+1)^0,w,c
  3978   002E20  2008               	addwfc	(??_fputc+3)^0,w,c
  3979   002E22  6EDA               	movwf	fsr2h,c
  3980   002E24  C001  FFDF         	movff	fputc@c,indf2
  3981   002E28  EE20 F003          	lfsr	2,3
  3982   002E2C  5003               	movf	fputc@fp^0,w,c
  3983   002E2E  26D9               	addwf	fsr2l,f,c
  3984   002E30  5004               	movf	(fputc@fp+1)^0,w,c
  3985   002E32  22DA               	addwfc	fsr2h,f,c
  3986   002E34  2ADE               	incf	postinc2,f,c
  3987   002E36  0E00               	movlw	0
  3988   002E38  22DD               	addwfc	postdec2,f,c
  3989   002E3A                     l1048:
  3990   002E3A  0012               	return		;funcret
  3991   002E3C                     __end_of_fputc:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _putch *****************
  3995 ;; Defined at:
  3996 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  c               1    wreg     unsigned char 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  c               1    0[COMRAM] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4010 ;;      Params:         0       0       0       0       0       0       0       0       0
  4011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4013 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4014 ;;Total ram usage:        0 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		_fputc
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text11
  4024   0034D8                     __ptext11:
  4025                           	callstack 0
  4026   0034D8                     _putch:
  4027                           	callstack 26
  4028   0034D8  0012               	return		;funcret
  4029   0034DA                     __end_of_putch:
  4030                           	callstack 0
  4031                           
  4032 ;; *************** function _memcpy *****************
  4033 ;; Defined at:
  4034 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memcpy.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  d1              2    0[COMRAM] PTR void 
  4037 ;;		 -> dbuf(80), 
  4038 ;;  s1              2    2[COMRAM] PTR const void 
  4039 ;;		 -> dbuf(80), 
  4040 ;;  n               2    4[COMRAM] unsigned int 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4043 ;;		 -> dbuf(80), 
  4044 ;;  d               2    6[COMRAM] PTR unsigned char 
  4045 ;;		 -> dbuf(80), 
  4046 ;;  tmp             1   10[COMRAM] unsigned char 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2    0[COMRAM] PTR void 
  4049 ;; Registers used:
  4050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4056 ;;      Params:         6       0       0       0       0       0       0       0       0
  4057 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4059 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4060 ;;Total ram usage:       11 bytes
  4061 ;; Hardware stack levels used: 1
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_efgtoa
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text12
  4070   00328A                     __ptext12:
  4071                           	callstack 0
  4072   00328A                     _memcpy:
  4073                           	callstack 26
  4074   00328A  C003  F009         	movff	memcpy@s1,memcpy@s
  4075   00328E  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4076   003292  C001  F007         	movff	memcpy@d1,memcpy@d
  4077   003296  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4078   00329A  EF5F  F019         	goto	l3249
  4079   00329E                     l3241:
  4080   00329E  C009  FFD9         	movff	memcpy@s,fsr2l
  4081   0032A2  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4082   0032A6  50DF               	movf	indf2,w,c
  4083   0032A8  6E0B               	movwf	memcpy@tmp^0,c
  4084   0032AA  4A09               	infsnz	memcpy@s^0,f,c
  4085   0032AC  2A0A               	incf	(memcpy@s+1)^0,f,c
  4086   0032AE  C007  FFD9         	movff	memcpy@d,fsr2l
  4087   0032B2  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4088   0032B6  C00B  FFDF         	movff	memcpy@tmp,indf2
  4089   0032BA  4A07               	infsnz	memcpy@d^0,f,c
  4090   0032BC  2A08               	incf	(memcpy@d+1)^0,f,c
  4091   0032BE                     l3249:
  4092   0032BE  0605               	decf	memcpy@n^0,f,c
  4093   0032C0  A0D8               	btfss	status,0,c
  4094   0032C2  0606               	decf	(memcpy@n+1)^0,f,c
  4095   0032C4  2805               	incf	memcpy@n^0,w,c
  4096   0032C6  E106               	bnz	u3251
  4097   0032C8  2806               	incf	(memcpy@n+1)^0,w,c
  4098   0032CA  A4D8               	btfss	status,2,c
  4099   0032CC  EF6A  F019         	goto	u3251
  4100   0032D0  EF6C  F019         	goto	u3250
  4101   0032D4                     u3251:
  4102   0032D4  EF4F  F019         	goto	l3241
  4103   0032D8                     u3250:
  4104   0032D8  0012               	return		;funcret
  4105   0032DA                     __end_of_memcpy:
  4106                           	callstack 0
  4107                           
  4108 ;; *************** function _labs *****************
  4109 ;; Defined at:
  4110 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\labs.c"
  4111 ;; Parameters:    Size  Location     Type
  4112 ;;  a               4    0[COMRAM] long 
  4113 ;; Auto vars:     Size  Location     Type
  4114 ;;		None
  4115 ;; Return value:  Size  Location     Type
  4116 ;;                  4    0[COMRAM] long 
  4117 ;; Registers used:
  4118 ;;		wreg, status,2, status,0
  4119 ;; Tracked objects:
  4120 ;;		On entry : 0/0
  4121 ;;		On exit  : 0/0
  4122 ;;		Unchanged: 0/0
  4123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4124 ;;      Params:         4       0       0       0       0       0       0       0       0
  4125 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4126 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4127 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4128 ;;Total ram usage:        8 bytes
  4129 ;; Hardware stack levels used: 1
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_efgtoa
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text13
  4138   003126                     __ptext13:
  4139                           	callstack 0
  4140   003126                     _labs:
  4141                           	callstack 26
  4142   003126  BE04               	btfsc	(labs@a+3)^0,7,c
  4143   003128  EFA2  F018         	goto	u3140
  4144   00312C  5004               	movf	(labs@a+3)^0,w,c
  4145   00312E  1003               	iorwf	(labs@a+2)^0,w,c
  4146   003130  1002               	iorwf	(labs@a+1)^0,w,c
  4147   003132  E106               	bnz	u3141
  4148   003134  0401               	decf	labs@a^0,w,c
  4149   003136  B0D8               	btfsc	status,0,c
  4150   003138  EFA0  F018         	goto	u3141
  4151   00313C  EFA2  F018         	goto	u3140
  4152   003140                     u3141:
  4153   003140  EFBD  F018         	goto	l1027
  4154   003144                     u3140:
  4155   003144  C001  F005         	movff	labs@a,??_labs
  4156   003148  C002  F006         	movff	labs@a+1,??_labs+1
  4157   00314C  C003  F007         	movff	labs@a+2,??_labs+2
  4158   003150  C004  F008         	movff	labs@a+3,??_labs+3
  4159   003154  1E05               	comf	??_labs^0,f,c
  4160   003156  1E06               	comf	(??_labs+1)^0,f,c
  4161   003158  1E07               	comf	(??_labs+2)^0,f,c
  4162   00315A  1E08               	comf	(??_labs+3)^0,f,c
  4163   00315C  2A05               	incf	??_labs^0,f,c
  4164   00315E  0E00               	movlw	0
  4165   003160  2206               	addwfc	(??_labs+1)^0,f,c
  4166   003162  2207               	addwfc	(??_labs+2)^0,f,c
  4167   003164  2208               	addwfc	(??_labs+3)^0,f,c
  4168   003166  C005  F001         	movff	??_labs,?_labs
  4169   00316A  C006  F002         	movff	??_labs+1,?_labs+1
  4170   00316E  C007  F003         	movff	??_labs+2,?_labs+2
  4171   003172  C008  F004         	movff	??_labs+3,?_labs+3
  4172   003176  EFC5  F018         	goto	l1030
  4173   00317A                     l1027:
  4174   00317A  C001  F001         	movff	labs@a,?_labs
  4175   00317E  C002  F002         	movff	labs@a+1,?_labs+1
  4176   003182  C003  F003         	movff	labs@a+2,?_labs+2
  4177   003186  C004  F004         	movff	labs@a+3,?_labs+3
  4178   00318A                     l1030:
  4179   00318A  0012               	return		;funcret
  4180   00318C                     __end_of_labs:
  4181                           	callstack 0
  4182                           
  4183 ;; *************** function _floorf *****************
  4184 ;; Defined at:
  4185 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\floorf.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  x               4   64[COMRAM] float 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;  u               4   80[COMRAM] struct .
  4190 ;;  m               4   74[COMRAM] unsigned long 
  4191 ;;  e               2   78[COMRAM] int 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  4   64[COMRAM] float 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4201 ;;      Params:         4       0       0       0       0       0       0       0       0
  4202 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4203 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4204 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4205 ;;Total ram usage:       20 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_efgtoa
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text14
  4215   0025D2                     __ptext14:
  4216                           	callstack 0
  4217   0025D2                     _floorf:
  4218                           	callstack 26
  4219   0025D2  C0BB  F051         	movff	floorf@F526,floorf@u
  4220   0025D6  C0BC  F052         	movff	floorf@F526+1,floorf@u+1
  4221   0025DA  C0BD  F053         	movff	floorf@F526+2,floorf@u+2
  4222   0025DE  C0BE  F054         	movff	floorf@F526+3,floorf@u+3
  4223   0025E2  C041  F051         	movff	floorf@x,floorf@u
  4224   0025E6  C042  F052         	movff	floorf@x+1,floorf@u+1
  4225   0025EA  C043  F053         	movff	floorf@x+2,floorf@u+2
  4226   0025EE  C044  F054         	movff	floorf@x+3,floorf@u+3
  4227   0025F2  0E81               	movlw	129
  4228   0025F4  6E45               	movwf	??_floorf^0,c
  4229   0025F6  0EFF               	movlw	255
  4230   0025F8  6E46               	movwf	(??_floorf+1)^0,c
  4231   0025FA  C051  F047         	movff	floorf@u,??_floorf+2
  4232   0025FE  C052  F048         	movff	floorf@u+1,??_floorf+3
  4233   002602  C053  F049         	movff	floorf@u+2,??_floorf+4
  4234   002606  C054  F04A         	movff	floorf@u+3,??_floorf+5
  4235   00260A  0E18               	movlw	24
  4236   00260C  EF0D  F013         	goto	u3150
  4237   002610                     u3155:
  4238   002610  90D8               	bcf	status,0,c
  4239   002612  324A               	rrcf	(??_floorf+5)^0,f,c
  4240   002614  3249               	rrcf	(??_floorf+4)^0,f,c
  4241   002616  3248               	rrcf	(??_floorf+3)^0,f,c
  4242   002618  3247               	rrcf	(??_floorf+2)^0,f,c
  4243   00261A                     u3150:
  4244   00261A  2EE8               	decfsz	wreg,f,c
  4245   00261C  EF08  F013         	goto	u3155
  4246   002620  5047               	movf	(??_floorf+2)^0,w,c
  4247   002622  2445               	addwf	??_floorf^0,w,c
  4248   002624  6E4F               	movwf	floorf@e^0,c
  4249   002626  0E00               	movlw	0
  4250   002628  2046               	addwfc	(??_floorf+1)^0,w,c
  4251   00262A  6E50               	movwf	(floorf@e+1)^0,c
  4252   00262C  BE50               	btfsc	(floorf@e+1)^0,7,c
  4253   00262E  EF22  F013         	goto	u3161
  4254   002632  5050               	movf	(floorf@e+1)^0,w,c
  4255   002634  E109               	bnz	u3160
  4256   002636  0E17               	movlw	23
  4257   002638  5C4F               	subwf	floorf@e^0,w,c
  4258   00263A  A0D8               	btfss	status,0,c
  4259   00263C  EF22  F013         	goto	u3161
  4260   002640  EF24  F013         	goto	u3160
  4261   002644                     u3161:
  4262   002644  EF2E  F013         	goto	l3217
  4263   002648                     u3160:
  4264   002648                     l3215:
  4265   002648  C041  F041         	movff	floorf@x,?_floorf
  4266   00264C  C042  F042         	movff	floorf@x+1,?_floorf+1
  4267   002650  C043  F043         	movff	floorf@x+2,?_floorf+2
  4268   002654  C044  F044         	movff	floorf@x+3,?_floorf+3
  4269   002658  EFF1  F013         	goto	l1016
  4270   00265C                     l3217:
  4271   00265C  BE50               	btfsc	(floorf@e+1)^0,7,c
  4272   00265E  EF33  F013         	goto	u3171
  4273   002662  EF35  F013         	goto	u3170
  4274   002666                     u3171:
  4275   002666  EFA5  F013         	goto	l3227
  4276   00266A                     u3170:
  4277   00266A  C04F  F045         	movff	floorf@e,??_floorf
  4278   00266E  0EFF               	movlw	255
  4279   002670  6E46               	movwf	(??_floorf+1)^0,c
  4280   002672  0EFF               	movlw	255
  4281   002674  6E47               	movwf	(??_floorf+2)^0,c
  4282   002676  0E7F               	movlw	127
  4283   002678  6E48               	movwf	(??_floorf+3)^0,c
  4284   00267A  0E00               	movlw	0
  4285   00267C  6E49               	movwf	(??_floorf+4)^0,c
  4286   00267E                     u3185:
  4287   00267E  6645               	tstfsz	??_floorf^0,c
  4288   002680  EF44  F013         	goto	u3186
  4289   002684  EF4C  F013         	goto	u3187
  4290   002688                     u3186:
  4291   002688  3449               	rlcf	(??_floorf+4)^0,w,c
  4292   00268A  3249               	rrcf	(??_floorf+4)^0,f,c
  4293   00268C  3248               	rrcf	(??_floorf+3)^0,f,c
  4294   00268E  3247               	rrcf	(??_floorf+2)^0,f,c
  4295   002690  3246               	rrcf	(??_floorf+1)^0,f,c
  4296   002692  2E45               	decfsz	??_floorf^0,f,c
  4297   002694  EF3F  F013         	goto	u3185
  4298   002698                     u3187:
  4299   002698  C046  F04B         	movff	??_floorf+1,floorf@m
  4300   00269C  C047  F04C         	movff	??_floorf+2,floorf@m+1
  4301   0026A0  C048  F04D         	movff	??_floorf+3,floorf@m+2
  4302   0026A4  C049  F04E         	movff	??_floorf+4,floorf@m+3
  4303   0026A8  504B               	movf	floorf@m^0,w,c
  4304   0026AA  1451               	andwf	floorf@u^0,w,c
  4305   0026AC  6E45               	movwf	??_floorf^0,c
  4306   0026AE  504C               	movf	(floorf@m+1)^0,w,c
  4307   0026B0  1452               	andwf	(floorf@u+1)^0,w,c
  4308   0026B2  6E46               	movwf	(??_floorf+1)^0,c
  4309   0026B4  504D               	movf	(floorf@m+2)^0,w,c
  4310   0026B6  1453               	andwf	(floorf@u+2)^0,w,c
  4311   0026B8  6E47               	movwf	(??_floorf+2)^0,c
  4312   0026BA  504E               	movf	(floorf@m+3)^0,w,c
  4313   0026BC  1454               	andwf	(floorf@u+3)^0,w,c
  4314   0026BE  6E48               	movwf	(??_floorf+3)^0,c
  4315   0026C0  5045               	movf	??_floorf^0,w,c
  4316   0026C2  1046               	iorwf	(??_floorf+1)^0,w,c
  4317   0026C4  1047               	iorwf	(??_floorf+2)^0,w,c
  4318   0026C6  1048               	iorwf	(??_floorf+3)^0,w,c
  4319   0026C8  A4D8               	btfss	status,2,c
  4320   0026CA  EF69  F013         	goto	u3191
  4321   0026CE  EF6B  F013         	goto	u3190
  4322   0026D2                     u3191:
  4323   0026D2  EF6D  F013         	goto	l3223
  4324   0026D6                     u3190:
  4325   0026D6  EF24  F013         	goto	l3215
  4326   0026DA                     l3223:
  4327   0026DA  C051  F045         	movff	floorf@u,??_floorf
  4328   0026DE  C052  F046         	movff	floorf@u+1,??_floorf+1
  4329   0026E2  C053  F047         	movff	floorf@u+2,??_floorf+2
  4330   0026E6  C054  F048         	movff	floorf@u+3,??_floorf+3
  4331   0026EA  0E20               	movlw	32
  4332   0026EC  EF7D  F013         	goto	u3200
  4333   0026F0                     u3205:
  4334   0026F0  90D8               	bcf	status,0,c
  4335   0026F2  3248               	rrcf	(??_floorf+3)^0,f,c
  4336   0026F4  3247               	rrcf	(??_floorf+2)^0,f,c
  4337   0026F6  3246               	rrcf	(??_floorf+1)^0,f,c
  4338   0026F8  3245               	rrcf	??_floorf^0,f,c
  4339   0026FA                     u3200:
  4340   0026FA  2EE8               	decfsz	wreg,f,c
  4341   0026FC  EF78  F013         	goto	u3205
  4342   002700  5045               	movf	??_floorf^0,w,c
  4343   002702  1046               	iorwf	(??_floorf+1)^0,w,c
  4344   002704  1047               	iorwf	(??_floorf+2)^0,w,c
  4345   002706  1048               	iorwf	(??_floorf+3)^0,w,c
  4346   002708  B4D8               	btfsc	status,2,c
  4347   00270A  EF89  F013         	goto	u3211
  4348   00270E  EF8B  F013         	goto	u3210
  4349   002712                     u3211:
  4350   002712  EF93  F013         	goto	l1019
  4351   002716                     u3210:
  4352   002716  504B               	movf	floorf@m^0,w,c
  4353   002718  2651               	addwf	floorf@u^0,f,c
  4354   00271A  504C               	movf	(floorf@m+1)^0,w,c
  4355   00271C  2252               	addwfc	(floorf@u+1)^0,f,c
  4356   00271E  504D               	movf	(floorf@m+2)^0,w,c
  4357   002720  2253               	addwfc	(floorf@u+2)^0,f,c
  4358   002722  504E               	movf	(floorf@m+3)^0,w,c
  4359   002724  2254               	addwfc	(floorf@u+3)^0,f,c
  4360   002726                     l1019:
  4361   002726  1C4B               	comf	floorf@m^0,w,c
  4362   002728  6E45               	movwf	??_floorf^0,c
  4363   00272A  1C4C               	comf	(floorf@m+1)^0,w,c
  4364   00272C  6E46               	movwf	(??_floorf+1)^0,c
  4365   00272E  1C4D               	comf	(floorf@m+2)^0,w,c
  4366   002730  6E47               	movwf	(??_floorf+2)^0,c
  4367   002732  1C4E               	comf	(floorf@m+3)^0,w,c
  4368   002734  6E48               	movwf	(??_floorf+3)^0,c
  4369   002736  5045               	movf	??_floorf^0,w,c
  4370   002738  1651               	andwf	floorf@u^0,f,c
  4371   00273A  5046               	movf	(??_floorf+1)^0,w,c
  4372   00273C  1652               	andwf	(floorf@u+1)^0,f,c
  4373   00273E  5047               	movf	(??_floorf+2)^0,w,c
  4374   002740  1653               	andwf	(floorf@u+2)^0,f,c
  4375   002742  5048               	movf	(??_floorf+3)^0,w,c
  4376   002744  1654               	andwf	(floorf@u+3)^0,f,c
  4377   002746  EFE9  F013         	goto	l3235
  4378   00274A                     l3227:
  4379   00274A  C051  F045         	movff	floorf@u,??_floorf
  4380   00274E  C052  F046         	movff	floorf@u+1,??_floorf+1
  4381   002752  C053  F047         	movff	floorf@u+2,??_floorf+2
  4382   002756  C054  F048         	movff	floorf@u+3,??_floorf+3
  4383   00275A  0E20               	movlw	32
  4384   00275C  EFB5  F013         	goto	u3220
  4385   002760                     u3225:
  4386   002760  90D8               	bcf	status,0,c
  4387   002762  3248               	rrcf	(??_floorf+3)^0,f,c
  4388   002764  3247               	rrcf	(??_floorf+2)^0,f,c
  4389   002766  3246               	rrcf	(??_floorf+1)^0,f,c
  4390   002768  3245               	rrcf	??_floorf^0,f,c
  4391   00276A                     u3220:
  4392   00276A  2EE8               	decfsz	wreg,f,c
  4393   00276C  EFB0  F013         	goto	u3225
  4394   002770  5045               	movf	??_floorf^0,w,c
  4395   002772  1046               	iorwf	(??_floorf+1)^0,w,c
  4396   002774  1047               	iorwf	(??_floorf+2)^0,w,c
  4397   002776  1048               	iorwf	(??_floorf+3)^0,w,c
  4398   002778  A4D8               	btfss	status,2,c
  4399   00277A  EFC1  F013         	goto	u3231
  4400   00277E  EFC3  F013         	goto	u3230
  4401   002782                     u3231:
  4402   002782  EFCD  F013         	goto	l3231
  4403   002786                     u3230:
  4404   002786  0E00               	movlw	0
  4405   002788  6E51               	movwf	floorf@u^0,c
  4406   00278A  0E00               	movlw	0
  4407   00278C  6E52               	movwf	(floorf@u+1)^0,c
  4408   00278E  0E00               	movlw	0
  4409   002790  6E53               	movwf	(floorf@u+2)^0,c
  4410   002792  0E00               	movlw	0
  4411   002794  6E54               	movwf	(floorf@u+3)^0,c
  4412   002796  EFE9  F013         	goto	l3235
  4413   00279A                     l3231:
  4414   00279A  90D8               	bcf	status,0,c
  4415   00279C  3451               	rlcf	floorf@u^0,w,c
  4416   00279E  6E45               	movwf	??_floorf^0,c
  4417   0027A0  3452               	rlcf	(floorf@u+1)^0,w,c
  4418   0027A2  6E46               	movwf	(??_floorf+1)^0,c
  4419   0027A4  3453               	rlcf	(floorf@u+2)^0,w,c
  4420   0027A6  6E47               	movwf	(??_floorf+2)^0,c
  4421   0027A8  3454               	rlcf	(floorf@u+3)^0,w,c
  4422   0027AA  6E48               	movwf	(??_floorf+3)^0,c
  4423   0027AC  5045               	movf	??_floorf^0,w,c
  4424   0027AE  1046               	iorwf	(??_floorf+1)^0,w,c
  4425   0027B0  1047               	iorwf	(??_floorf+2)^0,w,c
  4426   0027B2  1048               	iorwf	(??_floorf+3)^0,w,c
  4427   0027B4  B4D8               	btfsc	status,2,c
  4428   0027B6  EFDF  F013         	goto	u3241
  4429   0027BA  EFE1  F013         	goto	u3240
  4430   0027BE                     u3241:
  4431   0027BE  EFE9  F013         	goto	l3235
  4432   0027C2                     u3240:
  4433   0027C2  0E00               	movlw	0
  4434   0027C4  6E51               	movwf	floorf@u^0,c
  4435   0027C6  0E00               	movlw	0
  4436   0027C8  6E52               	movwf	(floorf@u+1)^0,c
  4437   0027CA  0E80               	movlw	128
  4438   0027CC  6E53               	movwf	(floorf@u+2)^0,c
  4439   0027CE  0EBF               	movlw	191
  4440   0027D0  6E54               	movwf	(floorf@u+3)^0,c
  4441   0027D2                     l3235:
  4442   0027D2  C051  F041         	movff	floorf@u,?_floorf
  4443   0027D6  C052  F042         	movff	floorf@u+1,?_floorf+1
  4444   0027DA  C053  F043         	movff	floorf@u+2,?_floorf+2
  4445   0027DE  C054  F044         	movff	floorf@u+3,?_floorf+3
  4446   0027E2                     l1016:
  4447   0027E2  0012               	return		;funcret
  4448   0027E4                     __end_of_floorf:
  4449                           	callstack 0
  4450                           
  4451 ;; *************** function ___fpclassifyf *****************
  4452 ;; Defined at:
  4453 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__fpclassifyf.c"
  4454 ;; Parameters:    Size  Location     Type
  4455 ;;  x               4    0[COMRAM] float 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;  u               4   10[COMRAM] struct .
  4458 ;;  e               2    8[COMRAM] int 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  2    0[COMRAM] int 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4468 ;;      Params:         4       0       0       0       0       0       0       0       0
  4469 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4470 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4471 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4472 ;;Total ram usage:       14 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; This function calls:
  4475 ;;		Nothing
  4476 ;; This function is called by:
  4477 ;;		_efgtoa
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text15
  4482   002BA2                     __ptext15:
  4483                           	callstack 0
  4484   002BA2                     ___fpclassifyf:
  4485                           	callstack 26
  4486   002BA2  C0BF  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4487   002BA6  C0C0  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4488   002BAA  C0C1  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4489   002BAE  C0C2  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4490   002BB2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4491   002BB6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4492   002BBA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4493   002BBE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4494   002BC2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4495   002BC6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4496   002BCA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4497   002BCE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4498   002BD2  0E18               	movlw	24
  4499   002BD4  EFF1  F015         	goto	u3060
  4500   002BD8                     u3065:
  4501   002BD8  90D8               	bcf	status,0,c
  4502   002BDA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4503   002BDC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4504   002BDE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4505   002BE0  3205               	rrcf	??___fpclassifyf^0,f,c
  4506   002BE2                     u3060:
  4507   002BE2  2EE8               	decfsz	wreg,f,c
  4508   002BE4  EFEC  F015         	goto	u3065
  4509   002BE8  5005               	movf	??___fpclassifyf^0,w,c
  4510   002BEA  6E09               	movwf	___fpclassifyf@e^0,c
  4511   002BEC  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4512   002BEE  5009               	movf	___fpclassifyf@e^0,w,c
  4513   002BF0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4514   002BF2  A4D8               	btfss	status,2,c
  4515   002BF4  EFFE  F015         	goto	u3071
  4516   002BF8  EF00  F016         	goto	u3070
  4517   002BFC                     u3071:
  4518   002BFC  EF20  F016         	goto	l3193
  4519   002C00                     u3070:
  4520   002C00  90D8               	bcf	status,0,c
  4521   002C02  340B               	rlcf	___fpclassifyf@u^0,w,c
  4522   002C04  6E05               	movwf	??___fpclassifyf^0,c
  4523   002C06  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4524   002C08  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4525   002C0A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4526   002C0C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4527   002C0E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4528   002C10  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4529   002C12  5005               	movf	??___fpclassifyf^0,w,c
  4530   002C14  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4531   002C16  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4532   002C18  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4533   002C1A  A4D8               	btfss	status,2,c
  4534   002C1C  EF12  F016         	goto	u3081
  4535   002C20  EF14  F016         	goto	u3080
  4536   002C24                     u3081:
  4537   002C24  EF1A  F016         	goto	l3189
  4538   002C28                     u3080:
  4539   002C28  0E00               	movlw	0
  4540   002C2A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4541   002C2C  0E02               	movlw	2
  4542   002C2E  6E01               	movwf	?___fpclassifyf^0,c
  4543   002C30  EF4F  F016         	goto	l1009
  4544   002C34                     l3189:
  4545   002C34  0E00               	movlw	0
  4546   002C36  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4547   002C38  0E03               	movlw	3
  4548   002C3A  6E01               	movwf	?___fpclassifyf^0,c
  4549   002C3C  EF4F  F016         	goto	l1009
  4550   002C40                     l3193:
  4551   002C40  2809               	incf	___fpclassifyf@e^0,w,c
  4552   002C42  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4553   002C44  A4D8               	btfss	status,2,c
  4554   002C46  EF27  F016         	goto	u3091
  4555   002C4A  EF29  F016         	goto	u3090
  4556   002C4E                     u3091:
  4557   002C4E  EF4B  F016         	goto	l3199
  4558   002C52                     u3090:
  4559   002C52  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4560   002C56  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4561   002C5A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4562   002C5E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4563   002C62  0E09               	movlw	9
  4564   002C64                     u3105:
  4565   002C64  90D8               	bcf	status,0,c
  4566   002C66  3605               	rlcf	??___fpclassifyf^0,f,c
  4567   002C68  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4568   002C6A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4569   002C6C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4570   002C6E  2EE8               	decfsz	wreg,f,c
  4571   002C70  EF32  F016         	goto	u3105
  4572   002C74  5005               	movf	??___fpclassifyf^0,w,c
  4573   002C76  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4574   002C78  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4575   002C7A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4576   002C7C  B4D8               	btfsc	status,2,c
  4577   002C7E  EF43  F016         	goto	u3111
  4578   002C82  EF46  F016         	goto	u3110
  4579   002C86                     u3111:
  4580   002C86  0E01               	movlw	1
  4581   002C88  EF47  F016         	goto	u3120
  4582   002C8C                     u3110:
  4583   002C8C  0E00               	movlw	0
  4584   002C8E                     u3120:
  4585   002C8E  6E01               	movwf	?___fpclassifyf^0,c
  4586   002C90  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4587   002C92  EF4F  F016         	goto	l1009
  4588   002C96                     l3199:
  4589   002C96  0E00               	movlw	0
  4590   002C98  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4591   002C9A  0E04               	movlw	4
  4592   002C9C  6E01               	movwf	?___fpclassifyf^0,c
  4593   002C9E                     l1009:
  4594   002C9E  0012               	return		;funcret
  4595   002CA0                     __end_of___fpclassifyf:
  4596                           	callstack 0
  4597                           
  4598 ;; *************** function ___fltol *****************
  4599 ;; Defined at:
  4600 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  f1              4    0[COMRAM] int 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  exp1            1    9[COMRAM] unsigned char 
  4605 ;;  sign1           1    8[COMRAM] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  4    0[COMRAM] long 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4615 ;;      Params:         4       0       0       0       0       0       0       0       0
  4616 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4617 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4618 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4619 ;;Total ram usage:       10 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		_efgtoa
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text16
  4629   002998                     __ptext16:
  4630                           	callstack 0
  4631   002998                     ___fltol:
  4632                           	callstack 26
  4633   002998  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4634   00299A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4635   00299C  6E0A               	movwf	___fltol@exp1^0,c
  4636   00299E  500A               	movf	___fltol@exp1^0,w,c
  4637   0029A0  A4D8               	btfss	status,2,c
  4638   0029A2  EFD5  F014         	goto	u2971
  4639   0029A6  EFD7  F014         	goto	u2970
  4640   0029AA                     u2971:
  4641   0029AA  EFE1  F014         	goto	l3129
  4642   0029AE                     u2970:
  4643   0029AE                     l3125:
  4644   0029AE  0E00               	movlw	0
  4645   0029B0  6E01               	movwf	?___fltol^0,c
  4646   0029B2  0E00               	movlw	0
  4647   0029B4  6E02               	movwf	(?___fltol+1)^0,c
  4648   0029B6  0E00               	movlw	0
  4649   0029B8  6E03               	movwf	(?___fltol+2)^0,c
  4650   0029BA  0E00               	movlw	0
  4651   0029BC  6E04               	movwf	(?___fltol+3)^0,c
  4652   0029BE  EF4E  F015         	goto	l484
  4653   0029C2                     l3129:
  4654   0029C2  C001  F005         	movff	___fltol@f1,??___fltol
  4655   0029C6  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4656   0029CA  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4657   0029CE  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4658   0029D2  0E20               	movlw	32
  4659   0029D4  EFF1  F014         	goto	u2980
  4660   0029D8                     u2985:
  4661   0029D8  90D8               	bcf	status,0,c
  4662   0029DA  3208               	rrcf	(??___fltol+3)^0,f,c
  4663   0029DC  3207               	rrcf	(??___fltol+2)^0,f,c
  4664   0029DE  3206               	rrcf	(??___fltol+1)^0,f,c
  4665   0029E0  3205               	rrcf	??___fltol^0,f,c
  4666   0029E2                     u2980:
  4667   0029E2  2EE8               	decfsz	wreg,f,c
  4668   0029E4  EFEC  F014         	goto	u2985
  4669   0029E8  5005               	movf	??___fltol^0,w,c
  4670   0029EA  6E09               	movwf	___fltol@sign1^0,c
  4671   0029EC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4672   0029EE  0EFF               	movlw	255
  4673   0029F0  1601               	andwf	___fltol@f1^0,f,c
  4674   0029F2  0EFF               	movlw	255
  4675   0029F4  1602               	andwf	(___fltol@f1+1)^0,f,c
  4676   0029F6  0EFF               	movlw	255
  4677   0029F8  1603               	andwf	(___fltol@f1+2)^0,f,c
  4678   0029FA  0E00               	movlw	0
  4679   0029FC  1604               	andwf	(___fltol@f1+3)^0,f,c
  4680   0029FE  0E96               	movlw	150
  4681   002A00  5E0A               	subwf	___fltol@exp1^0,f,c
  4682   002A02  BE0A               	btfsc	___fltol@exp1^0,7,c
  4683   002A04  EF08  F015         	goto	u2990
  4684   002A08  EF06  F015         	goto	u2991
  4685   002A0C                     u2991:
  4686   002A0C  EF1E  F015         	goto	l3149
  4687   002A10                     u2990:
  4688   002A10  500A               	movf	___fltol@exp1^0,w,c
  4689   002A12  0A80               	xorlw	128
  4690   002A14  0F97               	addlw	151
  4691   002A16  B0D8               	btfsc	status,0,c
  4692   002A18  EF10  F015         	goto	u3001
  4693   002A1C  EF12  F015         	goto	u3000
  4694   002A20                     u3001:
  4695   002A20  EF14  F015         	goto	l3145
  4696   002A24                     u3000:
  4697   002A24  EFD7  F014         	goto	l3125
  4698   002A28                     l3145:
  4699   002A28  90D8               	bcf	status,0,c
  4700   002A2A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4701   002A2C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4702   002A2E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4703   002A30  3201               	rrcf	___fltol@f1^0,f,c
  4704   002A32  3E0A               	incfsz	___fltol@exp1^0,f,c
  4705   002A34  EF14  F015         	goto	l3145
  4706   002A38  EF36  F015         	goto	l3159
  4707   002A3C                     l3149:
  4708   002A3C  0E1F               	movlw	31
  4709   002A3E  640A               	cpfsgt	___fltol@exp1^0,c
  4710   002A40  EF24  F015         	goto	u3011
  4711   002A44  EF26  F015         	goto	u3010
  4712   002A48                     u3011:
  4713   002A48  EF2E  F015         	goto	l3157
  4714   002A4C                     u3010:
  4715   002A4C  EFD7  F014         	goto	l3125
  4716   002A50                     l3155:
  4717   002A50  90D8               	bcf	status,0,c
  4718   002A52  3601               	rlcf	___fltol@f1^0,f,c
  4719   002A54  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4720   002A56  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4721   002A58  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4722   002A5A  060A               	decf	___fltol@exp1^0,f,c
  4723   002A5C                     l3157:
  4724   002A5C  500A               	movf	___fltol@exp1^0,w,c
  4725   002A5E  A4D8               	btfss	status,2,c
  4726   002A60  EF34  F015         	goto	u3021
  4727   002A64  EF36  F015         	goto	u3020
  4728   002A68                     u3021:
  4729   002A68  EF28  F015         	goto	l3155
  4730   002A6C                     u3020:
  4731   002A6C                     l3159:
  4732   002A6C  5009               	movf	___fltol@sign1^0,w,c
  4733   002A6E  B4D8               	btfsc	status,2,c
  4734   002A70  EF3C  F015         	goto	u3031
  4735   002A74  EF3E  F015         	goto	u3030
  4736   002A78                     u3031:
  4737   002A78  EF46  F015         	goto	l3163
  4738   002A7C                     u3030:
  4739   002A7C  1E04               	comf	(___fltol@f1+3)^0,f,c
  4740   002A7E  1E03               	comf	(___fltol@f1+2)^0,f,c
  4741   002A80  1E02               	comf	(___fltol@f1+1)^0,f,c
  4742   002A82  6C01               	negf	___fltol@f1^0,c
  4743   002A84  0E00               	movlw	0
  4744   002A86  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4745   002A88  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4746   002A8A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4747   002A8C                     l3163:
  4748   002A8C  C001  F001         	movff	___fltol@f1,?___fltol
  4749   002A90  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4750   002A94  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4751   002A98  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4752   002A9C                     l484:
  4753   002A9C  0012               	return		;funcret
  4754   002A9E                     __end_of___fltol:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function ___flsub *****************
  4758 ;; Defined at:
  4759 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  b               4   39[COMRAM] long 
  4762 ;;  a               4   43[COMRAM] long 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  4   39[COMRAM] long 
  4767 ;; Registers used:
  4768 ;;		wreg, status,2, status,0, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4774 ;;      Params:         8       0       0       0       0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4777 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4778 ;;Total ram usage:        8 bytes
  4779 ;; Hardware stack levels used: 1
  4780 ;; Hardware stack levels required when called: 1
  4781 ;; This function calls:
  4782 ;;		___fladd
  4783 ;; This function is called by:
  4784 ;;		_efgtoa
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text17
  4789   0032DA                     __ptext17:
  4790                           	callstack 0
  4791   0032DA                     ___flsub:
  4792                           	callstack 25
  4793   0032DA  0E00               	movlw	0
  4794   0032DC  1A2C               	xorwf	___flsub@a^0,f,c
  4795   0032DE  0E00               	movlw	0
  4796   0032E0  1A2D               	xorwf	(___flsub@a+1)^0,f,c
  4797   0032E2  0E00               	movlw	0
  4798   0032E4  1A2E               	xorwf	(___flsub@a+2)^0,f,c
  4799   0032E6  0E80               	movlw	128
  4800   0032E8  1A2F               	xorwf	(___flsub@a+3)^0,f,c
  4801   0032EA  C028  F001         	movff	___flsub@b,___fladd@b
  4802   0032EE  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  4803   0032F2  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  4804   0032F6  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  4805   0032FA  C02C  F005         	movff	___flsub@a,___fladd@a
  4806   0032FE  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  4807   003302  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  4808   003306  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  4809   00330A  EC55  F009         	call	___fladd	;wreg free
  4810   00330E  C001  F028         	movff	?___fladd,?___flsub
  4811   003312  C002  F029         	movff	?___fladd+1,?___flsub+1
  4812   003316  C003  F02A         	movff	?___fladd+2,?___flsub+2
  4813   00331A  C004  F02B         	movff	?___fladd+3,?___flsub+3
  4814   00331E  0012               	return		;funcret
  4815   003320                     __end_of___flsub:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function ___fladd *****************
  4819 ;; Defined at:
  4820 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  b               4    0[COMRAM] long 
  4823 ;;  a               4    4[COMRAM] long 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  grs             1   15[COMRAM] unsigned char 
  4826 ;;  bexp            1   14[COMRAM] unsigned char 
  4827 ;;  aexp            1   13[COMRAM] unsigned char 
  4828 ;;  signs           1   12[COMRAM] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  4    0[COMRAM] unsigned char 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4838 ;;      Params:         8       0       0       0       0       0       0       0       0
  4839 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4840 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4841 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4842 ;;Total ram usage:       16 bytes
  4843 ;; Hardware stack levels used: 1
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		___flsub
  4848 ;;		_efgtoa
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text18
  4853   0012AA                     __ptext18:
  4854                           	callstack 0
  4855   0012AA                     ___fladd:
  4856                           	callstack 25
  4857   0012AA  5004               	movf	(___fladd@b+3)^0,w,c
  4858   0012AC  0B80               	andlw	128
  4859   0012AE  6E0D               	movwf	___fladd@signs^0,c
  4860   0012B0  5004               	movf	(___fladd@b+3)^0,w,c
  4861   0012B2  2404               	addwf	(___fladd@b+3)^0,w,c
  4862   0012B4  6E0F               	movwf	___fladd@bexp^0,c
  4863   0012B6  AE03               	btfss	(___fladd@b+2)^0,7,c
  4864   0012B8  EF60  F009         	goto	u2061
  4865   0012BC  EF62  F009         	goto	u2060
  4866   0012C0                     u2061:
  4867   0012C0  EF63  F009         	goto	l2593
  4868   0012C4                     u2060:
  4869   0012C4  800F               	bsf	___fladd@bexp^0,0,c
  4870   0012C6                     l2593:
  4871   0012C6  500F               	movf	___fladd@bexp^0,w,c
  4872   0012C8  B4D8               	btfsc	status,2,c
  4873   0012CA  EF69  F009         	goto	u2071
  4874   0012CE  EF6B  F009         	goto	u2070
  4875   0012D2                     u2071:
  4876   0012D2  EF80  F009         	goto	l2603
  4877   0012D6                     u2070:
  4878   0012D6  280F               	incf	___fladd@bexp^0,w,c
  4879   0012D8  A4D8               	btfss	status,2,c
  4880   0012DA  EF71  F009         	goto	u2081
  4881   0012DE  EF73  F009         	goto	u2080
  4882   0012E2                     u2081:
  4883   0012E2  EF7B  F009         	goto	l2599
  4884   0012E6                     u2080:
  4885   0012E6  0E00               	movlw	0
  4886   0012E8  6E01               	movwf	___fladd@b^0,c
  4887   0012EA  0E00               	movlw	0
  4888   0012EC  6E02               	movwf	(___fladd@b+1)^0,c
  4889   0012EE  0E00               	movlw	0
  4890   0012F0  6E03               	movwf	(___fladd@b+2)^0,c
  4891   0012F2  0E00               	movlw	0
  4892   0012F4  6E04               	movwf	(___fladd@b+3)^0,c
  4893   0012F6                     l2599:
  4894   0012F6  8E03               	bsf	(___fladd@b+2)^0,7,c
  4895   0012F8  0E00               	movlw	0
  4896   0012FA  6E04               	movwf	(___fladd@b+3)^0,c
  4897   0012FC  EF88  F009         	goto	l2605
  4898   001300                     l2603:
  4899   001300  0E00               	movlw	0
  4900   001302  6E01               	movwf	___fladd@b^0,c
  4901   001304  0E00               	movlw	0
  4902   001306  6E02               	movwf	(___fladd@b+1)^0,c
  4903   001308  0E00               	movlw	0
  4904   00130A  6E03               	movwf	(___fladd@b+2)^0,c
  4905   00130C  0E00               	movlw	0
  4906   00130E  6E04               	movwf	(___fladd@b+3)^0,c
  4907   001310                     l2605:
  4908   001310  5008               	movf	(___fladd@a+3)^0,w,c
  4909   001312  0B80               	andlw	128
  4910   001314  6E0E               	movwf	___fladd@aexp^0,c
  4911   001316  500D               	movf	___fladd@signs^0,w,c
  4912   001318  180E               	xorwf	___fladd@aexp^0,w,c
  4913   00131A  B4D8               	btfsc	status,2,c
  4914   00131C  EF92  F009         	goto	u2091
  4915   001320  EF94  F009         	goto	u2090
  4916   001324                     u2091:
  4917   001324  EF95  F009         	goto	l2611
  4918   001328                     u2090:
  4919   001328  8C0D               	bsf	___fladd@signs^0,6,c
  4920   00132A                     l2611:
  4921   00132A  5008               	movf	(___fladd@a+3)^0,w,c
  4922   00132C  2408               	addwf	(___fladd@a+3)^0,w,c
  4923   00132E  6E0E               	movwf	___fladd@aexp^0,c
  4924   001330  AE07               	btfss	(___fladd@a+2)^0,7,c
  4925   001332  EF9D  F009         	goto	u2101
  4926   001336  EF9F  F009         	goto	u2100
  4927   00133A                     u2101:
  4928   00133A  EFA0  F009         	goto	l2617
  4929   00133E                     u2100:
  4930   00133E  800E               	bsf	___fladd@aexp^0,0,c
  4931   001340                     l2617:
  4932   001340  500E               	movf	___fladd@aexp^0,w,c
  4933   001342  B4D8               	btfsc	status,2,c
  4934   001344  EFA6  F009         	goto	u2111
  4935   001348  EFA8  F009         	goto	u2110
  4936   00134C                     u2111:
  4937   00134C  EFBD  F009         	goto	l2627
  4938   001350                     u2110:
  4939   001350  280E               	incf	___fladd@aexp^0,w,c
  4940   001352  A4D8               	btfss	status,2,c
  4941   001354  EFAE  F009         	goto	u2121
  4942   001358  EFB0  F009         	goto	u2120
  4943   00135C                     u2121:
  4944   00135C  EFB8  F009         	goto	l2623
  4945   001360                     u2120:
  4946   001360  0E00               	movlw	0
  4947   001362  6E05               	movwf	___fladd@a^0,c
  4948   001364  0E00               	movlw	0
  4949   001366  6E06               	movwf	(___fladd@a+1)^0,c
  4950   001368  0E00               	movlw	0
  4951   00136A  6E07               	movwf	(___fladd@a+2)^0,c
  4952   00136C  0E00               	movlw	0
  4953   00136E  6E08               	movwf	(___fladd@a+3)^0,c
  4954   001370                     l2623:
  4955   001370  8E07               	bsf	(___fladd@a+2)^0,7,c
  4956   001372  0E00               	movlw	0
  4957   001374  6E08               	movwf	(___fladd@a+3)^0,c
  4958   001376  EFC5  F009         	goto	l2629
  4959   00137A                     l2627:
  4960   00137A  0E00               	movlw	0
  4961   00137C  6E05               	movwf	___fladd@a^0,c
  4962   00137E  0E00               	movlw	0
  4963   001380  6E06               	movwf	(___fladd@a+1)^0,c
  4964   001382  0E00               	movlw	0
  4965   001384  6E07               	movwf	(___fladd@a+2)^0,c
  4966   001386  0E00               	movlw	0
  4967   001388  6E08               	movwf	(___fladd@a+3)^0,c
  4968   00138A                     l2629:
  4969   00138A  500F               	movf	___fladd@bexp^0,w,c
  4970   00138C  5C0E               	subwf	___fladd@aexp^0,w,c
  4971   00138E  B0D8               	btfsc	status,0,c
  4972   001390  EFCC  F009         	goto	u2131
  4973   001394  EFCE  F009         	goto	u2130
  4974   001398                     u2131:
  4975   001398  EFF5  F009         	goto	l2665
  4976   00139C                     u2130:
  4977   00139C  AC0D               	btfss	___fladd@signs^0,6,c
  4978   00139E  EFD3  F009         	goto	u2141
  4979   0013A2  EFD5  F009         	goto	u2140
  4980   0013A6                     u2141:
  4981   0013A6  EFD7  F009         	goto	l2635
  4982   0013AA                     u2140:
  4983   0013AA  0E80               	movlw	128
  4984   0013AC  1A0D               	xorwf	___fladd@signs^0,f,c
  4985   0013AE                     l2635:
  4986   0013AE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4987   0013B2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4988   0013B6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4989   0013BA  C001  F010         	movff	___fladd@b,___fladd@grs
  4990   0013BE  C005  F001         	movff	___fladd@a,___fladd@b
  4991   0013C2  C010  F005         	movff	___fladd@grs,___fladd@a
  4992   0013C6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4993   0013CA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4994   0013CE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4995   0013D2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4996   0013D6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4997   0013DA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4998   0013DE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4999   0013E2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5000   0013E6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5001   0013EA                     l2665:
  5002   0013EA  0E00               	movlw	0
  5003   0013EC  6E10               	movwf	___fladd@grs^0,c
  5004   0013EE  500F               	movf	___fladd@bexp^0,w,c
  5005   0013F0  C00E  F009         	movff	___fladd@aexp,??___fladd
  5006   0013F4  6A0A               	clrf	(??___fladd+1)^0,c
  5007   0013F6  5E09               	subwf	??___fladd^0,f,c
  5008   0013F8  0E00               	movlw	0
  5009   0013FA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5010   0013FC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5011   0013FE  EF0A  F00A         	goto	u2151
  5012   001402  500A               	movf	(??___fladd+1)^0,w,c
  5013   001404  E109               	bnz	u2150
  5014   001406  0E1A               	movlw	26
  5015   001408  5C09               	subwf	??___fladd^0,w,c
  5016   00140A  A0D8               	btfss	status,0,c
  5017   00140C  EF0A  F00A         	goto	u2151
  5018   001410  EF0C  F00A         	goto	u2150
  5019   001414                     u2151:
  5020   001414  EF43  F00A         	goto	l716
  5021   001418                     u2150:
  5022   001418  5001               	movf	___fladd@b^0,w,c
  5023   00141A  1002               	iorwf	(___fladd@b+1)^0,w,c
  5024   00141C  1003               	iorwf	(___fladd@b+2)^0,w,c
  5025   00141E  1004               	iorwf	(___fladd@b+3)^0,w,c
  5026   001420  A4D8               	btfss	status,2,c
  5027   001422  EF15  F00A         	goto	u2161
  5028   001426  EF18  F00A         	goto	u2160
  5029   00142A                     u2161:
  5030   00142A  0E01               	movlw	1
  5031   00142C  EF19  F00A         	goto	u2170
  5032   001430                     u2160:
  5033   001430  0E00               	movlw	0
  5034   001432                     u2170:
  5035   001432  6E10               	movwf	___fladd@grs^0,c
  5036   001434  0E00               	movlw	0
  5037   001436  6E01               	movwf	___fladd@b^0,c
  5038   001438  0E00               	movlw	0
  5039   00143A  6E02               	movwf	(___fladd@b+1)^0,c
  5040   00143C  0E00               	movlw	0
  5041   00143E  6E03               	movwf	(___fladd@b+2)^0,c
  5042   001440  0E00               	movlw	0
  5043   001442  6E04               	movwf	(___fladd@b+3)^0,c
  5044   001444  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5045   001448  EF4C  F00A         	goto	l715
  5046   00144C                     l717:
  5047   00144C  A010               	btfss	___fladd@grs^0,0,c
  5048   00144E  EF2B  F00A         	goto	u2181
  5049   001452  EF2D  F00A         	goto	u2180
  5050   001456                     u2181:
  5051   001456  EF33  F00A         	goto	l2677
  5052   00145A                     u2180:
  5053   00145A  90D8               	bcf	status,0,c
  5054   00145C  3010               	rrcf	___fladd@grs^0,w,c
  5055   00145E  0901               	iorlw	1
  5056   001460  6E10               	movwf	___fladd@grs^0,c
  5057   001462  EF35  F00A         	goto	l2679
  5058   001466                     l2677:
  5059   001466  90D8               	bcf	status,0,c
  5060   001468  3210               	rrcf	___fladd@grs^0,f,c
  5061   00146A                     l2679:
  5062   00146A  A001               	btfss	___fladd@b^0,0,c
  5063   00146C  EF3A  F00A         	goto	u2191
  5064   001470  EF3C  F00A         	goto	u2190
  5065   001474                     u2191:
  5066   001474  EF3D  F00A         	goto	l2683
  5067   001478                     u2190:
  5068   001478  8E10               	bsf	___fladd@grs^0,7,c
  5069   00147A                     l2683:
  5070   00147A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5071   00147C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5072   00147E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5073   001480  3202               	rrcf	(___fladd@b+1)^0,f,c
  5074   001482  3201               	rrcf	___fladd@b^0,f,c
  5075   001484  2A0F               	incf	___fladd@bexp^0,f,c
  5076   001486                     l716:
  5077   001486  500E               	movf	___fladd@aexp^0,w,c
  5078   001488  5C0F               	subwf	___fladd@bexp^0,w,c
  5079   00148A  A0D8               	btfss	status,0,c
  5080   00148C  EF4A  F00A         	goto	u2201
  5081   001490  EF4C  F00A         	goto	u2200
  5082   001494                     u2201:
  5083   001494  EF26  F00A         	goto	l717
  5084   001498                     u2200:
  5085   001498                     l715:
  5086   001498  BC0D               	btfsc	___fladd@signs^0,6,c
  5087   00149A  EF51  F00A         	goto	u2211
  5088   00149E  EF53  F00A         	goto	u2210
  5089   0014A2                     u2211:
  5090   0014A2  EF93  F00A         	goto	l2711
  5091   0014A6                     u2210:
  5092   0014A6  500F               	movf	___fladd@bexp^0,w,c
  5093   0014A8  A4D8               	btfss	status,2,c
  5094   0014AA  EF59  F00A         	goto	u2221
  5095   0014AE  EF5B  F00A         	goto	u2220
  5096   0014B2                     u2221:
  5097   0014B2  EF65  F00A         	goto	l2693
  5098   0014B6                     u2220:
  5099   0014B6  0E00               	movlw	0
  5100   0014B8  6E01               	movwf	?___fladd^0,c
  5101   0014BA  0E00               	movlw	0
  5102   0014BC  6E02               	movwf	(?___fladd+1)^0,c
  5103   0014BE  0E00               	movlw	0
  5104   0014C0  6E03               	movwf	(?___fladd+2)^0,c
  5105   0014C2  0E00               	movlw	0
  5106   0014C4  6E04               	movwf	(?___fladd+3)^0,c
  5107   0014C6  EFB4  F00B         	goto	l724
  5108   0014CA                     l2693:
  5109   0014CA  5005               	movf	___fladd@a^0,w,c
  5110   0014CC  2601               	addwf	___fladd@b^0,f,c
  5111   0014CE  5006               	movf	(___fladd@a+1)^0,w,c
  5112   0014D0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5113   0014D2  5007               	movf	(___fladd@a+2)^0,w,c
  5114   0014D4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5115   0014D6  5008               	movf	(___fladd@a+3)^0,w,c
  5116   0014D8  2204               	addwfc	(___fladd@b+3)^0,f,c
  5117   0014DA  A004               	btfss	(___fladd@b+3)^0,0,c
  5118   0014DC  EF72  F00A         	goto	u2231
  5119   0014E0  EF74  F00A         	goto	u2230
  5120   0014E4                     u2231:
  5121   0014E4  EF20  F00B         	goto	l2747
  5122   0014E8                     u2230:
  5123   0014E8  A010               	btfss	___fladd@grs^0,0,c
  5124   0014EA  EF79  F00A         	goto	u2241
  5125   0014EE  EF7B  F00A         	goto	u2240
  5126   0014F2                     u2241:
  5127   0014F2  EF81  F00A         	goto	l2701
  5128   0014F6                     u2240:
  5129   0014F6  90D8               	bcf	status,0,c
  5130   0014F8  3010               	rrcf	___fladd@grs^0,w,c
  5131   0014FA  0901               	iorlw	1
  5132   0014FC  6E10               	movwf	___fladd@grs^0,c
  5133   0014FE  EF83  F00A         	goto	l2703
  5134   001502                     l2701:
  5135   001502  90D8               	bcf	status,0,c
  5136   001504  3210               	rrcf	___fladd@grs^0,f,c
  5137   001506                     l2703:
  5138   001506  A001               	btfss	___fladd@b^0,0,c
  5139   001508  EF88  F00A         	goto	u2251
  5140   00150C  EF8A  F00A         	goto	u2250
  5141   001510                     u2251:
  5142   001510  EF8B  F00A         	goto	l2707
  5143   001514                     u2250:
  5144   001514  8E10               	bsf	___fladd@grs^0,7,c
  5145   001516                     l2707:
  5146   001516  3404               	rlcf	(___fladd@b+3)^0,w,c
  5147   001518  3204               	rrcf	(___fladd@b+3)^0,f,c
  5148   00151A  3203               	rrcf	(___fladd@b+2)^0,f,c
  5149   00151C  3202               	rrcf	(___fladd@b+1)^0,f,c
  5150   00151E  3201               	rrcf	___fladd@b^0,f,c
  5151   001520  2A0F               	incf	___fladd@bexp^0,f,c
  5152   001522  EF20  F00B         	goto	l2747
  5153   001526                     l2711:
  5154   001526  5005               	movf	___fladd@a^0,w,c
  5155   001528  5C01               	subwf	___fladd@b^0,w,c
  5156   00152A  5006               	movf	(___fladd@a+1)^0,w,c
  5157   00152C  5802               	subwfb	(___fladd@b+1)^0,w,c
  5158   00152E  5007               	movf	(___fladd@a+2)^0,w,c
  5159   001530  5803               	subwfb	(___fladd@b+2)^0,w,c
  5160   001532  5004               	movf	(___fladd@b+3)^0,w,c
  5161   001534  0A80               	xorlw	128
  5162   001536  6E09               	movwf	??___fladd^0,c
  5163   001538  5008               	movf	(___fladd@a+3)^0,w,c
  5164   00153A  0A80               	xorlw	128
  5165   00153C  5809               	subwfb	??___fladd^0,w,c
  5166   00153E  B0D8               	btfsc	status,0,c
  5167   001540  EFA4  F00A         	goto	u2261
  5168   001544  EFA6  F00A         	goto	u2260
  5169   001548                     u2261:
  5170   001548  EFD1  F00A         	goto	l2721
  5171   00154C                     u2260:
  5172   00154C  5001               	movf	___fladd@b^0,w,c
  5173   00154E  5C05               	subwf	___fladd@a^0,w,c
  5174   001550  6E09               	movwf	??___fladd^0,c
  5175   001552  5002               	movf	(___fladd@b+1)^0,w,c
  5176   001554  5806               	subwfb	(___fladd@a+1)^0,w,c
  5177   001556  6E0A               	movwf	(??___fladd+1)^0,c
  5178   001558  5003               	movf	(___fladd@b+2)^0,w,c
  5179   00155A  5807               	subwfb	(___fladd@a+2)^0,w,c
  5180   00155C  6E0B               	movwf	(??___fladd+2)^0,c
  5181   00155E  5004               	movf	(___fladd@b+3)^0,w,c
  5182   001560  5808               	subwfb	(___fladd@a+3)^0,w,c
  5183   001562  6E0C               	movwf	(??___fladd+3)^0,c
  5184   001564  0EFF               	movlw	255
  5185   001566  2409               	addwf	??___fladd^0,w,c
  5186   001568  6E01               	movwf	___fladd@b^0,c
  5187   00156A  0EFF               	movlw	255
  5188   00156C  200A               	addwfc	(??___fladd+1)^0,w,c
  5189   00156E  6E02               	movwf	(___fladd@b+1)^0,c
  5190   001570  0EFF               	movlw	255
  5191   001572  200B               	addwfc	(??___fladd+2)^0,w,c
  5192   001574  6E03               	movwf	(___fladd@b+2)^0,c
  5193   001576  0EFF               	movlw	255
  5194   001578  200C               	addwfc	(??___fladd+3)^0,w,c
  5195   00157A  6E04               	movwf	(___fladd@b+3)^0,c
  5196   00157C  0E80               	movlw	128
  5197   00157E  1A0D               	xorwf	___fladd@signs^0,f,c
  5198   001580  6C10               	negf	___fladd@grs^0,c
  5199   001582  5010               	movf	___fladd@grs^0,w,c
  5200   001584  A4D8               	btfss	status,2,c
  5201   001586  EFC7  F00A         	goto	u2271
  5202   00158A  EFC9  F00A         	goto	u2270
  5203   00158E                     u2271:
  5204   00158E  EFD9  F00A         	goto	l732
  5205   001592                     u2270:
  5206   001592  0E01               	movlw	1
  5207   001594  2601               	addwf	___fladd@b^0,f,c
  5208   001596  0E00               	movlw	0
  5209   001598  2202               	addwfc	(___fladd@b+1)^0,f,c
  5210   00159A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5211   00159C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5212   00159E  EFD9  F00A         	goto	l732
  5213   0015A2                     l2721:
  5214   0015A2  5005               	movf	___fladd@a^0,w,c
  5215   0015A4  5E01               	subwf	___fladd@b^0,f,c
  5216   0015A6  5006               	movf	(___fladd@a+1)^0,w,c
  5217   0015A8  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5218   0015AA  5007               	movf	(___fladd@a+2)^0,w,c
  5219   0015AC  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5220   0015AE  5008               	movf	(___fladd@a+3)^0,w,c
  5221   0015B0  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5222   0015B2                     l732:
  5223   0015B2  5001               	movf	___fladd@b^0,w,c
  5224   0015B4  1002               	iorwf	(___fladd@b+1)^0,w,c
  5225   0015B6  1003               	iorwf	(___fladd@b+2)^0,w,c
  5226   0015B8  1004               	iorwf	(___fladd@b+3)^0,w,c
  5227   0015BA  A4D8               	btfss	status,2,c
  5228   0015BC  EFE2  F00A         	goto	u2281
  5229   0015C0  EFE4  F00A         	goto	u2280
  5230   0015C4                     u2281:
  5231   0015C4  EF19  F00B         	goto	l2745
  5232   0015C8                     u2280:
  5233   0015C8  5010               	movf	___fladd@grs^0,w,c
  5234   0015CA  A4D8               	btfss	status,2,c
  5235   0015CC  EFEA  F00A         	goto	u2291
  5236   0015D0  EFEC  F00A         	goto	u2290
  5237   0015D4                     u2291:
  5238   0015D4  EF19  F00B         	goto	l2745
  5239   0015D8                     u2290:
  5240   0015D8  0E00               	movlw	0
  5241   0015DA  6E01               	movwf	?___fladd^0,c
  5242   0015DC  0E00               	movlw	0
  5243   0015DE  6E02               	movwf	(?___fladd+1)^0,c
  5244   0015E0  0E00               	movlw	0
  5245   0015E2  6E03               	movwf	(?___fladd+2)^0,c
  5246   0015E4  0E00               	movlw	0
  5247   0015E6  6E04               	movwf	(?___fladd+3)^0,c
  5248   0015E8  EFB4  F00B         	goto	l724
  5249   0015EC                     l2729:
  5250   0015EC  90D8               	bcf	status,0,c
  5251   0015EE  3601               	rlcf	___fladd@b^0,f,c
  5252   0015F0  3602               	rlcf	(___fladd@b+1)^0,f,c
  5253   0015F2  3603               	rlcf	(___fladd@b+2)^0,f,c
  5254   0015F4  3604               	rlcf	(___fladd@b+3)^0,f,c
  5255   0015F6  AE10               	btfss	___fladd@grs^0,7,c
  5256   0015F8  EF00  F00B         	goto	u2301
  5257   0015FC  EF02  F00B         	goto	u2300
  5258   001600                     u2301:
  5259   001600  EF03  F00B         	goto	l2735
  5260   001604                     u2300:
  5261   001604  8001               	bsf	___fladd@b^0,0,c
  5262   001606                     l2735:
  5263   001606  A010               	btfss	___fladd@grs^0,0,c
  5264   001608  EF08  F00B         	goto	u2311
  5265   00160C  EF0A  F00B         	goto	u2310
  5266   001610                     u2311:
  5267   001610  EF0E  F00B         	goto	l2739
  5268   001614                     u2310:
  5269   001614  80D8               	bsf	status,0,c
  5270   001616  3610               	rlcf	___fladd@grs^0,f,c
  5271   001618  EF10  F00B         	goto	l2741
  5272   00161C                     l2739:
  5273   00161C  90D8               	bcf	status,0,c
  5274   00161E  3610               	rlcf	___fladd@grs^0,f,c
  5275   001620                     l2741:
  5276   001620  500F               	movf	___fladd@bexp^0,w,c
  5277   001622  B4D8               	btfsc	status,2,c
  5278   001624  EF16  F00B         	goto	u2321
  5279   001628  EF18  F00B         	goto	u2320
  5280   00162C                     u2321:
  5281   00162C  EF19  F00B         	goto	l2745
  5282   001630                     u2320:
  5283   001630  060F               	decf	___fladd@bexp^0,f,c
  5284   001632                     l2745:
  5285   001632  AE03               	btfss	(___fladd@b+2)^0,7,c
  5286   001634  EF1E  F00B         	goto	u2331
  5287   001638  EF20  F00B         	goto	u2330
  5288   00163C                     u2331:
  5289   00163C  EFF6  F00A         	goto	l2729
  5290   001640                     u2330:
  5291   001640                     l2747:
  5292   001640  0E00               	movlw	0
  5293   001642  6E0E               	movwf	___fladd@aexp^0,c
  5294   001644  AE10               	btfss	___fladd@grs^0,7,c
  5295   001646  EF27  F00B         	goto	u2341
  5296   00164A  EF29  F00B         	goto	u2340
  5297   00164E                     u2341:
  5298   00164E  EF41  F00B         	goto	l741
  5299   001652                     u2340:
  5300   001652  C010  F009         	movff	___fladd@grs,??___fladd
  5301   001656  0E7F               	movlw	127
  5302   001658  1609               	andwf	??___fladd^0,f,c
  5303   00165A  B4D8               	btfsc	status,2,c
  5304   00165C  EF32  F00B         	goto	u2351
  5305   001660  EF34  F00B         	goto	u2350
  5306   001664                     u2351:
  5307   001664  EF38  F00B         	goto	l742
  5308   001668                     u2350:
  5309   001668                     l2753:
  5310   001668  0E01               	movlw	1
  5311   00166A  6E0E               	movwf	___fladd@aexp^0,c
  5312   00166C  EF41  F00B         	goto	l741
  5313   001670                     l742:
  5314   001670  A001               	btfss	___fladd@b^0,0,c
  5315   001672  EF3D  F00B         	goto	u2361
  5316   001676  EF3F  F00B         	goto	u2360
  5317   00167A                     u2361:
  5318   00167A  EF41  F00B         	goto	l741
  5319   00167E                     u2360:
  5320   00167E  EF34  F00B         	goto	l2753
  5321   001682                     l741:
  5322   001682  500E               	movf	___fladd@aexp^0,w,c
  5323   001684  B4D8               	btfsc	status,2,c
  5324   001686  EF47  F00B         	goto	u2371
  5325   00168A  EF49  F00B         	goto	u2370
  5326   00168E                     u2371:
  5327   00168E  EF74  F00B         	goto	l2765
  5328   001692                     u2370:
  5329   001692  0E01               	movlw	1
  5330   001694  2601               	addwf	___fladd@b^0,f,c
  5331   001696  0E00               	movlw	0
  5332   001698  2202               	addwfc	(___fladd@b+1)^0,f,c
  5333   00169A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5334   00169C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5335   00169E  A004               	btfss	(___fladd@b+3)^0,0,c
  5336   0016A0  EF54  F00B         	goto	u2381
  5337   0016A4  EF56  F00B         	goto	u2380
  5338   0016A8                     u2381:
  5339   0016A8  EF74  F00B         	goto	l2765
  5340   0016AC                     u2380:
  5341   0016AC  C001  F009         	movff	___fladd@b,??___fladd
  5342   0016B0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5343   0016B4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5344   0016B8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5345   0016BC  340C               	rlcf	(??___fladd+3)^0,w,c
  5346   0016BE  320C               	rrcf	(??___fladd+3)^0,f,c
  5347   0016C0  320B               	rrcf	(??___fladd+2)^0,f,c
  5348   0016C2  320A               	rrcf	(??___fladd+1)^0,f,c
  5349   0016C4  3209               	rrcf	??___fladd^0,f,c
  5350   0016C6  C009  F001         	movff	??___fladd,___fladd@b
  5351   0016CA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5352   0016CE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5353   0016D2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5354   0016D6  280F               	incf	___fladd@bexp^0,w,c
  5355   0016D8  B4D8               	btfsc	status,2,c
  5356   0016DA  EF71  F00B         	goto	u2391
  5357   0016DE  EF73  F00B         	goto	u2390
  5358   0016E2                     u2391:
  5359   0016E2  EF74  F00B         	goto	l2765
  5360   0016E6                     u2390:
  5361   0016E6  2A0F               	incf	___fladd@bexp^0,f,c
  5362   0016E8                     l2765:
  5363   0016E8  280F               	incf	___fladd@bexp^0,w,c
  5364   0016EA  B4D8               	btfsc	status,2,c
  5365   0016EC  EF7A  F00B         	goto	u2401
  5366   0016F0  EF7C  F00B         	goto	u2400
  5367   0016F4                     u2401:
  5368   0016F4  EF84  F00B         	goto	l2769
  5369   0016F8                     u2400:
  5370   0016F8  500F               	movf	___fladd@bexp^0,w,c
  5371   0016FA  A4D8               	btfss	status,2,c
  5372   0016FC  EF82  F00B         	goto	u2411
  5373   001700  EF84  F00B         	goto	u2410
  5374   001704                     u2411:
  5375   001704  EF96  F00B         	goto	l2773
  5376   001708                     u2410:
  5377   001708                     l2769:
  5378   001708  0E00               	movlw	0
  5379   00170A  6E01               	movwf	___fladd@b^0,c
  5380   00170C  0E00               	movlw	0
  5381   00170E  6E02               	movwf	(___fladd@b+1)^0,c
  5382   001710  0E00               	movlw	0
  5383   001712  6E03               	movwf	(___fladd@b+2)^0,c
  5384   001714  0E00               	movlw	0
  5385   001716  6E04               	movwf	(___fladd@b+3)^0,c
  5386   001718  500F               	movf	___fladd@bexp^0,w,c
  5387   00171A  A4D8               	btfss	status,2,c
  5388   00171C  EF92  F00B         	goto	u2421
  5389   001720  EF94  F00B         	goto	u2420
  5390   001724                     u2421:
  5391   001724  EF96  F00B         	goto	l2773
  5392   001728                     u2420:
  5393   001728  0E00               	movlw	0
  5394   00172A  6E0D               	movwf	___fladd@signs^0,c
  5395   00172C                     l2773:
  5396   00172C  A00F               	btfss	___fladd@bexp^0,0,c
  5397   00172E  EF9B  F00B         	goto	u2431
  5398   001732  EF9D  F00B         	goto	u2430
  5399   001736                     u2431:
  5400   001736  EFA0  F00B         	goto	l2777
  5401   00173A                     u2430:
  5402   00173A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5403   00173C  EFA1  F00B         	goto	l2779
  5404   001740                     l2777:
  5405   001740  9E03               	bcf	(___fladd@b+2)^0,7,c
  5406   001742                     l2779:
  5407   001742  90D8               	bcf	status,0,c
  5408   001744  300F               	rrcf	___fladd@bexp^0,w,c
  5409   001746  6E04               	movwf	(___fladd@b+3)^0,c
  5410   001748  AE0D               	btfss	___fladd@signs^0,7,c
  5411   00174A  EFA9  F00B         	goto	u2441
  5412   00174E  EFAB  F00B         	goto	u2440
  5413   001752                     u2441:
  5414   001752  EFAC  F00B         	goto	l2785
  5415   001756                     u2440:
  5416   001756  8E04               	bsf	(___fladd@b+3)^0,7,c
  5417   001758                     l2785:
  5418   001758  C001  F001         	movff	___fladd@b,?___fladd
  5419   00175C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5420   001760  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5421   001764  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5422   001768                     l724:
  5423   001768  0012               	return		;funcret
  5424   00176A                     __end_of___fladd:
  5425                           	callstack 0
  5426                           
  5427 ;; *************** function ___flneg *****************
  5428 ;; Defined at:
  5429 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  f1              4    0[COMRAM] unsigned char 
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;		None
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  4    0[COMRAM] unsigned char 
  5436 ;; Registers used:
  5437 ;;		wreg, status,2, status,0
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5443 ;;      Params:         4       0       0       0       0       0       0       0       0
  5444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5446 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5447 ;;Total ram usage:        4 bytes
  5448 ;; Hardware stack levels used: 1
  5449 ;; This function calls:
  5450 ;;		Nothing
  5451 ;; This function is called by:
  5452 ;;		_efgtoa
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           	psect	text19
  5457   0033A4                     __ptext19:
  5458                           	callstack 0
  5459   0033A4                     ___flneg:
  5460                           	callstack 26
  5461   0033A4  5001               	movf	___flneg@f1^0,w,c
  5462   0033A6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5463   0033A8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5464   0033AA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5465   0033AC  B4D8               	btfsc	status,2,c
  5466   0033AE  EFDB  F019         	goto	u2961
  5467   0033B2  EFDD  F019         	goto	u2960
  5468   0033B6                     u2961:
  5469   0033B6  EFE5  F019         	goto	l3119
  5470   0033BA                     u2960:
  5471   0033BA  0E00               	movlw	0
  5472   0033BC  1A01               	xorwf	___flneg@f1^0,f,c
  5473   0033BE  0E00               	movlw	0
  5474   0033C0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5475   0033C2  0E00               	movlw	0
  5476   0033C4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5477   0033C6  0E80               	movlw	128
  5478   0033C8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5479   0033CA                     l3119:
  5480   0033CA  C001  F001         	movff	___flneg@f1,?___flneg
  5481   0033CE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5482   0033D2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5483   0033D6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5484   0033DA  0012               	return		;funcret
  5485   0033DC                     __end_of___flneg:
  5486                           	callstack 0
  5487                           
  5488 ;; *************** function ___flmul *****************
  5489 ;; Defined at:
  5490 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  b               4   14[COMRAM] unsigned char 
  5493 ;;  a               4   18[COMRAM] unsigned char 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  prod            4   33[COMRAM] struct .
  5496 ;;  grs             4   27[COMRAM] unsigned long 
  5497 ;;  temp            2   37[COMRAM] struct .
  5498 ;;  bexp            1   32[COMRAM] unsigned char 
  5499 ;;  aexp            1   31[COMRAM] unsigned char 
  5500 ;;  sign            1   26[COMRAM] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  4   14[COMRAM] unsigned char 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0, prodl, prodh
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5510 ;;      Params:         8       0       0       0       0       0       0       0       0
  5511 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5512 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5513 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5514 ;;Total ram usage:       25 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_main
  5520 ;;		_efgtoa
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text20
  5525   00176A                     __ptext20:
  5526                           	callstack 0
  5527   00176A                     ___flmul:
  5528                           	callstack 26
  5529   00176A  5012               	movf	(___flmul@b+3)^0,w,c
  5530   00176C  0B80               	andlw	128
  5531   00176E  6E1B               	movwf	___flmul@sign^0,c
  5532   001770  5012               	movf	(___flmul@b+3)^0,w,c
  5533   001772  2412               	addwf	(___flmul@b+3)^0,w,c
  5534   001774  6E21               	movwf	___flmul@bexp^0,c
  5535   001776  AE11               	btfss	(___flmul@b+2)^0,7,c
  5536   001778  EFC0  F00B         	goto	u2691
  5537   00177C  EFC2  F00B         	goto	u2690
  5538   001780                     u2691:
  5539   001780  EFC3  F00B         	goto	l2947
  5540   001784                     u2690:
  5541   001784  8021               	bsf	___flmul@bexp^0,0,c
  5542   001786                     l2947:
  5543   001786  5021               	movf	___flmul@bexp^0,w,c
  5544   001788  B4D8               	btfsc	status,2,c
  5545   00178A  EFC9  F00B         	goto	u2701
  5546   00178E  EFCB  F00B         	goto	u2700
  5547   001792                     u2701:
  5548   001792  EFDE  F00B         	goto	l2955
  5549   001796                     u2700:
  5550   001796  2821               	incf	___flmul@bexp^0,w,c
  5551   001798  A4D8               	btfss	status,2,c
  5552   00179A  EFD1  F00B         	goto	u2711
  5553   00179E  EFD3  F00B         	goto	u2710
  5554   0017A2                     u2711:
  5555   0017A2  EFDB  F00B         	goto	l2953
  5556   0017A6                     u2710:
  5557   0017A6  0E00               	movlw	0
  5558   0017A8  6E0F               	movwf	___flmul@b^0,c
  5559   0017AA  0E00               	movlw	0
  5560   0017AC  6E10               	movwf	(___flmul@b+1)^0,c
  5561   0017AE  0E00               	movlw	0
  5562   0017B0  6E11               	movwf	(___flmul@b+2)^0,c
  5563   0017B2  0E00               	movlw	0
  5564   0017B4  6E12               	movwf	(___flmul@b+3)^0,c
  5565   0017B6                     l2953:
  5566   0017B6  8E11               	bsf	(___flmul@b+2)^0,7,c
  5567   0017B8  EFE6  F00B         	goto	l2957
  5568   0017BC                     l2955:
  5569   0017BC  0E00               	movlw	0
  5570   0017BE  6E0F               	movwf	___flmul@b^0,c
  5571   0017C0  0E00               	movlw	0
  5572   0017C2  6E10               	movwf	(___flmul@b+1)^0,c
  5573   0017C4  0E00               	movlw	0
  5574   0017C6  6E11               	movwf	(___flmul@b+2)^0,c
  5575   0017C8  0E00               	movlw	0
  5576   0017CA  6E12               	movwf	(___flmul@b+3)^0,c
  5577   0017CC                     l2957:
  5578   0017CC  5016               	movf	(___flmul@a+3)^0,w,c
  5579   0017CE  0B80               	andlw	128
  5580   0017D0  1A1B               	xorwf	___flmul@sign^0,f,c
  5581   0017D2  5016               	movf	(___flmul@a+3)^0,w,c
  5582   0017D4  2416               	addwf	(___flmul@a+3)^0,w,c
  5583   0017D6  6E20               	movwf	___flmul@aexp^0,c
  5584   0017D8  AE15               	btfss	(___flmul@a+2)^0,7,c
  5585   0017DA  EFF1  F00B         	goto	u2721
  5586   0017DE  EFF3  F00B         	goto	u2720
  5587   0017E2                     u2721:
  5588   0017E2  EFF4  F00B         	goto	l2965
  5589   0017E6                     u2720:
  5590   0017E6  8020               	bsf	___flmul@aexp^0,0,c
  5591   0017E8                     l2965:
  5592   0017E8  5020               	movf	___flmul@aexp^0,w,c
  5593   0017EA  B4D8               	btfsc	status,2,c
  5594   0017EC  EFFA  F00B         	goto	u2731
  5595   0017F0  EFFC  F00B         	goto	u2730
  5596   0017F4                     u2731:
  5597   0017F4  EF0F  F00C         	goto	l2973
  5598   0017F8                     u2730:
  5599   0017F8  2820               	incf	___flmul@aexp^0,w,c
  5600   0017FA  A4D8               	btfss	status,2,c
  5601   0017FC  EF02  F00C         	goto	u2741
  5602   001800  EF04  F00C         	goto	u2740
  5603   001804                     u2741:
  5604   001804  EF0C  F00C         	goto	l2971
  5605   001808                     u2740:
  5606   001808  0E00               	movlw	0
  5607   00180A  6E13               	movwf	___flmul@a^0,c
  5608   00180C  0E00               	movlw	0
  5609   00180E  6E14               	movwf	(___flmul@a+1)^0,c
  5610   001810  0E00               	movlw	0
  5611   001812  6E15               	movwf	(___flmul@a+2)^0,c
  5612   001814  0E00               	movlw	0
  5613   001816  6E16               	movwf	(___flmul@a+3)^0,c
  5614   001818                     l2971:
  5615   001818  8E15               	bsf	(___flmul@a+2)^0,7,c
  5616   00181A  EF17  F00C         	goto	l801
  5617   00181E                     l2973:
  5618   00181E  0E00               	movlw	0
  5619   001820  6E13               	movwf	___flmul@a^0,c
  5620   001822  0E00               	movlw	0
  5621   001824  6E14               	movwf	(___flmul@a+1)^0,c
  5622   001826  0E00               	movlw	0
  5623   001828  6E15               	movwf	(___flmul@a+2)^0,c
  5624   00182A  0E00               	movlw	0
  5625   00182C  6E16               	movwf	(___flmul@a+3)^0,c
  5626   00182E                     l801:
  5627   00182E  5020               	movf	___flmul@aexp^0,w,c
  5628   001830  B4D8               	btfsc	status,2,c
  5629   001832  EF1D  F00C         	goto	u2751
  5630   001836  EF1F  F00C         	goto	u2750
  5631   00183A                     u2751:
  5632   00183A  EF27  F00C         	goto	l2977
  5633   00183E                     u2750:
  5634   00183E  5021               	movf	___flmul@bexp^0,w,c
  5635   001840  A4D8               	btfss	status,2,c
  5636   001842  EF25  F00C         	goto	u2761
  5637   001846  EF27  F00C         	goto	u2760
  5638   00184A                     u2761:
  5639   00184A  EF31  F00C         	goto	l2981
  5640   00184E                     u2760:
  5641   00184E                     l2977:
  5642   00184E  0E00               	movlw	0
  5643   001850  6E0F               	movwf	?___flmul^0,c
  5644   001852  0E00               	movlw	0
  5645   001854  6E10               	movwf	(?___flmul+1)^0,c
  5646   001856  0E00               	movlw	0
  5647   001858  6E11               	movwf	(?___flmul+2)^0,c
  5648   00185A  0E00               	movlw	0
  5649   00185C  6E12               	movwf	(?___flmul+3)^0,c
  5650   00185E  EFC9  F00D         	goto	l805
  5651   001862                     l2981:
  5652   001862  5015               	movf	(___flmul@a+2)^0,w,c
  5653   001864  020F               	mulwf	___flmul@b^0,c
  5654   001866  CFF3 F026          	movff	prodl,___flmul@temp
  5655   00186A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5656   00186E  5026               	movf	___flmul@temp^0,w,c
  5657   001870  6E1C               	movwf	___flmul@grs^0,c
  5658   001872  6A1D               	clrf	(___flmul@grs+1)^0,c
  5659   001874  6A1E               	clrf	(___flmul@grs+2)^0,c
  5660   001876  6A1F               	clrf	(___flmul@grs+3)^0,c
  5661   001878  5027               	movf	(___flmul@temp+1)^0,w,c
  5662   00187A  6E22               	movwf	___flmul@prod^0,c
  5663   00187C  6A23               	clrf	(___flmul@prod+1)^0,c
  5664   00187E  6A24               	clrf	(___flmul@prod+2)^0,c
  5665   001880  6A25               	clrf	(___flmul@prod+3)^0,c
  5666   001882  5014               	movf	(___flmul@a+1)^0,w,c
  5667   001884  0210               	mulwf	(___flmul@b+1)^0,c
  5668   001886  CFF3 F026          	movff	prodl,___flmul@temp
  5669   00188A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5670   00188E  5026               	movf	___flmul@temp^0,w,c
  5671   001890  261C               	addwf	___flmul@grs^0,f,c
  5672   001892  0E00               	movlw	0
  5673   001894  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5674   001896  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5675   001898  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5676   00189A  5027               	movf	(___flmul@temp+1)^0,w,c
  5677   00189C  2622               	addwf	___flmul@prod^0,f,c
  5678   00189E  0E00               	movlw	0
  5679   0018A0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5680   0018A2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5681   0018A4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5682   0018A6  5013               	movf	___flmul@a^0,w,c
  5683   0018A8  0211               	mulwf	(___flmul@b+2)^0,c
  5684   0018AA  CFF3 F026          	movff	prodl,___flmul@temp
  5685   0018AE  CFF4 F027          	movff	prodh,___flmul@temp+1
  5686   0018B2  5026               	movf	___flmul@temp^0,w,c
  5687   0018B4  261C               	addwf	___flmul@grs^0,f,c
  5688   0018B6  0E00               	movlw	0
  5689   0018B8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5690   0018BA  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5691   0018BC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5692   0018BE  5027               	movf	(___flmul@temp+1)^0,w,c
  5693   0018C0  2622               	addwf	___flmul@prod^0,f,c
  5694   0018C2  0E00               	movlw	0
  5695   0018C4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5696   0018C6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5697   0018C8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5698   0018CA  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5699   0018CE  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5700   0018D2  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5701   0018D6  6A1C               	clrf	___flmul@grs^0,c
  5702   0018D8  5013               	movf	___flmul@a^0,w,c
  5703   0018DA  0210               	mulwf	(___flmul@b+1)^0,c
  5704   0018DC  CFF3 F026          	movff	prodl,___flmul@temp
  5705   0018E0  CFF4 F027          	movff	prodh,___flmul@temp+1
  5706   0018E4  5026               	movf	___flmul@temp^0,w,c
  5707   0018E6  261C               	addwf	___flmul@grs^0,f,c
  5708   0018E8  5027               	movf	(___flmul@temp+1)^0,w,c
  5709   0018EA  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5710   0018EC  0E00               	movlw	0
  5711   0018EE  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5712   0018F0  0E00               	movlw	0
  5713   0018F2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5714   0018F4  5014               	movf	(___flmul@a+1)^0,w,c
  5715   0018F6  020F               	mulwf	___flmul@b^0,c
  5716   0018F8  CFF3 F026          	movff	prodl,___flmul@temp
  5717   0018FC  CFF4 F027          	movff	prodh,___flmul@temp+1
  5718   001900  5026               	movf	___flmul@temp^0,w,c
  5719   001902  261C               	addwf	___flmul@grs^0,f,c
  5720   001904  5027               	movf	(___flmul@temp+1)^0,w,c
  5721   001906  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5722   001908  0E00               	movlw	0
  5723   00190A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5724   00190C  0E00               	movlw	0
  5725   00190E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5726   001910  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5727   001914  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5728   001918  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5729   00191C  6A1C               	clrf	___flmul@grs^0,c
  5730   00191E  5013               	movf	___flmul@a^0,w,c
  5731   001920  020F               	mulwf	___flmul@b^0,c
  5732   001922  CFF3 F026          	movff	prodl,___flmul@temp
  5733   001926  CFF4 F027          	movff	prodh,___flmul@temp+1
  5734   00192A  5026               	movf	___flmul@temp^0,w,c
  5735   00192C  261C               	addwf	___flmul@grs^0,f,c
  5736   00192E  5027               	movf	(___flmul@temp+1)^0,w,c
  5737   001930  221D               	addwfc	(___flmul@grs+1)^0,f,c
  5738   001932  0E00               	movlw	0
  5739   001934  221E               	addwfc	(___flmul@grs+2)^0,f,c
  5740   001936  0E00               	movlw	0
  5741   001938  221F               	addwfc	(___flmul@grs+3)^0,f,c
  5742   00193A  5015               	movf	(___flmul@a+2)^0,w,c
  5743   00193C  0210               	mulwf	(___flmul@b+1)^0,c
  5744   00193E  CFF3 F026          	movff	prodl,___flmul@temp
  5745   001942  CFF4 F027          	movff	prodh,___flmul@temp+1
  5746   001946  5026               	movf	___flmul@temp^0,w,c
  5747   001948  2622               	addwf	___flmul@prod^0,f,c
  5748   00194A  5027               	movf	(___flmul@temp+1)^0,w,c
  5749   00194C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5750   00194E  0E00               	movlw	0
  5751   001950  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5752   001952  0E00               	movlw	0
  5753   001954  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5754   001956  5014               	movf	(___flmul@a+1)^0,w,c
  5755   001958  0211               	mulwf	(___flmul@b+2)^0,c
  5756   00195A  CFF3 F026          	movff	prodl,___flmul@temp
  5757   00195E  CFF4 F027          	movff	prodh,___flmul@temp+1
  5758   001962  5026               	movf	___flmul@temp^0,w,c
  5759   001964  2622               	addwf	___flmul@prod^0,f,c
  5760   001966  5027               	movf	(___flmul@temp+1)^0,w,c
  5761   001968  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5762   00196A  0E00               	movlw	0
  5763   00196C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5764   00196E  0E00               	movlw	0
  5765   001970  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5766   001972  5015               	movf	(___flmul@a+2)^0,w,c
  5767   001974  0211               	mulwf	(___flmul@b+2)^0,c
  5768   001976  CFF3 F026          	movff	prodl,___flmul@temp
  5769   00197A  CFF4 F027          	movff	prodh,___flmul@temp+1
  5770   00197E  5026               	movf	___flmul@temp^0,w,c
  5771   001980  6E17               	movwf	??___flmul^0,c
  5772   001982  5027               	movf	(___flmul@temp+1)^0,w,c
  5773   001984  6E18               	movwf	(??___flmul+1)^0,c
  5774   001986  6A19               	clrf	(??___flmul+2)^0,c
  5775   001988  6A1A               	clrf	(??___flmul+3)^0,c
  5776   00198A  C019  F01A         	movff	??___flmul+2,??___flmul+3
  5777   00198E  C018  F019         	movff	??___flmul+1,??___flmul+2
  5778   001992  C017  F018         	movff	??___flmul,??___flmul+1
  5779   001996  6A17               	clrf	??___flmul^0,c
  5780   001998  5017               	movf	??___flmul^0,w,c
  5781   00199A  2622               	addwf	___flmul@prod^0,f,c
  5782   00199C  5018               	movf	(??___flmul+1)^0,w,c
  5783   00199E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5784   0019A0  5019               	movf	(??___flmul+2)^0,w,c
  5785   0019A2  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5786   0019A4  501A               	movf	(??___flmul+3)^0,w,c
  5787   0019A6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5788   0019A8  C01C  F017         	movff	___flmul@grs,??___flmul
  5789   0019AC  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  5790   0019B0  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  5791   0019B4  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  5792   0019B8  0E19               	movlw	25
  5793   0019BA  EFE4  F00C         	goto	u2770
  5794   0019BE                     u2775:
  5795   0019BE  90D8               	bcf	status,0,c
  5796   0019C0  321A               	rrcf	(??___flmul+3)^0,f,c
  5797   0019C2  3219               	rrcf	(??___flmul+2)^0,f,c
  5798   0019C4  3218               	rrcf	(??___flmul+1)^0,f,c
  5799   0019C6  3217               	rrcf	??___flmul^0,f,c
  5800   0019C8                     u2770:
  5801   0019C8  2EE8               	decfsz	wreg,f,c
  5802   0019CA  EFDF  F00C         	goto	u2775
  5803   0019CE  5017               	movf	??___flmul^0,w,c
  5804   0019D0  2622               	addwf	___flmul@prod^0,f,c
  5805   0019D2  5018               	movf	(??___flmul+1)^0,w,c
  5806   0019D4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5807   0019D6  5019               	movf	(??___flmul+2)^0,w,c
  5808   0019D8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5809   0019DA  501A               	movf	(??___flmul+3)^0,w,c
  5810   0019DC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5811   0019DE  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  5812   0019E2  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  5813   0019E6  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  5814   0019EA  6A1C               	clrf	___flmul@grs^0,c
  5815   0019EC  5020               	movf	___flmul@aexp^0,w,c
  5816   0019EE  C021  F017         	movff	___flmul@bexp,??___flmul
  5817   0019F2  6A18               	clrf	(??___flmul+1)^0,c
  5818   0019F4  2617               	addwf	??___flmul^0,f,c
  5819   0019F6  0E00               	movlw	0
  5820   0019F8  2218               	addwfc	(??___flmul+1)^0,f,c
  5821   0019FA  0E82               	movlw	130
  5822   0019FC  2417               	addwf	??___flmul^0,w,c
  5823   0019FE  6E26               	movwf	___flmul@temp^0,c
  5824   001A00  0EFF               	movlw	255
  5825   001A02  2018               	addwfc	(??___flmul+1)^0,w,c
  5826   001A04  6E27               	movwf	(___flmul@temp+1)^0,c
  5827   001A06  EF1A  F00D         	goto	l3029
  5828   001A0A                     l3023:
  5829   001A0A  90D8               	bcf	status,0,c
  5830   001A0C  3622               	rlcf	___flmul@prod^0,f,c
  5831   001A0E  3623               	rlcf	(___flmul@prod+1)^0,f,c
  5832   001A10  3624               	rlcf	(___flmul@prod+2)^0,f,c
  5833   001A12  3625               	rlcf	(___flmul@prod+3)^0,f,c
  5834   001A14  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5835   001A16  EF0F  F00D         	goto	u2781
  5836   001A1A  EF11  F00D         	goto	u2780
  5837   001A1E                     u2781:
  5838   001A1E  EF12  F00D         	goto	l808
  5839   001A22                     u2780:
  5840   001A22  8022               	bsf	___flmul@prod^0,0,c
  5841   001A24                     l808:
  5842   001A24  90D8               	bcf	status,0,c
  5843   001A26  361C               	rlcf	___flmul@grs^0,f,c
  5844   001A28  361D               	rlcf	(___flmul@grs+1)^0,f,c
  5845   001A2A  361E               	rlcf	(___flmul@grs+2)^0,f,c
  5846   001A2C  361F               	rlcf	(___flmul@grs+3)^0,f,c
  5847   001A2E  0626               	decf	___flmul@temp^0,f,c
  5848   001A30  A0D8               	btfss	status,0,c
  5849   001A32  0627               	decf	(___flmul@temp+1)^0,f,c
  5850   001A34                     l3029:
  5851   001A34  AE24               	btfss	(___flmul@prod+2)^0,7,c
  5852   001A36  EF1F  F00D         	goto	u2791
  5853   001A3A  EF21  F00D         	goto	u2790
  5854   001A3E                     u2791:
  5855   001A3E  EF05  F00D         	goto	l3023
  5856   001A42                     u2790:
  5857   001A42  0E00               	movlw	0
  5858   001A44  6E20               	movwf	___flmul@aexp^0,c
  5859   001A46  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  5860   001A48  EF28  F00D         	goto	u2801
  5861   001A4C  EF2A  F00D         	goto	u2800
  5862   001A50                     u2801:
  5863   001A50  EF4E  F00D         	goto	l810
  5864   001A54                     u2800:
  5865   001A54  0EFF               	movlw	255
  5866   001A56  141C               	andwf	___flmul@grs^0,w,c
  5867   001A58  6E17               	movwf	??___flmul^0,c
  5868   001A5A  0EFF               	movlw	255
  5869   001A5C  141D               	andwf	(___flmul@grs+1)^0,w,c
  5870   001A5E  6E18               	movwf	(??___flmul+1)^0,c
  5871   001A60  0EFF               	movlw	255
  5872   001A62  141E               	andwf	(___flmul@grs+2)^0,w,c
  5873   001A64  6E19               	movwf	(??___flmul+2)^0,c
  5874   001A66  0E7F               	movlw	127
  5875   001A68  141F               	andwf	(___flmul@grs+3)^0,w,c
  5876   001A6A  6E1A               	movwf	(??___flmul+3)^0,c
  5877   001A6C  5017               	movf	??___flmul^0,w,c
  5878   001A6E  1018               	iorwf	(??___flmul+1)^0,w,c
  5879   001A70  1019               	iorwf	(??___flmul+2)^0,w,c
  5880   001A72  101A               	iorwf	(??___flmul+3)^0,w,c
  5881   001A74  B4D8               	btfsc	status,2,c
  5882   001A76  EF3F  F00D         	goto	u2811
  5883   001A7A  EF41  F00D         	goto	u2810
  5884   001A7E                     u2811:
  5885   001A7E  EF45  F00D         	goto	l811
  5886   001A82                     u2810:
  5887   001A82                     l3037:
  5888   001A82  0E01               	movlw	1
  5889   001A84  6E20               	movwf	___flmul@aexp^0,c
  5890   001A86  EF4E  F00D         	goto	l810
  5891   001A8A                     l811:
  5892   001A8A  A022               	btfss	___flmul@prod^0,0,c
  5893   001A8C  EF4A  F00D         	goto	u2821
  5894   001A90  EF4C  F00D         	goto	u2820
  5895   001A94                     u2821:
  5896   001A94  EF4E  F00D         	goto	l810
  5897   001A98                     u2820:
  5898   001A98  EF41  F00D         	goto	l3037
  5899   001A9C                     l810:
  5900   001A9C  5020               	movf	___flmul@aexp^0,w,c
  5901   001A9E  B4D8               	btfsc	status,2,c
  5902   001AA0  EF54  F00D         	goto	u2831
  5903   001AA4  EF56  F00D         	goto	u2830
  5904   001AA8                     u2831:
  5905   001AA8  EF7A  F00D         	goto	l3049
  5906   001AAC                     u2830:
  5907   001AAC  0E01               	movlw	1
  5908   001AAE  2622               	addwf	___flmul@prod^0,f,c
  5909   001AB0  0E00               	movlw	0
  5910   001AB2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  5911   001AB4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  5912   001AB6  2225               	addwfc	(___flmul@prod+3)^0,f,c
  5913   001AB8  A025               	btfss	(___flmul@prod+3)^0,0,c
  5914   001ABA  EF61  F00D         	goto	u2841
  5915   001ABE  EF63  F00D         	goto	u2840
  5916   001AC2                     u2841:
  5917   001AC2  EF7A  F00D         	goto	l3049
  5918   001AC6                     u2840:
  5919   001AC6  C022  F017         	movff	___flmul@prod,??___flmul
  5920   001ACA  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  5921   001ACE  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  5922   001AD2  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  5923   001AD6  341A               	rlcf	(??___flmul+3)^0,w,c
  5924   001AD8  321A               	rrcf	(??___flmul+3)^0,f,c
  5925   001ADA  3219               	rrcf	(??___flmul+2)^0,f,c
  5926   001ADC  3218               	rrcf	(??___flmul+1)^0,f,c
  5927   001ADE  3217               	rrcf	??___flmul^0,f,c
  5928   001AE0  C017  F022         	movff	??___flmul,___flmul@prod
  5929   001AE4  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  5930   001AE8  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  5931   001AEC  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  5932   001AF0  4A26               	infsnz	___flmul@temp^0,f,c
  5933   001AF2  2A27               	incf	(___flmul@temp+1)^0,f,c
  5934   001AF4                     l3049:
  5935   001AF4  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5936   001AF6  EF85  F00D         	goto	u2851
  5937   001AFA  5027               	movf	(___flmul@temp+1)^0,w,c
  5938   001AFC  E108               	bnz	u2850
  5939   001AFE  2826               	incf	___flmul@temp^0,w,c
  5940   001B00  A0D8               	btfss	status,0,c
  5941   001B02  EF85  F00D         	goto	u2851
  5942   001B06  EF87  F00D         	goto	u2850
  5943   001B0A                     u2851:
  5944   001B0A  EF91  F00D         	goto	l3053
  5945   001B0E                     u2850:
  5946   001B0E  0E00               	movlw	0
  5947   001B10  6E22               	movwf	___flmul@prod^0,c
  5948   001B12  0E00               	movlw	0
  5949   001B14  6E23               	movwf	(___flmul@prod+1)^0,c
  5950   001B16  0E80               	movlw	128
  5951   001B18  6E24               	movwf	(___flmul@prod+2)^0,c
  5952   001B1A  0E7F               	movlw	127
  5953   001B1C  6E25               	movwf	(___flmul@prod+3)^0,c
  5954   001B1E  EFBF  F00D         	goto	l3065
  5955   001B22                     l3053:
  5956   001B22  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  5957   001B24  EF9E  F00D         	goto	u2860
  5958   001B28  5027               	movf	(___flmul@temp+1)^0,w,c
  5959   001B2A  E106               	bnz	u2861
  5960   001B2C  0426               	decf	___flmul@temp^0,w,c
  5961   001B2E  B0D8               	btfsc	status,0,c
  5962   001B30  EF9C  F00D         	goto	u2861
  5963   001B34  EF9E  F00D         	goto	u2860
  5964   001B38                     u2861:
  5965   001B38  EFAA  F00D         	goto	l818
  5966   001B3C                     u2860:
  5967   001B3C  0E00               	movlw	0
  5968   001B3E  6E22               	movwf	___flmul@prod^0,c
  5969   001B40  0E00               	movlw	0
  5970   001B42  6E23               	movwf	(___flmul@prod+1)^0,c
  5971   001B44  0E00               	movlw	0
  5972   001B46  6E24               	movwf	(___flmul@prod+2)^0,c
  5973   001B48  0E00               	movlw	0
  5974   001B4A  6E25               	movwf	(___flmul@prod+3)^0,c
  5975   001B4C  0E00               	movlw	0
  5976   001B4E  6E1B               	movwf	___flmul@sign^0,c
  5977   001B50  EFBF  F00D         	goto	l3065
  5978   001B54                     l818:
  5979   001B54  C026  F021         	movff	___flmul@temp,___flmul@bexp
  5980   001B58  0EFF               	movlw	255
  5981   001B5A  1622               	andwf	___flmul@prod^0,f,c
  5982   001B5C  0EFF               	movlw	255
  5983   001B5E  1623               	andwf	(___flmul@prod+1)^0,f,c
  5984   001B60  0E7F               	movlw	127
  5985   001B62  1624               	andwf	(___flmul@prod+2)^0,f,c
  5986   001B64  0E00               	movlw	0
  5987   001B66  1625               	andwf	(___flmul@prod+3)^0,f,c
  5988   001B68  A021               	btfss	___flmul@bexp^0,0,c
  5989   001B6A  EFB9  F00D         	goto	u2871
  5990   001B6E  EFBB  F00D         	goto	u2870
  5991   001B72                     u2871:
  5992   001B72  EFBC  F00D         	goto	l3063
  5993   001B76                     u2870:
  5994   001B76  8E24               	bsf	(___flmul@prod+2)^0,7,c
  5995   001B78                     l3063:
  5996   001B78  90D8               	bcf	status,0,c
  5997   001B7A  3021               	rrcf	___flmul@bexp^0,w,c
  5998   001B7C  6E25               	movwf	(___flmul@prod+3)^0,c
  5999   001B7E                     l3065:
  6000   001B7E  501B               	movf	___flmul@sign^0,w,c
  6001   001B80  1225               	iorwf	(___flmul@prod+3)^0,f,c
  6002   001B82  C022  F00F         	movff	___flmul@prod,?___flmul
  6003   001B86  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  6004   001B8A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  6005   001B8E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  6006   001B92                     l805:
  6007   001B92  0012               	return		;funcret
  6008   001B94                     __end_of___flmul:
  6009                           	callstack 0
  6010                           
  6011 ;; *************** function ___flge *****************
  6012 ;; Defined at:
  6013 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  ff1             4   39[COMRAM] unsigned char 
  6016 ;;  ff2             4   43[COMRAM] unsigned char 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;		None
  6019 ;; Return value:  Size  Location     Type
  6020 ;;		None               void
  6021 ;; Registers used:
  6022 ;;		wreg, status,2, status,0
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6028 ;;      Params:         8       0       0       0       0       0       0       0       0
  6029 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6030 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6031 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6032 ;;Total ram usage:       12 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_efgtoa
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           	psect	text21
  6042   002A9E                     __ptext21:
  6043                           	callstack 0
  6044   002A9E                     ___flge:
  6045                           	callstack 26
  6046   002A9E  0E00               	movlw	0
  6047   002AA0  1428               	andwf	___flge@ff1^0,w,c
  6048   002AA2  6E30               	movwf	??___flge^0,c
  6049   002AA4  0E00               	movlw	0
  6050   002AA6  1429               	andwf	(___flge@ff1+1)^0,w,c
  6051   002AA8  6E31               	movwf	(??___flge+1)^0,c
  6052   002AAA  0E80               	movlw	128
  6053   002AAC  142A               	andwf	(___flge@ff1+2)^0,w,c
  6054   002AAE  6E32               	movwf	(??___flge+2)^0,c
  6055   002AB0  0E7F               	movlw	127
  6056   002AB2  142B               	andwf	(___flge@ff1+3)^0,w,c
  6057   002AB4  6E33               	movwf	(??___flge+3)^0,c
  6058   002AB6  5030               	movf	??___flge^0,w,c
  6059   002AB8  1031               	iorwf	(??___flge+1)^0,w,c
  6060   002ABA  1032               	iorwf	(??___flge+2)^0,w,c
  6061   002ABC  1033               	iorwf	(??___flge+3)^0,w,c
  6062   002ABE  A4D8               	btfss	status,2,c
  6063   002AC0  EF64  F015         	goto	u2911
  6064   002AC4  EF66  F015         	goto	u2910
  6065   002AC8                     u2911:
  6066   002AC8  EF6E  F015         	goto	l3097
  6067   002ACC                     u2910:
  6068   002ACC  0E00               	movlw	0
  6069   002ACE  6E28               	movwf	___flge@ff1^0,c
  6070   002AD0  0E00               	movlw	0
  6071   002AD2  6E29               	movwf	(___flge@ff1+1)^0,c
  6072   002AD4  0E00               	movlw	0
  6073   002AD6  6E2A               	movwf	(___flge@ff1+2)^0,c
  6074   002AD8  0E00               	movlw	0
  6075   002ADA  6E2B               	movwf	(___flge@ff1+3)^0,c
  6076   002ADC                     l3097:
  6077   002ADC  0E00               	movlw	0
  6078   002ADE  142C               	andwf	___flge@ff2^0,w,c
  6079   002AE0  6E30               	movwf	??___flge^0,c
  6080   002AE2  0E00               	movlw	0
  6081   002AE4  142D               	andwf	(___flge@ff2+1)^0,w,c
  6082   002AE6  6E31               	movwf	(??___flge+1)^0,c
  6083   002AE8  0E80               	movlw	128
  6084   002AEA  142E               	andwf	(___flge@ff2+2)^0,w,c
  6085   002AEC  6E32               	movwf	(??___flge+2)^0,c
  6086   002AEE  0E7F               	movlw	127
  6087   002AF0  142F               	andwf	(___flge@ff2+3)^0,w,c
  6088   002AF2  6E33               	movwf	(??___flge+3)^0,c
  6089   002AF4  5030               	movf	??___flge^0,w,c
  6090   002AF6  1031               	iorwf	(??___flge+1)^0,w,c
  6091   002AF8  1032               	iorwf	(??___flge+2)^0,w,c
  6092   002AFA  1033               	iorwf	(??___flge+3)^0,w,c
  6093   002AFC  A4D8               	btfss	status,2,c
  6094   002AFE  EF83  F015         	goto	u2921
  6095   002B02  EF85  F015         	goto	u2920
  6096   002B06                     u2921:
  6097   002B06  EF8D  F015         	goto	l3101
  6098   002B0A                     u2920:
  6099   002B0A  0E00               	movlw	0
  6100   002B0C  6E2C               	movwf	___flge@ff2^0,c
  6101   002B0E  0E00               	movlw	0
  6102   002B10  6E2D               	movwf	(___flge@ff2+1)^0,c
  6103   002B12  0E00               	movlw	0
  6104   002B14  6E2E               	movwf	(___flge@ff2+2)^0,c
  6105   002B16  0E00               	movlw	0
  6106   002B18  6E2F               	movwf	(___flge@ff2+3)^0,c
  6107   002B1A                     l3101:
  6108   002B1A  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  6109   002B1C  EF92  F015         	goto	u2931
  6110   002B20  EF94  F015         	goto	u2930
  6111   002B24                     u2931:
  6112   002B24  EF9D  F015         	goto	l3105
  6113   002B28                     u2930:
  6114   002B28  6C28               	negf	___flge@ff1^0,c
  6115   002B2A  1E29               	comf	(___flge@ff1+1)^0,f,c
  6116   002B2C  B0D8               	btfsc	status,0,c
  6117   002B2E  2A29               	incf	(___flge@ff1+1)^0,f,c
  6118   002B30  1E2A               	comf	(___flge@ff1+2)^0,f,c
  6119   002B32  B0D8               	btfsc	status,0,c
  6120   002B34  2A2A               	incf	(___flge@ff1+2)^0,f,c
  6121   002B36  0E80               	movlw	128
  6122   002B38  562B               	subfwb	(___flge@ff1+3)^0,f,c
  6123   002B3A                     l3105:
  6124   002B3A  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  6125   002B3C  EFA2  F015         	goto	u2941
  6126   002B40  EFA4  F015         	goto	u2940
  6127   002B44                     u2941:
  6128   002B44  EFAD  F015         	goto	l452
  6129   002B48                     u2940:
  6130   002B48  6C2C               	negf	___flge@ff2^0,c
  6131   002B4A  1E2D               	comf	(___flge@ff2+1)^0,f,c
  6132   002B4C  B0D8               	btfsc	status,0,c
  6133   002B4E  2A2D               	incf	(___flge@ff2+1)^0,f,c
  6134   002B50  1E2E               	comf	(___flge@ff2+2)^0,f,c
  6135   002B52  B0D8               	btfsc	status,0,c
  6136   002B54  2A2E               	incf	(___flge@ff2+2)^0,f,c
  6137   002B56  0E80               	movlw	128
  6138   002B58  562F               	subfwb	(___flge@ff2+3)^0,f,c
  6139   002B5A                     l452:
  6140   002B5A  0E00               	movlw	0
  6141   002B5C  1A28               	xorwf	___flge@ff1^0,f,c
  6142   002B5E  0E00               	movlw	0
  6143   002B60  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  6144   002B62  0E00               	movlw	0
  6145   002B64  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  6146   002B66  0E80               	movlw	128
  6147   002B68  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  6148   002B6A  0E00               	movlw	0
  6149   002B6C  1A2C               	xorwf	___flge@ff2^0,f,c
  6150   002B6E  0E00               	movlw	0
  6151   002B70  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  6152   002B72  0E00               	movlw	0
  6153   002B74  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  6154   002B76  0E80               	movlw	128
  6155   002B78  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  6156   002B7A  502C               	movf	___flge@ff2^0,w,c
  6157   002B7C  5C28               	subwf	___flge@ff1^0,w,c
  6158   002B7E  502D               	movf	(___flge@ff2+1)^0,w,c
  6159   002B80  5829               	subwfb	(___flge@ff1+1)^0,w,c
  6160   002B82  502E               	movf	(___flge@ff2+2)^0,w,c
  6161   002B84  582A               	subwfb	(___flge@ff1+2)^0,w,c
  6162   002B86  502F               	movf	(___flge@ff2+3)^0,w,c
  6163   002B88  582B               	subwfb	(___flge@ff1+3)^0,w,c
  6164   002B8A  B0D8               	btfsc	status,0,c
  6165   002B8C  EFCA  F015         	goto	u2951
  6166   002B90  EFCC  F015         	goto	u2950
  6167   002B94                     u2951:
  6168   002B94  EFCF  F015         	goto	l3111
  6169   002B98                     u2950:
  6170   002B98  90D8               	bcf	status,0,c
  6171   002B9A  EFD0  F015         	goto	l457
  6172   002B9E                     l3111:
  6173   002B9E  80D8               	bsf	status,0,c
  6174   002BA0                     l457:
  6175   002BA0  0012               	return		;funcret
  6176   002BA2                     __end_of___flge:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function ___fleq *****************
  6180 ;; Defined at:
  6181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fleq.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  ff1             4    0[COMRAM] unsigned char 
  6184 ;;  ff2             4    4[COMRAM] unsigned char 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;		None
  6187 ;; Return value:  Size  Location     Type
  6188 ;;		None               void
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6196 ;;      Params:         8       0       0       0       0       0       0       0       0
  6197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6198 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6199 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6200 ;;Total ram usage:       12 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_efgtoa
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text22
  6210   002F02                     __ptext22:
  6211                           	callstack 0
  6212   002F02                     ___fleq:
  6213                           	callstack 26
  6214   002F02  0E00               	movlw	0
  6215   002F04  1401               	andwf	___fleq@ff1^0,w,c
  6216   002F06  6E09               	movwf	??___fleq^0,c
  6217   002F08  0E00               	movlw	0
  6218   002F0A  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6219   002F0C  6E0A               	movwf	(??___fleq+1)^0,c
  6220   002F0E  0E80               	movlw	128
  6221   002F10  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6222   002F12  6E0B               	movwf	(??___fleq+2)^0,c
  6223   002F14  0E7F               	movlw	127
  6224   002F16  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6225   002F18  6E0C               	movwf	(??___fleq+3)^0,c
  6226   002F1A  5009               	movf	??___fleq^0,w,c
  6227   002F1C  100A               	iorwf	(??___fleq+1)^0,w,c
  6228   002F1E  100B               	iorwf	(??___fleq+2)^0,w,c
  6229   002F20  100C               	iorwf	(??___fleq+3)^0,w,c
  6230   002F22  A4D8               	btfss	status,2,c
  6231   002F24  EF96  F017         	goto	u2881
  6232   002F28  EF98  F017         	goto	u2880
  6233   002F2C                     u2881:
  6234   002F2C  EFA0  F017         	goto	l3081
  6235   002F30                     u2880:
  6236   002F30  0E00               	movlw	0
  6237   002F32  6E01               	movwf	___fleq@ff1^0,c
  6238   002F34  0E00               	movlw	0
  6239   002F36  6E02               	movwf	(___fleq@ff1+1)^0,c
  6240   002F38  0E00               	movlw	0
  6241   002F3A  6E03               	movwf	(___fleq@ff1+2)^0,c
  6242   002F3C  0E00               	movlw	0
  6243   002F3E  6E04               	movwf	(___fleq@ff1+3)^0,c
  6244   002F40                     l3081:
  6245   002F40  0E00               	movlw	0
  6246   002F42  1405               	andwf	___fleq@ff2^0,w,c
  6247   002F44  6E09               	movwf	??___fleq^0,c
  6248   002F46  0E00               	movlw	0
  6249   002F48  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6250   002F4A  6E0A               	movwf	(??___fleq+1)^0,c
  6251   002F4C  0E80               	movlw	128
  6252   002F4E  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6253   002F50  6E0B               	movwf	(??___fleq+2)^0,c
  6254   002F52  0E7F               	movlw	127
  6255   002F54  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6256   002F56  6E0C               	movwf	(??___fleq+3)^0,c
  6257   002F58  5009               	movf	??___fleq^0,w,c
  6258   002F5A  100A               	iorwf	(??___fleq+1)^0,w,c
  6259   002F5C  100B               	iorwf	(??___fleq+2)^0,w,c
  6260   002F5E  100C               	iorwf	(??___fleq+3)^0,w,c
  6261   002F60  A4D8               	btfss	status,2,c
  6262   002F62  EFB5  F017         	goto	u2891
  6263   002F66  EFB7  F017         	goto	u2890
  6264   002F6A                     u2891:
  6265   002F6A  EFBF  F017         	goto	l3085
  6266   002F6E                     u2890:
  6267   002F6E  0E00               	movlw	0
  6268   002F70  6E05               	movwf	___fleq@ff2^0,c
  6269   002F72  0E00               	movlw	0
  6270   002F74  6E06               	movwf	(___fleq@ff2+1)^0,c
  6271   002F76  0E00               	movlw	0
  6272   002F78  6E07               	movwf	(___fleq@ff2+2)^0,c
  6273   002F7A  0E00               	movlw	0
  6274   002F7C  6E08               	movwf	(___fleq@ff2+3)^0,c
  6275   002F7E                     l3085:
  6276   002F7E  5005               	movf	___fleq@ff2^0,w,c
  6277   002F80  1801               	xorwf	___fleq@ff1^0,w,c
  6278   002F82  E10F               	bnz	u2900
  6279   002F84  5006               	movf	(___fleq@ff2+1)^0,w,c
  6280   002F86  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6281   002F88  E10C               	bnz	u2900
  6282   002F8A  5007               	movf	(___fleq@ff2+2)^0,w,c
  6283   002F8C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6284   002F8E  E109               	bnz	u2900
  6285   002F90  5008               	movf	(___fleq@ff2+3)^0,w,c
  6286   002F92  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6287   002F94  B4D8               	btfsc	status,2,c
  6288   002F96  EFCF  F017         	goto	u2901
  6289   002F9A  EFD1  F017         	goto	u2900
  6290   002F9E                     u2901:
  6291   002F9E  EFD4  F017         	goto	l3089
  6292   002FA2                     u2900:
  6293   002FA2  90D8               	bcf	status,0,c
  6294   002FA4  EFD5  F017         	goto	l446
  6295   002FA8                     l3089:
  6296   002FA8  80D8               	bsf	status,0,c
  6297   002FAA                     l446:
  6298   002FAA  0012               	return		;funcret
  6299   002FAC                     __end_of___fleq:
  6300                           	callstack 0
  6301                           
  6302 ;; *************** function ___fldiv *****************
  6303 ;; Defined at:
  6304 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  b               4   39[COMRAM] unsigned char 
  6307 ;;  a               4   43[COMRAM] unsigned char 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  grs             4   58[COMRAM] unsigned long 
  6310 ;;  rem             4   51[COMRAM] unsigned long 
  6311 ;;  new_exp         2   56[COMRAM] short 
  6312 ;;  aexp            1   63[COMRAM] unsigned char 
  6313 ;;  bexp            1   62[COMRAM] unsigned char 
  6314 ;;  sign            1   55[COMRAM] unsigned char 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  4   39[COMRAM] unsigned char 
  6317 ;; Registers used:
  6318 ;;		wreg, status,2, status,0
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6324 ;;      Params:         8       0       0       0       0       0       0       0       0
  6325 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6326 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6327 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6328 ;;Total ram usage:       25 bytes
  6329 ;; Hardware stack levels used: 1
  6330 ;; This function calls:
  6331 ;;		Nothing
  6332 ;; This function is called by:
  6333 ;;		_main
  6334 ;;		_efgtoa
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text23
  6339   001F5E                     __ptext23:
  6340                           	callstack 0
  6341   001F5E                     ___fldiv:
  6342                           	callstack 26
  6343   001F5E  502B               	movf	(___fldiv@b+3)^0,w,c
  6344   001F60  0B80               	andlw	128
  6345   001F62  6E38               	movwf	___fldiv@sign^0,c
  6346   001F64  502B               	movf	(___fldiv@b+3)^0,w,c
  6347   001F66  242B               	addwf	(___fldiv@b+3)^0,w,c
  6348   001F68  6E3F               	movwf	___fldiv@bexp^0,c
  6349   001F6A  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6350   001F6C  EFBA  F00F         	goto	u2461
  6351   001F70  EFBC  F00F         	goto	u2460
  6352   001F74                     u2461:
  6353   001F74  EFBD  F00F         	goto	l2809
  6354   001F78                     u2460:
  6355   001F78  803F               	bsf	___fldiv@bexp^0,0,c
  6356   001F7A                     l2809:
  6357   001F7A  503F               	movf	___fldiv@bexp^0,w,c
  6358   001F7C  B4D8               	btfsc	status,2,c
  6359   001F7E  EFC3  F00F         	goto	u2471
  6360   001F82  EFC5  F00F         	goto	u2470
  6361   001F86                     u2471:
  6362   001F86  EFDA  F00F         	goto	l2819
  6363   001F8A                     u2470:
  6364   001F8A  283F               	incf	___fldiv@bexp^0,w,c
  6365   001F8C  A4D8               	btfss	status,2,c
  6366   001F8E  EFCB  F00F         	goto	u2481
  6367   001F92  EFCD  F00F         	goto	u2480
  6368   001F96                     u2481:
  6369   001F96  EFD5  F00F         	goto	l2815
  6370   001F9A                     u2480:
  6371   001F9A  0E00               	movlw	0
  6372   001F9C  6E28               	movwf	___fldiv@b^0,c
  6373   001F9E  0E00               	movlw	0
  6374   001FA0  6E29               	movwf	(___fldiv@b+1)^0,c
  6375   001FA2  0E00               	movlw	0
  6376   001FA4  6E2A               	movwf	(___fldiv@b+2)^0,c
  6377   001FA6  0E00               	movlw	0
  6378   001FA8  6E2B               	movwf	(___fldiv@b+3)^0,c
  6379   001FAA                     l2815:
  6380   001FAA  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6381   001FAC  0E00               	movlw	0
  6382   001FAE  6E2B               	movwf	(___fldiv@b+3)^0,c
  6383   001FB0  EFE2  F00F         	goto	l2821
  6384   001FB4                     l2819:
  6385   001FB4  0E00               	movlw	0
  6386   001FB6  6E28               	movwf	___fldiv@b^0,c
  6387   001FB8  0E00               	movlw	0
  6388   001FBA  6E29               	movwf	(___fldiv@b+1)^0,c
  6389   001FBC  0E00               	movlw	0
  6390   001FBE  6E2A               	movwf	(___fldiv@b+2)^0,c
  6391   001FC0  0E00               	movlw	0
  6392   001FC2  6E2B               	movwf	(___fldiv@b+3)^0,c
  6393   001FC4                     l2821:
  6394   001FC4  502F               	movf	(___fldiv@a+3)^0,w,c
  6395   001FC6  0B80               	andlw	128
  6396   001FC8  1A38               	xorwf	___fldiv@sign^0,f,c
  6397   001FCA  502F               	movf	(___fldiv@a+3)^0,w,c
  6398   001FCC  242F               	addwf	(___fldiv@a+3)^0,w,c
  6399   001FCE  6E40               	movwf	___fldiv@aexp^0,c
  6400   001FD0  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6401   001FD2  EFED  F00F         	goto	u2491
  6402   001FD6  EFEF  F00F         	goto	u2490
  6403   001FDA                     u2491:
  6404   001FDA  EFF0  F00F         	goto	l2829
  6405   001FDE                     u2490:
  6406   001FDE  8040               	bsf	___fldiv@aexp^0,0,c
  6407   001FE0                     l2829:
  6408   001FE0  5040               	movf	___fldiv@aexp^0,w,c
  6409   001FE2  B4D8               	btfsc	status,2,c
  6410   001FE4  EFF6  F00F         	goto	u2501
  6411   001FE8  EFF8  F00F         	goto	u2500
  6412   001FEC                     u2501:
  6413   001FEC  EF0D  F010         	goto	l2839
  6414   001FF0                     u2500:
  6415   001FF0  2840               	incf	___fldiv@aexp^0,w,c
  6416   001FF2  A4D8               	btfss	status,2,c
  6417   001FF4  EFFE  F00F         	goto	u2511
  6418   001FF8  EF00  F010         	goto	u2510
  6419   001FFC                     u2511:
  6420   001FFC  EF08  F010         	goto	l2835
  6421   002000                     u2510:
  6422   002000  0E00               	movlw	0
  6423   002002  6E2C               	movwf	___fldiv@a^0,c
  6424   002004  0E00               	movlw	0
  6425   002006  6E2D               	movwf	(___fldiv@a+1)^0,c
  6426   002008  0E00               	movlw	0
  6427   00200A  6E2E               	movwf	(___fldiv@a+2)^0,c
  6428   00200C  0E00               	movlw	0
  6429   00200E  6E2F               	movwf	(___fldiv@a+3)^0,c
  6430   002010                     l2835:
  6431   002010  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6432   002012  0E00               	movlw	0
  6433   002014  6E2F               	movwf	(___fldiv@a+3)^0,c
  6434   002016  EF15  F010         	goto	l2841
  6435   00201A                     l2839:
  6436   00201A  0E00               	movlw	0
  6437   00201C  6E2C               	movwf	___fldiv@a^0,c
  6438   00201E  0E00               	movlw	0
  6439   002020  6E2D               	movwf	(___fldiv@a+1)^0,c
  6440   002022  0E00               	movlw	0
  6441   002024  6E2E               	movwf	(___fldiv@a+2)^0,c
  6442   002026  0E00               	movlw	0
  6443   002028  6E2F               	movwf	(___fldiv@a+3)^0,c
  6444   00202A                     l2841:
  6445   00202A  502C               	movf	___fldiv@a^0,w,c
  6446   00202C  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6447   00202E  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6448   002030  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6449   002032  A4D8               	btfss	status,2,c
  6450   002034  EF1E  F010         	goto	u2521
  6451   002038  EF20  F010         	goto	u2520
  6452   00203C                     u2521:
  6453   00203C  EF38  F010         	goto	l2853
  6454   002040                     u2520:
  6455   002040  0E00               	movlw	0
  6456   002042  6E28               	movwf	___fldiv@b^0,c
  6457   002044  0E00               	movlw	0
  6458   002046  6E29               	movwf	(___fldiv@b+1)^0,c
  6459   002048  0E00               	movlw	0
  6460   00204A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6461   00204C  0E00               	movlw	0
  6462   00204E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6463   002050  0E80               	movlw	128
  6464   002052  122A               	iorwf	(___fldiv@b+2)^0,f,c
  6465   002054  0E7F               	movlw	127
  6466   002056  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6467   002058                     l2847:
  6468   002058  5038               	movf	___fldiv@sign^0,w,c
  6469   00205A  122B               	iorwf	(___fldiv@b+3)^0,f,c
  6470   00205C  C028  F028         	movff	___fldiv@b,?___fldiv
  6471   002060  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  6472   002064  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  6473   002068  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  6474   00206C  EF7B  F011         	goto	l769
  6475   002070                     l2853:
  6476   002070  503F               	movf	___fldiv@bexp^0,w,c
  6477   002072  A4D8               	btfss	status,2,c
  6478   002074  EF3E  F010         	goto	u2531
  6479   002078  EF40  F010         	goto	u2530
  6480   00207C                     u2531:
  6481   00207C  EF4A  F010         	goto	l2861
  6482   002080                     u2530:
  6483   002080  0E00               	movlw	0
  6484   002082  6E28               	movwf	?___fldiv^0,c
  6485   002084  0E00               	movlw	0
  6486   002086  6E29               	movwf	(?___fldiv+1)^0,c
  6487   002088  0E00               	movlw	0
  6488   00208A  6E2A               	movwf	(?___fldiv+2)^0,c
  6489   00208C  0E00               	movlw	0
  6490   00208E  6E2B               	movwf	(?___fldiv+3)^0,c
  6491   002090  EF7B  F011         	goto	l769
  6492   002094                     l2861:
  6493   002094  5040               	movf	___fldiv@aexp^0,w,c
  6494   002096  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  6495   00209A  6A31               	clrf	(??___fldiv+1)^0,c
  6496   00209C  5E30               	subwf	??___fldiv^0,f,c
  6497   00209E  0E00               	movlw	0
  6498   0020A0  5A31               	subwfb	(??___fldiv+1)^0,f,c
  6499   0020A2  0E7F               	movlw	127
  6500   0020A4  2430               	addwf	??___fldiv^0,w,c
  6501   0020A6  6E39               	movwf	___fldiv@new_exp^0,c
  6502   0020A8  0E00               	movlw	0
  6503   0020AA  2031               	addwfc	(??___fldiv+1)^0,w,c
  6504   0020AC  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6505   0020AE  C028  F034         	movff	___fldiv@b,___fldiv@rem
  6506   0020B2  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  6507   0020B6  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  6508   0020BA  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  6509   0020BE  0E00               	movlw	0
  6510   0020C0  6E28               	movwf	___fldiv@b^0,c
  6511   0020C2  0E00               	movlw	0
  6512   0020C4  6E29               	movwf	(___fldiv@b+1)^0,c
  6513   0020C6  0E00               	movlw	0
  6514   0020C8  6E2A               	movwf	(___fldiv@b+2)^0,c
  6515   0020CA  0E00               	movlw	0
  6516   0020CC  6E2B               	movwf	(___fldiv@b+3)^0,c
  6517   0020CE  0E00               	movlw	0
  6518   0020D0  6E3B               	movwf	___fldiv@grs^0,c
  6519   0020D2  0E00               	movlw	0
  6520   0020D4  6E3C               	movwf	(___fldiv@grs+1)^0,c
  6521   0020D6  0E00               	movlw	0
  6522   0020D8  6E3D               	movwf	(___fldiv@grs+2)^0,c
  6523   0020DA  0E00               	movlw	0
  6524   0020DC  6E3E               	movwf	(___fldiv@grs+3)^0,c
  6525   0020DE  0E00               	movlw	0
  6526   0020E0  6E40               	movwf	___fldiv@aexp^0,c
  6527   0020E2  EFAB  F010         	goto	l771
  6528   0020E6                     l2871:
  6529   0020E6  5040               	movf	___fldiv@aexp^0,w,c
  6530   0020E8  B4D8               	btfsc	status,2,c
  6531   0020EA  EF79  F010         	goto	u2541
  6532   0020EE  EF7B  F010         	goto	u2540
  6533   0020F2                     u2541:
  6534   0020F2  EF92  F010         	goto	l2879
  6535   0020F6                     u2540:
  6536   0020F6  90D8               	bcf	status,0,c
  6537   0020F8  3634               	rlcf	___fldiv@rem^0,f,c
  6538   0020FA  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  6539   0020FC  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  6540   0020FE  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  6541   002100  90D8               	bcf	status,0,c
  6542   002102  3628               	rlcf	___fldiv@b^0,f,c
  6543   002104  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6544   002106  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6545   002108  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6546   00210A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6547   00210C  EF8A  F010         	goto	u2551
  6548   002110  EF8C  F010         	goto	u2550
  6549   002114                     u2551:
  6550   002114  EF8D  F010         	goto	l774
  6551   002118                     u2550:
  6552   002118  8028               	bsf	___fldiv@b^0,0,c
  6553   00211A                     l774:
  6554   00211A  90D8               	bcf	status,0,c
  6555   00211C  363B               	rlcf	___fldiv@grs^0,f,c
  6556   00211E  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6557   002120  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6558   002122  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6559   002124                     l2879:
  6560   002124  502C               	movf	___fldiv@a^0,w,c
  6561   002126  5C34               	subwf	___fldiv@rem^0,w,c
  6562   002128  502D               	movf	(___fldiv@a+1)^0,w,c
  6563   00212A  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  6564   00212C  502E               	movf	(___fldiv@a+2)^0,w,c
  6565   00212E  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  6566   002130  502F               	movf	(___fldiv@a+3)^0,w,c
  6567   002132  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  6568   002134  A0D8               	btfss	status,0,c
  6569   002136  EF9F  F010         	goto	u2561
  6570   00213A  EFA1  F010         	goto	u2560
  6571   00213E                     u2561:
  6572   00213E  EFAA  F010         	goto	l2885
  6573   002142                     u2560:
  6574   002142  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  6575   002144  502C               	movf	___fldiv@a^0,w,c
  6576   002146  5E34               	subwf	___fldiv@rem^0,f,c
  6577   002148  502D               	movf	(___fldiv@a+1)^0,w,c
  6578   00214A  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  6579   00214C  502E               	movf	(___fldiv@a+2)^0,w,c
  6580   00214E  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  6581   002150  502F               	movf	(___fldiv@a+3)^0,w,c
  6582   002152  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  6583   002154                     l2885:
  6584   002154  2A40               	incf	___fldiv@aexp^0,f,c
  6585   002156                     l771:
  6586   002156  0E19               	movlw	25
  6587   002158  6440               	cpfsgt	___fldiv@aexp^0,c
  6588   00215A  EFB1  F010         	goto	u2571
  6589   00215E  EFB3  F010         	goto	u2570
  6590   002162                     u2571:
  6591   002162  EF73  F010         	goto	l2871
  6592   002166                     u2570:
  6593   002166  5034               	movf	___fldiv@rem^0,w,c
  6594   002168  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  6595   00216A  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  6596   00216C  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  6597   00216E  B4D8               	btfsc	status,2,c
  6598   002170  EFBC  F010         	goto	u2581
  6599   002174  EFBE  F010         	goto	u2580
  6600   002178                     u2581:
  6601   002178  EFD6  F010         	goto	l2897
  6602   00217C                     u2580:
  6603   00217C  803B               	bsf	___fldiv@grs^0,0,c
  6604   00217E  EFD6  F010         	goto	l2897
  6605   002182                     l2891:
  6606   002182  90D8               	bcf	status,0,c
  6607   002184  3628               	rlcf	___fldiv@b^0,f,c
  6608   002186  3629               	rlcf	(___fldiv@b+1)^0,f,c
  6609   002188  362A               	rlcf	(___fldiv@b+2)^0,f,c
  6610   00218A  362B               	rlcf	(___fldiv@b+3)^0,f,c
  6611   00218C  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6612   00218E  EFCB  F010         	goto	u2591
  6613   002192  EFCD  F010         	goto	u2590
  6614   002196                     u2591:
  6615   002196  EFCE  F010         	goto	l780
  6616   00219A                     u2590:
  6617   00219A  8028               	bsf	___fldiv@b^0,0,c
  6618   00219C                     l780:
  6619   00219C  90D8               	bcf	status,0,c
  6620   00219E  363B               	rlcf	___fldiv@grs^0,f,c
  6621   0021A0  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  6622   0021A2  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  6623   0021A4  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  6624   0021A6  0639               	decf	___fldiv@new_exp^0,f,c
  6625   0021A8  A0D8               	btfss	status,0,c
  6626   0021AA  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  6627   0021AC                     l2897:
  6628   0021AC  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6629   0021AE  EFDB  F010         	goto	u2601
  6630   0021B2  EFDD  F010         	goto	u2600
  6631   0021B6                     u2601:
  6632   0021B6  EFC1  F010         	goto	l2891
  6633   0021BA                     u2600:
  6634   0021BA  0E00               	movlw	0
  6635   0021BC  6E40               	movwf	___fldiv@aexp^0,c
  6636   0021BE  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  6637   0021C0  EFE4  F010         	goto	u2611
  6638   0021C4  EFE6  F010         	goto	u2610
  6639   0021C8                     u2611:
  6640   0021C8  EF0A  F011         	goto	l782
  6641   0021CC                     u2610:
  6642   0021CC  0EFF               	movlw	255
  6643   0021CE  143B               	andwf	___fldiv@grs^0,w,c
  6644   0021D0  6E30               	movwf	??___fldiv^0,c
  6645   0021D2  0EFF               	movlw	255
  6646   0021D4  143C               	andwf	(___fldiv@grs+1)^0,w,c
  6647   0021D6  6E31               	movwf	(??___fldiv+1)^0,c
  6648   0021D8  0EFF               	movlw	255
  6649   0021DA  143D               	andwf	(___fldiv@grs+2)^0,w,c
  6650   0021DC  6E32               	movwf	(??___fldiv+2)^0,c
  6651   0021DE  0E7F               	movlw	127
  6652   0021E0  143E               	andwf	(___fldiv@grs+3)^0,w,c
  6653   0021E2  6E33               	movwf	(??___fldiv+3)^0,c
  6654   0021E4  5030               	movf	??___fldiv^0,w,c
  6655   0021E6  1031               	iorwf	(??___fldiv+1)^0,w,c
  6656   0021E8  1032               	iorwf	(??___fldiv+2)^0,w,c
  6657   0021EA  1033               	iorwf	(??___fldiv+3)^0,w,c
  6658   0021EC  B4D8               	btfsc	status,2,c
  6659   0021EE  EFFB  F010         	goto	u2621
  6660   0021F2  EFFD  F010         	goto	u2620
  6661   0021F6                     u2621:
  6662   0021F6  EF01  F011         	goto	l783
  6663   0021FA                     u2620:
  6664   0021FA                     l2905:
  6665   0021FA  0E01               	movlw	1
  6666   0021FC  6E40               	movwf	___fldiv@aexp^0,c
  6667   0021FE  EF0A  F011         	goto	l782
  6668   002202                     l783:
  6669   002202  A028               	btfss	___fldiv@b^0,0,c
  6670   002204  EF06  F011         	goto	u2631
  6671   002208  EF08  F011         	goto	u2630
  6672   00220C                     u2631:
  6673   00220C  EF0A  F011         	goto	l782
  6674   002210                     u2630:
  6675   002210  EFFD  F010         	goto	l2905
  6676   002214                     l782:
  6677   002214  5040               	movf	___fldiv@aexp^0,w,c
  6678   002216  B4D8               	btfsc	status,2,c
  6679   002218  EF10  F011         	goto	u2641
  6680   00221C  EF12  F011         	goto	u2640
  6681   002220                     u2641:
  6682   002220  EF36  F011         	goto	l2917
  6683   002224                     u2640:
  6684   002224  0E01               	movlw	1
  6685   002226  2628               	addwf	___fldiv@b^0,f,c
  6686   002228  0E00               	movlw	0
  6687   00222A  2229               	addwfc	(___fldiv@b+1)^0,f,c
  6688   00222C  222A               	addwfc	(___fldiv@b+2)^0,f,c
  6689   00222E  222B               	addwfc	(___fldiv@b+3)^0,f,c
  6690   002230  A02B               	btfss	(___fldiv@b+3)^0,0,c
  6691   002232  EF1D  F011         	goto	u2651
  6692   002236  EF1F  F011         	goto	u2650
  6693   00223A                     u2651:
  6694   00223A  EF36  F011         	goto	l2917
  6695   00223E                     u2650:
  6696   00223E  C028  F030         	movff	___fldiv@b,??___fldiv
  6697   002242  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  6698   002246  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  6699   00224A  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  6700   00224E  3433               	rlcf	(??___fldiv+3)^0,w,c
  6701   002250  3233               	rrcf	(??___fldiv+3)^0,f,c
  6702   002252  3232               	rrcf	(??___fldiv+2)^0,f,c
  6703   002254  3231               	rrcf	(??___fldiv+1)^0,f,c
  6704   002256  3230               	rrcf	??___fldiv^0,f,c
  6705   002258  C030  F028         	movff	??___fldiv,___fldiv@b
  6706   00225C  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  6707   002260  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  6708   002264  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  6709   002268  4A39               	infsnz	___fldiv@new_exp^0,f,c
  6710   00226A  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  6711   00226C                     l2917:
  6712   00226C  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6713   00226E  EF41  F011         	goto	u2661
  6714   002272  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6715   002274  E108               	bnz	u2660
  6716   002276  2839               	incf	___fldiv@new_exp^0,w,c
  6717   002278  A0D8               	btfss	status,0,c
  6718   00227A  EF41  F011         	goto	u2661
  6719   00227E  EF43  F011         	goto	u2660
  6720   002282                     u2661:
  6721   002282  EF4E  F011         	goto	l2921
  6722   002286                     u2660:
  6723   002286  0E00               	movlw	0
  6724   002288  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6725   00228A  6839               	setf	___fldiv@new_exp^0,c
  6726   00228C  0E00               	movlw	0
  6727   00228E  6E28               	movwf	___fldiv@b^0,c
  6728   002290  0E00               	movlw	0
  6729   002292  6E29               	movwf	(___fldiv@b+1)^0,c
  6730   002294  0E00               	movlw	0
  6731   002296  6E2A               	movwf	(___fldiv@b+2)^0,c
  6732   002298  0E00               	movlw	0
  6733   00229A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6734   00229C                     l2921:
  6735   00229C  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6736   00229E  EF5B  F011         	goto	u2670
  6737   0022A2  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  6738   0022A4  E106               	bnz	u2671
  6739   0022A6  0439               	decf	___fldiv@new_exp^0,w,c
  6740   0022A8  B0D8               	btfsc	status,0,c
  6741   0022AA  EF59  F011         	goto	u2671
  6742   0022AE  EF5B  F011         	goto	u2670
  6743   0022B2                     u2671:
  6744   0022B2  EF69  F011         	goto	l2925
  6745   0022B6                     u2670:
  6746   0022B6  0E00               	movlw	0
  6747   0022B8  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  6748   0022BA  0E00               	movlw	0
  6749   0022BC  6E39               	movwf	___fldiv@new_exp^0,c
  6750   0022BE  0E00               	movlw	0
  6751   0022C0  6E28               	movwf	___fldiv@b^0,c
  6752   0022C2  0E00               	movlw	0
  6753   0022C4  6E29               	movwf	(___fldiv@b+1)^0,c
  6754   0022C6  0E00               	movlw	0
  6755   0022C8  6E2A               	movwf	(___fldiv@b+2)^0,c
  6756   0022CA  0E00               	movlw	0
  6757   0022CC  6E2B               	movwf	(___fldiv@b+3)^0,c
  6758   0022CE  0E00               	movlw	0
  6759   0022D0  6E38               	movwf	___fldiv@sign^0,c
  6760   0022D2                     l2925:
  6761   0022D2  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  6762   0022D6  A03F               	btfss	___fldiv@bexp^0,0,c
  6763   0022D8  EF70  F011         	goto	u2681
  6764   0022DC  EF72  F011         	goto	u2680
  6765   0022E0                     u2681:
  6766   0022E0  EF75  F011         	goto	l2931
  6767   0022E4                     u2680:
  6768   0022E4  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6769   0022E6  EF76  F011         	goto	l2933
  6770   0022EA                     l2931:
  6771   0022EA  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  6772   0022EC                     l2933:
  6773   0022EC  90D8               	bcf	status,0,c
  6774   0022EE  303F               	rrcf	___fldiv@bexp^0,w,c
  6775   0022F0  6E2B               	movwf	(___fldiv@b+3)^0,c
  6776   0022F2  EF2C  F010         	goto	l2847
  6777   0022F6                     l769:
  6778   0022F6  0012               	return		;funcret
  6779   0022F8                     __end_of___fldiv:
  6780                           	callstack 0
  6781                           
  6782 ;; *************** function _set_adc2 *****************
  6783 ;; Defined at:
  6784 ;;		line 124 in file "mainselec.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;		None
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;		None
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6798 ;;      Params:         0       0       0       0       0       0       0       0       0
  6799 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6801 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6802 ;;Total ram usage:        0 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; This function calls:
  6805 ;;		Nothing
  6806 ;; This function is called by:
  6807 ;;		_main
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text24
  6812   003478                     __ptext24:
  6813                           	callstack 0
  6814   003478                     _set_adc2:
  6815                           	callstack 30
  6816   003478                     
  6817                           ;mainselec.c: 125:     ANSELAbits.ANSA2 = 1;
  6818   003478  010F               	movlb	15	; () banked
  6819   00347A  855B               	bsf	91,2,b	;volatile
  6820                           
  6821                           ;mainselec.c: 126:     TRISAbits.RA2 = 1;
  6822   00347C  8492               	bsf	146,2,c	;volatile
  6823   00347E                     
  6824                           ; BSR set to: 15
  6825                           ;mainselec.c: 127:     ADCON0 = 0b00001000;;
  6826   00347E  0E08               	movlw	8
  6827   003480  6EC2               	movwf	194,c	;volatile
  6828                           
  6829                           ;mainselec.c: 128:     ADCON1 = 0x00;
  6830   003482  0E00               	movlw	0
  6831   003484  6EC1               	movwf	193,c	;volatile
  6832                           
  6833                           ;mainselec.c: 129:     ADCON2 = 0b10011101;
  6834   003486  0E9D               	movlw	157
  6835   003488  6EC0               	movwf	192,c	;volatile
  6836   00348A                     
  6837                           ; BSR set to: 15
  6838                           ;mainselec.c: 130:     ADCON0bits.ADON = 1;
  6839   00348A  80C2               	bsf	194,0,c	;volatile
  6840   00348C                     
  6841                           ; BSR set to: 15
  6842   00348C  0012               	return		;funcret
  6843   00348E                     __end_of_set_adc2:
  6844                           	callstack 0
  6845                           
  6846 ;; *************** function _set_adc1 *****************
  6847 ;; Defined at:
  6848 ;;		line 115 in file "mainselec.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;		None
  6851 ;; Auto vars:     Size  Location     Type
  6852 ;;		None
  6853 ;; Return value:  Size  Location     Type
  6854 ;;                  1    wreg      void 
  6855 ;; Registers used:
  6856 ;;		wreg, status,2
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0
  6863 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6864 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6865 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6866 ;;Total ram usage:        0 bytes
  6867 ;; Hardware stack levels used: 1
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_main
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text25
  6876   00348E                     __ptext25:
  6877                           	callstack 0
  6878   00348E                     _set_adc1:
  6879                           	callstack 30
  6880   00348E                     
  6881                           ;mainselec.c: 116:     ANSELAbits.ANSA1 = 1;
  6882   00348E  010F               	movlb	15	; () banked
  6883   003490  835B               	bsf	91,1,b	;volatile
  6884                           
  6885                           ;mainselec.c: 117:     TRISAbits.RA1 = 1;
  6886   003492  8292               	bsf	146,1,c	;volatile
  6887   003494                     
  6888                           ; BSR set to: 15
  6889                           ;mainselec.c: 118:     ADCON0 = 0b00000100;
  6890   003494  0E04               	movlw	4
  6891   003496  6EC2               	movwf	194,c	;volatile
  6892                           
  6893                           ;mainselec.c: 119:     ADCON1 = 0x00;
  6894   003498  0E00               	movlw	0
  6895   00349A  6EC1               	movwf	193,c	;volatile
  6896                           
  6897                           ;mainselec.c: 120:     ADCON2 = 0b10011101;
  6898   00349C  0E9D               	movlw	157
  6899   00349E  6EC0               	movwf	192,c	;volatile
  6900   0034A0                     
  6901                           ; BSR set to: 15
  6902                           ;mainselec.c: 121:     ADCON0bits.ADON = 1;
  6903   0034A0  80C2               	bsf	194,0,c	;volatile
  6904   0034A2                     
  6905                           ; BSR set to: 15
  6906   0034A2  0012               	return		;funcret
  6907   0034A4                     __end_of_set_adc1:
  6908                           	callstack 0
  6909                           
  6910 ;; *************** function _set_adc *****************
  6911 ;; Defined at:
  6912 ;;		line 107 in file "mainselec.c"
  6913 ;; Parameters:    Size  Location     Type
  6914 ;;		None
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;		None
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      void 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6926 ;;      Params:         0       0       0       0       0       0       0       0       0
  6927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6929 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6930 ;;Total ram usage:        0 bytes
  6931 ;; Hardware stack levels used: 1
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		_main
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text26
  6940   0034A4                     __ptext26:
  6941                           	callstack 0
  6942   0034A4                     _set_adc:
  6943                           	callstack 30
  6944   0034A4                     
  6945                           ;mainselec.c: 108:     ANSELAbits.ANSA0 = 1;
  6946   0034A4  010F               	movlb	15	; () banked
  6947   0034A6  815B               	bsf	91,0,b	;volatile
  6948                           
  6949                           ;mainselec.c: 109:     TRISAbits.RA0 = 1;
  6950   0034A8  8092               	bsf	146,0,c	;volatile
  6951   0034AA                     
  6952                           ; BSR set to: 15
  6953                           ;mainselec.c: 110:     ADCON0 = 0x00;
  6954   0034AA  0E00               	movlw	0
  6955   0034AC  6EC2               	movwf	194,c	;volatile
  6956                           
  6957                           ;mainselec.c: 111:     ADCON1 = 0x00;
  6958   0034AE  0E00               	movlw	0
  6959   0034B0  6EC1               	movwf	193,c	;volatile
  6960                           
  6961                           ;mainselec.c: 112:     ADCON2 = 0b10011101;
  6962   0034B2  0E9D               	movlw	157
  6963   0034B4  6EC0               	movwf	192,c	;volatile
  6964   0034B6                     
  6965                           ; BSR set to: 15
  6966                           ;mainselec.c: 113:     ADCON0bits.ADON = 1;
  6967   0034B6  80C2               	bsf	194,0,c	;volatile
  6968   0034B8                     
  6969                           ; BSR set to: 15
  6970   0034B8  0012               	return		;funcret
  6971   0034BA                     __end_of_set_adc:
  6972                           	callstack 0
  6973                           
  6974 ;; *************** function ___xxtofl *****************
  6975 ;; Defined at:
  6976 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;  sign            1    wreg     unsigned char 
  6979 ;;  val             4    0[COMRAM] long 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  sign            1    8[COMRAM] unsigned char 
  6982 ;;  arg             4   10[COMRAM] unsigned long 
  6983 ;;  exp             1    9[COMRAM] unsigned char 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  4    0[COMRAM] unsigned char 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6993 ;;      Params:         4       0       0       0       0       0       0       0       0
  6994 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6995 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6996 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6997 ;;Total ram usage:       14 bytes
  6998 ;; Hardware stack levels used: 1
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_main
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text27
  7007   0027E4                     __ptext27:
  7008                           	callstack 0
  7009   0027E4                     ___xxtofl:
  7010                           	callstack 30
  7011                           
  7012                           ; BSR set to: 15
  7013                           ;incstack = 0
  7014                           ;___xxtofl@sign stored from wreg
  7015   0027E4  6E09               	movwf	___xxtofl@sign^0,c
  7016   0027E6  5009               	movf	___xxtofl@sign^0,w,c
  7017   0027E8  B4D8               	btfsc	status,2,c
  7018   0027EA  EFF9  F013         	goto	u3791
  7019   0027EE  EFFB  F013         	goto	u3790
  7020   0027F2                     u3791:
  7021   0027F2  EF1D  F014         	goto	l842
  7022   0027F6                     u3790:
  7023   0027F6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7024   0027F8  EF02  F014         	goto	u3800
  7025   0027FC  EF00  F014         	goto	u3801
  7026   002800                     u3801:
  7027   002800  EF1D  F014         	goto	l842
  7028   002804                     u3800:
  7029   002804  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7030   002808  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7031   00280C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7032   002810  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7033   002814  1E05               	comf	??___xxtofl^0,f,c
  7034   002816  1E06               	comf	(??___xxtofl+1)^0,f,c
  7035   002818  1E07               	comf	(??___xxtofl+2)^0,f,c
  7036   00281A  1E08               	comf	(??___xxtofl+3)^0,f,c
  7037   00281C  2A05               	incf	??___xxtofl^0,f,c
  7038   00281E  0E00               	movlw	0
  7039   002820  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7040   002822  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7041   002824  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7042   002826  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7043   00282A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7044   00282E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7045   002832  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7046   002836  EF25  F014         	goto	l3765
  7047   00283A                     l842:
  7048   00283A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7049   00283E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7050   002842  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7051   002846  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7052   00284A                     l3765:
  7053   00284A  5001               	movf	___xxtofl@val^0,w,c
  7054   00284C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7055   00284E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7056   002850  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7057   002852  A4D8               	btfss	status,2,c
  7058   002854  EF2E  F014         	goto	u3811
  7059   002858  EF30  F014         	goto	u3810
  7060   00285C                     u3811:
  7061   00285C  EF3A  F014         	goto	l3771
  7062   002860                     u3810:
  7063   002860  0E00               	movlw	0
  7064   002862  6E01               	movwf	?___xxtofl^0,c
  7065   002864  0E00               	movlw	0
  7066   002866  6E02               	movwf	(?___xxtofl+1)^0,c
  7067   002868  0E00               	movlw	0
  7068   00286A  6E03               	movwf	(?___xxtofl+2)^0,c
  7069   00286C  0E00               	movlw	0
  7070   00286E  6E04               	movwf	(?___xxtofl+3)^0,c
  7071   002870  EFCB  F014         	goto	l845
  7072   002874                     l3771:
  7073   002874  0E96               	movlw	150
  7074   002876  6E0A               	movwf	___xxtofl@exp^0,c
  7075   002878  EF44  F014         	goto	l3775
  7076   00287C                     l3773:
  7077   00287C  2A0A               	incf	___xxtofl@exp^0,f,c
  7078   00287E  90D8               	bcf	status,0,c
  7079   002880  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7080   002882  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7081   002884  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7082   002886  320B               	rrcf	___xxtofl@arg^0,f,c
  7083   002888                     l3775:
  7084   002888  0E00               	movlw	0
  7085   00288A  140B               	andwf	___xxtofl@arg^0,w,c
  7086   00288C  6E05               	movwf	??___xxtofl^0,c
  7087   00288E  0E00               	movlw	0
  7088   002890  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7089   002892  6E06               	movwf	(??___xxtofl+1)^0,c
  7090   002894  0E00               	movlw	0
  7091   002896  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7092   002898  6E07               	movwf	(??___xxtofl+2)^0,c
  7093   00289A  0EFE               	movlw	254
  7094   00289C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7095   00289E  6E08               	movwf	(??___xxtofl+3)^0,c
  7096   0028A0  5005               	movf	??___xxtofl^0,w,c
  7097   0028A2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7098   0028A4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7099   0028A6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7100   0028A8  A4D8               	btfss	status,2,c
  7101   0028AA  EF59  F014         	goto	u3821
  7102   0028AE  EF5B  F014         	goto	u3820
  7103   0028B2                     u3821:
  7104   0028B2  EF3E  F014         	goto	l3773
  7105   0028B6                     u3820:
  7106   0028B6  EF69  F014         	goto	l849
  7107   0028BA                     l3777:
  7108   0028BA  2A0A               	incf	___xxtofl@exp^0,f,c
  7109   0028BC  0E01               	movlw	1
  7110   0028BE  260B               	addwf	___xxtofl@arg^0,f,c
  7111   0028C0  0E00               	movlw	0
  7112   0028C2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7113   0028C4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7114   0028C6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7115   0028C8  90D8               	bcf	status,0,c
  7116   0028CA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7117   0028CC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7118   0028CE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7119   0028D0  320B               	rrcf	___xxtofl@arg^0,f,c
  7120   0028D2                     l849:
  7121   0028D2  0E00               	movlw	0
  7122   0028D4  140B               	andwf	___xxtofl@arg^0,w,c
  7123   0028D6  6E05               	movwf	??___xxtofl^0,c
  7124   0028D8  0E00               	movlw	0
  7125   0028DA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7126   0028DC  6E06               	movwf	(??___xxtofl+1)^0,c
  7127   0028DE  0E00               	movlw	0
  7128   0028E0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7129   0028E2  6E07               	movwf	(??___xxtofl+2)^0,c
  7130   0028E4  0EFF               	movlw	255
  7131   0028E6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7132   0028E8  6E08               	movwf	(??___xxtofl+3)^0,c
  7133   0028EA  5005               	movf	??___xxtofl^0,w,c
  7134   0028EC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7135   0028EE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7136   0028F0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7137   0028F2  A4D8               	btfss	status,2,c
  7138   0028F4  EF7E  F014         	goto	u3831
  7139   0028F8  EF80  F014         	goto	u3830
  7140   0028FC                     u3831:
  7141   0028FC  EF5D  F014         	goto	l3777
  7142   002900                     u3830:
  7143   002900  EF88  F014         	goto	l3785
  7144   002904                     l3783:
  7145   002904  060A               	decf	___xxtofl@exp^0,f,c
  7146   002906  90D8               	bcf	status,0,c
  7147   002908  360B               	rlcf	___xxtofl@arg^0,f,c
  7148   00290A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7149   00290C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7150   00290E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7151   002910                     l3785:
  7152   002910  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7153   002912  EF8D  F014         	goto	u3841
  7154   002916  EF8F  F014         	goto	u3840
  7155   00291A                     u3841:
  7156   00291A  EF97  F014         	goto	l856
  7157   00291E                     u3840:
  7158   00291E  0E02               	movlw	2
  7159   002920  600A               	cpfslt	___xxtofl@exp^0,c
  7160   002922  EF95  F014         	goto	u3851
  7161   002926  EF97  F014         	goto	u3850
  7162   00292A                     u3851:
  7163   00292A  EF82  F014         	goto	l3783
  7164   00292E                     u3850:
  7165   00292E                     l856:
  7166   00292E  B00A               	btfsc	___xxtofl@exp^0,0,c
  7167   002930  EF9C  F014         	goto	u3861
  7168   002934  EF9E  F014         	goto	u3860
  7169   002938                     u3861:
  7170   002938  EF9F  F014         	goto	l3791
  7171   00293C                     u3860:
  7172   00293C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7173   00293E                     l3791:
  7174   00293E  90D8               	bcf	status,0,c
  7175   002940  320A               	rrcf	___xxtofl@exp^0,f,c
  7176   002942  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7177   002946  6A06               	clrf	(??___xxtofl+1)^0,c
  7178   002948  6A07               	clrf	(??___xxtofl+2)^0,c
  7179   00294A  6A08               	clrf	(??___xxtofl+3)^0,c
  7180   00294C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7181   002950  6A07               	clrf	(??___xxtofl+2)^0,c
  7182   002952  6A06               	clrf	(??___xxtofl+1)^0,c
  7183   002954  6A05               	clrf	??___xxtofl^0,c
  7184   002956  5005               	movf	??___xxtofl^0,w,c
  7185   002958  120B               	iorwf	___xxtofl@arg^0,f,c
  7186   00295A  5006               	movf	(??___xxtofl+1)^0,w,c
  7187   00295C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7188   00295E  5007               	movf	(??___xxtofl+2)^0,w,c
  7189   002960  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7190   002962  5008               	movf	(??___xxtofl+3)^0,w,c
  7191   002964  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7192   002966  5009               	movf	___xxtofl@sign^0,w,c
  7193   002968  B4D8               	btfsc	status,2,c
  7194   00296A  EFB9  F014         	goto	u3871
  7195   00296E  EFBB  F014         	goto	u3870
  7196   002972                     u3871:
  7197   002972  EFC3  F014         	goto	l3801
  7198   002976                     u3870:
  7199   002976  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7200   002978  EFC2  F014         	goto	u3880
  7201   00297C  EFC0  F014         	goto	u3881
  7202   002980                     u3881:
  7203   002980  EFC3  F014         	goto	l3801
  7204   002984                     u3880:
  7205   002984  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7206   002986                     l3801:
  7207   002986  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7208   00298A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7209   00298E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7210   002992  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7211   002996                     l845:
  7212   002996  0012               	return		;funcret
  7213   002998                     __end_of___xxtofl:
  7214                           	callstack 0
  7215                           
  7216 ;; *************** function _Lcd_Write_String *****************
  7217 ;; Defined at:
  7218 ;;		line 104 in file "lcd.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  a               2    4[COMRAM] PTR const unsigned char 
  7221 ;;		 -> STR_8(13), STR_6(13), buffer(20), STR_4(13), 
  7222 ;;		 -> STR_3(11), STR_2(11), STR_1(12), 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  i               2    8[COMRAM] int 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7234 ;;      Params:         2       0       0       0       0       0       0       0       0
  7235 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7236 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7237 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7238 ;;Total ram usage:        6 bytes
  7239 ;; Hardware stack levels used: 1
  7240 ;; Hardware stack levels required when called: 2
  7241 ;; This function calls:
  7242 ;;		_Lcd_Write_Char
  7243 ;; This function is called by:
  7244 ;;		_main
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text28
  7249   00302E                     __ptext28:
  7250                           	callstack 0
  7251   00302E                     _Lcd_Write_String:
  7252                           	callstack 28
  7253   00302E                     
  7254                           ;lcd.c: 104: void Lcd_Write_String(const char *a);lcd.c: 105: {;lcd.c: 106:     int i;;l
      +                          cd.c: 107:     for(i=0;a[i]!='\0';i++)
  7255   00302E  0E00               	movlw	0
  7256   003030  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
  7257   003032  0E00               	movlw	0
  7258   003034  6E09               	movwf	Lcd_Write_String@i^0,c
  7259   003036  EF37  F018         	goto	l3745
  7260   00303A                     l3741:
  7261                           
  7262                           ;lcd.c: 108:         Lcd_Write_Char(a[i]);
  7263   00303A  5009               	movf	Lcd_Write_String@i^0,w,c
  7264   00303C  2405               	addwf	Lcd_Write_String@a^0,w,c
  7265   00303E  6E07               	movwf	??_Lcd_Write_String^0,c
  7266   003040  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7267   003042  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7268   003044  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7269   003046  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7270   00304A  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7271   00304E  6AF8               	clrf	tblptru,c
  7272   003050  0E07               	movlw	(high __ramtop+-1)
  7273   003052  64F7               	cpfsgt	tblptrh,c
  7274   003054  D003               	bra	u3767
  7275   003056  0008               	tblrd		*
  7276   003058  50F5               	movf	tablat,w,c
  7277   00305A  D005               	bra	u3760
  7278   00305C                     u3767:
  7279   00305C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7280   003060  CFF7 FFE2          	movff	tblptrh,fsr1h
  7281   003064  50E7               	movf	indf1,w,c
  7282   003066                     u3760:
  7283   003066  ECEE  F019         	call	_Lcd_Write_Char
  7284   00306A  4A09               	infsnz	Lcd_Write_String@i^0,f,c
  7285   00306C  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
  7286   00306E                     l3745:
  7287   00306E  5009               	movf	Lcd_Write_String@i^0,w,c
  7288   003070  2405               	addwf	Lcd_Write_String@a^0,w,c
  7289   003072  6E07               	movwf	??_Lcd_Write_String^0,c
  7290   003074  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
  7291   003076  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
  7292   003078  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
  7293   00307A  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  7294   00307E  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  7295   003082  6AF8               	clrf	tblptru,c
  7296   003084  0E07               	movlw	(high __ramtop+-1)
  7297   003086  64F7               	cpfsgt	tblptrh,c
  7298   003088  D003               	bra	u3777
  7299   00308A  0008               	tblrd		*
  7300   00308C  50F5               	movf	tablat,w,c
  7301   00308E  D005               	bra	u3770
  7302   003090                     u3777:
  7303   003090  CFF6 FFE1          	movff	tblptrl,fsr1l
  7304   003094  CFF7 FFE2          	movff	tblptrh,fsr1h
  7305   003098  50E7               	movf	indf1,w,c
  7306   00309A                     u3770:
  7307   00309A  0900               	iorlw	0
  7308   00309C  A4D8               	btfss	status,2,c
  7309   00309E  EF53  F018         	goto	u3781
  7310   0030A2  EF55  F018         	goto	u3780
  7311   0030A6                     u3781:
  7312   0030A6  EF1D  F018         	goto	l3741
  7313   0030AA                     u3780:
  7314   0030AA  0012               	return		;funcret
  7315   0030AC                     __end_of_Lcd_Write_String:
  7316                           	callstack 0
  7317                           
  7318 ;; *************** function _Lcd_Write_Char *****************
  7319 ;; Defined at:
  7320 ;;		line 88 in file "lcd.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  a               1    wreg     unsigned char 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  a               1    3[COMRAM] unsigned char 
  7325 ;;  y               1    2[COMRAM] unsigned char 
  7326 ;;  temp            1    1[COMRAM] unsigned char 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      void 
  7329 ;; Registers used:
  7330 ;;		wreg, status,2, status,0, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7336 ;;      Params:         0       0       0       0       0       0       0       0       0
  7337 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7339 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7340 ;;Total ram usage:        3 bytes
  7341 ;; Hardware stack levels used: 1
  7342 ;; Hardware stack levels required when called: 1
  7343 ;; This function calls:
  7344 ;;		_Lcd_Port
  7345 ;; This function is called by:
  7346 ;;		_Lcd_Write_String
  7347 ;;		_Lcd_CGRAM_CreateChar
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text29
  7352   0033DC                     __ptext29:
  7353                           	callstack 0
  7354   0033DC                     _Lcd_Write_Char:
  7355                           	callstack 28
  7356                           
  7357                           ;incstack = 0
  7358                           ;Lcd_Write_Char@a stored from wreg
  7359   0033DC  6E04               	movwf	Lcd_Write_Char@a^0,c
  7360   0033DE                     
  7361                           ;lcd.c: 88: void Lcd_Write_Char(char a);lcd.c: 89: {;lcd.c: 90:     char temp,y;;lcd.c: 
      +                          91:     temp = a&0x0F;
  7362   0033DE  5004               	movf	Lcd_Write_Char@a^0,w,c
  7363   0033E0  0B0F               	andlw	15
  7364   0033E2  6E02               	movwf	Lcd_Write_Char@temp^0,c
  7365                           
  7366                           ;lcd.c: 92:     y = a&0xF0;
  7367   0033E4  5004               	movf	Lcd_Write_Char@a^0,w,c
  7368   0033E6  0BF0               	andlw	240
  7369   0033E8  6E03               	movwf	Lcd_Write_Char@y^0,c
  7370   0033EA                     
  7371                           ;lcd.c: 93:     LATDbits.LD2 = 1;
  7372   0033EA  848C               	bsf	140,2,c	;volatile
  7373   0033EC                     
  7374                           ;lcd.c: 94:     Lcd_Port(y>>4);
  7375   0033EC  3803               	swapf	Lcd_Write_Char@y^0,w,c
  7376   0033EE  0B0F               	andlw	15
  7377   0033F0  ECC6  F018         	call	_Lcd_Port
  7378   0033F4                     
  7379                           ;lcd.c: 95:     LATDbits.LD3 = 1;
  7380   0033F4  868C               	bsf	140,3,c	;volatile
  7381   0033F6                     
  7382                           ;lcd.c: 96:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  7383   0033F6  0E28               	movlw	40
  7384   0033F8                     u4087:
  7385   0033F8  2EE8               	decfsz	wreg,f,c
  7386   0033FA  D7FE               	bra	u4087
  7387   0033FC                     
  7388                           ;lcd.c: 97:     LATDbits.LD3 = 0;
  7389   0033FC  968C               	bcf	140,3,c	;volatile
  7390   0033FE                     
  7391                           ;lcd.c: 98:     Lcd_Port(temp);
  7392   0033FE  5002               	movf	Lcd_Write_Char@temp^0,w,c
  7393   003400  ECC6  F018         	call	_Lcd_Port
  7394   003404                     
  7395                           ;lcd.c: 99:     LATDbits.LD3 = 1;
  7396   003404  868C               	bsf	140,3,c	;volatile
  7397   003406                     
  7398                           ;lcd.c: 100:     _delay((unsigned long)((40)*(12000000/4000000.0)));
  7399   003406  0E28               	movlw	40
  7400   003408                     u4097:
  7401   003408  2EE8               	decfsz	wreg,f,c
  7402   00340A  D7FE               	bra	u4097
  7403   00340C                     
  7404                           ;lcd.c: 101:     LATDbits.LD3 = 0;
  7405   00340C  968C               	bcf	140,3,c	;volatile
  7406   00340E  0012               	return		;funcret
  7407   003410                     __end_of_Lcd_Write_Char:
  7408                           	callstack 0
  7409                           
  7410 ;; *************** function _Lcd_Set_Cursor *****************
  7411 ;; Defined at:
  7412 ;;		line 26 in file "lcd.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  a               1    wreg     unsigned char 
  7415 ;;  b               1    3[COMRAM] unsigned char 
  7416 ;; Auto vars:     Size  Location     Type
  7417 ;;  a               1    4[COMRAM] unsigned char 
  7418 ;;  temp            1    7[COMRAM] unsigned char 
  7419 ;;  y               1    6[COMRAM] unsigned char 
  7420 ;;  z               1    5[COMRAM] unsigned char 
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7430 ;;      Params:         1       0       0       0       0       0       0       0       0
  7431 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7433 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7434 ;;Total ram usage:        5 bytes
  7435 ;; Hardware stack levels used: 1
  7436 ;; Hardware stack levels required when called: 2
  7437 ;; This function calls:
  7438 ;;		_Lcd_Cmd
  7439 ;; This function is called by:
  7440 ;;		_main
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text30
  7445   002CA0                     __ptext30:
  7446                           	callstack 0
  7447   002CA0                     _Lcd_Set_Cursor:
  7448                           	callstack 28
  7449                           
  7450                           ;incstack = 0
  7451                           ;Lcd_Set_Cursor@a stored from wreg
  7452   002CA0  6E05               	movwf	Lcd_Set_Cursor@a^0,c
  7453   002CA2                     
  7454                           ;lcd.c: 26: void Lcd_Set_Cursor(char a, char b);lcd.c: 27: {;lcd.c: 28:     char temp,z,
      +                          y;;lcd.c: 29:     if(a == 1)
  7455   002CA2  0405               	decf	Lcd_Set_Cursor@a^0,w,c
  7456   002CA4  A4D8               	btfss	status,2,c
  7457   002CA6  EF57  F016         	goto	u3721
  7458   002CAA  EF59  F016         	goto	u3720
  7459   002CAE                     u3721:
  7460   002CAE  EF6A  F016         	goto	l3715
  7461   002CB2                     u3720:
  7462   002CB2                     
  7463                           ;lcd.c: 30:     {;lcd.c: 31:         temp = 0x80 + b - 1;
  7464   002CB2  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7465   002CB4  0F7F               	addlw	127
  7466   002CB6  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7467                           
  7468                           ;lcd.c: 32:         z = temp>>4;
  7469   002CB8  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7470   002CBA  0B0F               	andlw	15
  7471   002CBC  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7472                           
  7473                           ;lcd.c: 33:         y = temp & 0x0F;
  7474   002CBE  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7475   002CC0  0B0F               	andlw	15
  7476   002CC2  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7477   002CC4                     
  7478                           ;lcd.c: 34:         Lcd_Cmd(z);
  7479   002CC4  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7480   002CC6  EC2C  F01A         	call	_Lcd_Cmd
  7481   002CCA                     
  7482                           ;lcd.c: 35:         Lcd_Cmd(y);
  7483   002CCA  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7484   002CCC  EC2C  F01A         	call	_Lcd_Cmd
  7485                           
  7486                           ;lcd.c: 36:     }
  7487   002CD0  EFB8  F016         	goto	l125
  7488   002CD4                     l3715:
  7489   002CD4  0E02               	movlw	2
  7490   002CD6  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7491   002CD8  A4D8               	btfss	status,2,c
  7492   002CDA  EF71  F016         	goto	u3731
  7493   002CDE  EF73  F016         	goto	u3730
  7494   002CE2                     u3731:
  7495   002CE2  EF84  F016         	goto	l3723
  7496   002CE6                     u3730:
  7497   002CE6                     
  7498                           ;lcd.c: 38:     {;lcd.c: 39:         temp = 0xC0 + b - 1;
  7499   002CE6  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7500   002CE8  0FBF               	addlw	191
  7501   002CEA  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7502                           
  7503                           ;lcd.c: 40:         z = temp>>4;
  7504   002CEC  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7505   002CEE  0B0F               	andlw	15
  7506   002CF0  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7507                           
  7508                           ;lcd.c: 41:         y = temp & 0x0F;
  7509   002CF2  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7510   002CF4  0B0F               	andlw	15
  7511   002CF6  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7512   002CF8                     
  7513                           ;lcd.c: 42:         Lcd_Cmd(z);
  7514   002CF8  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7515   002CFA  EC2C  F01A         	call	_Lcd_Cmd
  7516   002CFE                     
  7517                           ;lcd.c: 43:         Lcd_Cmd(y);
  7518   002CFE  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7519   002D00  EC2C  F01A         	call	_Lcd_Cmd
  7520                           
  7521                           ;lcd.c: 44:     }
  7522   002D04  EFB8  F016         	goto	l125
  7523   002D08                     l3723:
  7524   002D08  0E03               	movlw	3
  7525   002D0A  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7526   002D0C  A4D8               	btfss	status,2,c
  7527   002D0E  EF8B  F016         	goto	u3741
  7528   002D12  EF8D  F016         	goto	u3740
  7529   002D16                     u3741:
  7530   002D16  EF9E  F016         	goto	l3731
  7531   002D1A                     u3740:
  7532   002D1A                     
  7533                           ;lcd.c: 46:     {;lcd.c: 47:         temp = 0x94 + b - 1;
  7534   002D1A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7535   002D1C  0F93               	addlw	147
  7536   002D1E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7537                           
  7538                           ;lcd.c: 48:         z = temp>>4;
  7539   002D20  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7540   002D22  0B0F               	andlw	15
  7541   002D24  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7542                           
  7543                           ;lcd.c: 49:         y = temp & 0x0F;
  7544   002D26  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7545   002D28  0B0F               	andlw	15
  7546   002D2A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7547   002D2C                     
  7548                           ;lcd.c: 50:         Lcd_Cmd(z);
  7549   002D2C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7550   002D2E  EC2C  F01A         	call	_Lcd_Cmd
  7551   002D32                     
  7552                           ;lcd.c: 51:         Lcd_Cmd(y);
  7553   002D32  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7554   002D34  EC2C  F01A         	call	_Lcd_Cmd
  7555                           
  7556                           ;lcd.c: 52:     }
  7557   002D38  EFB8  F016         	goto	l125
  7558   002D3C                     l3731:
  7559   002D3C  0E04               	movlw	4
  7560   002D3E  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
  7561   002D40  A4D8               	btfss	status,2,c
  7562   002D42  EFA5  F016         	goto	u3751
  7563   002D46  EFA7  F016         	goto	u3750
  7564   002D4A                     u3751:
  7565   002D4A  EFB8  F016         	goto	l121
  7566   002D4E                     u3750:
  7567   002D4E                     
  7568                           ;lcd.c: 54:     {;lcd.c: 55:         temp = 0xD4 + b - 1;
  7569   002D4E  5004               	movf	Lcd_Set_Cursor@b^0,w,c
  7570   002D50  0FD3               	addlw	211
  7571   002D52  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
  7572                           
  7573                           ;lcd.c: 56:         z = temp>>4;
  7574   002D54  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
  7575   002D56  0B0F               	andlw	15
  7576   002D58  6E06               	movwf	Lcd_Set_Cursor@z^0,c
  7577                           
  7578                           ;lcd.c: 57:         y = temp & 0x0F;
  7579   002D5A  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
  7580   002D5C  0B0F               	andlw	15
  7581   002D5E  6E07               	movwf	Lcd_Set_Cursor@y^0,c
  7582   002D60                     
  7583                           ;lcd.c: 58:         Lcd_Cmd(z);
  7584   002D60  5006               	movf	Lcd_Set_Cursor@z^0,w,c
  7585   002D62  EC2C  F01A         	call	_Lcd_Cmd
  7586   002D66                     
  7587                           ;lcd.c: 59:         Lcd_Cmd(y);
  7588   002D66  5007               	movf	Lcd_Set_Cursor@y^0,w,c
  7589   002D68  EC2C  F01A         	call	_Lcd_Cmd
  7590   002D6C  EFB8  F016         	goto	l125
  7591   002D70                     l121:
  7592   002D70                     l125:
  7593   002D70  0012               	return		;funcret
  7594   002D72                     __end_of_Lcd_Set_Cursor:
  7595                           	callstack 0
  7596                           
  7597 ;; *************** function _Lcd_Init *****************
  7598 ;; Defined at:
  7599 ;;		line 63 in file "lcd.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;		None
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;		None
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  1    wreg      void 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, cstack
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7613 ;;      Params:         0       0       0       0       0       0       0       0       0
  7614 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7615 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7616 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7617 ;;Total ram usage:        1 bytes
  7618 ;; Hardware stack levels used: 1
  7619 ;; Hardware stack levels required when called: 3
  7620 ;; This function calls:
  7621 ;;		_Lcd_Clear
  7622 ;;		_Lcd_Cmd
  7623 ;;		_Lcd_Port
  7624 ;; This function is called by:
  7625 ;;		_main
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           	psect	text31
  7630   002FAC                     __ptext31:
  7631                           	callstack 0
  7632   002FAC                     _Lcd_Init:
  7633                           	callstack 27
  7634   002FAC                     
  7635                           ;lcd.c: 65:  TRISDbits.TRISD2 = 0;
  7636   002FAC  9495               	bcf	149,2,c	;volatile
  7637                           
  7638                           ;lcd.c: 66:  TRISDbits.TRISD3 = 0;
  7639   002FAE  9695               	bcf	149,3,c	;volatile
  7640                           
  7641                           ;lcd.c: 67:  TRISDbits.TRISD4 = 0;
  7642   002FB0  9895               	bcf	149,4,c	;volatile
  7643                           
  7644                           ;lcd.c: 68:  TRISDbits.TRISD5 = 0;
  7645   002FB2  9A95               	bcf	149,5,c	;volatile
  7646                           
  7647                           ;lcd.c: 69:  TRISDbits.TRISD6 = 0;
  7648   002FB4  9C95               	bcf	149,6,c	;volatile
  7649                           
  7650                           ;lcd.c: 70:  TRISDbits.TRISD7 = 0;
  7651   002FB6  9E95               	bcf	149,7,c	;volatile
  7652   002FB8                     
  7653                           ;lcd.c: 71:     Lcd_Port(0x00);
  7654   002FB8  0E00               	movlw	0
  7655   002FBA  ECC6  F018         	call	_Lcd_Port
  7656   002FBE                     
  7657                           ;lcd.c: 72:     _delay((unsigned long)((20)*(12000000/4000.0)));
  7658   002FBE  0E4E               	movlw	78
  7659   002FC0  6E04               	movwf	??_Lcd_Init^0,c
  7660   002FC2  0EEB               	movlw	235
  7661   002FC4                     u4107:
  7662   002FC4  2EE8               	decfsz	wreg,f,c
  7663   002FC6  D7FE               	bra	u4107
  7664   002FC8  2E04               	decfsz	??_Lcd_Init^0,f,c
  7665   002FCA  D7FC               	bra	u4107
  7666   002FCC  F000               	nop	
  7667   002FCE                     
  7668                           ;lcd.c: 73:     Lcd_Cmd(0x03);
  7669   002FCE  0E03               	movlw	3
  7670   002FD0  EC2C  F01A         	call	_Lcd_Cmd
  7671   002FD4                     
  7672                           ;lcd.c: 74:     _delay((unsigned long)((5)*(12000000/4000.0)));
  7673   002FD4  0E14               	movlw	20
  7674   002FD6  6E04               	movwf	??_Lcd_Init^0,c
  7675   002FD8  0E7A               	movlw	122
  7676   002FDA                     u4117:
  7677   002FDA  2EE8               	decfsz	wreg,f,c
  7678   002FDC  D7FE               	bra	u4117
  7679   002FDE  2E04               	decfsz	??_Lcd_Init^0,f,c
  7680   002FE0  D7FC               	bra	u4117
  7681   002FE2                     
  7682                           ;lcd.c: 75:     Lcd_Cmd(0x03);
  7683   002FE2  0E03               	movlw	3
  7684   002FE4  EC2C  F01A         	call	_Lcd_Cmd
  7685   002FE8                     
  7686                           ;lcd.c: 76:     _delay((unsigned long)((11)*(12000000/4000.0)));
  7687   002FE8  0E2B               	movlw	43
  7688   002FEA  6E04               	movwf	??_Lcd_Init^0,c
  7689   002FEC  0EDA               	movlw	218
  7690   002FEE                     u4127:
  7691   002FEE  2EE8               	decfsz	wreg,f,c
  7692   002FF0  D7FE               	bra	u4127
  7693   002FF2  2E04               	decfsz	??_Lcd_Init^0,f,c
  7694   002FF4  D7FC               	bra	u4127
  7695   002FF6  D000               	nop2	
  7696   002FF8                     
  7697                           ;lcd.c: 77:     Lcd_Cmd(0x03);
  7698   002FF8  0E03               	movlw	3
  7699   002FFA  EC2C  F01A         	call	_Lcd_Cmd
  7700   002FFE                     
  7701                           ;lcd.c: 78:     Lcd_Cmd(0x02);
  7702   002FFE  0E02               	movlw	2
  7703   003000  EC2C  F01A         	call	_Lcd_Cmd
  7704   003004                     
  7705                           ;lcd.c: 79:     Lcd_Cmd(0x02);
  7706   003004  0E02               	movlw	2
  7707   003006  EC2C  F01A         	call	_Lcd_Cmd
  7708   00300A                     
  7709                           ;lcd.c: 80:     Lcd_Cmd(0x08);
  7710   00300A  0E08               	movlw	8
  7711   00300C  EC2C  F01A         	call	_Lcd_Cmd
  7712   003010                     
  7713                           ;lcd.c: 81:     Lcd_Cmd(0x00);
  7714   003010  0E00               	movlw	0
  7715   003012  EC2C  F01A         	call	_Lcd_Cmd
  7716   003016                     
  7717                           ;lcd.c: 82:     Lcd_Cmd(0x0C);
  7718   003016  0E0C               	movlw	12
  7719   003018  EC2C  F01A         	call	_Lcd_Cmd
  7720   00301C                     
  7721                           ;lcd.c: 83:     Lcd_Cmd(0x00);
  7722   00301C  0E00               	movlw	0
  7723   00301E  EC2C  F01A         	call	_Lcd_Cmd
  7724   003022                     
  7725                           ;lcd.c: 84:     Lcd_Cmd(0x06);
  7726   003022  0E06               	movlw	6
  7727   003024  EC2C  F01A         	call	_Lcd_Cmd
  7728   003028                     
  7729                           ;lcd.c: 85:     Lcd_Clear();
  7730   003028  EC65  F01A         	call	_Lcd_Clear	;wreg free
  7731   00302C  0012               	return		;funcret
  7732   00302E                     __end_of_Lcd_Init:
  7733                           	callstack 0
  7734                           
  7735 ;; *************** function _Lcd_Clear *****************
  7736 ;; Defined at:
  7737 ;;		line 20 in file "lcd.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      void 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7754 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used: 1
  7757 ;; Hardware stack levels required when called: 2
  7758 ;; This function calls:
  7759 ;;		_Lcd_Cmd
  7760 ;; This function is called by:
  7761 ;;		_main
  7762 ;;		_Lcd_Init
  7763 ;; This function uses a non-reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text32
  7767   0034CA                     __ptext32:
  7768                           	callstack 0
  7769   0034CA                     _Lcd_Clear:
  7770                           	callstack 27
  7771   0034CA                     
  7772                           ;lcd.c: 22:     Lcd_Cmd(0);
  7773   0034CA  0E00               	movlw	0
  7774   0034CC  EC2C  F01A         	call	_Lcd_Cmd
  7775                           
  7776                           ;lcd.c: 23:     Lcd_Cmd(1);
  7777   0034D0  0E01               	movlw	1
  7778   0034D2  EC2C  F01A         	call	_Lcd_Cmd
  7779   0034D6  0012               	return		;funcret
  7780   0034D8                     __end_of_Lcd_Clear:
  7781                           	callstack 0
  7782                           
  7783 ;; *************** function _Lcd_Cmd *****************
  7784 ;; Defined at:
  7785 ;;		line 11 in file "lcd.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  a               1    wreg     unsigned char 
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;  a               1    2[COMRAM] unsigned char 
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  1    wreg      void 
  7792 ;; Registers used:
  7793 ;;		wreg, status,2, cstack
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7799 ;;      Params:         0       0       0       0       0       0       0       0       0
  7800 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7801 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7802 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7803 ;;Total ram usage:        2 bytes
  7804 ;; Hardware stack levels used: 1
  7805 ;; Hardware stack levels required when called: 1
  7806 ;; This function calls:
  7807 ;;		_Lcd_Port
  7808 ;; This function is called by:
  7809 ;;		_Lcd_Clear
  7810 ;;		_Lcd_Set_Cursor
  7811 ;;		_Lcd_Init
  7812 ;;		_Lcd_Shift_Right
  7813 ;;		_Lcd_Shift_Left
  7814 ;;		_Lcd_Blink
  7815 ;;		_Lcd_NoBlink
  7816 ;;		_Lcd_CGRAM_Init
  7817 ;;		_Lcd_CGRAM_Close
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text33
  7822   003458                     __ptext33:
  7823                           	callstack 0
  7824   003458                     _Lcd_Cmd:
  7825                           	callstack 28
  7826                           
  7827                           ;incstack = 0
  7828                           ;Lcd_Cmd@a stored from wreg
  7829   003458  6E03               	movwf	Lcd_Cmd@a^0,c
  7830   00345A                     
  7831                           ;lcd.c: 11: void Lcd_Cmd(char a);lcd.c: 12: {;lcd.c: 13:     LATDbits.LD2 = 0;
  7832   00345A  948C               	bcf	140,2,c	;volatile
  7833   00345C                     
  7834                           ;lcd.c: 14:     Lcd_Port(a);
  7835   00345C  5003               	movf	Lcd_Cmd@a^0,w,c
  7836   00345E  ECC6  F018         	call	_Lcd_Port
  7837   003462                     
  7838                           ;lcd.c: 15:     LATDbits.LD3 = 1;
  7839   003462  868C               	bsf	140,3,c	;volatile
  7840   003464                     
  7841                           ;lcd.c: 16:     _delay((unsigned long)((4)*(12000000/4000.0)));
  7842   003464  0E10               	movlw	16
  7843   003466  6E02               	movwf	??_Lcd_Cmd^0,c
  7844   003468  0E94               	movlw	148
  7845   00346A                     u4137:
  7846   00346A  2EE8               	decfsz	wreg,f,c
  7847   00346C  D7FE               	bra	u4137
  7848   00346E  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  7849   003470  D7FC               	bra	u4137
  7850   003472  D000               	nop2	
  7851   003474                     
  7852                           ;lcd.c: 17:     LATDbits.LD3 = 0;
  7853   003474  968C               	bcf	140,3,c	;volatile
  7854   003476  0012               	return		;funcret
  7855   003478                     __end_of_Lcd_Cmd:
  7856                           	callstack 0
  7857                           
  7858 ;; *************** function _Lcd_Port *****************
  7859 ;; Defined at:
  7860 ;;		line 3 in file "lcd.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  a               1    wreg     unsigned char 
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;  a               1    0[COMRAM] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  1    wreg      void 
  7867 ;; Registers used:
  7868 ;;		wreg
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7874 ;;      Params:         0       0       0       0       0       0       0       0       0
  7875 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7877 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7878 ;;Total ram usage:        1 bytes
  7879 ;; Hardware stack levels used: 1
  7880 ;; This function calls:
  7881 ;;		Nothing
  7882 ;; This function is called by:
  7883 ;;		_Lcd_Cmd
  7884 ;;		_Lcd_Init
  7885 ;;		_Lcd_Write_Char
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text34
  7890   00318C                     __ptext34:
  7891                           	callstack 0
  7892   00318C                     _Lcd_Port:
  7893                           	callstack 28
  7894                           
  7895                           ;incstack = 0
  7896                           ;Lcd_Port@a stored from wreg
  7897   00318C  6E01               	movwf	Lcd_Port@a^0,c
  7898   00318E                     
  7899                           ;lcd.c: 3: void Lcd_Port(char a);lcd.c: 4: {;lcd.c: 5:     (a & 1) ? (LATDbits.LD4 = 1) 
      +                          : (LATDbits.LD4 = 0);
  7900   00318E  A001               	btfss	Lcd_Port@a^0,0,c
  7901   003190  EFCC  F018         	goto	u3261
  7902   003194  EFCE  F018         	goto	u3260
  7903   003198                     u3261:
  7904   003198  EFD1  F018         	goto	l94
  7905   00319C                     u3260:
  7906   00319C  888C               	bsf	140,4,c	;volatile
  7907   00319E  EFD2  F018         	goto	l3255
  7908   0031A2                     l94:
  7909   0031A2  988C               	bcf	140,4,c	;volatile
  7910   0031A4                     l3255:
  7911                           
  7912                           ;lcd.c: 6:     (a & 2) ? (LATDbits.LD5 = 1) : (LATDbits.LD5 = 0);
  7913   0031A4  A201               	btfss	Lcd_Port@a^0,1,c
  7914   0031A6  EFD7  F018         	goto	u3271
  7915   0031AA  EFD9  F018         	goto	u3270
  7916   0031AE                     u3271:
  7917   0031AE  EFDC  F018         	goto	l98
  7918   0031B2                     u3270:
  7919   0031B2  8A8C               	bsf	140,5,c	;volatile
  7920   0031B4  EFDD  F018         	goto	l3259
  7921   0031B8                     l98:
  7922   0031B8  9A8C               	bcf	140,5,c	;volatile
  7923   0031BA                     l3259:
  7924                           
  7925                           ;lcd.c: 7:     (a & 4) ? (LATDbits.LD6 = 1) : (LATDbits.LD6 = 0);
  7926   0031BA  A401               	btfss	Lcd_Port@a^0,2,c
  7927   0031BC  EFE2  F018         	goto	u3281
  7928   0031C0  EFE4  F018         	goto	u3280
  7929   0031C4                     u3281:
  7930   0031C4  EFE7  F018         	goto	l102
  7931   0031C8                     u3280:
  7932   0031C8  8C8C               	bsf	140,6,c	;volatile
  7933   0031CA  EFE8  F018         	goto	l3263
  7934   0031CE                     l102:
  7935   0031CE  9C8C               	bcf	140,6,c	;volatile
  7936   0031D0                     l3263:
  7937                           
  7938                           ;lcd.c: 8:     (a & 8) ? (LATDbits.LD7 = 1) : (LATDbits.LD7 = 0);
  7939   0031D0  A601               	btfss	Lcd_Port@a^0,3,c
  7940   0031D2  EFED  F018         	goto	u3291
  7941   0031D6  EFEF  F018         	goto	u3290
  7942   0031DA                     u3291:
  7943   0031DA  EFF2  F018         	goto	l106
  7944   0031DE                     u3290:
  7945   0031DE  8E8C               	bsf	140,7,c	;volatile
  7946   0031E0  EFF3  F018         	goto	l109
  7947   0031E4                     l106:
  7948   0031E4  9E8C               	bcf	140,7,c	;volatile
  7949   0031E6                     l109:
  7950   0031E6  0012               	return		;funcret
  7951   0031E8                     __end_of_Lcd_Port:
  7952                           	callstack 0
  7953                           
  7954 ;; *************** function _InitPort *****************
  7955 ;; Defined at:
  7956 ;;		line 99 in file "mainselec.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;		None
  7959 ;; Auto vars:     Size  Location     Type
  7960 ;;		None
  7961 ;; Return value:  Size  Location     Type
  7962 ;;                  1    wreg      void 
  7963 ;; Registers used:
  7964 ;;		wreg, status,2
  7965 ;; Tracked objects:
  7966 ;;		On entry : 0/0
  7967 ;;		On exit  : 0/0
  7968 ;;		Unchanged: 0/0
  7969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7970 ;;      Params:         0       0       0       0       0       0       0       0       0
  7971 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7972 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7973 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7974 ;;Total ram usage:        0 bytes
  7975 ;; Hardware stack levels used: 1
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_main
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text35
  7984   0034BA                     __ptext35:
  7985                           	callstack 0
  7986   0034BA                     _InitPort:
  7987                           	callstack 30
  7988   0034BA                     
  7989                           ;mainselec.c: 100:     LATB = 0x00;
  7990   0034BA  0E00               	movlw	0
  7991   0034BC  6E8A               	movwf	138,c	;volatile
  7992                           
  7993                           ;mainselec.c: 101:     ANSELB = 0x00;
  7994   0034BE  0E00               	movlw	0
  7995   0034C0  010F               	movlb	15	; () banked
  7996   0034C2  6F5C               	movwf	92,b	;volatile
  7997   0034C4                     
  7998                           ; BSR set to: 15
  7999                           ;mainselec.c: 102:     TRISB = 0xFF;
  8000   0034C4  6893               	setf	147,c	;volatile
  8001   0034C6                     
  8002                           ; BSR set to: 15
  8003                           ;mainselec.c: 103:     INTCON2bits.RBPU = 0;
  8004   0034C6  9EF1               	bcf	241,7,c	;volatile
  8005   0034C8                     
  8006                           ; BSR set to: 15
  8007   0034C8  0012               	return		;funcret
  8008   0034CA                     __end_of_InitPort:
  8009                           	callstack 0
  8010                           
  8011                           	psect	rparam
  8012   000000                     
  8013                           	psect	config
  8014                           
  8015                           ;Config register CONFIG1L @ 0x300000
  8016                           ;	PLL Selection
  8017                           ;	PLLSEL = PLL4X, 4x clock multiplier
  8018                           ;	PLL Enable Configuration bit
  8019                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  8020                           ;	CPU System Clock Postscaler
  8021                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  8022                           ;	Low Speed USB mode with 48 MHz system clock
  8023                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  8024   300000                     	org	3145728
  8025   300000  00                 	db	0
  8026                           
  8027                           ;Config register CONFIG1H @ 0x300001
  8028                           ;	Oscillator Selection
  8029                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
  8030                           ;	Primary Oscillator Shutdown
  8031                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  8032                           ;	Fail-Safe Clock Monitor
  8033                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8034                           ;	Internal/External Oscillator Switchover
  8035                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8036   300001                     	org	3145729
  8037   300001  03                 	db	3
  8038                           
  8039                           ;Config register CONFIG2L @ 0x300002
  8040                           ;	Power-up Timer Enable
  8041                           ;	nPWRTEN = ON, Power up timer enabled
  8042                           ;	Brown-out Reset Enable
  8043                           ;	BOREN = OFF, BOR disabled in hardware (SBOREN is ignored)
  8044                           ;	Brown-out Reset Voltage
  8045                           ;	BORV = 190, BOR set to 1.9V nominal
  8046                           ;	Low-Power Brown-out Reset
  8047                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  8048   300002                     	org	3145730
  8049   300002  58                 	db	88
  8050                           
  8051                           ;Config register CONFIG2H @ 0x300003
  8052                           ;	Watchdog Timer Enable bits
  8053                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  8054                           ;	Watchdog Timer Postscaler
  8055                           ;	WDTPS = 32768, 1:32768
  8056   300003                     	org	3145731
  8057   300003  3C                 	db	60
  8058                           
  8059                           ; Padding undefined space
  8060   300004                     	org	3145732
  8061   300004  FF                 	db	255
  8062                           
  8063                           ;Config register CONFIG3H @ 0x300005
  8064                           ;	CCP2 MUX bit
  8065                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  8066                           ;	PORTB A/D Enable bit
  8067                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  8068                           ;	Timer3 Clock Input MUX bit
  8069                           ;	T3CMX = RC0, T3CKI function is on RC0
  8070                           ;	SDO Output MUX bit
  8071                           ;	SDOMX = RB3, SDO function is on RB3
  8072                           ;	Master Clear Reset Pin Enable
  8073                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  8074   300005                     	org	3145733
  8075   300005  D1                 	db	209
  8076                           
  8077                           ;Config register CONFIG4L @ 0x300006
  8078                           ;	Stack Full/Underflow Reset
  8079                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8080                           ;	Single-Supply ICSP Enable bit
  8081                           ;	LVP = OFF, Single-Supply ICSP disabled
  8082                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  8083                           ;	ICPRT = OFF, ICPORT disabled
  8084                           ;	Extended Instruction Set Enable bit
  8085                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  8086                           ;	Background Debugger Enable bit
  8087                           ;	DEBUG = 0x1, unprogrammed default
  8088   300006                     	org	3145734
  8089   300006  80                 	db	128
  8090                           
  8091                           ; Padding undefined space
  8092   300007                     	org	3145735
  8093   300007  FF                 	db	255
  8094                           
  8095                           ;Config register CONFIG5L @ 0x300008
  8096                           ;	Block 0 Code Protect
  8097                           ;	CP0 = OFF, Block 0 is not code-protected
  8098                           ;	Block 1 Code Protect
  8099                           ;	CP1 = OFF, Block 1 is not code-protected
  8100                           ;	Block 2 Code Protect
  8101                           ;	CP2 = OFF, Block 2 is not code-protected
  8102                           ;	Block 3 Code Protect
  8103                           ;	CP3 = OFF, Block 3 is not code-protected
  8104   300008                     	org	3145736
  8105   300008  0F                 	db	15
  8106                           
  8107                           ;Config register CONFIG5H @ 0x300009
  8108                           ;	Boot Block Code Protect
  8109                           ;	CPB = OFF, Boot block is not code-protected
  8110                           ;	Data EEPROM Code Protect
  8111                           ;	CPD = OFF, Data EEPROM is not code-protected
  8112   300009                     	org	3145737
  8113   300009  C0                 	db	192
  8114                           
  8115                           ;Config register CONFIG6L @ 0x30000A
  8116                           ;	Block 0 Write Protect
  8117                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  8118                           ;	Block 1 Write Protect
  8119                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  8120                           ;	Block 2 Write Protect
  8121                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  8122                           ;	Block 3 Write Protect
  8123                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  8124   30000A                     	org	3145738
  8125   30000A  0F                 	db	15
  8126                           
  8127                           ;Config register CONFIG6H @ 0x30000B
  8128                           ;	Configuration Registers Write Protect
  8129                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8130                           ;	Boot Block Write Protect
  8131                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  8132                           ;	Data EEPROM Write Protect
  8133                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8134   30000B                     	org	3145739
  8135   30000B  E0                 	db	224
  8136                           
  8137                           ;Config register CONFIG7L @ 0x30000C
  8138                           ;	Block 0 Table Read Protect
  8139                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  8140                           ;	Block 1 Table Read Protect
  8141                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  8142                           ;	Block 2 Table Read Protect
  8143                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  8144                           ;	Block 3 Table Read Protect
  8145                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  8146   30000C                     	org	3145740
  8147   30000C  0F                 	db	15
  8148                           
  8149                           ;Config register CONFIG7H @ 0x30000D
  8150                           ;	Boot Block Table Read Protect
  8151                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  8152   30000D                     	org	3145741
  8153   30000D  40                 	db	64
  8154                           tosu	equ	0xFFF
  8155                           tosh	equ	0xFFE
  8156                           tosl	equ	0xFFD
  8157                           stkptr	equ	0xFFC
  8158                           pclatu	equ	0xFFB
  8159                           pclath	equ	0xFFA
  8160                           pcl	equ	0xFF9
  8161                           tblptru	equ	0xFF8
  8162                           tblptrh	equ	0xFF7
  8163                           tblptrl	equ	0xFF6
  8164                           tablat	equ	0xFF5
  8165                           prodh	equ	0xFF4
  8166                           prodl	equ	0xFF3
  8167                           indf0	equ	0xFEF
  8168                           postinc0	equ	0xFEE
  8169                           postdec0	equ	0xFED
  8170                           preinc0	equ	0xFEC
  8171                           plusw0	equ	0xFEB
  8172                           fsr0h	equ	0xFEA
  8173                           fsr0l	equ	0xFE9
  8174                           wreg	equ	0xFE8
  8175                           indf1	equ	0xFE7
  8176                           postinc1	equ	0xFE6
  8177                           postdec1	equ	0xFE5
  8178                           preinc1	equ	0xFE4
  8179                           plusw1	equ	0xFE3
  8180                           fsr1h	equ	0xFE2
  8181                           fsr1l	equ	0xFE1
  8182                           bsr	equ	0xFE0
  8183                           indf2	equ	0xFDF
  8184                           postinc2	equ	0xFDE
  8185                           postdec2	equ	0xFDD
  8186                           preinc2	equ	0xFDC
  8187                           plusw2	equ	0xFDB
  8188                           fsr2h	equ	0xFDA
  8189                           fsr2l	equ	0xFD9
  8190                           status	equ	0xFD8

Data Sizes:
    Strings     69
    Constant    0
    Data        0
    BSS         119
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     91     130
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), STR_10(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_13(CODE[4]), STR_10(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[14]), STR_7(CODE[14]), STR_5(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[14]), STR_7(CODE[14]), STR_5(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[14]), STR_7(CODE[14]), STR_5(CODE[14]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S979$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[14]), STR_7(CODE[14]), STR_5(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S894$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S894$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[13]), STR_6(CODE[13]), buffer(BANK0[20]), STR_4(CODE[13]), 
		 -> STR_3(CODE[11]), STR_2(CODE[11]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   31436
                                             89 BANK0      2     2      0
                           _InitPort
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _set_adc
                           _set_adc1
                           _set_adc2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8   22759
                                             67 BANK0     22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22100
                                             59 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6   21738
                                             93 COMRAM     2     2      0
                                             44 BANK0     15     9      6
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   9     5      4     643
                                              6 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19604
                                             84 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2455
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             64 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _set_adc2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_adc1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_adc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     952
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1    1334
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     308
                                              3 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitPort
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Clear
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___fldiv
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _set_adc
   _set_adc1
   _set_adc2
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      82       5       81.2%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhlhh      2C      0       0      21        0.0%
BITBIGSFRhhllh      2A      0       0      22        0.0%
BITBIGSFRlhl        24      0       0      27        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRlhh         8      0       0      26        0.0%
BITBIGSFRll          8      0       0      28        0.0%
BITBIGSFRhlh         5      0       0      24        0.0%
BITBIGSFRhhlll       1      0       0      23        0.0%
BITBIGSFRhll         1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     131      29        0.0%
DATA                 0      0     131       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jul 09 10:46:36 2023

              ___fldiv@aexp 0040                ___fldiv@bexp 003F                ___fldiv@sign 0038  
                        l50 34B8                          l53 34A2                          l61 1D32  
                        l47 34C8                          l71 1D46                          l63 1C32  
                        l56 348C                          l84 1F5A                          l69 1E46  
                        l94 31A2                          l79 1E5A                          l98 31B8  
       ___wmul@multiplicand 0003                         l102 31CE                         l112 3476  
                       l121 2D70                         l106 31E4                         l115 34D6  
                       l131 340E                         l109 31E6                         l125 2D70  
                       l128 302C                         l137 30AA                         l187 3434  
                       l452 2B5A                         l461 33DA                         l446 2FAA  
                       l457 2BA0                         l801 182E                         l810 1A9C  
                       l811 1A8A                         l715 1498                         l732 15B2  
                       l724 1768                         l716 1486                         l484 2A9C  
                       l805 1B92                         l741 1682                         l717 144C  
                       l742 1670                         l910 12A8                         l808 1A24  
                       l913 0BDA                         l842 283A                         l818 1B54  
                       l771 2156                         l915 0A20                         l780 219C  
                       l845 2996                         l757 331E                         l782 2214  
                       l774 211A                         l783 2202                         l943 1022  
                       l856 292E                         l849 28D2                         l769 22F6  
                       l961 2EF8                         l865 3288                         l965 2F00  
                       l895 30CE                         l992 25D0                         l899 3124  
                       l999 3238                         _pad 30AC                         wreg 0FE8  
              ___flmul@aexp 0020                ___flmul@bexp 0021                ___flmul@sign 001B  
              ___flmul@temp 0026                ___flmul@prod 0022                ___fltol@exp1 000A  
                      l1030 318A                        l1016 27E2                        l1009 2C9E  
                      l1019 2726                        l1027 317A                        l1036 32D8  
                      l1048 2E3A                        l1056 3362                        l3001 18F4  
                      l1065 33A2                        l3011 1956                        l3003 1900  
                      l1059 34D8                        l3101 2B1A                        l3021 19EC  
                      l3013 1962                        l3005 1910                        l3111 2B9E  
                      l3103 2B28                        l3031 1A42                        l3023 1A0A  
                      l3015 197E                        l3007 192A                        l3105 2B3A  
                      l3041 1AAC                        l3033 1A46                        l3025 1A14  
                      l3017 19A8                        l3009 193A                        l3107 2B48  
                      l3051 1B0E                        l3043 1AB8                        l3035 1A54  
                      l3027 1A22                        l3019 19DE                        l3115 33A4  
                      l3131 29EC                        l3123 2998                        l3211 25D2  
                      l3203 3364                        l3109 2B98                        l3061 1B76  
                      l3053 1B22                        l3045 1AC6                        l3037 1A82  
                      l3029 1A34                        l3117 33BA                        l3133 29EE  
                      l3125 29AE                        l3213 25F2                        l3205 3374  
                      l3301 0928                        l3063 1B78                        l3055 1B3C  
                      l3047 1AF0                        l3119 33CA                        l3071 32DA  
                      l3135 29FE                        l3231 279A                        l3223 26DA  
                      l3215 2648                        l3207 3126                        l3311 0990  
                      l3303 0940                        l3081 2F40                        l3057 1B58  
                      l3065 1B7E                        l3049 1AF4                        l2601 12F8  
                      l3073 32EA                        l3161 2A7C                        l3145 2A28  
                      l3137 2A02                        l3129 29C2                        l3233 27C2  
                      l3225 2716                        l3217 265C                        l3209 3144  
                      l3241 329E                        l3401 0E62                        l3313 09A2  
                      l3305 094A                        l3251 318E                        l3083 2F6E  
                      l3067 1B82                        l3059 1B68                        l2611 132A  
                      l2603 1300                        l3163 2A8C                        l3155 2A50  
                      l3147 2A32                        l3139 2A10                        l3235 27D2  
                      l3219 266A                        l3227 274A                        l3243 32AA  
                      l3171 30C6                        l3411 0F36                        l3403 0E72  
                      l3315 09A6                        l4131 2506                        l3261 31C8  
                      l3253 319C                        l3085 2F7E                        l3077 2F02  
                      l3093 2A9E                        l2701 1502                        l2621 1360  
                      l2613 1330                        l2605 1310                        l3157 2A5C  
                      l3149 2A3C                        l3181 2BA2                        l3229 2786  
                      l3245 32AE                        l3173 30DA                        l3421 0F6C  
                      l3413 0F4A                        l3405 0EA6                        l3341 0ADA  
                      l3333 0A30                        l3317 09AC                        l3309 096A  
                      l3501 2E3C                        l4133 2588                        l3263 31D0  
                      l3255 31A4                        l3087 2FA2                        l3079 2F30  
                      l3095 2ACC                        l2703 1506                        l2711 1526  
                      l2631 139C                        l2623 1370                        l2615 133E  
                      l2607 1316                        l3159 2A6C                        l3183 2BC2  
                      l3247 32BA                        l3239 328A                        l3175 30EE  
                      l3167 30AC                        l3431 1034                        l3423 0F74  
                      l3407 0EFC                        l3415 0F4E                        l3343 0B18  
                      l3335 0A36                        l3319 09B4                        l3327 09D0  
                      l3271 085E                        l3511 2ED0                        l3503 2E44  
                      l4127 238E                        l3265 31DE                        l3257 31B2  
                      l3521 3474                        l3513 345A                        l3089 2FA8  
                      l3097 2ADC                        l2713 154C                        l2721 15A2  
                      l2705 1514                        l2641 13BA                        l2633 13AA  
                      l2625 1372                        l2617 1340                        l2609 1328  
                      l3185 2C00                        l3193 2C40                        l3249 32BE  
                      l3177 30F2                        l3169 30BA                        l3441 1064  
                      l3433 1042                        l3425 0F80                        l3417 0F5E  
                      l3409 0F02                        l3361 0C06                        l3345 0B2C  
                      l3353 0BA8                        l3337 0A6A                        l3329 09EA  
                      l3281 08A6                        l3273 086C                        l3505 2E68  
                      l4129 244C                        l3259 31BA                        l3515 345C  
                      l2811 1F8A                        l2803 1F5E                        l3099 2B0A  
                      l2731 15F6                        l2723 15C8                        l2715 1580  
                      l2707 1516                        l2651 13CE                        l2643 13BE  
                      l2635 13AE                        l2619 1350                        l2627 137A  
                      l3195 2C52                        l3187 2C28                        l3179 3110  
                      l3451 1096                        l3443 1074                        l3435 1052  
                      l3427 0FF8                        l3419 0F66                        l3371 0C4A  
                      l3363 0C0E                        l3355 0BE2                        l3347 0B60  
                      l3339 0AA8                        l3283 08B6                        l3291 08DE  
                      l3275 0870                        l3267 0848                        l3507 2EA2  
                      l3531 233C                        l3523 22F8                        l3517 3462  
                      l3701 301C                        l3621 33DE                        l2901 21BE  
                      l2821 1FC4                        l2813 1F9A                        l2805 1F6A  
                      l2741 1620                        l2733 1604                        l2725 15D8  
                      l2717 1582                        l2709 1520                        l2661 13E2  
                      l2653 13D2                        l2645 13C2                        l2637 13B2  
                      l2629 138A                        l3189 2C34                        l2581 2DBE  
                      l2573 2D72                        l3461 113E                        l3453 10A8  
                      l3445 1078                        l3437 1056                        l3429 1018  
                      l3381 0C90                        l3373 0C5C                        l3365 0C12  
                      l3357 0BF2                        l3349 0B68                        l3293 0904  
                      l3285 08C6                        l3277 0894                        l3269 084E  
                      l3509 2EC2                        l3541 2368                        l3533 2348  
                      l3525 231C                        l3519 3464                        l3703 3022  
                      l3711 2CC4                        l3631 33FC                        l3623 33EA  
                      l2911 2230                        l2903 21CC                        l2831 1FF0  
                      l2823 1FCA                        l2815 1FAA                        l2807 1F78  
                      l2751 1652                        l2743 1630                        l2735 1606  
                      l2719 1592                        l2671 1434                        l2663 13E6  
                      l2655 13D6                        l2647 13C6                        l2639 13B6  
                      l2591 12C4                        l3199 2C96                        l2583 2DF4  
                      l2575 2D84                        l3471 118C                        l3463 1146  
                      l3455 10AC                        l3447 107E                        l3439 105C  
                      l3391 0DA4                        l3383 0CF4                        l3367 0C24  
                      l3375 0C64                        l3359 0BFE                        l3295 0916  
                      l3287 08D2                        l3279 089E                        l3551 23FC  
                      l3535 234A                        l3543 239C                        l3527 232A  
                      l3705 3028                        l3721 2CFE                        l3713 2CCA  
                      l3633 33FE                        l3625 33EC                        l3801 2986  
                      l2921 229C                        l2913 223E                        l2905 21FA  
                      l2841 202A                        l2833 2000                        l2825 1FD0  
                      l2817 1FAC                        l2809 1F7A                        l2761 16AC  
                      l2753 1668                        l2737 1614                        l2729 15EC  
                      l2745 1632                        l2681 1478                        l2673 1444  
                      l2657 13DA                        l2649 13CA                        l2665 13EA  
                      l2593 12C6                        l2577 2D96                        l3473 119A  
                      l3457 10B2                        l3449 1084                        l3465 114A  
                      l3393 0DD8                        l3385 0D4C                        l3377 0C6C  
                      l3369 0C32                        l3297 091A                        l3289 08DA  
                      l3553 240C                        l3545 23AE                        l3537 235C  
                      l3529 2338                        l3641 31E8                        l3651 34BA  
                      l3619 34CA                        l3731 2D3C                        l3723 2D08  
                      l3715 2CD4                        l3707 2CA2                        l3635 3404  
                      l3627 33F4                        l2931 22EA                        l2923 22B6  
                      l2915 2268                        l2843 2040                        l2835 2010  
                      l2827 1FDE                        l2819 1FB4                        l2771 1728  
                      l2763 16E6                        l2739 161C                        l2747 1640  
                      l2683 147A                        l2675 145A                        l2667 13EE  
                      l2659 13DE                        l2595 12D6                        l2587 12AA  
                      l2579 2DA0                        l3483 1202                        l3491 125A  
                      l3475 11CA                        l3467 1168                        l3459 110A  
                      l3395 0E0A                        l3387 0D80                        l3379 0C7C  
                      l3299 0920                        l3555 241E                        l3563 2436  
                      l3547 23D2                        l3643 31F4                        l3811 1BB6  
                      l3653 34C4                        l3733 2D4E                        l3725 2D1A  
                      l3717 2CE6                        l3709 2CB2                        l3637 3406  
                      l3629 33F6                        l3741 303A                        l3661 34B6  
                      l2933 22EC                        l2925 22D2                        l2909 2224  
                      l2917 226C                        l2861 2094                        l2845 2050  
                      l2853 2070                        l2837 2012                        l2829 1FE0  
                      l2941 176A                        l2781 1748                        l2773 172C  
                      l2757 1692                        l2765 16E8                        l2749 1644  
                      l2693 14CA                        l2685 1484                        l2677 1466  
                      l2669 1418                        l2597 12E6                        l2589 12B6  
                      l3493 126A                        l3485 1218                        l3477 11D8  
                      l3469 1184                        l3397 0E20                        l3389 0D86  
                      l3573 24F2                        l3557 2426                        l3565 246A  
                      l3549 23E0                        l3645 3212                        l3821 1BF4  
                      l3813 1BC0                        l3805 1B94                        ?_pad 0011  
                      l3655 34C6                        l3735 2D60                        l3727 2D2C  
                      l3719 2CF8                        l3639 340C                        l3743 306A  
                      l3663 348E                        l3671 347E                        l2927 22D6  
                      l2919 2286                        l2871 20E6                        l2863 20AE  
                      l2855 2080                        l2847 2058                        l2839 201A  
                      l2951 17A6                        l2943 1776                        l2783 1756  
                      l2775 173A                        l2767 16F8                        l2759 169E  
                      l2695 14DA                        l2687 14A6                        l2679 146A  
                      l2599 12F6                        l2791 332C                        l3495 1280  
                      l3487 121E                        l3479 11F0                        l3399 0E52  
                      l3583 256A                        l3575 251C                        l3567 248A  
                      l3559 242E                        l3647 322E                        l3751 3254  
                      l3831 1C30                        l3823 1C00                        l3815 1BCC  
                      l3807 1BA0                        l3681 2FCE                        l3737 2D66  
                      l3729 2D32                        l3745 306E                        l3761 27F6  
                      l3657 34A4                        l3665 3494                        l3673 348A  
                      l2929 22E4                        l2881 2142                        l2873 20F6  
                      l2865 20BE                        l2857 2080                        l2849 205C  
                      l2961 17D8                        l2953 17B6                        l2945 1784  
                      l2785 1758                        l2777 1740                        l2769 1708  
                      l2697 14E8                        l2689 14B6                        l2793 333E  
                      l3497 1288                        l3489 123C                        l3577 253C  
                      l3569 24BE                        l3585 2596                        l3753 325C  
                      l3841 1CDA                        l3833 1C40                        l3825 1C1A  
                      l3817 1BE6                        l3809 1BAA                        l3691 2FFE  
                      l3683 2FD4                        l3675 2FAC                        l3739 302E  
                      l3771 2874                        l3763 2804                        l3659 34AA  
                      l3667 34A0                        l2891 2182                        l2883 2144  
                      l2875 210A                        l2867 20CE                        l2971 1818  
                      l2963 17E6                        l2955 17BC                        l2947 1786  
                      l2779 1742                        l2699 14F6                        l2795 3342  
                      l3755 3278                        l3747 323A                        l3851 1D44  
                      l3843 1CE4                        l3835 1C54                        l3827 1C1E  
                      l3819 1BEA                        l3693 3004                        l3685 2FE2  
                      l3677 2FB8                        l3781 28C8                        l3773 287C  
                      l3765 284A                        l3669 3478                        l2893 218C  
                      l2885 2154                        l2877 2118                        l2869 20DE  
                      l2981 1862                        l2973 181E                        l2965 17E8  
                      l2957 17CC                        l2949 1796                        l2789 3320  
                      l2797 3410                        l3589 25A8                        l3749 324C  
                      l3861 1DEE                        l3853 1D54                        l3845 1D0A  
                      l3837 1CC4                        l3829 1C2C                        l3695 300A  
                      l3687 2FE8                        l3679 2FBE                        l3791 293E  
                      l3783 2904                        l3775 2888                        l3767 2860  
                      l3759 27E6                        l2895 219A                        l2887 2166  
                      l2879 2124                        l2991 18B2                        l2983 186E  
                      l2975 183E                        l2967 17F8                        l2959 17D2  
                      l2799 342C                        l3871 1E58                        l3863 1DF8  
                      l3855 1D68                        l3847 1D16                        l3839 1CCE  
                      l3697 3010                        l3689 2FF8                        l3793 2942  
                      l3785 2910                        l3777 28BA                        l2889 217C  
                      l2897 21AC                        l2993 18BE                        l2985 1878  
                      l2977 184E                        l2969 1808                        l3881 1F02  
                      l3873 1E68                        l3865 1E1E                        l3857 1DD8  
                      l3849 1D40                        l3699 3016                        l3795 2966  
                      l3787 291E                        l3779 28BC                        l2899 21BA  
                      l2995 18CA                        l2987 188E                        l3883 1F0C  
                      l3875 1E7C                        l3867 1E2A                        l3859 1DE2  
                      l3797 2976                        l3789 293C                        l2997 18D8  
                      l2989 189A                        l3885 1F32                        l3877 1EEC  
                      l3869 1E54                        l3799 2984                        l2999 18E4  
                      l3887 1F3E                        l3879 1EF6                        STR_1 081C  
                      STR_2 0828                        STR_3 0833                        STR_4 080F  
                      STR_5 0801                        STR_6 080F                        STR_7 0801  
                      STR_8 080F                        STR_9 0801                        u2100 133E  
                      u2020 2D84                        u2101 133A                        u2021 2D80  
                      u2110 1350                        u2030 2D96                        u2111 134C  
                      u2031 2D92                        u2200 1498                        u2120 1360  
                      u3000 2A24                        u2040 2DBE                        u2201 1494  
                      u2121 135C                        u3001 2A20                        u2041 2DBA  
                      u2210 14A6                        u2130 139C                        u3010 2A4C  
                      u2050 2DF4                        u2211 14A2                        u2131 1398  
                      u3011 2A48                        u2051 2DF0                        u2300 1604  
                      u2220 14B6                        u2140 13AA                        u2060 12C4  
                      u3020 2A6C                        u2301 1600                        u2221 14B2  
                      u2141 13A6                        u2061 12C0                        u3021 2A68  
                      u2310 1614                        u2230 14E8                        u2150 1418  
                      u2070 12D6                        u3030 2A7C                        u3110 2C8C  
                      _LATB 0F8A                        u2311 1610                        u2231 14E4  
                      u2151 1414                        u2071 12D2                        u3031 2A78  
                      u3111 2C86                        u2400 16F8                        u2320 1630  
                      u2240 14F6                        u2160 1430                        u2080 12E6  
                      u3120 2C8E                        u3200 26FA                        u3040 30BA  
                      u2401 16F4                        u2321 162C                        u2241 14F2  
                      u2161 142A                        u2081 12E2                        u3105 2C64  
                      u3041 30B6                        u2410 1708                        u2330 1640  
                      u2250 1514                        u2170 1432                        u2090 1328  
                      u3210 2716                        u3050 3110                        u3130 33A2  
                      u2411 1704                        u2331 163C                        u2251 1510  
                      u2091 1324                        u3211 2712                        u3051 310C  
                      u3131 339E                        u2500 1FF0                        u2420 1728  
                      u2340 1652                        u2260 154C                        u2180 145A  
                      u3060 2BE2                        u3220 276A                        u3140 3144  
                      u3300 086C                        u2501 1FEC                        u2421 1724  
                      u2341 164E                        u2261 1548                        u2181 1456  
                      u3205 26F0                        u3141 3140                        u3301 0868  
                      u2510 2000                        u2430 173A                        u2350 1668  
                      u2270 1592                        u2190 1478                        u3070 2C00  
                      u3230 2786                        u3150 261A                        u3310 08B6  
                      u2511 1FFC                        u2431 1736                        u2351 1664  
                      u2271 158E                        u2191 1474                        u3071 2BFC  
                      u3231 2782                        u3311 08B2                        u2600 21BA  
                      u2520 2040                        u2440 1756                        u2360 167E  
                      u2280 15C8                        u3080 2C28                        u3240 27C2  
                      u3160 2648                        u3400 0B18                        u3320 08C6  
                      u2601 21B6                        u2521 203C                        u2441 1752  
                      u2361 167A                        u2281 15C4                        u3081 2C24  
                      u3065 2BD8                        u3241 27BE                        u3225 2760  
                      u3161 2644                        u3401 0B14                        u3321 08C2  
                      u2610 21CC                        u2530 2080                        u2370 1692  
                      u2290 15D8                        u3090 2C52                        u3170 266A  
                      u3250 32D8                        u2450 3362                        u3410 0BA4  
                      u3330 0904                        u4107 2FC4                        u2611 21C8  
                      u2531 207C                        u2371 168E                        u2291 15D4  
                      u3091 2C4E                        u3171 2666                        u3155 2610  
                      u3251 32D4                        u2451 335E                        u3411 0BA0  
                      u3331 0900                        u3260 319C                        u2620 21FA  
                      u2540 20F6                        u2460 1F78                        u2700 1796  
                      u2380 16AC                        u3500 0E62                        u3420 0BDA  
                      u3340 0916                        u3261 3198                        u4117 2FDA  
                      u2621 21F6                        u2541 20F2                        u2461 1F74  
                      u2701 1792                        u2381 16A8                        u3501 0E5E  
                      u3421 0BD6                        u3341 0912                        u4037 1BD8  
                      u3270 31B2                        u2630 2210                        u2550 2118  
                      u2470 1F8A                        u2710 17A6                        u2390 16E6  
                      u3190 26D6                        u3510 0EFC                        u3430 0BF2  
                      u3350 0990                        u3271 31AE                        u4127 2FEE  
                      u2631 220C                        u2551 2114                        u2471 1F86  
                      u2711 17A2                        u2391 16E2                        u3191 26D2  
                      u3511 0EF8                        u3431 0BEE                        u3351 098C  
                      u4047 1C0C                        u3280 31C8                        u2640 2224  
                      u2560 2142                        u2480 1F9A                        u2800 1A54  
                      u2720 17E6                        u3600 11EC                        u3520 0F4A  
                      u3440 0C24                        u3360 09A2                        u3281 31C4  
                      u4137 346A                        u2641 2220                        u2561 213E  
                      u2481 1F96                        u2801 1A50                        u2721 17E2  
                      u3185 267E                        u3521 0F46                        u3441 0C20  
                      u3361 099E                        u4057 1D22                        u3290 31DE  
                      u2650 223E                        u2570 2166                        u2490 1FDE  
                      u2810 1A82                        u2730 17F8                        u3186 2688  
                      u3610 11FE                        u3530 0FF8                        u3450 0C32  
                      u3370 0A1C                        u3291 31DA                        u2651 223A  
                      u2571 2162                        u2491 1FDA                        u2811 1A7E  
                      u2731 17F4                        u3187 2698                        u3611 11FA  
                      u3531 0FF4                        u3451 0C2E                        u3371 0A18  
                      u4067 1E36                        u2660 2286                        u2580 217C  
                      u2900 2FA2                        u2820 1A98                        u2740 1808  
                      u3620 123C                        u3540 1034                        u3460 0C5C  
                      u3380 0AA8                        u3700 2486                        u2661 2282  
                      u2581 2178                        u2901 2F9E                        u2821 1A94  
                      u2741 1804                        u3621 1238                        u3541 1030  
                      u3461 0C58                        u3381 0AA4                        u3701 2482  
                      u4077 1F4A                        u2670 22B6                        u2590 219A  
                      u2910 2ACC                        u2830 1AAC                        u2750 183E  
                      u3630 125A                        u3550 1042                        u3470 0DA4  
                      u3390 0ADA                        u3710 322E                        u4087 33F8  
                      u2671 22B2                        u2591 2196                        u2911 2AC8  
                      u2831 1AA8                        u2751 183A                        u3631 1256  
                      u3551 103E                        u3471 0DA0                        u3391 0AD6  
                      u3711 322A                        u3720 2CB2                        u3800 2804  
                      u2680 22E4                        u2920 2B0A                        u2840 1AC6  
                      u2760 184E                        u3640 126A                        u3560 1096  
                      u3480 0E0A                        u3721 2CAE                        u4097 3408  
                      u3801 2800                        u2681 22E0                        u2921 2B06  
                      u2841 1AC2                        u2761 184A                        u3641 1266  
                      u3561 1092                        u3481 0E06                        u3730 2CE6  
                      u3810 2860                        u2930 2B28                        u2850 1B0E  
                      u2770 19C8                        u2690 1784                        u3570 1168  
                      u3490 0E52                        u3650 2E68                        u3731 2CE2  
                      u3811 285C                        u2931 2B24                        u2851 1B0A  
                      u2691 1780                        u3571 1164                        u3491 0E4E  
                      u3651 2E64                        u3740 2D1A                        u3820 28B6  
                      u2940 2B48                        u2860 1B3C                        u2780 1A22  
                      u3580 1184                        u3660 2EF8                        u3900 1C40  
                      u3741 2D16                        u3821 28B2                        u2941 2B44  
                      u2861 1B38                        u2781 1A1E                        u3581 1180  
                      u3661 2EF4                        u3901 1C3C                        u3750 2D4E  
                      u3830 2900                        u2950 2B98                        u2870 1B76  
                      u2790 1A42                        u3590 11EA                        u3670 231C  
                      u3910 1D40                        u3751 2D4A                        u3831 28FC  
                      u2951 2B94                        u2871 1B72                        u2791 1A3E  
                      u2775 19BE                        u3591 11E4                        u3671 2318  
                      u3911 1D3C                        u3760 3066                        u3840 291E  
                      u2880 2F30                        u2960 33BA                        u3680 23AE  
                      u3920 1D54                        u3841 291A                        u2881 2F2C  
                      u2961 33B6                        u3681 23AA                        u3921 1D50  
                      u3770 309A                        u3850 292E                        u2890 2F6E  
                      u2970 29AE                        u3690 23D2                        u3930 1E54  
                      u3851 292A                        u2891 2F6A                        u2971 29AA  
                      u3691 23CE                        u3931 1E50                        u3780 30AA  
                      u3860 293C                        u2980 29E2                        u3940 1E68  
                      u3781 30A6                        u3861 2938                        u3941 1E64  
                      u3870 2976                        u3790 27F6                        u2990 2A10  
                      u3767 305C                        u3871 2972                        u3791 27F2  
                      u2991 2A0C                        u3880 2984                        u3777 3090  
                      u3881 2980                        u2985 29D8                        u3890 1C2C  
                      u3891 1C28           ?_Lcd_Write_String 0005                        _dbuf 0100  
                      _labs 3126                        _main 1B94                        _prec 00C9  
                      pad@i 0018                        pad@p 0015                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        pad@w 001A                        fsr2l 0FD9  
                      _volt 00C3               ___fpclassifyf 2BA2                        prodh 0FF4  
                      prodl 0FF3                        start 0000          ??_Lcd_Write_String 0007  
           ___fldiv@new_exp 0039             __end_of_Lcd_Cmd 3478                ___param_bank 0000  
                     ??_pad 0017               ___fltol@sign1 0009                       ?_labs 0001  
           __end_of___fladd 176A                       ?_main 0001             __end_of___fldiv 22F8  
           __end_of___flneg 33DC                       STR_10 083E                       STR_13 0842  
           __end_of___flmul 1B94             __end_of___flsub 3320             __end_of___fltol 2A9E  
              vfpfcnvrt@fmt 008E                       _TRISB 0F93                       _flags 00CD  
       read_prec_or_width@c 000D         read_prec_or_width@n 000E                       _fputc 2D72  
                     _v_adc 00CB                       _fputs 3320                       labs@a 0001  
                     pad@fp 0011                       _width 00C7                       _putch 34D8  
           __end_of_set_adc 34BA                       tablat 0FF5                       status 0FD8  
           __end_of_sprintf 328A              ?___fpclassifyf 0001            __end_of_Lcd_Init 302E  
          __end_of_Lcd_Port 31E8             __initialization 3436                __end_of_labs 318C  
              __end_of_main 1F5E            __end_of_InitPort 34CA                      ??_labs 0005  
                    ??_main 00B9               __activetblptr 0002  __end_of_read_prec_or_width 2F02  
                    _ADCON0 0FC2                      _ADCON1 0FC1                      _ADCON2 0FC0  
                    ?_fputc 0001                      ?_fputs 000A                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      ?_putch 0001                      _ANSELB 0F5C  
                 ??_Lcd_Cmd 0002               vfpfcnvrt@done 0096            __end_of___xxtofl 2998  
              vfprintf@cfmt 00A1                      ___flge 2A9E                      ___fleq 2F02  
                 ??___fladd 0009                      ___wmul 3410                   ??___fldiv 0030  
                 ??___flneg 0005                   ??___flmul 0017                   ??___flsub 0030  
                 ??___fltol 0005                      _efgtoa 0848                      _buffer 00CE  
                    _floorf 25D2                      _memcpy 328A        read_prec_or_width@ap 0009  
                    clear_0 343C                      clear_1 3448                      isa$std 0001  
                    pad@buf 0013                      _strcpy 3364            __end_of_set_adc1 34A4  
          __end_of_set_adc2 348E                      fputc@c 0001                      fputs@c 000E  
                    fputs@i 000F                      fputs@s 000A             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                 ??_set_adc 0001                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                      putch@c 0001            __end_of_vfprintf 323A  
                 ??_sprintf 0060             Lcd_Set_Cursor@a 0005             Lcd_Set_Cursor@b 0004  
           Lcd_Set_Cursor@y 0007             Lcd_Set_Cursor@z 0006                  ___flge@ff1 0028  
                ___flge@ff2 002C             ??___fpclassifyf 0005                ___xxtofl@arg 000B  
              ___xxtofl@exp 000A                ___xxtofl@val 0001                  ___fleq@ff1 0001  
                ___fleq@ff2 0005                  __accesstop 0060     __end_of__initialization 344E  
                ___flneg@f1 0001           __end_of_Lcd_Clear 34D8               ___rparam_used 0001  
                ___fltol@f1 0001              __pcstackCOMRAM 0001               __end_of_fputc 2E3C  
             __end_of_fputs 3364               __end_of_putch 34DA              _Lcd_Set_Cursor 2CA0  
                 ?_Lcd_Init 0001                   ?_Lcd_Port 0001                     ??_fputc 0005  
                   ??_fputs 000E                     ??_putch 0001                  __pbssBANK0 00BB  
                __pbssBANK1 0100                   ?_InitPort 0001                     ?___flge 0028  
                   ?___fleq 0001                     ?___wmul 0001                     ?_efgtoa 0055  
                   ?_floorf 0041                     ?_memcpy 0001      __end_of_Lcd_Set_Cursor 2D72  
                   ?_strcpy 0001                   ?___xxtofl 0001                  ??_Lcd_Init 0004  
                ??_Lcd_Port 0001              _Lcd_Write_Char 33DC                  ??_InitPort 0001  
                   _Lcd_Cmd 3458                     __Hparam 0000                   ?_set_adc1 0001  
                 ?_set_adc2 0001                     __Lparam 0000                     ___fladd 12AA  
                   ___fldiv 1F5E                     ___flneg 33A4                     ___flmul 176A  
                   ___flsub 32DA                     ___fltol 2998                   ?_vfprintf 009B  
              __psmallconst 0800                     __pcinit 3436                     __ramtop 0800  
           ?_Lcd_Set_Cursor 0004                     __ptext0 1B94                     __ptext1 323A  
                   __ptext2 31E8                     __ptext3 22F8                     __ptext4 2E3C  
                   __ptext5 3410                     __ptext6 0848                     __ptext7 3364  
                   __ptext8 30AC                     __ptext9 3320       read_prec_or_width@fmt 0007  
                ??___xxtofl 0005                     _set_adc 34A4                     efgtoa@c 005B  
                   efgtoa@d 006B                     efgtoa@e 006F                     efgtoa@f 0057  
                   efgtoa@g 0082                     efgtoa@h 0077                     efgtoa@i 007F  
                   efgtoa@l 007B                     efgtoa@m 006D                     efgtoa@n 0086  
                   efgtoa@p 0062                     efgtoa@t 0064                     efgtoa@u 0088  
                   efgtoa@w 0071                     _sprintf 323A      __end_of_Lcd_Write_Char 3410  
      end_of_initialization 344E                     floorf@e 004F                     floorf@m 004B  
                   floorf@u 0051                     floorf@x 0041                     memcpy@d 0007  
                   memcpy@n 0005                     memcpy@s 0009                     fputc@fp 0003  
             __Lmediumconst 0000                     fputs@fp 000C          _read_prec_or_width 2E3C  
                ??_set_adc1 0001                  ??_set_adc2 0001           __end_of_vfpfcnvrt 25D2  
                efgtoa@mode 0069                  efgtoa@sign 0081                     postdec2 0FDD  
       ?_read_prec_or_width 0007                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 0092                   Lcd_Port@a 0001  
                ??_vfprintf 0060                     strcpy@d 0007                     strcpy@s 0005  
                 _PORTBbits 0F81                 ___fladd@grs 0010               ___xxtofl@sign 0009  
                 _TRISAbits 0F92                   _TRISDbits 0F95        ??_read_prec_or_width 000B  
               ___fldiv@grs 003B                 ___fldiv@rem 0034             ?_Lcd_Write_Char 0001  
         Lcd_Write_String@a 0005           Lcd_Write_String@i 0009                 ___flmul@grs 001C  
                 _Lcd_Clear 34CA              __end_of___flge 2BA2              __end_of___fleq 2FAC  
               vfpfcnvrt@ap 0090                 vfpfcnvrt@cp 0099                 vfpfcnvrt@fp 008C  
            __end_of___wmul 3436            _Lcd_Write_String 302E              __end_of_efgtoa 12AA  
            __end_of_floorf 27E4              __end_of_memcpy 32DA                  floorf@F526 00BB  
            __end_of_strcpy 33A4         start_initialization 3436                 __end_of_pad 3126  
     __end_of___fpclassifyf 2CA0                 vfprintf@fmt 009D                  ?_Lcd_Clear 0001  
                  ??___flge 0030                    ??___fleq 0009                    ??___wmul 0005  
                  ??_efgtoa 005C                    ??_floorf 0045                    ??_memcpy 0007  
           Lcd_Write_Char@a 0004             Lcd_Write_Char@y 0003                    ??_strcpy 0005  
                 ___fladd@a 0005                   ___fladd@b 0001                   ___fldiv@a 002C  
                 ___fldiv@b 0028                   ___flmul@a 0013                   ___flmul@b 000F  
                 ___flsub@a 002C                   ___flsub@b 0028               __pcstackBANK0 0060  
                  ?_Lcd_Cmd 0001                 _efgtoa$1021 0066            ??_Lcd_Set_Cursor 0005  
                  ?___fladd 0001                    ?___fldiv 0028                    ?___flneg 0001  
                  ?___flmul 000F                    ?___flsub 0028                    ?___fltol 0001  
               __smallconst 0800                    ?_set_adc 0001                    ?_sprintf 00A3  
            ___wmul@product 0005                    _LATDbits 0F8C                    Lcd_Cmd@a 0003  
               ??_Lcd_Clear 0004                   _vfpfcnvrt 22F8                  _ADCON0bits 0FC2  
         ___wmul@multiplier 0001            ??_Lcd_Write_Char 0002                    _Lcd_Init 2FAC  
                  _Lcd_Port 318C                  vfpfcnvrt@c 0098                 _INTCON2bits 0FF1  
  __end_of_Lcd_Write_String 30AC                    _InitPort 34BA                    __Hrparam 0000  
                 memcpy@tmp 000B                  vfprintf@ap 009F                    __Lrparam 0000  
                vfprintf@fp 009B                  ?_vfpfcnvrt 008C                  _ANSELAbits 0F5B  
        ___fpclassifyf@F465 00BF                  sprintf@fmt 00A5                    ___xxtofl 27E4  
                  __ptext10 2D72                    __ptext11 34D8                    __ptext20 176A  
                  __ptext12 328A                    __ptext21 2A9E                    __ptext13 3126  
                  __ptext30 2CA0                    __ptext22 2F02                    __ptext14 25D2  
                  __ptext31 2FAC                    __ptext23 1F5E                    __ptext15 2BA2  
                  __ptext32 34CA                    __ptext24 3478                    __ptext16 2998  
                  __ptext33 3458                    __ptext25 348E                    __ptext17 32DA  
                  __ptext34 318C                    __ptext26 34A4                    __ptext18 12AA  
                  __ptext35 34BA                    __ptext27 27E4                    __ptext19 33A4  
                  __ptext28 302E                    __ptext29 33DC                  strcpy@dest 0001  
                  _set_adc1 348E                    _set_adc2 3478                    efgtoa@fp 0055  
                  efgtoa@ne 0060                    efgtoa@pp 0068                    efgtoa@ou 0073  
                  isa$xinst 0000                    _vfprintf 31E8                    memcpy@d1 0001  
                  memcpy@s1 0003          Lcd_Write_Char@temp 0002                   sprintf@ap 00AB  
                 strcpy@src 0003                 efgtoa@nmode 006A                 ??_vfpfcnvrt 005E  
        Lcd_Set_Cursor@temp 0008                    sprintf@f 00AD                    sprintf@s 00A3  
             ___fladd@signs 000D                ___fladd@aexp 000E                ___fladd@bexp 000F  
